{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118",
    "id": 1872042659,
    "node_id": "PR_kwDOABII585vlRqj",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30118",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30118.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30118.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30118",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30118/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f4c588c98f163e9fa9083821ba36e1053f8c1496",
    "number": 30118,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: improve robustness of connect_nodes()",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Decoupled from #27837 because this can help other too, found it investigating a CI failure https://cirrus-ci.com/task/5805115213348864?logs=ci#L3200.\r\n\r\nThe `connect_nodes` function in the test framework relies on a stable number of peer\r\nconnections to verify that the new connection between the nodes is successfully established.\r\nThis approach is fragile, as any of the peers involved in the process can drop, lose, or\r\ncreate a connection at any step, causing subsequent `wait_until` checks to stall indefinitely\r\neven when the peers in question were connected successfully.\r\n\r\nThis commit improves the situation by using the nodes' subversion and the connection\r\ndirection (inbound/outbound) to identify the exact peer connection and perform the\r\nchecks exclusively on it.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-05-15T20:58:22Z",
    "updated_at": "2024-05-20T10:17:51Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "9b8317048e2980e3ed7c43ea1f065237fc486083",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "furszy:2024_test_improve_connect_nodes",
      "ref": "2024_test_improve_connect_nodes",
      "sha": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 402161,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-18T22:07:10Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2024-05-17T13:32:21Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "058af75874ffa2b4064e3d6d30cc50f0ec754ba8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35420,
        "stargazers_count": 76458,
        "watchers_count": 76458,
        "size": 258728,
        "default_branch": "master",
        "open_issues_count": 686,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-20T10:50:38Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-05-20T10:16:10Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 19,
    "deletions": 8,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 17,
    "comments": 1
  },
  "events": [
    {
      "event": "commented",
      "id": 2113445276,
      "node_id": "IC_kwDOABII5859-J2c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2113445276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T20:58:25Z",
      "updated_at": "2024-05-19T13:35:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30118).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [AngusP](https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2065044318), [stratospher](https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2065078997) |\n| Stale ACK | [rkrux](https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2060988698) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#issuecomment-2113445276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30118"
    },
    {
      "event": "labeled",
      "id": 12823651321,
      "node_id": "LE_lADOABII586JBWMhzwAAAAL8WWP5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12823651321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T20:58:28Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 2060988698,
      "node_id": "PRR_kwDOABII58562DEa",
      "url": null,
      "actor": null,
      "commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "tACK [59ba873](https://github.com/bitcoin/bitcoin/pull/30118/commits/59ba8735102aebd456bb9dc831759c82e95763c0)\r\n\r\nMake successful, so are all the functional tests.\r\n\r\nOverall I agree with this change because it makes the nodes connection verification dependent more on `connect_nodes()` arguments `a, b` instead of the earlier approach that relied more on the state of the whole response of `getpeerinfo()`, which seemed brittle as mentioned in the PR description.\r\n\r\nI can see `connect_nodes()` being used in numerous functional tests, thereby increasing robustness for all of them!\r\n\r\n@furszy Were you able to identify few connections that were dropped in logs of this CI run? https://cirrus-ci.com/task/5805115213348864?logs=ci#L3200",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2060988698",
      "submitted_at": "2024-05-16T14:37:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    },
    {
      "event": "reviewed",
      "id": 2061247415,
      "node_id": "PRR_kwDOABII58563CO3",
      "url": null,
      "actor": null,
      "commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> @furszy Were you able to identify few connections that were dropped in logs of this CI run? https://cirrus-ci.com/task/5805115213348864?logs=ci#L3200\r\n\r\nJust one. One of the `P2PInterface` connections I create on the test side gets disconnected after advancing the node time prior to connecting the test nodes again. Need to expand the complete CI logs to find it.\r\nBut the fragility is easy to reproduce. Just launch a thread that disconnects a node before calling `connect_nodes()`. ",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2061247415",
      "submitted_at": "2024-05-16T16:19:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    },
    {
      "event": "reviewed",
      "id": 2063691972,
      "node_id": "PRR_kwDOABII5857AXDE",
      "url": null,
      "actor": null,
      "commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2063691972",
      "submitted_at": "2024-05-17T15:09:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12855984709,
      "node_id": "HRFPE_lADOABII586JBWMhzwAAAAL-RsJF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12855984709",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-18T14:02:32Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-18T16:04:54Z",
      "updated_at": "2024-05-18T16:04:54Z",
      "source": {
        "issue": {
          "id": 2066296124,
          "node_id": "I_kwDOABII5857KS08",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29183",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29183/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29183/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29183/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29183",
          "number": 29183,
          "state": "open",
          "state_reason": null,
          "title": "Prune Node Rescan Project Tracking",
          "body": "This issue will be edited frequently to reflect the current status of the project.\r\n\r\n#### What should I review now? \r\n\r\n👇 👇 👇 👇 \r\n-- #30118 --\r\n☝️ ☝️ ☝️ ☝️\r\n\r\n\r\nThe goal of this project is to enable complete blockchain rescan capability on prune nodes, allowing these storage-limited nodes to import new wallet descriptors and update existing ones at any time, as well as loading external and un-synced wallets with a birth-time older than 48 hours. This, in turn, enables the monitoring of new addresses/scripts and tracking balance changes without the need to repeatedly download the entire blockchain.\r\n\r\nThe first project milestone introduces the feature for prune nodes that construct and maintain a local block filters set database. The node will request and keep track of the missing historical blocks that match the wallet scripts filters set to subsequently perform the rescan.\r\n\r\n#### The following sections are ordered by their PRs dependencies:\r\n\r\n##### Net: Single Block Requests Tracking System and On Download Failure Retry Mechanism\r\n* [x] #28170\r\n* [x] #28120\r\n* [ ] #30118\r\n* [ ] #27837\r\n\r\n##### Indexes Stability and Performance Improvements\r\n* [X] #27607\r\n* [X] #27720\r\n* [x] #28955\r\n* [ ] #26966\r\n\r\n##### Wallet Rescan (depends on the net section)\r\n* [X] #27469\r\n* [ ] Cache wallet filters' set and connect it to the current wallet rescan functionality. (Pending)\r\n* [ ] Wallet: implement \"rescan status\" class to track the progress and retrieve it via an RPC command. (Pending)\r\n* [ ] Wallet: introduce prune node rescan functionality. (Pending - depends on net changes)\r\n\r\n#### Issues Solved By This Work\r\n\r\n* [ ] #21267\r\n* [ ] #23727\r\n* [ ] #27188\r\n* [ ] #27652\r\n* [ ] #27939\r\n* [ ] https://github.com/sparrowwallet/sparrow/issues/1111#issuecomment-2054204911",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "created_at": "2024-01-04T20:31:51Z",
          "updated_at": "2024-05-18T16:04:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2064946909,
      "node_id": "PRR_kwDOABII5857FJbd",
      "url": null,
      "actor": null,
      "commit_id": "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK, some nits/questions\r\n\r\nTested, functional tests all pass",
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2064946909",
      "submitted_at": "2024-05-18T20:35:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0YzU4OGM5OGYxNjNlOWZhOTA4MzgyMWJhMzZlMTA1M2Y4YzE0OTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "tree": {
        "sha": "f892b15cd2dce99f3cd81b94846a370f8ad28032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f892b15cd2dce99f3cd81b94846a370f8ad28032"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f892b15cd2dce99f3cd81b94846a370f8ad28032\nparent 71f0f2273f6258e466c7b299c11982b4a04ae0d7\nauthor furszy <matiasfurszyfer@protonmail.com> 1715805181 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1716069997 -0300\n\ntest: improve robustness of connect_nodes()\n\nThe 'connect_nodes' function in the test framework relies\non a stable number of peer connections to verify the new\nconnection between the nodes is successfully established.\nThis approach is fragile, as any of the peers involved in\nthe process can drop, lose, or create a connection at any\nstep, causing subsequent 'wait_until' checks to stall\nindefinitely even when the peers in question are connected\nsuccessfully.\n\nThis commit improves the situation by using the nodes' subversion\nand the connection direction (inbound/outbound) to identify the\nexact peer connection and perform the checks exclusively on it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmZJJm0ACgkQXdI8zGhq\npiPZTBAAmKmnJADdNhyAyPI+eSlkJZyjBmILEiqZiEBUOk12o7u6dlh4x0rmvLJh\nAWMtR5G953FElP6Ph2wZcn48dLKXlHxdxgq3uVr6Nh5nNkongc+rRopIs306U4tZ\n2rVKDwlJ1ctnrosNyNKFD/rmjL6xlCYaVOOJgf4nw0XrxLsmXaPaZCLIcKOdY1+F\ndLtrgiGpcuTB9N+GJmp37s8xniX6f8MSxfLDl/cLlTcPYXmZu+3nab9hH1wVa1lg\nA471KXhJaCmFBIG/BYzldI9i9qKQaUX59hEzDuvb3sWAwUt0mSg0K8GR9VfPVz5n\nsv6bYTWycdxyJ8UzqhW6fh6lznQJLwuG+Byrzt55X18TWxL2CrJsXUcsRIeoPtb7\n+heWaXnZpT/doAJRr4FJhZ4KwIxu/rdpFpflZ5ICH+0plVG+JYKJhJzbrE26NbnM\n+rP0QQdoiVWjdt2vHGOLAK07Ze4j4m3VMWDJd6gT3yKLQye+7xb00sbrI6AuGiQ5\nwj/aJUpBc3UDDhswxz7kn2hHd8tn6pvhsQHnVX8uTq/MSGomFHD4OL5JMXWV7TlV\nASt3umlJj88Bt/229vA+O905+SWOL/WDBP4sq80/q7UxSqS/NJJwD2i/xjpC04ZM\n7Hv7SsXrMADud8gNN6PVvlv0fGPXds8GFGnmEryK6deojGXmrtw=\n=xCLw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71f0f2273f6258e466c7b299c11982b4a04ae0d7",
          "sha": "71f0f2273f6258e466c7b299c11982b4a04ae0d7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/71f0f2273f6258e466c7b299c11982b4a04ae0d7"
        }
      ],
      "message": "test: improve robustness of connect_nodes()\n\nThe 'connect_nodes' function in the test framework relies\non a stable number of peer connections to verify the new\nconnection between the nodes is successfully established.\nThis approach is fragile, as any of the peers involved in\nthe process can drop, lose, or create a connection at any\nstep, causing subsequent 'wait_until' checks to stall\nindefinitely even when the peers in question are connected\nsuccessfully.\n\nThis commit improves the situation by using the nodes' subversion\nand the connection direction (inbound/outbound) to identify the\nexact peer connection and perform the checks exclusively on it.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-18T22:06:37Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-15T20:33:01Z"
      },
      "sha": "f4c588c98f163e9fa9083821ba36e1053f8c1496"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12857036528,
      "node_id": "HRFPE_lADOABII586JBWMhzwAAAAL-Vs7w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12857036528",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-18T22:07:12Z"
    },
    {
      "event": "reviewed",
      "id": 2065044318,
      "node_id": "PRR_kwDOABII5857FhNe",
      "url": null,
      "actor": null,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK f4c588c98f163e9fa9083821ba36e1053f8c1496\r\n\r\nTested, functional tests all pass",
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2065044318",
      "submitted_at": "2024-05-19T10:28:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    },
    {
      "event": "review_requested",
      "id": 12858094849,
      "node_id": "RRE_lADOABII586JBWMhzwAAAAL-ZvUB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12858094849",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-19T10:28:34Z",
      "requested_reviewer": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2065078997,
      "node_id": "PRR_kwDOABII5857FprV",
      "url": null,
      "actor": null,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tested ACK f4c588c9.\r\n\r\nvery cool! i like how the logic depends only on the node we're connecting to.\r\nreproduced the intermittent failure using this patch and verified that the new logic fixes it!\r\n\r\n        self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\r\n        self.connect_nodes(0, 2)\r\n\r\nalso didn't observe that much of a time increase (only around 70 s) when running all the functional tests in my local config (without wallets).",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#pullrequestreview-2065078997",
      "submitted_at": "2024-05-19T13:35:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603491415",
      "pull_request_review_id": 2060988698,
      "id": 1603491415,
      "node_id": "PRRC_kwDOABII585fk1ZX",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looking at the sample output of `subversion` - `\"subversion\": \"\\/Satoshi:25.1.0\\/\"`, it doesn't seem unique enough because multiple nodes can be running the same version. Won't this cause issues in `find_conn` later?\r\n\r\nhttps://chainquery.com/bitcoin-cli/getnetworkinfo",
      "created_at": "2024-05-16T14:31:16Z",
      "updated_at": "2024-05-16T14:37:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603491415",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603491415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 629,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603498152",
      "pull_request_review_id": 2060988698,
      "id": 1603498152,
      "node_id": "PRRC_kwDOABII585fk3Co",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 40,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`find_conn(from_connection, to_connection_subver, inbound=False)`\r\n\r\nMight as well make these calls once and store in variable instead of finding 3 times? Unless I'm missing something that requires these calls to be made every time. \r\n",
      "created_at": "2024-05-16T14:35:23Z",
      "updated_at": "2024-05-16T14:37:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603498152",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603498152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603654247",
      "pull_request_review_id": 2061247415,
      "id": 1603654247,
      "node_id": "PRRC_kwDOABII585fldJn",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1603491415,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Looking at the sample output of `subversion` - `\"subversion\": \"\\/Satoshi:25.1.0\\/\"`, it doesn't seem unique enough because multiple nodes can be running the same version. Won't this cause issues in `find_conn` later?\r\n\r\nThe test framework appends the node number to the user agent string. See [test_node](https://github.com/bitcoin/bitcoin/blob/2f53f2273da020d7fabd7c65a1bc7e69a31249b2/test/functional/test_framework/test_node.py#L109).",
      "created_at": "2024-05-16T16:02:53Z",
      "updated_at": "2024-05-16T16:19:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603654247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603654247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 629,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603657305",
      "pull_request_review_id": 2061247415,
      "id": 1603657305,
      "node_id": "PRRC_kwDOABII585fld5Z",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 40,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1603498152,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Might as well make these calls once and store in variable instead of finding 3 times? Unless I'm missing something that requires these calls to be made every time.\r\n\r\nThe code waits until the data arrives. These requires polling for updates.\r\nWe could couple the checks in this way:\r\n```python3\r\n self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None\r\n                                and peer['version'] != 0\r\n                                and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\r\n```\r\n\r\nBut I'm a ~0 here because it would make debugging harder.",
      "created_at": "2024-05-16T16:05:19Z",
      "updated_at": "2024-05-16T16:19:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1603657305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1603657305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605161357",
      "pull_request_review_id": 2063691972,
      "id": 1605161357,
      "node_id": "PRRC_kwDOABII585frNGN",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason to have a duplicate `None` check for `peer` at this point? Shouldn't it be enough to have the assert in the second-to-previous line?",
      "created_at": "2024-05-17T15:09:36Z",
      "updated_at": "2024-05-17T15:09:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605161357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605161357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605249634",
      "pull_request_review_id": 2063847531,
      "id": 1605249634,
      "node_id": "PRRC_kwDOABII585fripi",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1605161357,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Any reason to have a duplicate None check for peer at this point? Shouldn't it be enough to have the assert in the second-to-previous line?\r\n\r\nNot sure if I fully grasped the question but if the peer gets disconnected for some reason in-between these two checks, this wait_until call would throw an exception as the code would be trying to use the brackets operator on a `None` value to access the \"bytesrecv_per_msg\" value.",
      "created_at": "2024-05-17T16:09:27Z",
      "updated_at": "2024-05-17T16:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605249634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605249634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724296",
      "pull_request_review_id": 2064660139,
      "id": 1605724296,
      "node_id": "PRRC_kwDOABII585ftWiI",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)\n+\n         # The message bytes are counted before processing the message, so make\n         # sure it was fully processed by waiting for a ping.\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)\n+        self.wait_until(lambda: (peer := find_conn(to_connection, from_connection_subver, inbound=True)) is not None and peer[\"bytesrecv_per_msg\"].pop(\"pong\", 0) >= 29)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 40,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1603498152,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm I see now what you mean.",
      "created_at": "2024-05-18T09:06:44Z",
      "updated_at": "2024-05-18T09:06:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724296",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724571",
      "pull_request_review_id": 2064660412,
      "id": 1605724571,
      "node_id": "PRRC_kwDOABII585ftWmb",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1605161357,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but then the test will fail regardless. Might as well fail early, if the peer disconnects again, no?",
      "created_at": "2024-05-18T09:09:20Z",
      "updated_at": "2024-05-18T09:09:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605724571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605724571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605795010",
      "pull_request_review_id": 2064765506,
      "id": 1605795010,
      "node_id": "PRRC_kwDOABII585ftnzC",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying\n         # See comments in net_processing:\n         # * Must have a version message before anything else\n         # * Must have a verack message before anything else\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in from_connection.getpeerinfo()) == from_num_peers)\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) >= 21 for peer in to_connection.getpeerinfo()) == to_num_peers)\n+        self.wait_until(lambda: find_conn(from_connection, to_connection_subver, inbound=False) is not None)\n+        self.wait_until(lambda: find_conn(to_connection, from_connection_subver, inbound=True) is not None)\n+\n+        self.wait_until(lambda: (peer := find_conn(from_connection, to_connection_subver, inbound=False)) is not None and peer['bytesrecv_per_msg'].pop('verack', 0) >= 21)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1605161357,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah ok, yeah. Now we are sync. Pushed. Thanks.",
      "created_at": "2024-05-18T14:03:53Z",
      "updated_at": "2024-05-18T14:03:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605795010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605795010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605892564",
      "pull_request_review_id": 2064946909,
      "id": 1605892564,
      "node_id": "PRRC_kwDOABII585ft_nU",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1603491415,
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Worth adding a note to the comment?\r\n\r\n```python\r\n        # Use subversion as peer id. Test nodes have their node number appended to the UA\r\n```",
      "created_at": "2024-05-18T20:26:07Z",
      "updated_at": "2024-05-18T20:35:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605892564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605892564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 629,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605893483",
      "pull_request_review_id": 2064946909,
      "id": 1605893483,
      "node_id": "PRRC_kwDOABII585ft_1r",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 21,
      "original_position": 21,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "in_reply_to_id": null,
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment now doesn't really make sense to me?\r\n\r\nMaybe\r\n```suggestion\r\n        # wait until peers have completed a version handshake and so match the\r\n        # expected connection subversion\r\n```",
      "created_at": "2024-05-18T20:33:35Z",
      "updated_at": "2024-05-18T20:35:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605893483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605893483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 635,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": 636,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903225",
      "pull_request_review_id": 2064954523,
      "id": 1605903225,
      "node_id": "PRRC_kwDOABII585fuCN5",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 21,
      "original_position": 21,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "in_reply_to_id": 1605893483,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This comment now doesn't really make sense to me?\r\n\r\nWhy? the procedure behavior didn't change.\r\n",
      "created_at": "2024-05-18T22:06:13Z",
      "updated_at": "2024-05-18T22:07:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 635,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": 636,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903301",
      "pull_request_review_id": 2064954603,
      "id": 1605903301,
      "node_id": "PRRC_kwDOABII585fuCPF",
      "diff_hunk": "@@ -627,19 +625,28 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 15,
      "original_position": 15,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "59ba8735102aebd456bb9dc831759c82e95763c0",
      "in_reply_to_id": 1603491415,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Worth adding a note to the comment?\r\n> \r\n> ```python\r\n>         # Use subversion as peer id. Test nodes have their node number appended to the UA\r\n> ```\r\n\r\nsure. Pushed.",
      "created_at": "2024-05-18T22:07:19Z",
      "updated_at": "2024-05-18T22:07:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1605903301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605903301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 629,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606000057",
      "pull_request_review_id": 2065045089,
      "id": 1606000057,
      "node_id": "PRRC_kwDOABII585fuZ25",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 21,
      "original_position": 21,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "in_reply_to_id": 1605893483,
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think just the way it read with the old impl vs the new, \"waiting until we find a peer connection matching some predicate\" rather than \"wait until the peer has a non-zero version\" . But on second thoughts you're right it's not functionally different so disregard my suggestion",
      "created_at": "2024-05-19T10:33:02Z",
      "updated_at": "2024-05-19T10:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606000057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606000057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 635,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": 636,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606032360",
      "pull_request_review_id": 2065078997,
      "id": 1606032360,
      "node_id": "PRRC_kwDOABII585fuhvo",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id. Test nodes have their node number appended to the user agent string\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 18,
      "original_position": 18,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wondering if we need the inbound check because an inbound and an outbound connection to the same `TestNode` isn't done. or did you keep it for assurance about the connection direction?",
      "created_at": "2024-05-19T13:26:03Z",
      "updated_at": "2024-05-19T13:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606032360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606032360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 633,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606038839",
      "pull_request_review_id": 2065084248,
      "id": 1606038839,
      "node_id": "PRRC_kwDOABII585fujU3",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id. Test nodes have their node number appended to the user agent string\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 18,
      "original_position": 18,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "in_reply_to_id": 1606032360,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> wondering if we need the inbound check because an inbound and an outbound connection to the same `TestNode` isn't done. or did you keep it for assurance about the connection direction?\r\n\r\nBidirectional connections are allowed and quite common. E.g. in [p2p_disconnect_ban.py](https://github.com/bitcoin/bitcoin/blob/058af75874ffa2b4064e3d6d30cc50f0ec754ba8/test/functional/p2p_disconnect_ban.py#L117) or in [rpc_net.py](https://github.com/bitcoin/bitcoin/blob/058af75874ffa2b4064e3d6d30cc50f0ec754ba8/test/functional/rpc_net.py#L220).",
      "created_at": "2024-05-19T14:00:08Z",
      "updated_at": "2024-05-19T14:05:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606038839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606038839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 633,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606039710",
      "pull_request_review_id": 2065084248,
      "id": 1606039710,
      "node_id": "PRRC_kwDOABII585fujie",
      "diff_hunk": "@@ -627,19 +625,32 @@ def connect_nodes(self, a, b, *, peer_advertises_v2=None, wait_for_connect: bool\n         if not wait_for_connect:\n             return\n \n+        # Use subversion as peer id\n+        from_connection_subver = from_connection.getnetworkinfo()['subversion']\n+        to_connection_subver = to_connection.getnetworkinfo()['subversion']\n+\n+        def find_conn(node, peer_subversion, inbound):\n+            return next(filter(lambda peer: peer['subver'] == peer_subversion and peer['inbound'] == inbound, node.getpeerinfo()), None)\n+\n         # poll until version handshake complete to avoid race conditions\n         # with transaction relaying",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 21,
      "original_position": 21,
      "commit_id": "f4c588c98f163e9fa9083821ba36e1053f8c1496",
      "original_commit_id": "e9cb1168d144e4f49025b16f472827a9b4e02ca1",
      "in_reply_to_id": 1605893483,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok. The \"version handshake\" wording refers to the complete initial negotiation round.\r\n(1) outbound send version, (2) inbound send version, (3) inbound send verack, (4) outbound send verack.",
      "created_at": "2024-05-19T14:05:24Z",
      "updated_at": "2024-05-19T14:05:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30118#discussion_r1606039710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1606039710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30118"
        }
      },
      "start_line": 635,
      "original_start_line": 635,
      "start_side": "RIGHT",
      "line": 636,
      "original_line": 636,
      "side": "RIGHT"
    }
  ]
}