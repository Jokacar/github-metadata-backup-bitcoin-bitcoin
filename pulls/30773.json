{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773",
    "id": 2046704398,
    "node_id": "PR_kwDOABII5855_jsO",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30773",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30773.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30773.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b60013ed71b697bab98884aa475fb64ae7736c2e",
    "number": 30773,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Remove unsafe uint256S() and test-only uint160S()",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "_Continuation of #30569._\r\n\r\nSince https://github.com/bitcoin/bitcoin/commit/fad2991ba073de0bd1f12e42bf0fbaca4a265508, `uint256S()` has been [deprecated](https://github.com/bitcoin/bitcoin/pull/30482/commits/fad2991ba073de0bd1f12e42bf0fbaca4a265508#diff-800776e2dda39116e889839f69409571a5d397de048a141da7e4003bc099e3e2R138) because it is less robust than the `base_blob::FromHex()` introduced in https://github.com/bitcoin/bitcoin/pull/30482. Specifically, it tries to recover from length-mismatches, recover from untrimmed whitespace, 0x-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters. (see also https://github.com/bitcoin/bitcoin/pull/30532)\r\n\r\nThis PR removes `uint256S()` (and `uint160S()`) completely, with no non-test behaviour change.\r\n\r\nSpecifically, the main changes in this PR are:\r\n- the (minimal) last non-test usage of `uint256S()` in `ParseHashV()` is removed without behaviour change, which can partially be verified by cherry-picking and/or modifying [this test commit](https://github.com/stickies-v/bitcoin/commit/1f2b0fa86db2ed65476b68417aa1bf4c26026a19)).\r\n- the test usage of `uint{160,256}S()` is removed, largely replacing it with `uint{160,256}::FromHex()` where applicable, potentially modifying the test by removing non-hex characters or dropping the test entirely if removing non-hex characters makes it redundant\r\n- the now unused `uint{160,256}S()` functions are removed completely.\r\n- unit test coverage on converting `uint256` <-> `arith_uint256` through `UintToArith256()` and `ArithToUint256()` is beefed up, and `arith_uint256` tests are moved to `arith_uint256_tests.cpp`, removing the `uint256_tests.cpp` dependency on `uint256h`, mirroring how the code is structured.\r\n\r\n_Note:  `uint256::FromUserHex()` exists to more leniently construct uint256 from user input, allowing \"0x\" prefixes and too-short-input, as safer alternative to `uint256S()` where necessary._ ",
    "labels": [],
    "created_at": "2024-08-30T15:37:29Z",
    "updated_at": "2024-09-05T16:45:20Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4289c0b53af613fa987d60ada4b3afa5f220b234",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stickies-v:2024-07/rm-uint256s",
      "ref": "2024-07/rm-uint256s",
      "sha": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 257931,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-04T15:56:27Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b8d2f58e06439e9523c02ca1729ff20cd0ba53ca",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35820,
        "stargazers_count": 77816,
        "watchers_count": 77816,
        "size": 267521,
        "default_branch": "master",
        "open_issues_count": 665,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-05T13:53:51Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-05T16:53:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 73,
    "deletions": 152,
    "changed_files": 6,
    "commits": 5,
    "review_comments": 51,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2321660171,
      "node_id": "IC_kwDOABII586KYbkL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2321660171",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T15:37:33Z",
      "updated_at": "2024-09-04T16:21:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30773).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2280694965) |\n| Concept ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2280021001) |\n| Stale ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2277432402) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2321660171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "reviewed",
      "id": 2273903849,
      "node_id": "PRR_kwDOABII586HiQTp",
      "url": null,
      "actor": null,
      "commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2273903849",
      "submitted_at": "2024-08-31T17:52:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14103763995,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANIplwb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103763995",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:33:17Z"
    },
    {
      "event": "commented",
      "id": 2324784988,
      "node_id": "IC_kwDOABII586KkWdc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2324784988",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:16Z",
      "updated_at": "2024-09-02T13:38:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to add commit 73a126f4f59470d839905d0eaaa26f689f7f2ba1 to remove the test-only `arith_uint256S()` function entirely. Since `arith_uint256` does not have any string string constructors, it uses `uint256` constructors, and those are already unit tested. In some cases, a string constructor can be avoid entirely, e.g. by using the `arith_uint256` `uint64_t` constructor.\r\n\r\nAddresses @l0rinc's review comment about [unnecessary tests](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739873354) and [unnecessary docstring](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739863841).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2324784988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "mentioned",
      "id": 14103830067,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANIp14z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103830067",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:17Z"
    },
    {
      "event": "subscribed",
      "id": 14103830084,
      "node_id": "SE_lADOABII586U3cfNzwAAAANIp15E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103830084",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14104631200,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANIs5eg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14104631200",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T14:41:37Z"
    },
    {
      "event": "commented",
      "id": 2324906247,
      "node_id": "IC_kwDOABII586Kk0EH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2324906247",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T14:41:58Z",
      "updated_at": "2024-09-02T14:41:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "And force-pushed again to rebase on top of #30377 to avoid silent merge conflicts e.g. because of the now lowercase-only `uint256` hex string constructor.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2324906247",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "reviewed",
      "id": 2275917562,
      "node_id": "PRR_kwDOABII586Hp776",
      "url": null,
      "actor": null,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Minor nit suggestions, ACK a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2275917562",
      "submitted_at": "2024-09-02T15:49:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "reviewed",
      "id": 2276646525,
      "node_id": "PRR_kwDOABII586Hst59",
      "url": null,
      "actor": null,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b\r\n\r\n`uint256S()` be gone! :)\r\n\r\nChanges as a consequence of removal make sense. Good to see less string parsing testing going on in **arith_uint256_tests.cpp** (covered in recently added `From(User)?Hex`-tests). Arithmetic testing that was going on in **uint256_tests.cpp** has also moved into **arith_uint256_tests.cpp** (`operator_with_self`), could move `conversion`-test too (more in specific comment).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2276646525",
      "submitted_at": "2024-09-03T08:25:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14113790209,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANJP1kB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113790209",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:37:19Z"
    },
    {
      "event": "mentioned",
      "id": 14113867777,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANJQIgB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113867777",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:43:44Z"
    },
    {
      "event": "subscribed",
      "id": 14113867795,
      "node_id": "SE_lADOABII586U3cfNzwAAAANJQIgT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113867795",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:43:44Z"
    },
    {
      "event": "mentioned",
      "id": 14113867813,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANJQIgl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113867813",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:43:44Z"
    },
    {
      "event": "subscribed",
      "id": 14113867820,
      "node_id": "SE_lADOABII586U3cfNzwAAAANJQIgs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113867820",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:43:44Z"
    },
    {
      "event": "reviewed",
      "id": 2277180999,
      "node_id": "PRR_kwDOABII586HuwZH",
      "url": null,
      "actor": null,
      "commit_id": "9ef049db5ea30f60d0b72714c42c74e2d816c820",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to address all review comments by @l0rinc and @hodlinator, thanks for the review!\r\nMostly small style nits, and also added 9ef049db5ea30f60d0b72714c42c74e2d816c820 to move uint256_tests/conversion to arith_uint256_tests [since that better reflects how the code is organized](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741633513).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2277180999",
      "submitted_at": "2024-09-03T11:44:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "reviewed",
      "id": 2277432402,
      "node_id": "PRR_kwDOABII586HvtxS",
      "url": null,
      "actor": null,
      "commit_id": "9ef049db5ea30f60d0b72714c42c74e2d816c820",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 9ef049db5ea30f60d0b72714c42c74e2d816c820\r\n\r\n`git range-diff master a9d19ae 9ef049d` showed only small expected edits + new commit to move `conversion`-tests.\r\n\r\n`ctest -j <cores> --test-dir build` passed.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2277432402",
      "submitted_at": "2024-09-03T13:22:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "review_requested",
      "id": 14115250073,
      "node_id": "RRE_lADOABII586U3cfNzwAAAANJVZ-Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14115250073",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T13:22:20Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 2326639869,
      "node_id": "IC_kwDOABII586KrbT9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2326639869",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T14:14:17Z",
      "updated_at": "2024-09-03T14:14:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 9ef049db5ea30f60d0b72714c42c74e2d816c820",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2326639869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "reviewed",
      "id": 2272815052,
      "node_id": "PRR_kwDOABII586HeGfM",
      "url": null,
      "actor": null,
      "commit_id": "9ef049db5ea30f60d0b72714c42c74e2d816c820",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2272815052",
      "submitted_at": "2024-09-03T14:54:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14128345265,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANKHXCx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14128345265",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T10:43:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14128453735,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANKHxhn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14128453735",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T10:50:30Z"
    },
    {
      "event": "commented",
      "id": 2328592993,
      "node_id": "IC_kwDOABII586Ky4Jh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2328592993",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T11:02:21Z",
      "updated_at": "2024-09-04T11:02:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to remove behaviour change in commit \"rpc: use uint256::FromHex for ParseHashV\", addressing @maflcko's [concerns](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1738970588) over behaviour change. I don't think this is necessarily an improvement, but I appreciate that's my subjective view and the (slight) behaviour change was orthogonal the goal of the PR anyway so it seems like the most pragmatic approach to make progress. Thanks for your review!",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2328592993",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "mentioned",
      "id": 14128635119,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANKIdzv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14128635119",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T11:02:22Z"
    },
    {
      "event": "subscribed",
      "id": 14128635132,
      "node_id": "SE_lADOABII586U3cfNzwAAAANKIdz8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14128635132",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T11:02:22Z"
    },
    {
      "event": "reviewed",
      "id": 2280021001,
      "node_id": "PRR_kwDOABII586H5lwJ",
      "url": null,
      "actor": null,
      "commit_id": "da4377dc2ad0f495ebb97722d6cc2a95850363fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nI left another question in the second commit. Sorry for the incremental review.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2280021001",
      "submitted_at": "2024-09-04T13:21:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "commented",
      "id": 2329122240,
      "node_id": "IC_kwDOABII586K05XA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329122240",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T13:48:14Z",
      "updated_at": "2024-09-04T13:48:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK da4377dc2ad0f495ebb97722d6cc2a95850363fa\r\n\r\nI didn't mind the previous version either, but maybe this preserves more of what's not strictly related to the PR.\r\nI think it's an improvement as-is, but I will gladly reack if you decide to include the other reviews as well.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2329122240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "review_requested",
      "id": 14131591682,
      "node_id": "RRE_lADOABII586U3cfNzwAAAANKTvoC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14131591682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T13:48:19Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 14131591941,
      "node_id": "RRE_lADOABII586U3cfNzwAAAANKTvsF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14131591941",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T13:48:20Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2280261389,
      "node_id": "PRR_kwDOABII586H6gcN",
      "url": null,
      "actor": null,
      "commit_id": "da4377dc2ad0f495ebb97722d6cc2a95850363fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2280261389",
      "submitted_at": "2024-09-04T13:48:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY1MWIyMzc3MjNiODdkYjcwNmNiY2UyOTM5ZDIwZWIxOTMzMzI3OTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f51b237723b87db706cbce2939d20eb193332799",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f51b237723b87db706cbce2939d20eb193332799",
      "tree": {
        "sha": "ac8f858bbace47b3eb64019993ff37a48594bd00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac8f858bbace47b3eb64019993ff37a48594bd00"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ac8f858bbace47b3eb64019993ff37a48594bd00\nparent 0533e652355a68a2c52fb1524a8033bbb5bfa837\nauthor stickies-v <stickies-v@protonmail.com> 1722000228 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725464395 +0100\n\nrefactor: rpc: use uint256::FromHex for ParseHashV\n\nuint256S() is deprecated for being unsafe, and will be removed\nin a future commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbYf0sACgkQXLHObl5m\np1fo4Q/9FWYW+imN2e55iCOWUYxjaeL1Pi/ieYFaDb7kzKOiwKN7tkdHf/ru4z3N\n4YDdO0dUZ/JQwbiMYkkVxI4JKFcCpro7ja58KtrT1CdY3FfcPLLh44fHnKWQuVpF\n8Ijiq7Pe3xr9hU1moojtW5ZkzjUrRqHNep3n2VMjR9Qr/Y4tM6FTdJuXbVDj2iBx\n+uvbfS+hO4cjCQUqilUsmD8kzD8xvIqd24l2vHqWLbFoitbs61wJbomohRrgswMk\nOlWrKjyxekrHinSiNnT0UJ63/ULJn/6VilCOYuIXe4jr6eaygNDqlspk1ibKY27Q\nexPmksEbuBAzQNhN8zRFhZx8d7zoPua3Rg4lRvjDS4oQIeRvVDrm8EVqd+wfGPDd\nHFa7uk3o0h9Z+28VuXIk8bF3cAw7+qq2ylpo748d9JmzIommGOMcWlZwmCIl3CUB\nhTPU/7LuXlFayk6la4DKlje1J9B/pVUExrtgyV+vW4t6NiAyS43c5bMDd0hmlKlt\nxpJccXj0ajXTyObIyTQGg/6cH65OamF1hxoCYDVnTp04PF5xPNCCituDR5xY/cI8\nNUi+QFlNS/zDpROSzD1Nk4M20nkzPNip/AaQ+C941cCGnv8pqycmPRaFwio2WNe8\nB/oEoCLqYJ6sKzxwDVQrRCs/J0WRVJC7509+EusVvvIimWOkDU8=\n=ZVXX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0533e652355a68a2c52fb1524a8033bbb5bfa837",
          "sha": "0533e652355a68a2c52fb1524a8033bbb5bfa837",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0533e652355a68a2c52fb1524a8033bbb5bfa837"
        }
      ],
      "message": "refactor: rpc: use uint256::FromHex for ParseHashV\n\nuint256S() is deprecated for being unsafe, and will be removed\nin a future commit.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-04T15:39:55Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T13:23:48Z"
      },
      "sha": "f51b237723b87db706cbce2939d20eb193332799"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjZmE3ZjRhMDM2MWQ5YzM5NmQxYzViZDcxODQ5Mjk1YmFmNjI5MGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cfa7f4a0361d9c396d1c5bd71849295baf6290d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6cfa7f4a0361d9c396d1c5bd71849295baf6290d",
      "tree": {
        "sha": "cf3197ddf8ab2b0026ac0807e98fde33579b492b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf3197ddf8ab2b0026ac0807e98fde33579b492b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cf3197ddf8ab2b0026ac0807e98fde33579b492b\nparent f51b237723b87db706cbce2939d20eb193332799\nauthor stickies-v <stickies-v@protonmail.com> 1725283167 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725465310 +0100\n\ntest: remove test-only arith_uint256S\n\nTests that are solely testing constructing from a hex string\nare dropped, others are modified to use a uint256 constructor\nor the arith_uint256 uint64_t constructor.\n\nSince an arith_uint256 can not be constructed from a string\ndirectly, we need to ensure that test coverage on\nUintToArith256(uint256::FromHex()) is not reduced.\nuint256::FromHex() already has good test coverage, but\nthe test coverage on UintToArith256() and ArithToUint256()\nis increased in this commit by upgrading the `conversion`\ntest case.\n\nMoreover, since `uint256.h` does not have any dependencies\non `arith_uint256.h`, the conversion tests are moved to\n`arith_uint256_tests.cpp` so the dependency can be cleaned\nup entirely in a future commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbYgt4ACgkQXLHObl5m\np1d4Kg/+KMVruFM24LVATjgBzk2VenauTWyci42pJzQ6JUkOptUatHHQJj3MZxFR\n2AXUqpzfXR/iDWo+xw7Aw33UDSAWG+MIWEWOMiGWHLfPm4zgD+J7exNNZyh3PsGE\nmwpXUUuaEIqzzTVxQt1gBACzMIQ6dF1yFoaN49VKK8/BJZ0xZwCsgn06QHCVdXOg\nkj25arCu+7UsJPe6S6lJiYAISaJZ6FtzVJJG027Tsvta5tXfhSb/+vUsCFmt06vI\nEm7qtQRBm1AbjDBzgPcRLpkl+cVDVZ79y7kQ9iJkdK8jBPKUXb/5wWXmCGwq3cYS\n6PJH88AR7hIXk1dvnYys2nnqPa+Ut88vA7qUf0nAHtTKHQ3VQo/bdfkFmm+1ycxQ\n/FEQsrhrATOdIYx2kctQaQpISGqV+1iqvdlF/pvoliG8Vy0UGFZ8JxvWLQfNwB81\nEHY7KNGXJjl9MJzrNwGpyJkoResK6WhstUWIGVnHlig8a6s8Wzm7teUB3ZJ+6bih\ncHwxCh4J0xGC72R+UyofEA4H/SiLRr+3Q7D+CzXnNOiCg+t3upkaldk5LdSGPnfn\nY9gKBhQBD7KV/Q+OLmTjco0/H+jdrHrFm0PxJwSR+gkO3kLeUx2MfgBA4690OTys\ngC7cyq1iNvEONdcWrgfa4lc9N7jyBEMwBBK3tHbAb4/k1abLf6U=\n=Sb+u\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f51b237723b87db706cbce2939d20eb193332799",
          "sha": "f51b237723b87db706cbce2939d20eb193332799",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f51b237723b87db706cbce2939d20eb193332799"
        }
      ],
      "message": "test: remove test-only arith_uint256S\n\nTests that are solely testing constructing from a hex string\nare dropped, others are modified to use a uint256 constructor\nor the arith_uint256 uint64_t constructor.\n\nSince an arith_uint256 can not be constructed from a string\ndirectly, we need to ensure that test coverage on\nUintToArith256(uint256::FromHex()) is not reduced.\nuint256::FromHex() already has good test coverage, but\nthe test coverage on UintToArith256() and ArithToUint256()\nis increased in this commit by upgrading the `conversion`\ntest case.\n\nMoreover, since `uint256.h` does not have any dependencies\non `arith_uint256.h`, the conversion tests are moved to\n`arith_uint256_tests.cpp` so the dependency can be cleaned\nup entirely in a future commit.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-04T15:55:10Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:19:27Z"
      },
      "sha": "6cfa7f4a0361d9c396d1c5bd71849295baf6290d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyYWQ4NjMwNDc2ZjdlYmU4MTQ3YTk4YWVjZGY3MjMxYjIyZDA1OTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72ad8630476f7ebe8147a98aecdf7231b22d0597",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72ad8630476f7ebe8147a98aecdf7231b22d0597",
      "tree": {
        "sha": "08614733a9632555db1271bd27175308629a7337",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08614733a9632555db1271bd27175308629a7337"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 08614733a9632555db1271bd27175308629a7337\nparent 6cfa7f4a0361d9c396d1c5bd71849295baf6290d\nauthor stickies-v <stickies-v@protonmail.com> 1722338974 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725465311 +0100\n\ntest: remove test-only uint256S\n\nuint256S was previously deprecated for being unsafe. All non-test\nusage has already been removed in earlier commits.\n\n1. Tests now use uint256::FromHex() or other constructors wherever\npossible without further modification.\n2. Tests that can't use uint256::FromHex() because they use input\nwith non-hex digit characters are\n  a) modified by dropping the non-hex digit characters if that\n     provides useful test coverage.\n  b) dropped if the test without non-hex digit characters does\n     not provide useful test coverage, e.g. because it is now\n     duplicated.\n\nAdditionally, use BOOST_CHECK_EQUAL where relevant on touched lines\nto make error messages more readable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbYgt8ACgkQXLHObl5m\np1cTMw/9Em33hP2TmAhyfBxLXNvH0NluZF/gcRXPe2W0lH7we+L5eNZNx0QxuUQA\nrAwIsZMbxBbe9EQieW/ahC/84umKJsAQF6Od91cKGcz28uOMe65Hd9QuNZOAjRSD\n/MDoBb2PAnbweX9SCOO74a2x5C89ADnIlLuLDVqN7aRwMeUSEdroTkkCwsWykYXf\nVugHxt9QOH07nTh9M3ZSxLhrmQG1dLJeQj67jPArJIWd0vjYQrJlrsgMWQt3tqNV\nqMTi+2nxs6bpfW5Vbq77Pt5XzFmoBXASF7d/wF5ZlFVKChUe4HtAWl6pzYTN2tgq\nOxb8S/mNNoS/IUTwv40D7jTQMt3U7W2vw+b/5GKj0DTIn8EKyCwMMRwKfWRV8bJ4\nmlSjSoiVeNZW8vmt24zqRvaK5T4Ce8oM01rNcqLbTMpdGPYrcQzNw36agMwTvJEy\nJgb6GHX3UHYk3apiEGIWH9EKYcbQK+s4/qAKitqvCE5GiulBO/R2amY6tRTfO2T1\nagWmOZmr4zKE4GJpT+ruCHWrc02JfHK8E3Wl/+8aqMaK+Ak2jKrVUtHOCvkkH8Tf\nUyGz/qe7WvBUKmgm/MxnhEx5BrjMj+SivdSWGQRewQaPpMJSkROUv64qa/QsIUTG\nxhTK+VYuvBr5BNAhRv6TdUHEbSPaERcgdMeoOTZ3n/y8pacnJDY=\n=z2bH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cfa7f4a0361d9c396d1c5bd71849295baf6290d",
          "sha": "6cfa7f4a0361d9c396d1c5bd71849295baf6290d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6cfa7f4a0361d9c396d1c5bd71849295baf6290d"
        }
      ],
      "message": "test: remove test-only uint256S\n\nuint256S was previously deprecated for being unsafe. All non-test\nusage has already been removed in earlier commits.\n\n1. Tests now use uint256::FromHex() or other constructors wherever\npossible without further modification.\n2. Tests that can't use uint256::FromHex() because they use input\nwith non-hex digit characters are\n  a) modified by dropping the non-hex digit characters if that\n     provides useful test coverage.\n  b) dropped if the test without non-hex digit characters does\n     not provide useful test coverage, e.g. because it is now\n     duplicated.\n\nAdditionally, use BOOST_CHECK_EQUAL where relevant on touched lines\nto make error messages more readable.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-04T15:55:11Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-30T11:29:34Z"
      },
      "sha": "72ad8630476f7ebe8147a98aecdf7231b22d0597"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQxZGYyOTdlNjNhOWYzMDNlYWUzN2ZlNTdiZWYxMzQzZjI4NzRjN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1df297e63a9f303eae37fe57bef1343f2874c7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d1df297e63a9f303eae37fe57bef1343f2874c7f",
      "tree": {
        "sha": "d22ba5b2c6cb1c18cb9d0d8f6e0690cf5438d476",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d22ba5b2c6cb1c18cb9d0d8f6e0690cf5438d476"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d22ba5b2c6cb1c18cb9d0d8f6e0690cf5438d476\nparent 72ad8630476f7ebe8147a98aecdf7231b22d0597\nauthor stickies-v <stickies-v@protonmail.com> 1722526541 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725465318 +0100\n\ntest: remove test-only uint160S\n\nuint160S is a test-only function, and testing input that\nis not allowed in uint160::FromHex() is superfluous.\n\nTests that can't use uint160::FromHex() because they use input\nwith non-hex digit characters are\na) modified by dropping the non-hex digit characters if that\nprovides useful test coverage.\nb) dropped if the test without non-hex digit characters does\nnot provide useful test coverage, e.g. because it is now\nduplicated.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbYguYACgkQXLHObl5m\np1e/kRAAvCsB5+moT8t1vnBMa1MhaVYjn4A3fxBf2PTRyxq3jhW5GGzfHqV1C54/\nAQnLrOGo5iJruG5s2nliBvt9fY9/Ne25l0XkUkHGkaG7tGfYrRz6bLVV86N9IX3C\nmdA6tsrZrXoj6dyrS3k5dxD3GSZqhg2wJAp4CiZHXXUomW3fLuyTCSAT5nSiwOK7\nojddOBM18VNgNfaOtpndqmBAoYH67U1ZivOcXtoOV/vtICUkte7s/3JivDzL/6pr\nq9qoswXrMzqRSDw8yvpsoVBYgTPw6d1SH3m60N7jyhVSDS8HHq+Z1K826KbNgpDW\nZwzf2tQM3o5gOwqYD58Oe/EcOib/wZXvTHU/lnPNYvz6e4dMdvolKkrO9xxlhlr+\nPAnvCxAddTPMwnXkhlRdyIEHhVzqqXaCP9iNgntPN8m9T3jQBAPx4AzTo3s3/Wlu\ncsF+QhlRLOfDUvNYruQoUZA8FFXLs2ki/lYAuUArA3qTrl0kDviQNEfuN+ZBl1BB\nx827m6RUQRxx8EN3ZtXs51Lr9sdEYkKn31J/Jc8vMJAFnNL2WVVXzATYrYxYZN9I\nuJ6ECiQt+j0hMtBYIJKlKf33Je98l0X9zZAHkusxZMkZDuZAWKXdbfD7X9d8ATbG\nyqzzmTsn/FvVpz9PPff+NEFB9MW9UqRcXak+XPJEhRj563i+qHE=\n=j1w3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72ad8630476f7ebe8147a98aecdf7231b22d0597",
          "sha": "72ad8630476f7ebe8147a98aecdf7231b22d0597",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72ad8630476f7ebe8147a98aecdf7231b22d0597"
        }
      ],
      "message": "test: remove test-only uint160S\n\nuint160S is a test-only function, and testing input that\nis not allowed in uint160::FromHex() is superfluous.\n\nTests that can't use uint160::FromHex() because they use input\nwith non-hex digit characters are\na) modified by dropping the non-hex digit characters if that\nprovides useful test coverage.\nb) dropped if the test without non-hex digit characters does\nnot provide useful test coverage, e.g. because it is now\nduplicated.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-04T15:55:18Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-01T15:35:41Z"
      },
      "sha": "d1df297e63a9f303eae37fe57bef1343f2874c7f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2MDAxM2VkNzFiNjk3YmFiOTg4ODRhYTQ3NWZiNjRhZTc3MzZjMmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b60013ed71b697bab98884aa475fb64ae7736c2e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b60013ed71b697bab98884aa475fb64ae7736c2e",
      "tree": {
        "sha": "fb7daca015815c46f5545a55274c792859ba5029",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb7daca015815c46f5545a55274c792859ba5029"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fb7daca015815c46f5545a55274c792859ba5029\nparent d1df297e63a9f303eae37fe57bef1343f2874c7f\nauthor stickies-v <stickies-v@protonmail.com> 1725027605 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725465318 +0100\n\ntest: move uint256_tests/operator_with_self to arith_uint256_tests\n\nmove/formatting-only change.\n\nThese tests do not cover uint256, so move them to the appropriate\ntest suite. Additionally, apply clang-format suggestions.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbYguYACgkQXLHObl5m\np1c3SxAAt/SIjiWZ7G7vu1MOXK9zI3QBnm1NK0M98yMWjjvBlM39G8evAAmuxX2p\nOD05bt2SiE5VQSu8QYYKA7vwAxkCM1IEhT+0PHqLLCIXI3EsgYDXQaUNS+HAzvNi\nmPyGlU6HM0nKdP7sbGHykzf4yPnIzSZNHfuJ/DB4fKOgLjYz7WAy2peSmlB29vBQ\n5nKRY2WXi/49mhkzphwIpBIEiIJ9eBv/XiEZg2M4lhNvS6w/FUHAzRR/BTcarCl8\ndAXQN1C2CQfS2zIjEC3wKH3Idg+IC7aP+Cmany/Eo1OSz6YhpIZDJ9MWpJa5QT/N\nMV4STSIPX4fXG1lAZ4F0URWYHEGDjWEDPgXgdZX9SrKorCXC3Jmh4xcXW5RA0a2L\nhItGdsJ7C1j3qIoynUw36xnpiGOGb7W6WXgVI5MtzC3hL3ThZs75twO5jJR2IGIj\nSYbBh+Hy5bHMHNoRFkYFblLkHNdRLON1mOlYLfjzyGrv2p5guWVwAboqrZjOiR1r\nN9h8wc1x/naIX636sO/q2PLr3G74wUCyrllRVFcept+sqFv5UcOSIs/bVJ581zMn\nr2oxPiclsqnbQhYPsfqNDafdZSpFu03IBMjxvQxny2Gj9Hot1RDMH/38F2P2W31U\nQ6FddAS1N/qTvx14MOrrVV1gxk4RLNDjyZQToTH3Cv4L05SOYlg=\n=RFbY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1df297e63a9f303eae37fe57bef1343f2874c7f",
          "sha": "d1df297e63a9f303eae37fe57bef1343f2874c7f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d1df297e63a9f303eae37fe57bef1343f2874c7f"
        }
      ],
      "message": "test: move uint256_tests/operator_with_self to arith_uint256_tests\n\nmove/formatting-only change.\n\nThese tests do not cover uint256, so move them to the appropriate\ntest suite. Additionally, apply clang-format suggestions.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-04T15:55:18Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-30T14:20:05Z"
      },
      "sha": "b60013ed71b697bab98884aa475fb64ae7736c2e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14133758667,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANKcArL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14133758667",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:56:29Z"
    },
    {
      "event": "commented",
      "id": 2329458177,
      "node_id": "IC_kwDOABII586K2LYB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329458177",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T16:03:20Z",
      "updated_at": "2024-09-04T16:03:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to increase `uint256`/`arith_uint256` conversion tests (hopefully) addressing @maflcko's [concern](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743729122), (or at the very least just improving test coverage). To avoid changing the same lines multiple times, I've squashed the `conversion` move commit into 6cfa7f4a0361d9c396d1c5bd71849295baf6290d.\r\n\r\nAlso adopted two style nits on [happy-path](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743693696) and [limiting variable scope](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743824684).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2329458177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "mentioned",
      "id": 14133846939,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANKcWOb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14133846939",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T16:03:22Z"
    },
    {
      "event": "subscribed",
      "id": 14133846974,
      "node_id": "SE_lADOABII586U3cfNzwAAAANKcWO-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14133846974",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T16:03:22Z"
    },
    {
      "event": "reviewed",
      "id": 2280694965,
      "node_id": "PRR_kwDOABII586H8KS1",
      "url": null,
      "actor": null,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK b60013ed71b697bab98884aa475fb64ae7736c2e",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2280694965",
      "submitted_at": "2024-09-04T16:21:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1738970588",
      "pull_request_review_id": 2272815052,
      "id": 1738970588,
      "node_id": "PRRC_kwDOABII585nppXc",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s' with len %s)\", name, uint256::size() * 2, v.get_str(), len));\r\n```",
      "created_at": "2024-08-30T15:41:41Z",
      "updated_at": "2024-09-03T14:54:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1738970588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1738970588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739862015",
      "pull_request_review_id": 2273903849,
      "id": 1739862015,
      "node_id": "PRRC_kwDOABII585ntC__",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 9,
      "original_position": 2,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it seems to me `ParseHashV` doesn't have dedicated unit tests (only fuzz, without validation).\r\nIf you don't think it's overkill, could you please add one before this commit - to make absolutely sure that the two behaviors are the same...\r\n\r\n(Q: what should happen when `v.isStr()` is false?)",
      "created_at": "2024-08-31T17:34:01Z",
      "updated_at": "2024-08-31T17:52:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739862015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739862015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739863841",
      "pull_request_review_id": 2273903849,
      "id": 1739863841,
      "node_id": "PRRC_kwDOABII585ntDch",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not a big fan of expressing code structure with dead comments - would it be possible to reorganize the code instead so that we don't need the comment? E.g. by giving a more meaningful parameter name such as `std::string_view hex`? The 64 char seems unnecessary here, it's a simple calculation from the return value.",
      "created_at": "2024-08-31T17:36:28Z",
      "updated_at": "2024-08-31T17:52:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739863841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739863841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739873354",
      "pull_request_review_id": 2273903849,
      "id": 1739873354,
      "node_id": "PRRC_kwDOABII585ntFxK",
      "diff_hunk": "@@ -98,26 +98,23 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\n+    BOOST_CHECK_EQUAL(arith_uint256S(R1L.ToString()), R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do all of these tests still make sense without the extra `0x` prefix (and whitespace)?\r\nSeems like that's what some of them were testing here basically",
      "created_at": "2024-08-31T17:48:12Z",
      "updated_at": "2024-08-31T17:52:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739873354",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739873354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740791280",
      "pull_request_review_id": 2275437310,
      "id": 1740791280,
      "node_id": "PRRC_kwDOABII585nwl3w",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 9,
      "original_position": 2,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if it makes sense adding it to this branch, because I think the tests should be removed after switching `ParseHashV` to use `uint256::FromHex()` so that would probably create a bit too much unnecessary churn, but here's a commit (to which you can easily add additional inputs) you can cherry-pick that verifies the parity of both functions (_edit: added to PR description)_:\r\n\r\nhttps://github.com/stickies-v/bitcoin/commit/1f2b0fa86db2ed65476b68417aa1bf4c26026a19\r\n\r\n> (Q: what should happen when v.isStr() is false?)\r\n\r\nI don't think this commit involves `v.isStr()`, I presume you mean `v.get_str()`? It appears to me that behaviour is unchanged, and both on master as well as in this PR a `type_error` would be thrown if `v` is not a string type?",
      "created_at": "2024-09-02T11:54:30Z",
      "updated_at": "2024-09-02T13:32:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740791280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740791280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740800983",
      "pull_request_review_id": 2275453623,
      "id": 1740800983,
      "node_id": "PRRC_kwDOABII585nwoPX",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739863841,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm not a big fan of expressing code structure with dead comments \r\n\r\nI agree, but I'm not sure this is a dead comment? I don't think `hex` would be a better parameter name, because it's not validated to be a hex string yet, could be anything. The \"64 hex digit\" bit helps developers that want to use this utility function quickly understand how to use it, as does the \"most significant digits first\" bit. \r\n\r\nI'd be okay with not having the string too, but it feels rather arbitrary so I'd rather leave as is (with slight fix).",
      "created_at": "2024-09-02T12:02:19Z",
      "updated_at": "2024-09-02T12:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740800983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740800983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942391",
      "pull_request_review_id": 2275693332,
      "id": 1740942391,
      "node_id": "PRRC_kwDOABII585nxKw3",
      "diff_hunk": "@@ -98,26 +98,23 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\n+    BOOST_CHECK_EQUAL(arith_uint256S(R1L.ToString()), R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739873354,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had the same intuition, but kept them to be safe. Looking at it again, I agree with your view that they can be safely removed, so I've added a new commit 73a126f4f59470d839905d0eaaa26f689f7f2ba1 to do that and clean up the `arith_uint256S()` function entirely. Thanks!",
      "created_at": "2024-09-02T13:39:03Z",
      "updated_at": "2024-09-02T13:39:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740942391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942976",
      "pull_request_review_id": 2275694358,
      "id": 1740942976,
      "node_id": "PRRC_kwDOABII585nxK6A",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739863841,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved by [removing the function altogether](https://github.com/bitcoin/bitcoin/commit/73a126f4f59470d839905d0eaaa26f689f7f2ba1).",
      "created_at": "2024-09-02T13:39:34Z",
      "updated_at": "2024-09-02T13:39:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740942976",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741063319",
      "pull_request_review_id": 2275888717,
      "id": 1741063319,
      "node_id": "PRRC_kwDOABII585nxoSX",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 9,
      "original_position": 2,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I presume you mean v.get_str()\r\n\r\nNo, I meant when it doesn't actually store a string, what should be the error.\r\n\r\n> It appears to me that behaviour is unchanged\r\n\r\nYes, it's just that it's a hidden error which would be eliminated if `ParseHashV` accepted a `string_view` instead of a `UniValue`.\r\nI understand if it's outside the scope, just noting that there's another path that we might want to consider when evaluating the correctness of the method.\r\nPulling the method to the parameter would make the type errors slightly more informative and would reduce the `get_str` calls inside `ParseHashV` - possibly opening this method up for other uses where we only have a string instead of a `UniValue`.",
      "created_at": "2024-09-02T15:22:40Z",
      "updated_at": "2024-09-02T15:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741063319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741063319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741075923",
      "pull_request_review_id": 2275908296,
      "id": 1741075923,
      "node_id": "PRRC_kwDOABII585nxrXT",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 9,
      "original_position": 2,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> No, I meant when it doesn't actually store a string, what should be the error.\r\n\r\nYes, that's what the `v.get_str()` call checks internally, and it throws a `type_error` if so. Have a look at the `UniValue::get_str()` implementation? (Note that user input type validation happens in `RPCHelpMan::HandleRequest()`, but of course this can still happen through internal bugs).\r\n\r\n>  I understand if it's outside the scope\r\n\r\nYeah it's quite orthogonal to this PR, given the number of callsites of `ParseHashV()`, so I'm not going to change that here. I am generally in favour of pushing UniValue user input parsing into stricter types further back to the edges, though.",
      "created_at": "2024-09-02T15:35:43Z",
      "updated_at": "2024-09-02T15:35:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741075923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741075923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741081872",
      "pull_request_review_id": 2275917562,
      "id": 1741081872,
      "node_id": "PRRC_kwDOABII585nxs0Q",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since we've already included `setup_common` which contains `std::ostream& operator<<(std::ostream& os, const arith_uint256& num)` we might as well use `BOOST_CHECK_EQUAL` here:\r\n```diff\r\ndiff --git a/src/test/arith_uint256_tests.cpp b/src/test/arith_uint256_tests.cpp\r\nindex a434a1d401..9a6307c1bd 100644\r\n--- a/src/test/arith_uint256_tests.cpp\r\n+++ b/src/test/arith_uint256_tests.cpp\r\n@@ -64,51 +64,50 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\r\n \r\n BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n {\r\n-    BOOST_CHECK(1 == 0+1);\r\n     // constructor arith_uint256(vector<char>):\r\n-    BOOST_CHECK(R1L.ToString() == ArrayToString(R1Array,32));\r\n-    BOOST_CHECK(R2L.ToString() == ArrayToString(R2Array,32));\r\n-    BOOST_CHECK(ZeroL.ToString() == ArrayToString(ZeroArray,32));\r\n-    BOOST_CHECK(OneL.ToString() == ArrayToString(OneArray,32));\r\n-    BOOST_CHECK(MaxL.ToString() == ArrayToString(MaxArray,32));\r\n-    BOOST_CHECK(OneL.ToString() != ArrayToString(ZeroArray,32));\r\n+    BOOST_CHECK_EQUAL(R1L.ToString(), ArrayToString(R1Array, 32));\r\n+    BOOST_CHECK_EQUAL(R2L.ToString(), ArrayToString(R2Array, 32));\r\n+    BOOST_CHECK_EQUAL(ZeroL.ToString(), ArrayToString(ZeroArray, 32));\r\n+    BOOST_CHECK_EQUAL(OneL.ToString(), ArrayToString(OneArray, 32));\r\n+    BOOST_CHECK_EQUAL(MaxL.ToString(), ArrayToString(MaxArray, 32));\r\n+    BOOST_CHECK_NE(OneL.ToString(), ArrayToString(ZeroArray, 32));\r\n \r\n     // == and !=\r\n-    BOOST_CHECK(R1L != R2L);\r\n-    BOOST_CHECK(ZeroL != OneL);\r\n-    BOOST_CHECK(OneL != ZeroL);\r\n-    BOOST_CHECK(MaxL != ZeroL);\r\n-    BOOST_CHECK(~MaxL == ZeroL);\r\n-    BOOST_CHECK( ((R1L ^ R2L) ^ R1L) == R2L);\r\n+    BOOST_CHECK_NE(R1L, R2L);\r\n+    BOOST_CHECK_NE(ZeroL, OneL);\r\n+    BOOST_CHECK_NE(OneL, ZeroL);\r\n+    BOOST_CHECK_NE(MaxL, ZeroL);\r\n+    BOOST_CHECK_EQUAL(~MaxL, ZeroL);\r\n+    BOOST_CHECK_EQUAL((R1L ^ R2L) ^ R1L, R2L);\r\n \r\n     uint64_t Tmp64 = 0xc4dab720d9c7acaaULL;\r\n     for (unsigned int i = 0; i < 256; ++i)\r\n     {\r\n-        BOOST_CHECK(ZeroL != (OneL << i));\r\n-        BOOST_CHECK((OneL << i) != ZeroL);\r\n-        BOOST_CHECK(R1L != (R1L ^ (OneL << i)));\r\n-        BOOST_CHECK(((arith_uint256(Tmp64) ^ (OneL << i) ) != Tmp64 ));\r\n+        BOOST_CHECK_NE(ZeroL, OneL << i);\r\n+        BOOST_CHECK_NE(OneL << i, ZeroL);\r\n+        BOOST_CHECK_NE(R1L, R1L ^ (OneL << i));\r\n+        BOOST_CHECK_NE(arith_uint256(Tmp64) ^ (OneL << i), Tmp64);\r\n     }\r\n-    BOOST_CHECK(ZeroL == (OneL << 256));\r\n+    BOOST_CHECK_EQUAL(ZeroL, OneL << 256);\r\n \r\n     // Copy Constructor\r\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\r\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\r\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\r\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(R1L), R1L);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(R1L ^ R2L) ^ R2L, R1L);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(ZeroL), ZeroL);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(OneL), OneL);\r\n \r\n     // uint64_t constructor\r\n-    BOOST_CHECK_EQUAL((R1L & arith_uint256{0xffffffffffffffff}), arith_uint256{R1LLow64});\r\n+    BOOST_CHECK_EQUAL(R1L & arith_uint256{0xffffffffffffffff}, arith_uint256{R1LLow64});\r\n     BOOST_CHECK_EQUAL(ZeroL, arith_uint256{0});\r\n     BOOST_CHECK_EQUAL(OneL, arith_uint256{1});\r\n     BOOST_CHECK_EQUAL(arith_uint256{0xffffffffffffffff}, arith_uint256{0xffffffffffffffffULL});\r\n \r\n     // Assignment (from base_uint)\r\n-    arith_uint256 tmpL = ~ZeroL; BOOST_CHECK(tmpL == ~ZeroL);\r\n-    tmpL = ~OneL; BOOST_CHECK(tmpL == ~OneL);\r\n-    tmpL = ~R1L; BOOST_CHECK(tmpL == ~R1L);\r\n-    tmpL = ~R2L; BOOST_CHECK(tmpL == ~R2L);\r\n-    tmpL = ~MaxL; BOOST_CHECK(tmpL == ~MaxL);\r\n+    arith_uint256 tmpL = ~ZeroL; BOOST_CHECK_EQUAL(tmpL, ~ZeroL);\r\n+    tmpL = ~OneL; BOOST_CHECK_EQUAL(tmpL, ~OneL);\r\n+    tmpL = ~R1L; BOOST_CHECK_EQUAL(tmpL, ~R1L);\r\n+    tmpL = ~R2L; BOOST_CHECK_EQUAL(tmpL, ~R2L);\r\n+    tmpL = ~MaxL; BOOST_CHECK_EQUAL(tmpL, ~MaxL);\r\n }\r\n \r\n static void shiftArrayRight(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift)\r\n```\r\n\r\nI understand of course if you think some of these are unrelated, though some of the comments are weird, e.g. `// constructor arith_uint256(vector<char>)` doesn't seem to test any constructors directly.",
      "created_at": "2024-09-02T15:42:04Z",
      "updated_at": "2024-09-02T15:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741081872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741081872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741088168",
      "pull_request_review_id": 2275917562,
      "id": 1741088168,
      "node_id": "PRRC_kwDOABII585nxuWo",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 9,
      "original_position": 2,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Have a look at the UniValue::get_str() implementation\r\n\r\nI already checked all of that, that's why I was asking if we'd rather they throw on the call site. You've already answered that you think it's orthogonal.\r\n\r\n>  I am generally in favour of pushing UniValue user input parsing into stricter types further back to the edges, though.\r\n\r\nYes, that's what I was saying basically - though I needed 2 rounds to understand it myself why this was bothering me.",
      "created_at": "2024-09-02T15:49:02Z",
      "updated_at": "2024-09-02T15:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741088168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741088168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741105267",
      "pull_request_review_id": 2275952621,
      "id": 1741105267,
      "node_id": "PRRC_kwDOABII585nxyhz",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": 1741081872,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not touching any of those lines in this PR so I'd rather keep this PR a bit narrower.\r\n\r\n```diff\r\n-    BOOST_CHECK_EQUAL((R1L & arith_uint256{0xffffffffffffffff}), arith_uint256{R1LLow64});\r\n+    BOOST_CHECK_EQUAL(R1L & arith_uint256{0xffffffffffffffff}, arith_uint256{R1LLow64});\r\n```\r\n\r\nThanks, I'll patch this if I have to force-push.\r\n\r\n(note: you can hide long code blocks with a [`<details>...</details>` tag](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/organizing-information-with-collapsed-sections).)",
      "created_at": "2024-09-02T16:11:06Z",
      "updated_at": "2024-09-02T16:11:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741105267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741105267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741116936",
      "pull_request_review_id": 2275970058,
      "id": 1741116936,
      "node_id": "PRRC_kwDOABII585nx1YI",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": 1741081872,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> you can hide long code blocks\r\n\r\nAh, I don't see them anymore, `Refined Github` extension does it automatically. I'll do it next time.",
      "created_at": "2024-09-02T16:30:15Z",
      "updated_at": "2024-09-02T16:30:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741116936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741116936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741581342",
      "pull_request_review_id": 2276646525,
      "id": 1741581342,
      "node_id": "PRRC_kwDOABII585nzmwe",
      "diff_hunk": "@@ -571,4 +552,35 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(operator_with_self)\n+{\n+    /* Clang 16 and earlier detects v -= v and v /= v as self-assignments\n+       to 0 and 1 respectively.\n+       See: https://github.com/llvm/llvm-project/issues/42469\n+       and the fix in commit c5302325b2a62d77cf13dd16cd5c19141862fed0 .\n+\n+       This makes some sense for arithmetic classes, but could be considered a bug\n+       elsewhere. Disable the warning here so that the code can be tested, but the\n+       warning should remain on as there will likely always be a better way to\n+       express this.\n+    */\n+",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The move of this test to this file and changes to use raw integer literals make total sense.\r\n\r\nmeganit: If you re-touch - Might just remove this empty line as the comment above applies to the preprocessor logic beneath.",
      "created_at": "2024-09-03T07:40:48Z",
      "updated_at": "2024-09-03T08:25:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741581342",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741581342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 567,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741596200",
      "pull_request_review_id": 2276646525,
      "id": 1741596200,
      "node_id": "PRRC_kwDOABII585nzqYo",
      "diff_hunk": "@@ -92,33 +84,22 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK_NE(MaxL, ZeroL); BOOST_CHECK_NE(MaxS, ZeroS);\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R2L.ToString()), R2L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+ZeroL.ToString()), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+OneL.ToString()), OneL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+MaxL.ToString()), MaxL);\n-    BOOST_CHECK_EQUAL(uint256S(R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\"), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"1\"), OneL);\n-    BOOST_CHECK_EQUAL(R1L, uint256S(R1ArrayHex));\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R1L.ToString()).value(), R1L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R2L.ToString()).value(), R2L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(ZeroL.ToString()).value(), ZeroL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(OneL.ToString()).value(), OneL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(MaxL.ToString()).value(), MaxL);\n+    BOOST_CHECK_EQUAL(R1L, uint256::FromHex(R1ArrayHex).value());",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I understand this matches the order before the PR but this specific line should probably have the arguments swapped.\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(uint256::FromHex(R1ArrayHex).value(), R1L);\r\n```",
      "created_at": "2024-09-03T07:52:06Z",
      "updated_at": "2024-09-03T08:25:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741596200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741596200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741603274",
      "pull_request_review_id": 2276646525,
      "id": 1741603274,
      "node_id": "PRRC_kwDOABII585nzsHK",
      "diff_hunk": "@@ -92,33 +84,22 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK_NE(MaxL, ZeroL); BOOST_CHECK_NE(MaxS, ZeroS);\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R2L.ToString()), R2L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+ZeroL.ToString()), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+OneL.ToString()), OneL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+MaxL.ToString()), MaxL);\n-    BOOST_CHECK_EQUAL(uint256S(R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\"), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"1\"), OneL);\n-    BOOST_CHECK_EQUAL(R1L, uint256S(R1ArrayHex));\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R1L.ToString()).value(), R1L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R2L.ToString()).value(), R2L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(ZeroL.ToString()).value(), ZeroL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(OneL.ToString()).value(), OneL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(MaxL.ToString()).value(), MaxL);\n+    BOOST_CHECK_EQUAL(R1L, uint256::FromHex(R1ArrayHex).value());\n     BOOST_CHECK_EQUAL(uint256(R1L), R1L);\n     BOOST_CHECK_EQUAL(uint256(ZeroL), ZeroL);\n     BOOST_CHECK_EQUAL(uint256(OneL), OneL);\n \n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+R1S.ToString()), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+R2S.ToString()), R2S);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+ZeroS.ToString()), ZeroS);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+OneS.ToString()), OneS);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+MaxS.ToString()), MaxS);\n-    BOOST_CHECK_EQUAL(uint160S(R1S.ToString()), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"   0x\"+R1S.ToString()+\"   \"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\" \\t \\n  \\n \\f\\n\\r\\t\\v\\t  0x\"+R1S.ToString()+\"   \\t \\n  \\n \\f\\n\\r\\t\\v\\t\"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"\"), ZeroS);\n-    BOOST_CHECK_EQUAL(R1S, uint160S(R1ArrayHex));\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R1S.ToString()).value(), R1S);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R2S.ToString()).value(), R2S);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(ZeroS.ToString()).value(), ZeroS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(OneS.ToString()).value(), OneS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(MaxS.ToString()).value(), MaxS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R1ArrayHex + 24).value(), R1S); // we want the last 40 of 64 chars so skip the first 24",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Clarify code instead of adding comment?\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(uint160::FromHex(std::string_view{R1ArrayHex + 24, 40}).value(), R1S);\r\n```",
      "created_at": "2024-09-03T07:57:07Z",
      "updated_at": "2024-09-03T08:25:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741603274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741603274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741633513",
      "pull_request_review_id": 2276646525,
      "id": 1741633513,
      "node_id": "PRRC_kwDOABII585nzzfp",
      "diff_hunk": "@@ -274,72 +255,12 @@ BOOST_AUTO_TEST_CASE( conversion )\n     BOOST_CHECK_EQUAL(UintToArith256(OneL), 1);\n     BOOST_CHECK_EQUAL(ArithToUint256(0), ZeroL);\n     BOOST_CHECK_EQUAL(ArithToUint256(1), OneL);\n-    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256S(R1L.GetHex()))), UintToArith256(R1L));\n-    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256S(R2L.GetHex()))), UintToArith256(R2L));\n+    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256::FromHex(R1L.GetHex()).value())), UintToArith256(R1L));\n+    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256::FromHex(R2L.GetHex()).value())), UintToArith256(R2L));",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The whole `conversion`-test arguably belongs in the **arith_uint256_tests.cpp** file, which would allow complete removal of `#include <arith_uint256.h>` from this file. That would mirror the code under test, as `uint256` does not depend on `arith_uint256` but the reverse is true.",
      "created_at": "2024-09-03T08:17:46Z",
      "updated_at": "2024-09-03T08:25:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741633513",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741633513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": 258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741905568",
      "pull_request_review_id": 2277180999,
      "id": 1741905568,
      "node_id": "PRRC_kwDOABII585n016g",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": 1741081872,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Thanks, I'll patch this if I have to force-push.\r\n\r\nDone!",
      "created_at": "2024-09-03T11:38:30Z",
      "updated_at": "2024-09-03T11:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741905568",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741905568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741908187",
      "pull_request_review_id": 2277180999,
      "id": 1741908187,
      "node_id": "PRRC_kwDOABII585n02jb",
      "diff_hunk": "@@ -92,33 +84,22 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK_NE(MaxL, ZeroL); BOOST_CHECK_NE(MaxS, ZeroS);\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+R2L.ToString()), R2L);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+ZeroL.ToString()), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+OneL.ToString()), OneL);\n-    BOOST_CHECK_EQUAL(uint256S(\"0x\"+MaxL.ToString()), MaxL);\n-    BOOST_CHECK_EQUAL(uint256S(R1L.ToString()), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \"), R1L);\n-    BOOST_CHECK_EQUAL(uint256S(\"\"), ZeroL);\n-    BOOST_CHECK_EQUAL(uint256S(\"1\"), OneL);\n-    BOOST_CHECK_EQUAL(R1L, uint256S(R1ArrayHex));\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R1L.ToString()).value(), R1L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(R2L.ToString()).value(), R2L);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(ZeroL.ToString()).value(), ZeroL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(OneL.ToString()).value(), OneL);\n+    BOOST_CHECK_EQUAL(uint256::FromHex(MaxL.ToString()).value(), MaxL);\n+    BOOST_CHECK_EQUAL(R1L, uint256::FromHex(R1ArrayHex).value());\n     BOOST_CHECK_EQUAL(uint256(R1L), R1L);\n     BOOST_CHECK_EQUAL(uint256(ZeroL), ZeroL);\n     BOOST_CHECK_EQUAL(uint256(OneL), OneL);\n \n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+R1S.ToString()), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+R2S.ToString()), R2S);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+ZeroS.ToString()), ZeroS);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+OneS.ToString()), OneS);\n-    BOOST_CHECK_EQUAL(uint160S(\"0x\"+MaxS.ToString()), MaxS);\n-    BOOST_CHECK_EQUAL(uint160S(R1S.ToString()), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"   0x\"+R1S.ToString()+\"   \"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\" \\t \\n  \\n \\f\\n\\r\\t\\v\\t  0x\"+R1S.ToString()+\"   \\t \\n  \\n \\f\\n\\r\\t\\v\\t\"), R1S);\n-    BOOST_CHECK_EQUAL(uint160S(\"\"), ZeroS);\n-    BOOST_CHECK_EQUAL(R1S, uint160S(R1ArrayHex));\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R1S.ToString()).value(), R1S);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R2S.ToString()).value(), R2S);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(ZeroS.ToString()).value(), ZeroS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(OneS.ToString()).value(), OneS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(MaxS.ToString()).value(), MaxS);\n+    BOOST_CHECK_EQUAL(uint160::FromHex(R1ArrayHex + 24).value(), R1S); // we want the last 40 of 64 chars so skip the first 24",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": 1741603274,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, didn't quite love the docstring and this is much clearer, thanks.",
      "created_at": "2024-09-03T11:40:39Z",
      "updated_at": "2024-09-03T11:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741908187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741908187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741909541",
      "pull_request_review_id": 2277180999,
      "id": 1741909541,
      "node_id": "PRRC_kwDOABII585n024l",
      "diff_hunk": "@@ -274,72 +255,12 @@ BOOST_AUTO_TEST_CASE( conversion )\n     BOOST_CHECK_EQUAL(UintToArith256(OneL), 1);\n     BOOST_CHECK_EQUAL(ArithToUint256(0), ZeroL);\n     BOOST_CHECK_EQUAL(ArithToUint256(1), OneL);\n-    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256S(R1L.GetHex()))), UintToArith256(R1L));\n-    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256S(R2L.GetHex()))), UintToArith256(R2L));\n+    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256::FromHex(R1L.GetHex()).value())), UintToArith256(R1L));\n+    BOOST_CHECK_EQUAL(arith_uint256(UintToArith256(uint256::FromHex(R2L.GetHex()).value())), UintToArith256(R2L));",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "in_reply_to_id": 1741633513,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was considering moving it but then thought it was quite arbitrary, but you're right - tests mirroring how code is structured is good, so I've added a commit to move the `conversion` tests. Thanks!",
      "created_at": "2024-09-03T11:41:42Z",
      "updated_at": "2024-09-03T11:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741909541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741909541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": 258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742206994",
      "pull_request_review_id": 2272815052,
      "id": 1742206994,
      "node_id": "PRRC_kwDOABII585n1_gS",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason to omit the length from the error message when it was previously present?",
      "created_at": "2024-09-03T14:47:32Z",
      "updated_at": "2024-09-03T14:54:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1742206994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742206994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742221623",
      "pull_request_review_id": 2277708354,
      "id": 1742221623,
      "node_id": "PRRC_kwDOABII585n2DE3",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we're already displaying the value itself, isn't that enough?",
      "created_at": "2024-09-03T14:56:35Z",
      "updated_at": "2024-09-03T14:56:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1742221623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742221623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742232560",
      "pull_request_review_id": 2277726837,
      "id": 1742232560,
      "node_id": "PRRC_kwDOABII585n2Fvw",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Previously we disambiguated between length errors and other errors. Since that's not longer true, I think not including the length in the error is the most elegant approach, especially since we're already showing the invalid user input as @l0rinc says. Adding the length feels like an arbitrary and not very useful addition to me.",
      "created_at": "2024-09-03T15:03:37Z",
      "updated_at": "2024-09-03T15:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1742232560",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742232560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742381310",
      "pull_request_review_id": 2277977225,
      "id": 1742381310,
      "node_id": "PRRC_kwDOABII585n2qD-",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am mostly thinking about a user running into a copy-paste error, where they delete or add a character from a 64-length string. Returning them back the string won't be useful for them to spot the error, as they likely can already see their input. However telling them that they accidentally added or removed a character may be useful and saves them from manually counting the characters, or write a program to count for them.\r\n\r\n",
      "created_at": "2024-09-03T16:47:48Z",
      "updated_at": "2024-09-03T16:47:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1742381310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742381310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743476276",
      "pull_request_review_id": 2279651061,
      "id": 1743476276,
      "node_id": "PRRC_kwDOABII585n61Y0",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For reference, the len reporting (and error handling) was added after https://github.com/bitcoin/bitcoin/issues/9040#issuecomment-257161620.\r\n\r\nAlso, you added len reporting in a similar place recently in https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1717324499, so I fail to see why there it is \"helpful\" while here it would be not.\r\n\r\nI am happy to review and ACK either version, but I think the length can be useful and may be better to not remove from the error string.",
      "created_at": "2024-09-04T10:22:26Z",
      "updated_at": "2024-09-04T10:22:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743476276",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743476276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743536308",
      "pull_request_review_id": 2279751372,
      "id": 1743536308,
      "node_id": "PRRC_kwDOABII585n7EC0",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also, you added len reporting in a similar place recently in https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1717324499,\r\n\r\nI don't quite think this is similar. My suggestion in https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1717324499 was to use less code to have more accurate and helpful error reporting, triggered only when that particular requirement is breached. In this PR, we're talking about adding more code to provide context that may not be relevant (and thus make the message less useful) because the message is not specific to the error, and it is already easily resolved by the user since the necessary context (i.e. the input value) is provided (which seems to not be the case in #9040 which you linked)?\r\n\r\nIt seems we have different views on the benefit of the behaviour change. Since the behaviour change is orthogonal to the goal of this PR to remove `uint256S()` (I just included it as a little cleanup), I've reverted it, making the commit a refactor commit, reducing the LoC diff.",
      "created_at": "2024-09-04T10:55:19Z",
      "updated_at": "2024-09-04T10:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743536308",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743536308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743693696",
      "pull_request_review_id": 2280021001,
      "id": 1743693696,
      "node_id": "PRRC_kwDOABII585n7qeA",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }\n+    if (auto rv{uint256::FromHex(strHex)}) return *rv;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "95b3aca0eb3fc49cd99b8de028a676bb04e2157f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit in 95b3aca0eb3fc49cd99b8de028a676bb04e2157f: Could have the happy-case early-return in the second line of the function, like in a prior version of this pull request.",
      "created_at": "2024-09-04T12:30:04Z",
      "updated_at": "2024-09-04T13:21:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743693696",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743693696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743729122",
      "pull_request_review_id": 2280021001,
      "id": 1743729122,
      "node_id": "PRRC_kwDOABII585n7zHi",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "question in 948bb07715f9ef1d90b91dfbea4f487f755498f5: Is there a reason why the tests are dropped? I read the commit message and I  understand that the comment says \"String constructors\", but I think it meant to say `UintToArith256 testing from a string`, which is not a test-only function.\r\n\r\nThis is my fault, because I forgot to update the comment in commit facf629ce8ff1d1f6d254dde4e89b5018f8df60e.\r\n\r\nI also understand that there is a `BOOST_AUTO_TEST_CASE(conversion)` test. However, I think it only checks that a round-trip is a no-op and not the construction from string to uint256 and then `UintToArith256`.\r\n\r\nI think it would be easier to review if the tests were kept, or if the commit message said where the equivalent `UintToArith256` tests are happening.\r\n\r\nMy preference would be to just keep the tests, even if they are theoretically redundant.\r\n\r\nPersonally I just find it hard to review, because seemingly equivalent code is doing the reverse:\r\n\r\n* uint256 from a string_view and span are reversed, see https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1735551373\r\n* the `GetHex` member method is the reverse of the `HexStr` helper\r\n* base_uint::CompareTo and base_blob::Compare are also different\r\n* ...\r\n\r\nSo keeping the tests makes it trivial to review and ensures that no coverage is lost accidentally.",
      "created_at": "2024-09-04T12:50:31Z",
      "updated_at": "2024-09-04T13:21:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743729122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743729122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743786908",
      "pull_request_review_id": 2280197408,
      "id": 1743786908,
      "node_id": "PRRC_kwDOABII585n8BOc",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry for misunderstanding, but I think an error message of\r\n\r\n`\"txid must be string of 64 hex digits (not '1d999634f709c98f242f2e553bf0fdac7deb6f972c44c8c1b4d576d564acc7f')\"` is unclear whether the error is that there are non-hex digits or whether there are missing or extraneous characters. And it is not trivial to see from looking at it.\r\n\r\nA proposed error message of `\"txid must be string of 64 hex digits (not '1d999634f709c98f242f2e553bf0fdac7deb6f972c44c8c1b4d576d564acc7f' of len $num)\"` whether the length was wrong or the hex-property.\r\n\r\nBut maybe I am missing something, so anything seems fine here if other reviewers disagree.\r\n\r\n",
      "created_at": "2024-09-04T13:21:50Z",
      "updated_at": "2024-09-04T13:21:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743786908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743786908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743805522",
      "pull_request_review_id": 2280229430,
      "id": 1743805522,
      "node_id": "PRRC_kwDOABII585n8FxS",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n-    const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    if (auto rv{uint256::FromHex(v.get_str())}) {\n+        return *rv;\n+    }\n+    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be string of %d hex digits (not '%s')\", name, uint256::size() * 2, v.get_str()));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "in_reply_to_id": 1738970588,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I tend to agree that the length is superfluous (we're usually not *that* user friendly with our error messages) and in case of error the user would likely copy-paste again which would likely solve the error.\r\nI'm fine with both, just don't revert anything @stickies-v :)",
      "created_at": "2024-09-04T13:30:40Z",
      "updated_at": "2024-09-04T13:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743805522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743805522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743810469",
      "pull_request_review_id": 2280237696,
      "id": 1743810469,
      "node_id": "PRRC_kwDOABII585n8G-l",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Some of these were reverted since it seemed to us that it's testing prefixes and whitespaces primarily, see https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740942391",
      "created_at": "2024-09-04T13:33:02Z",
      "updated_at": "2024-09-04T13:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743810469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743810469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743817035",
      "pull_request_review_id": 2280248540,
      "id": 1743817035,
      "node_id": "PRRC_kwDOABII585n8IlL",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree the prefix and whitespace testing is useless and the prefix and whitespace can simply be removed in the test cases, but it is not trivially clear to me that the `UintToArith256` tests can be removed.",
      "created_at": "2024-09-04T13:36:12Z",
      "updated_at": "2024-09-04T13:36:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743817035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743817035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743824670",
      "pull_request_review_id": 2280261373,
      "id": 1743824670,
      "node_id": "PRRC_kwDOABII585n8Kce",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }\n+    if (auto rv{uint256::FromHex(strHex)}) return *rv;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "95b3aca0eb3fc49cd99b8de028a676bb04e2157f",
      "in_reply_to_id": 1743693696,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yes that would be better, will update this in next force-push, thanks!",
      "created_at": "2024-09-04T13:39:54Z",
      "updated_at": "2024-09-04T13:39:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743824670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743824670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743824684",
      "pull_request_review_id": 2280261389,
      "id": 1743824684,
      "node_id": "PRRC_kwDOABII585n8Kcs",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "da4377dc2ad0f495ebb97722d6cc2a95850363fa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit1: consider narrowing the scope of expected:\r\nNit2: usually we compare the actual against the expected (switched the order):\r\n```suggestion\r\n    if (auto expected_len{uint256::size() * 2}; strHex.length() != expected_len) {\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\r\n    }\r\n```\r\n\r\nNo strong feelings either way, feel free to ignore if you don't like it",
      "created_at": "2024-09-04T13:39:55Z",
      "updated_at": "2024-09-04T13:48:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743824684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743824684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743832221",
      "pull_request_review_id": 2280261389,
      "id": 1743832221,
      "node_id": "PRRC_kwDOABII585n8MSd",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }\n+    if (auto rv{uint256::FromHex(strHex)}) return *rv;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "95b3aca0eb3fc49cd99b8de028a676bb04e2157f",
      "in_reply_to_id": 1743693696,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You mean something like:\r\n```C++\r\nuint256 ParseHashV(const UniValue& v, std::string_view name)\r\n{\r\n    const std::string& strHex(v.get_str());\r\n    if (auto rv{uint256::FromHex(strHex)}){\r\n        return *rv;\r\n    } else if (auto expected_len{uint256::size() * 2}; strHex.length() != expected_len) {\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\r\n    } else {\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\r\n    }\r\n}\r\n```\r\n?",
      "created_at": "2024-09-04T13:43:30Z",
      "updated_at": "2024-09-04T13:48:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743832221",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743832221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743835345",
      "pull_request_review_id": 2280261389,
      "id": 1743835345,
      "node_id": "PRRC_kwDOABII585n8NDR",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> is not trivially clear to me that the UintToArith256 tests can be removed\r\n\r\n+1 for restoring them in that case",
      "created_at": "2024-09-04T13:45:03Z",
      "updated_at": "2024-09-04T13:48:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1743835345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743835345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744056376",
      "pull_request_review_id": 2280649581,
      "id": 1744056376,
      "node_id": "PRRC_kwDOABII585n9DA4",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm definitely happy to put the existing tests back in if it makes review easier, but I want to make sure I understand your concern, so let me try to summarize it:\r\n\r\nPrior to https://github.com/bitcoin/bitcoin/commit/facf629ce8ff1d1f6d254dde4e89b5018f8df60e, to construct a `arith_uint256` from a hex string, one would use the `arith_uint256` string constructor, and as such we had tests covering that constructor. Since https://github.com/bitcoin/bitcoin/commit/facf629ce8ff1d1f6d254dde4e89b5018f8df60e that constructor is removed, and now the de facto approach to construct a `arith_uint256` from a hex string is to first construct a `uint256` from a hex string, and then convert it with `UintToArith256()`. So, rather than removing the string construction unit tests entirely, you kept them by testing this new \"roundabout\" approach instead, since that's how these functions are used in practice.\r\n\r\nIs it fair to summarize that your concern is that even though the tests I remove here are theoretically not necessary since we should have equivalent unit test coverage on the 2 underlying functions (`uint256::FromHex()` and `UintToArith256()`), you'd rather keep them because ensuring that the unit test coverage is indeed equivalent is burdensome and makes this PR harder to review?\r\n\r\nIf my summary is correct, and it seems the main concern is about `UintToArith256()` test coverage (and not so much `uint256::FromHex()` coverage, I think my latest force-push should address your concerns by vastly expanding (and at the same time simplifying) the `conversion` tests in 6cfa7f4a0361d9c396d1c5bd71849295baf6290d? ",
      "created_at": "2024-09-04T15:59:13Z",
      "updated_at": "2024-09-04T15:59:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744056376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744056376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744062744",
      "pull_request_review_id": 2280659906,
      "id": 1744062744,
      "node_id": "PRRC_kwDOABII585n9EkY",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }\n+    if (auto rv{uint256::FromHex(strHex)}) return *rv;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "95b3aca0eb3fc49cd99b8de028a676bb04e2157f",
      "in_reply_to_id": 1743693696,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-09-04T16:03:43Z",
      "updated_at": "2024-09-04T16:03:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744062744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744062744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744063063",
      "pull_request_review_id": 2280660432,
      "id": 1744063063,
      "node_id": "PRRC_kwDOABII585n9EpX",
      "diff_hunk": "@@ -102,11 +103,12 @@ CFeeRate ParseFeeRate(const UniValue& json)\n uint256 ParseHashV(const UniValue& v, std::string_view name)\n {\n     const std::string& strHex(v.get_str());\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, 64, strHex.length(), strHex));\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be hexadecimal string (not '%s')\", name, strHex));\n-    return uint256S(strHex);\n+    const auto expected_len{uint256::size() * 2};\n+    if (expected_len != strHex.length()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", name, expected_len, strHex.length(), strHex));\n+    }",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "da4377dc2ad0f495ebb97722d6cc2a95850363fa",
      "in_reply_to_id": 1743824684,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adopted both suggestions, thanks!",
      "created_at": "2024-09-04T16:03:58Z",
      "updated_at": "2024-09-04T16:03:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744063063",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744063063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744081326",
      "pull_request_review_id": 2280694965,
      "id": 1744081326,
      "node_id": "PRRC_kwDOABII585n9JGu",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "so these are basically roundtrip tests now, right?\r\nThese are very valuable (could even be a fuzz test now), but could we add back some of the hardcoded ones to make sure they're not just self-referentially correct (i.e. circular reasoning):\r\n```C++\r\n    BOOST_CHECK_EQUAL(ArithToUint256(ZeroL), uint256::ZERO);\r\n    BOOST_CHECK_EQUAL(ArithToUint256(OneL), uint256::ONE);\r\n    BOOST_CHECK_EQUAL(UintToArith256(uint256::ZERO), ZeroL);\r\n    BOOST_CHECK_EQUAL(UintToArith256(uint256::ONE), OneL);\r\n```",
      "created_at": "2024-09-04T16:18:05Z",
      "updated_at": "2024-09-04T16:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744081326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744081326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744104279",
      "pull_request_review_id": 2280735179,
      "id": 1744104279,
      "node_id": "PRRC_kwDOABII585n9OtX",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": 1744081326,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> so these are basically roundtrip tests now, right?\r\n\r\nI think `BOOST_CHECK_EQUAL(UintToArith256(ArithToUint256(arith)), arith);` is the only roundtrip?\r\n\r\n> but could we add back some of the hardcoded ones to make sure they're not just self-referentially correct (i.e. circular reasoning):\r\n\r\nIsn't that covered here? https://github.com/bitcoin/bitcoin/pull/30773/files#diff-d06d0fcd312512f190cc0d05450dd55973c60aeb8d57ed2d705e7beaa383f386R565-R568",
      "created_at": "2024-09-04T16:35:10Z",
      "updated_at": "2024-09-04T16:35:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744104279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744104279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744187608",
      "pull_request_review_id": 2280871985,
      "id": 1744187608,
      "node_id": "PRRC_kwDOABII585n9jDY",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": 1744081326,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not exactly, this looks more like a trampoline than simple hard-coded examples for just `ArithToUint256` and `UintToArith256`. Both sides depend on the same parameter, which seems circular to me-at least from a black-box perspective. However, I’m fine with this if you think it’s sufficient.",
      "created_at": "2024-09-04T17:38:59Z",
      "updated_at": "2024-09-04T17:39:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744187608",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744187608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744646596",
      "pull_request_review_id": 2281627603,
      "id": 1744646596,
      "node_id": "PRRC_kwDOABII585n_THE",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": 1744081326,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm sorry, I just don't see how those hardcoded tests are any different from the ones I linked. `ZeroL` is the same as `arith_uint256{0}`, and `uint256::ZERO` is the same as `uint256{0}`. Besides these aliases being irrelevant for a conversion test, their equivalence is tested in other unit tests already. What am I missing?",
      "created_at": "2024-09-05T00:24:26Z",
      "updated_at": "2024-09-05T00:24:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744646596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744646596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744966102",
      "pull_request_review_id": 2282109178,
      "id": 1744966102,
      "node_id": "PRRC_kwDOABII585oAhHW",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Is it fair to summarize that your concern is that even though the tests I remove here are theoretically not necessary since we should have equivalent unit test coverage on the 2 underlying functions (`uint256::FromHex()` and `UintToArith256()`), you'd rather keep them because ensuring that the unit test coverage is indeed equivalent is burdensome and makes this PR harder to review?\r\n\r\nYes. At least I had difficulty seeing that the test coverage does not decrease, and the tests run so fast that in the case where they are redundant, no one should notice.\r\n\r\nI'd say it is mostly about review. I like this pull request, but I don't want to spend the majority of the review time here on unit test refactoring, where it is unclear what the clear benefit will be now. Also, if the unit tests are changed soon again, maybe the more involved changes can be postponed?",
      "created_at": "2024-09-05T07:39:00Z",
      "updated_at": "2024-09-05T07:52:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1744966102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744966102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745515725",
      "pull_request_review_id": 2283018991,
      "id": 1745515725,
      "node_id": "PRRC_kwDOABII585oCnTN",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> and the tests run so fast that in the case where they are redundant, no one should notice.\r\n\r\nAbsolutely, the cleanup is to avoid having tests that have unclear purpose, making them easier to maintain going forward. Performance is not the goal here.\r\n\r\nI think it's impossible for this PR to not have significant changes to the unit tests, so I feel like since the review is happening anyway the test improvements I've introduced here make sense and add little overhead?\r\n\r\nThat said, I'm unsure if you're waiting for me to revert things or if you're happy with the current approach, so just to make it explicit could you please clarify if you'd prefer:\r\n1) the `conversion` test changes to be reverted\r\n2) the \"string constructor\" tests to be re-added\r\n3) moving the `conversion` and `operator_with_self` to `arith_uint256_tests.cpp` to be reverted (not explicitly discussed, but I'm inferring from your message that this might be a concern)",
      "created_at": "2024-09-05T13:12:42Z",
      "updated_at": "2024-09-05T13:12:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1745515725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745515725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745557271",
      "pull_request_review_id": 2283090302,
      "id": 1745557271,
      "node_id": "PRRC_kwDOABII585oCxcX",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": 1744081326,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You already know at the implementation, that's why it seems the same.\r\nThe test would also pass for a simple re-cast roundtrip:\r\n```C++\r\nauto ArithToUint256_mock(const arith_uint256 &a) { return *reinterpret_cast<const uint256*>(&a); }\r\nauto UintToArith256_mock(const uint256 &a) { return *reinterpret_cast<const arith_uint256*>(&a); }\r\nBOOST_AUTO_TEST_CASE(conversion)\r\n{\r\n    for (const arith_uint256& arith : {ZeroL, OneL, R1L, R2L}) {\r\n        const auto u256{uint256::FromHex(arith.GetHex()).value()};\r\n        BOOST_CHECK_EQUAL(UintToArith256_mock(ArithToUint256_mock(arith)), arith);\r\n        BOOST_CHECK_EQUAL(UintToArith256_mock(u256), arith);\r\n        BOOST_CHECK_EQUAL(u256, ArithToUint256_mock(arith));\r\n        BOOST_CHECK_EQUAL(ArithToUint256_mock(arith).GetHex(), UintToArith256_mock(u256).GetHex());\r\n    }\r\n\r\n    for (const uint8_t num : {0, 1, 0xff}) {\r\n        BOOST_CHECK_EQUAL(UintToArith256_mock(uint256{num}), arith_uint256{num});\r\n        BOOST_CHECK_EQUAL(uint256{num}, ArithToUint256_mock(arith_uint256{num}));\r\n    }\r\n}\r\n```\r\n\r\nThat's why I though we should cover it with hard-coded examples which cannot cheat by passing the parameter around.\r\n(note, the previous hard-coded ones also pass for the above `_mock` methods, we should find better ones to obviate why the mocks are incorrect)",
      "created_at": "2024-09-05T13:36:34Z",
      "updated_at": "2024-09-05T13:39:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1745557271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745557271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745564600",
      "pull_request_review_id": 2283102666,
      "id": 1745564600,
      "node_id": "PRRC_kwDOABII585oCzO4",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  so I feel like since the review is happening anyway the test improvements I've introduced here make sense and add little overhead?\r\n\r\nAgree, let's leave the campground cleaner than we found it.",
      "created_at": "2024-09-05T13:40:51Z",
      "updated_at": "2024-09-05T13:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1745564600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745564600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745612258",
      "pull_request_review_id": 2283180007,
      "id": 1745612258,
      "node_id": "PRRC_kwDOABII585oC-3i",
      "diff_hunk": "@@ -571,4 +552,50 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+BOOST_AUTO_TEST_CASE(conversion)",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "in_reply_to_id": 1744081326,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> You already know at the implementation\r\n\r\nAt which points are these test relying on implementation?\r\n\r\nThanks for providing an example. If you have a diff that shows where the \"hardcoded\" tests catch something that \"my\" tests don't, that would really help. I struggle to see how `BOOST_CHECK_EQUAL(ArithToUint256(ZeroL), uint256::ZERO);` is any different from `BOOST_CHECK_EQUAL(ArithToUint256(arith_uint256{0}), uint256{0});` (or how that substitution is relying on implementation details, which you seem to be hinting at).",
      "created_at": "2024-09-05T14:06:41Z",
      "updated_at": "2024-09-05T14:06:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1745612258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745612258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745868679",
      "pull_request_review_id": 2283601383,
      "id": 1745868679,
      "node_id": "PRRC_kwDOABII585oD9eH",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "b60013ed71b697bab98884aa475fb64ae7736c2e",
      "original_commit_id": "948bb07715f9ef1d90b91dfbea4f487f755498f5",
      "in_reply_to_id": 1743729122,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> the \"string constructor\" tests to be re-added\r\n\r\nThat'd be my preference for now. Even if the tests are redundant, it seems cleaner to keep them for now to make review trivial (and maybe for symmetry with the uint256 tests).\r\n\r\nThere are many more obvious redundant and useless tests, like `BOOST_CHECK(1 == 0+1);` in this test case, so a lot more could be changed, but maybe removing tests can be done in a follow-up, or not at all.\r\n\r\nBut none of this is a blocker, so fully up to you. Feel free to close this thread.",
      "created_at": "2024-09-05T16:45:20Z",
      "updated_at": "2024-09-05T16:45:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1745868679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745868679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "LEFT"
    }
  ]
}