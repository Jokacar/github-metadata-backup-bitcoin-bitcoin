{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432",
    "id": 1725528875,
    "node_id": "PR_kwDOABII585m2Xsr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29432.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29432.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d56d39de58f35a30d882d3559a0931fd8053b48b",
    "number": 29432,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Stratum v2 Template Provider (take 3)",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. Compared to #28983 it introduces EllSwift in the handshake and fixes various bugs. I used that opportunity to change the branch name, which makes testing against [SRI](https://github.com/stratum-mining/stratum) slightly easier. There's no conceptual discussion on #28983 so it can be ignored by reviewers.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\nThere's roughly four layers:\r\n\r\n1. Noise encryption #29346\r\n2. Messages and transport layer #30315\r\n3. Sv2Connman #30332\r\n4. The Template Provider (this PR)\r\n\r\n## What to test and review?\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review.\r\n\r\n- [ ] #29346\r\n- [ ] #30315\r\n- [ ] #30332\r\n  - [ ] #30205 \r\n- [ ] #29295\r\n\r\nThe following should be reviewed, and hopefully merged, even if we abandon the approach here in favor of a [sidecar](https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2156406658):\r\n\r\n- [ ] #30409\r\n- [ ] #30356\r\n- [ ] Custom signet mining improvement: #29032\r\n\r\nExploratory / experimental:\r\n\r\n- [ ] https://github.com/Sjors/bitcoin/pull/47\r\n\r\nRelated useful:\r\n\r\n- [ ] #29775 (most active sv2 testing is on testnet4)\r\n- [ ] #30209\r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Things left todo\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2allowip`\r\n- [ ] optional `-sv2cert`\r\n- [ ] limit number of connected clients\r\n\r\n### Template generation and updating\r\n\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
    "labels": [],
    "created_at": "2024-02-14T11:34:49Z",
    "updated_at": "2024-07-12T20:11:43Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "339046b9822c1d2f32d394a8e157c5750f101276",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:sv2",
      "ref": "sv2",
      "sha": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 241962,
        "default_branch": "sv2",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-12T15:19:25Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2024-07-11T14:15:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9b480f7a25a737c9c4ebc33401e94d66c2da9ec3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35632,
        "stargazers_count": 77172,
        "watchers_count": 77172,
        "size": 263019,
        "default_branch": "master",
        "open_issues_count": 685,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-12T19:50:16Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-12T20:14:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 5998,
    "deletions": 70,
    "changed_files": 62,
    "commits": 28,
    "review_comments": 15,
    "comments": 58
  },
  "events": [
    {
      "event": "mentioned",
      "id": 11800505244,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAK_XWuc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505244",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "subscribed",
      "id": 11800505253,
      "node_id": "SE_lADOABII585_NKHDzwAAAAK_XWul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505253",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "mentioned",
      "id": 11800505265,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAK_XWux",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505265",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "subscribed",
      "id": 11800505291,
      "node_id": "SE_lADOABII585_NKHDzwAAAAK_XWvL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505291",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "commented",
      "id": 1943589322,
      "node_id": "IC_kwDOABII585z2NHK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943589322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:52Z",
      "updated_at": "2024-07-12T20:11:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29432).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach NACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2132699185), [dergoegge](https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2156406658) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30437](https://github.com/bitcoin/bitcoin/pull/30437) (multiprocess: add bitcoin-mine test program by ryanofsky)\n* [#30409](https://github.com/bitcoin/bitcoin/pull/30409) (Introduce waitTipChanged() mining interface, replace RPCNotifyBlockChange and drop CRPCSignals by Sjors)\n* [#30356](https://github.com/bitcoin/bitcoin/pull/30356) (refactor: add coinbase constraints to BlockAssembler::Options by Sjors)\n* [#30203](https://github.com/bitcoin/bitcoin/pull/30203) (Enhance signet chain configuration in bitcoin.conf by BrandonOdiwuor)\n* [#30157](https://github.com/bitcoin/bitcoin/pull/30157) (Fee Estimation via Fee rate Forecasters by ismaelsadeeq)\n* [#30130](https://github.com/bitcoin/bitcoin/pull/30130) (contrib/signet/miner: increase miner search space by edilmedeiros)\n* [#30051](https://github.com/bitcoin/bitcoin/pull/30051) (crypto, refactor: add new KeyPair class by josibake)\n* [#29838](https://github.com/bitcoin/bitcoin/pull/29838) (Feature: Use different datadirs for different signets by BrandonOdiwuor)\n* [#29775](https://github.com/bitcoin/bitcoin/pull/29775) (Testnet4 including PoW difficulty adjustment fix by fjahr)\n* [#29686](https://github.com/bitcoin/bitcoin/pull/29686) (Update manpage descriptions by willcl-ark)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#28417](https://github.com/bitcoin/bitcoin/pull/28417) (contrib/signet/miner updates by ajtowns)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1943589322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 11801065208,
      "node_id": "LE_lADOABII585_NKHDzwAAAAK_Zfb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801065208",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T12:27:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1943673479,
      "node_id": "IC_kwDOABII585z2hqH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943673479",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T12:27:21Z",
      "updated_at": "2024-02-14T12:27:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21562393655</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1943673479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11801845077,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_cd1V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801845077",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T13:35:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11801877404,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_cluc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801877404",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T13:38:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11802374037,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_ee-V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11802374037",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:15:45Z"
    },
    {
      "event": "reviewed",
      "id": 1880414088,
      "node_id": "PRR_kwDOABII585wFNeI",
      "url": null,
      "actor": null,
      "commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-1880414088",
      "submitted_at": "2024-02-14T14:21:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11803774786,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_j09C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11803774786",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T15:50:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11806417923,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_t6QD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11806417923",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T20:01:07Z"
    },
    {
      "event": "reviewed",
      "id": 1881182173,
      "node_id": "PRR_kwDOABII585wII_d",
      "url": null,
      "actor": null,
      "commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-1881182173",
      "submitted_at": "2024-02-14T20:04:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11813556469,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALAJJD1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11813556469",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T10:38:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11815961938,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALASUVS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11815961938",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T14:05:04Z"
    },
    {
      "event": "commented",
      "id": 1946168171,
      "node_id": "IC_kwDOABII5850ACtr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1946168171",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T14:07:31Z",
      "updated_at": "2024-02-15T14:07:31Z",
      "author_association": "MEMBER",
      "body": "Added `m_tp_mutex` to `Sv2TemplateProvider`.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1946168171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 1946293497,
      "node_id": "IC_kwDOABII5850AhT5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1946293497",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T15:12:13Z",
      "updated_at": "2024-02-15T16:09:29Z",
      "author_association": "MEMBER",
      "body": "Bumping macOS to 14 on the CI does not help (tried in https://github.com/Sjors/bitcoin/pull/35). I also can't reproduce [this failure](https://github.com/bitcoin/bitcoin/actions/runs/7917147558/job/21612591013?pr=29432) on my own Intel macOS machines, not on 13.6.4 and not on 14.2.1. A `Sock` mock is probably the most robust solution, but it'd be nice to find another workaround.\r\n\r\nThis extra delay seems to do the trick for now: https://github.com/Sjors/bitcoin/commit/c8d10afd4d3152a665ab96f1a8d39293e02d8410\r\n\r\nAnother option to consider is using the functional test framework instead, since these are not really unit tests. However that involves implementing the sv2 noise protocol in Python and a bunch of other work to export transport functions to the functional test framework. If anyone feels up to that challenge, let me know...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1946293497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11817232843,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALAXKnL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11817232843",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T15:35:07Z"
    },
    {
      "event": "unlabeled",
      "id": 11818134285,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALAamsN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11818134285",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T16:43:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11828610995,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALBCkez",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11828610995",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T12:59:16Z"
    },
    {
      "event": "commented",
      "id": 1948355393,
      "node_id": "IC_kwDOABII5850IYtB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948355393",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T13:05:46Z",
      "updated_at": "2024-02-16T13:07:07Z",
      "author_association": "MEMBER",
      "body": "Added `m_clients_mutex` similar to the one in `Connman`. Fixed a deadlock on `g_best_block_mutex` when we receive a fresh block simultaneously from a peer and a client (`SubmitSolution` message).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948355393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 1948481906,
      "node_id": "IC_kwDOABII5850I3ly",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948481906",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:28:10Z",
      "updated_at": "2024-02-16T14:28:10Z",
      "author_association": "MEMBER",
      "body": "Windows test fails with:\r\n\r\n```\r\ntest/sv2_noise_tests.cpp(62): fatal error: in \"sv2_noise_tests/certificate_test\": critical check !alice_certificate.Validate(XOnlyPubKey(alice_authority_key.GetPubKey())) has failed\r\n```\r\n\r\nOdd. Part of https://github.com/bitcoin/bitcoin/pull/29346 so can be debugged there.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948481906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 11829822443,
      "node_id": "LE_lADOABII585_NKHDzwAAAALBHMPr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11829822443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:46:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1948517224,
      "node_id": "IC_kwDOABII5850JANo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948517224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:46:10Z",
      "updated_at": "2024-02-16T14:46:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21654131515</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948517224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11832607699,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALBR0PT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11832607699",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:01:59Z"
    },
    {
      "event": "commented",
      "id": 1949144664,
      "node_id": "IC_kwDOABII5850LZZY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1949144664",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:08:48Z",
      "updated_at": "2024-02-16T19:21:08Z",
      "author_association": "MEMBER",
      "body": "With https://github.com/stratum-mining/stratum/pull/737, https://github.com/stratum-mining/stratum/pull/752 (allowing me to drop 2469053d31f11f5edc766108d9a67ed7572d5b61), https://github.com/stratum-mining/stratum/pull/729 and https://github.com/stratum-mining/stratum/pull/722 merged this PR is now compatible with SRI's `main` branch. This should make testing a lot easier. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1949144664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 11834133232,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALBXorw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11834133232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T22:01:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11971076197,
      "node_id": "LE_lADOABII585_NKHDzwAAAALJiCBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11971076197",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:21:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1971893632,
      "node_id": "IC_kwDOABII5851iLWA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971893632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:21:42Z",
      "updated_at": "2024-02-29T20:21:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21668951058</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1971893632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11978493028,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALJ-Uxk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11978493028",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T11:51:46Z"
    },
    {
      "event": "commented",
      "id": 1973051164,
      "node_id": "IC_kwDOABII5851ml8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973051164",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T11:52:18Z",
      "updated_at": "2024-03-01T12:57:18Z",
      "author_association": "MEMBER",
      "body": "Rebased and hopefully satisfied new `bitcoin-config.h` linter rule.\r\n\r\nThe kind of incidental [failure](https://github.com/bitcoin/bitcoin/actions/runs/8110904735/job/22169119592?pr=29432#step:7:6067) in `sv2_template_provider_tests` can probably be avoided with the mock socket introduced / improved in ##26812.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1973051164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 11980388499,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALKFjiT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11980388499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T14:40:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12142044786,
      "node_id": "LE_lADOABII585_NKHDzwAAAALTuOZy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12142044786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T06:23:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2002328172,
      "node_id": "IC_kwDOABII5853WRps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002328172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T06:23:38Z",
      "updated_at": "2024-03-17T06:23:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22448274349</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2002328172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12158474796,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALUs5os",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12158474796",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T20:01:37Z"
    },
    {
      "event": "commented",
      "id": 2004835535,
      "node_id": "IC_kwDOABII5853f1zP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004835535",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T20:01:40Z",
      "updated_at": "2024-03-18T20:01:40Z",
      "author_association": "MEMBER",
      "body": "Rebased after #27375. Changed the default binding from `0.0.0.0` to `127.0.0.1` to make it abundantly clear that it's currently unsafe to expose this to the big bad internet. The previous behaviour can be achieved with the new `-sv2bind=0.0.0.0`\r\n\r\nFinally, we immediately listen for new client connections. Previously we'd wait for IBD to finish. However we hold off on sending template updates. Except for Signet, because you may be the only miner and after a day of not mining the chain would get stuck.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2004835535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 12162389790,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALU71ce",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12162389790",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T02:07:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12188469049,
      "node_id": "LE_lADOABII585_NKHDzwAAAALWfUc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188469049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T17:11:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12212430559,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALX6ubf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12212430559",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T08:27:26Z"
    },
    {
      "event": "unlabeled",
      "id": 12212954706,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALX8uZS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12212954706",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T09:13:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12327492733,
      "node_id": "LE_lADOABII585_NKHDzwAAAALexpx9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12327492733",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-02T14:58:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12376786837,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALhtseV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12376786837",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T16:21:11Z"
    },
    {
      "event": "unlabeled",
      "id": 12377444682,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALhwNFK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12377444682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T17:33:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12380019020,
      "node_id": "LE_lADOABII585_NKHDzwAAAALh6BlM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12380019020",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T23:17:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2040755436,
      "node_id": "IC_kwDOABII5855o3Ts",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2040755436",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T23:17:21Z",
      "updated_at": "2024-04-05T23:17:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23496058028</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2040755436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 12563414810,
      "node_id": "LE_lADOABII585_NKHDzwAAAALs1n8a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12563414810",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-22T17:28:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12670399638,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALzNvSW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12670399638",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T13:26:24Z"
    },
    {
      "event": "unlabeled",
      "id": 12671754538,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALzS6Eq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12671754538",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T15:28:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12684408293,
      "node_id": "LE_lADOABII585_NKHDzwAAAAL0DLXl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12684408293",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:39:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12686959559,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAL0M6PH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12686959559",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T17:38:08Z"
    },
    {
      "event": "unlabeled",
      "id": 12687821094,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAL0QMkm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12687821094",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T18:58:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2092515772,
      "node_id": "IC_kwDOABII5858uUG8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2092515772",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T08:05:21Z",
      "updated_at": "2024-05-03T08:05:21Z",
      "author_association": "MEMBER",
      "body": "(ignoring CI failure, as I mentioned above I plan on making the tests more robust after #26812)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2092515772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "referenced",
      "id": 12696609675,
      "node_id": "REFE_lADOABII585_NKHDzwAAAAL0xuOL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12696609675",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2125fc56163ceaddfadbc78ad0d0da5b1a99a8fa",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/2125fc56163ceaddfadbc78ad0d0da5b1a99a8fa",
      "created_at": "2024-05-03T13:38:28Z"
    },
    {
      "event": "labeled",
      "id": 12814813514,
      "node_id": "LE_lADOABII585_NKHDzwAAAAL70olK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12814813514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T10:12:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12982899103,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMF11Gf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12982899103",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T09:19:46Z"
    },
    {
      "event": "commented",
      "id": 2139129818,
      "node_id": "IC_kwDOABII585_gIfa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2139129818",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T09:20:05Z",
      "updated_at": "2024-05-30T09:20:05Z",
      "author_association": "MEMBER",
      "body": "I dropped 3559085dcc9ee687c347383a0c2a63f3ea16f001 and 3f4c1d1e515a840c4b119e3ba65a8391d4fc7f6b which introduced `common/transport.h`. It's difficult to maintain such a large diff and it's currently causing a link error. Here's a branch with both of them: https://github.com/Sjors/bitcoin/tree/2024/05/transport\r\n\r\nI'd still like to move Transport out of `libbitcoin_node` into `libbitcoin_common`, but this is probably better done in a parallel PR.\r\n\r\nAt the request of people testing Stratum v2 I'm adding testnet4 to this branch, but bear in mind it's not final.\r\n\r\nI still need to do some manual testing on this last push, so be careful.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2139129818",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12983075908,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMF2gRE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12983075908",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T09:31:50Z"
    },
    {
      "event": "unlabeled",
      "id": 12984091971,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMF6YVD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12984091971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T10:52:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13081787453,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMLvDw9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13081787453",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T14:20:02Z"
    },
    {
      "event": "commented",
      "id": 2154958567,
      "node_id": "IC_kwDOABII586Acg7n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2154958567",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T14:25:44Z",
      "updated_at": "2024-06-07T14:25:44Z",
      "author_association": "MEMBER",
      "body": "Updated to use the interface proposed in #30200. This also fixes a small bug: `-blockmintxfee` and `-blockmaxweight` are no longer ignored. When the latter argument is unset, by default blocks have a `4000` byte safety margin, just like with `getblocktemplate`.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2154958567",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13081947727,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMLvq5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13081947727",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T14:32:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13082414551,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMLxc3X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13082414551",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T15:11:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13082463910,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMLxo6m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13082463910",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T15:16:23Z"
    },
    {
      "event": "labeled",
      "id": 13138064576,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMPFvTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138064576",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T22:34:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13203001929,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMS9dJJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13203001929",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T15:27:09Z"
    },
    {
      "event": "commented",
      "id": 2176387707,
      "node_id": "IC_kwDOABII586BuQp7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2176387707",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T15:29:17Z",
      "updated_at": "2024-06-18T15:29:17Z",
      "author_association": "MEMBER",
      "body": "Rebased, squashed Mining interface usage into the existing commits and fixed the usage of `coinbase_output_max_additional_size`.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2176387707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13203718814,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMTAMKe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13203718814",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T16:23:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13204115115,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMTBs6r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13204115115",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T16:59:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13204374147,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMTCsKD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13204374147",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T17:24:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13205010608,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMTFHiw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13205010608",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T18:27:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13229249077,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMUhlI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13229249077",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T13:27:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13229691460,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMUjRJE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13229691460",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T13:56:13Z"
    },
    {
      "event": "commented",
      "id": 2180775603,
      "node_id": "IC_kwDOABII586B-_6z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2180775603",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T13:56:48Z",
      "updated_at": "2024-06-20T13:56:48Z",
      "author_association": "MEMBER",
      "body": "I split the commit that introduces `sv2_messages.h` in two parts:\r\n\r\n* 9fcc95d837dbd20c1003b4c2d3c90b202e0629bd: introduces a single simple message `Sv2CoinbaseOutputDataSizeMsg` and the plumbing it needs\r\n* 00d1408cc7cb263fb6e956649a41e0b02e2378aa: adds the other messages\r\n\r\nThis makes it easier to introduce `Sv2Transport` in a separate PR, which only needs the first commit. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2180775603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13231425155,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMUp4aD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13231425155",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T15:58:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2132699185,
      "node_id": "PRR_kwDOABII585_Hmgx",
      "url": null,
      "actor": null,
      "commit_id": "6f1e0c9721cf29647efb4d2f515e587cc611726f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I'm strongly in favour of having Template Provider (TP) support for SV2, so thank you for your hard work on this @Sjors. I am very concerned about the scope of this approach though, and therefore leaning to an Approach NACK (but open to being persuaded otherwise).\r\n\r\nFrom my reading of the discussion in #27854, it seems the main technical hurdle to just having a separate `sv2tpd` daemon using `bitcoind`'s existing interfaces is `getblocktemplate`s having serious limitations as outlined [here](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587650914). That's a sensible concern, and one we need to address. \r\n\r\nCan the `getblocktemplate` concerns not (at least largely) be addressed by upgrading the existing RPC method, or adding a new one that's minimal in scope and not SV2 opinionated? I understand this will still be a pretty significant overhaul, but probably still significantly smaller than what is proposed at the moment?\r\n\r\nI'm happy to be convinced otherwise, but as it stands, implementing a separate `sv2tpd` process that uses `bitcoind`s (minimally) improved interfaces seems like a much more sensible approach to me, and afaict would still address all points listed in https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md#advantage-over-getblocktemplate-rpc . I'm curious to hear your thoughts on this.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2132699185",
      "submitted_at": "2024-06-21T13:45:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "labeled",
      "id": 13243928346,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMVZk8a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13243928346",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:11:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2183041904,
      "node_id": "IC_kwDOABII586CHpNw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183041904",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:11:02Z",
      "updated_at": "2024-06-21T16:11:56Z",
      "author_association": "MEMBER",
      "body": "> upgrading the existing RPC method, or adding a new one that's minimal in scope and not SV2 opinionated\r\n\r\nI don't think our RPC is suitable for this, because it's inherently poll based. We want to push out new block templates as soon as something better is found.\r\n\r\nAnother major change compared to the `getblocktemplate` RPC is that the TP holds on to templates for a while (currently until after the next block is found, though could be shorter). It needs to do this because solutions for custom block templates have to be submitted by the node that created it. The pool will try, but it might fail if it's missing transactions.\r\n\r\n> implementing a separate `sv2tpd` process\r\n\r\nThis PR also aims to run in a separate process, eventually anyway.  I guess you're saying it should be separate software altogether, like SRI?\r\n\r\nIt would move some of the complexity from this PR elsewhere, mainly the encryption and transport layers. It could poll once a second, we'd need changes to hold on to previously generated templates, a new RPC to submit a solution that refers to a previous template and a few other things.\r\n\r\nAs a practical matter I'm not sure who would be implementing that; SRI is already a pretty complicated codebase with a shortage of developer resources. Some people have been testing this branch in combination with SRI and seem quite happy with it, despite the code being nowhere near merge-ready. But in principle it's possible.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183041904",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13245066900,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMVd66U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13245066900",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:58:04Z"
    },
    {
      "event": "commented",
      "id": 2183111646,
      "node_id": "IC_kwDOABII586CH6Pe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183111646",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:58:08Z",
      "updated_at": "2024-06-21T16:58:08Z",
      "author_association": "MEMBER",
      "body": "Rebased after #30314 and #30202. Incorporated the (light) transport refactor from #30315 to make sure that didn't break anything.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183111646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13245253050,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMVeoW6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13245253050",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T17:17:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2183182799,
      "node_id": "IC_kwDOABII586CILnP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183182799",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T17:48:14Z",
      "updated_at": "2024-06-21T17:49:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't think our RPC is suitable for this, because it's inherently poll based. We want to push out new block templates as soon as something better is found.\r\n\r\nWhat about a combination of extending the zmq and rest interface and/or using `longpollid`, as suggested e.g. [here](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219)? It seems like that would already improve things significantly, without having to add the encryption and transport layer?\r\n\r\n> It needs to do this because solutions for custom block templates have to be submitted by the node that created it. The pool will try, but it might fail if it's missing transactions.\r\n\r\nI'm not sure I understand this. This PR is not an sv2 discussion, so if my understanding is wrong we don't need to talk about it here, but are you saying the pool will approve a proposed block template without having/keeping all the transactions? That seems undesired?\r\n\r\nRegardless, I'm not sure the TP necessarily needs to hold on to block templates when `sv2tpd` caches all block template transactions and add any missing ones back to core through RPC before submitting a block? Perhaps the existing interfaces aren't sufficient currently, but then again - perhaps we could improve them instead of wholesale implementing sv2 logic?\r\n\r\n> I guess you're saying it should be separate software altogether\r\n\r\nYes, a separate project and a separate process would be my strong preference. Again, I do think it's important Bitcoin Core supports SV2 well. But if the `bitcoind` interfaces are lacking for `sv2tpd` to be a separate project, I think we should first exhaust the possibilities of improving the interfaces before just incorporating (part of) the downstream project into Bitcoin Core.\r\n\r\n> As a practical matter I'm not sure who would be implementing that\r\n\r\nWouldn't it be more straightforward to implement this as a separate `sv2tpd` daemon versus incorporating it into Core, giving more freedom in terms of language, dependencies, review, release process, ...?",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183182799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2183201374,
      "node_id": "IC_kwDOABII586CIQJe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183201374",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:02:01Z",
      "updated_at": "2024-06-21T18:02:01Z",
      "author_association": "MEMBER",
      "body": "> But if the bitcoind interfaces are lacking for sv2tpd to be a separate project, I think we should first exhaust the possibilities of improving the interfaces before just incorporating (part of) the downstream project into Bitcoin Core.\r\n\r\nFWIW, my view is that indeed the current Bitcoin Core interfaces are inadequate for implementing template providers, and while it's probably possible to make a number of improvements to existing ones to improve the situation, the result will either be far from ideal still (RPC is not binary, ZMQ is only one-directional, ...), or quite different from anything we have now. And if we're going to make a substantially different interface for the purpose of template providing, it probably makes sense to just pick Sv2 to be that interface as it's designed exactly for that purpose. The encryption aspect of Sv2 isn't necessary for that, but if all `sv2tpd` would do is be an Sv2 encrypting proxy, it might be logistically just simpler to have Bitcoin Core also do the encryption aspect.\r\n\r\nSo this doesn't exclude the possibility that future block template providing protocols be implemented in external proxy servers, which then talk still talk Sv2 to Bitcoin Core, if that is still appropriate.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183201374",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2183273298,
      "node_id": "IC_kwDOABII586CIhtS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183273298",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:40:44Z",
      "updated_at": "2024-06-21T18:55:44Z",
      "author_association": "MEMBER",
      "body": "> I'm not sure I understand this. This PR is not an sv2 discussion, so if my understanding is wrong we don't need to talk about it here, but are you saying the pool will approve a proposed block template without having/keeping all the transactions? That seems undesired?\r\n\r\nThe [Job Declaration Protocol](https://github.com/stratum-mining/sv2-spec/blob/main/06-Job-Declaration-Protocol.md) has a param `async_mining_allowed` which, if set, allows miners to immediately submit work even before the template has been approved. Afaik SRI currently just hardcodes this to true for simplicity (cc @fi3).\r\n\r\nApproval takes time, because we have to send the pool any transactions it's missing, and it needs to check those (SRI currently only checks that all transactions are present, no additional checks - I suspect that's a can of worms on its own, since there may be conflicts with the pool node mempool). During this time you would either have to mine on a pool template, or solo mine.\r\n\r\nRegardless of the merits of async mining, it's more robust for the miner to broadcast a found block themselves (this is done via the `SubmitSolution` message).\r\n\r\nExample of this actually going wrong (in testing): [#912](https://github.com/stratum-mining/stratum/issues/912)\r\n\r\n> I'm not sure the TP necessarily needs to hold on to block templates when sv2tpd caches all block template transactions and add any missing ones back to core through RPC before submitting a block?\r\n\r\nMaybe. But we also need to hold on to everything that was in the mempool at the time (an aspect I haven't thoroughly tested yet). From what I've seen in SRI, the Job Declarator Server (pool side) implements some sort of pseudo-mempool for that purpose.\r\n\r\n> Wouldn't it be more straightforward to implement this as a separate sv2tpd daemon versus incorporating it into Core\r\n\r\nI'm not sure if it is. The two most practical approaches are improving this PR vs. expanding SRI. Building something from scratch is probably more work. Using a language other than Rust of c++ means re-writing the Noise implementation and other reusable code. The Bitcoin Core codebase has some very useful building blocks, e.g. the Transport class, BIP324 implementation (which we use parts of), well tested TCP socket handling code (unfortunately very tightly coupled with p2p, but refactoring that can be orthogonally useful), process separation in the pipeline (so it can crash without taking the node down - though so can a separate tool), good CI, and deterministic builds (so I can  easily and relatively safely ship this PR as its own binary).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183273298",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "mentioned",
      "id": 13246000270,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMVheyO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13246000270",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:40:46Z"
    },
    {
      "event": "subscribed",
      "id": 13246000275,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMVheyT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13246000275",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:40:46Z"
    },
    {
      "event": "labeled",
      "id": 13246912266,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMVk9cK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13246912266",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T20:34:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2183417939,
      "node_id": "IC_kwDOABII586CJFBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183417939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T20:34:14Z",
      "updated_at": "2024-06-21T20:34:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26528227399</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2183417939",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 13269880861,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMW8lAd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13269880861",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T17:52:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13272945563,
      "node_id": "REFE_lADOABII585_NKHDzwAAAAMXIROb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13272945563",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "323b0acfcb9380ce4b3c12a3d0b341d7bb3bfe08",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/323b0acfcb9380ce4b3c12a3d0b341d7bb3bfe08",
      "created_at": "2024-06-24T23:29:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13280370879,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMXkmC_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13280370879",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T12:17:31Z"
    },
    {
      "event": "commented",
      "id": 2188786279,
      "node_id": "IC_kwDOABII586Cdjpn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2188786279",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T12:18:48Z",
      "updated_at": "2024-06-25T12:18:48Z",
      "author_association": "MEMBER",
      "body": "Rebased after #30200 landed! 🎉 Reorganized commits so it's now based on #30332.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2188786279",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13280548790,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMXlRe2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13280548790",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T12:30:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2189003762,
      "node_id": "IC_kwDOABII586CeYvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2189003762",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T13:43:18Z",
      "updated_at": "2024-06-25T13:43:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> ...it probably makes sense to just pick Sv2 to be that interface as it's designed exactly for that purpose\r\n\r\nI agree we shouldn't reinvent the wheel and just implement the parts of sv2 that we need to improve our `getblocktemplate` functionality. I would just prefer to be much more strict in cutting out all the parts that Core doesn't require to support sv2 downstream, i.e. I don't think the \"out-of-the-box\" aspect should at at all be a priority when that can reasonably be addressed with external tooling.\r\n\r\n> ...it might be logistically just simpler to have Bitcoin Core also do the encryption aspect.\r\n\r\nIt probably would be, but I'd much rather we keep the scope of Core limited. Where we draw the line is up for debate, but tooling for a highly specialized process (I think we're only expecting a small minority of nodes to be running SV2?) that _can_ be kept outside of Core absolutely should be, in my view.\r\n\r\n> ...well tested TCP socket handling code (unfortunately very tightly coupled with p2p, but refactoring that can be orthogonally useful), process separation in the pipeline (so it can crash without taking the node down - though so can a separate tool), good CI, and deterministic builds (so I can easily and relatively safely ship this PR as its own binary).\r\n\r\nAs much as I sympathize that setting up a new project includes a bunch of painful overhead that requires even more scarce developer resources, I don't think any of these are good reasons to bundle more code than necessary into Core, where it has a massive maintenance cost - even if it's less visible now.\r\n\r\n---\r\n\r\nI think I'm going to withdraw from the conceptual discussion until I have more in-depth knowledge of the relevant code and protocol. To summarize: I think Core should have good support for being a SV2 Template Provider, and implementing parts of SV2 to do that makes sense. It still seems to me like the current approach is too invasive and too much of an unnecessary maintenance burden on this project.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2189003762",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13282652327,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMXtTCn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13282652327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T14:41:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2189207922,
      "node_id": "IC_kwDOABII586CfKly",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2189207922",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T15:05:22Z",
      "updated_at": "2024-06-25T15:05:22Z",
      "author_association": "MEMBER",
      "body": "> a highly specialized process (I think we're only expecting a small minority of nodes to be running SV2?)\r\n\r\nI'd like to see a lot more users mine, and do so with their own block template. In order to achieve that we have to lower the barrier to entry.\r\n\r\nThere's a generic case to be made for reducing the scope of Bitcoin Core, and not further increasing it. I think we still lack the tooling for this. Something like a plugin system, or a convenient way to ship a release tag plus custom functionality.\r\n\r\nHaving the user download and install two things is fine in theory, as long as it just works(tm). HWI is a working example of that, but that specific approach won't work here.\r\n\r\nI'm not very keen on starting from scratch with a new approach myself, but I can test and review alternative approaches that others work on.\r\n\r\nFor now I plan to keep rebasing this PR, occasionally releasing a binary. As long as I can get some prerequisite refactoring merged, that should be sustainable for a while.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2189207922",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 13324325167,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMaMREv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13324325167",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T23:01:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13327364679,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMaX3JH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13327364679",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T06:53:59Z"
    },
    {
      "event": "unlabeled",
      "id": 13327601564,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMaYw-c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13327601564",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T07:16:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2196451678,
      "node_id": "IC_kwDOABII586C6zFe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2196451678",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T09:00:10Z",
      "updated_at": "2024-06-28T09:00:10Z",
      "author_association": "MEMBER",
      "body": "I opened #30356 with some `BlockAssembler::Options` and mining interface refactoring that should make this PR smaller. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2196451678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13333293635,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMauepD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13333293635",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T15:25:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13353445500,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMb7Wh8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13353445500",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T15:45:44Z"
    },
    {
      "event": "labeled",
      "id": 13355364646,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMcCrEm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13355364646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T18:56:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2200812826,
      "node_id": "IC_kwDOABII586DLb0a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2200812826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T18:56:32Z",
      "updated_at": "2024-07-01T18:56:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26899492397</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2200812826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13371188870,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMc_CaG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13371188870",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T20:05:44Z"
    },
    {
      "event": "commented",
      "id": 2204312170,
      "node_id": "IC_kwDOABII586DYyJq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2204312170",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T20:15:02Z",
      "updated_at": "2024-07-02T20:15:02Z",
      "author_association": "MEMBER",
      "body": "I refactored `TemplateProvider` to move the lower level connection handling code into the newly introduced `Sv2Connman` from #30332.\r\n\r\nI noticed a deadlock that was already present in the previous push (f7bf25d12d73471287c8758482014e2a429b4ff7), where if you use Bitcoin QT and start mining, an RPC call (at least to `getblockchaininfo`) will freeze and new blocks won't be submitted.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2204312170",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 13372287066,
      "node_id": "LE_lADOABII585_NKHDzwAAAAMdDOha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13372287066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T21:59:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2155690761,
      "node_id": "PRR_kwDOABII586AfTsJ",
      "url": null,
      "actor": null,
      "commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "lozanopo",
        "id": 123916116,
        "node_id": "U_kgDOB2LPVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/123916116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lozanopo",
        "html_url": "https://github.com/lozanopo",
        "followers_url": "https://api.github.com/users/lozanopo/followers",
        "following_url": "https://api.github.com/users/lozanopo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lozanopo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lozanopo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lozanopo/subscriptions",
        "organizations_url": "https://api.github.com/users/lozanopo/orgs",
        "repos_url": "https://api.github.com/users/lozanopo/repos",
        "events_url": "https://api.github.com/users/lozanopo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lozanopo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2155690761",
      "submitted_at": "2024-07-03T07:37:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "reviewed",
      "id": 2156406658,
      "node_id": "PRR_kwDOABII586AiCeC",
      "url": null,
      "actor": null,
      "commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thank you for all the work you've put into this.\r\n\r\nApproach NACK\r\n\r\nI refuse to believe that re-implementing the entire networking stack, adding a noise protocol implementation and a new networking protocol is the best solution to having a non-RPC/non-poll based template provider.\r\n\r\nAfter looking at this PR, I would propose the following interface additions to Bitcoin Core:\r\n\r\n* We add a new zmq publisher, e.g. `-zmqpubtemplate`, which publishes block templates as soon as they become available.\r\n* We add a new rpc `updatetemplatepub` to configure the template publisher, e.g. for setting the coinbase output data size.\r\n\r\nThis should address the two main shortcomings of the bitcoin core interfaces (non-binary, poll-based).\r\n\r\nA separate piece of software not maintained by us (e.g. `stratumv2d`) uses these interfaces to implement stratum v2. Template caching, encryption, and anything else stratum v2 related is implemented here.\r\n\r\nI don't see anything in the previous discussion here that wouldn't make this work but feel free to point out what I am missing.\r\n\r\n![stratumv2](https://github.com/bitcoin/bitcoin/assets/8077169/55223f21-3d4d-49e4-976e-814c564b146e)\r\n\r\n> As a practical matter I'm not sure who would be implementing that; SRI is already a pretty complicated codebase with a shortage of developer resources.\r\n\r\nIf stratum v2 is so great, then surely someone is willing to implement this. There are at least two new stratum v2 pools that should probably feel responsible for this. I don't see why this burden should fall on this project, which is already extremely bottle necked. \r\n\r\nFrom https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md#advantage-over-getblocktemplate-rpc:\r\n> Encrypted, safer (for now: less unsafe) to expose on the public internet\r\n\r\nI would strongly discourage us from expanding on public facing interfaces that process untrusted inputs. We are busy enough testing the existing interfaces.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2156406658",
      "submitted_at": "2024-07-03T13:28:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "commented",
      "id": 2208466255,
      "node_id": "IC_kwDOABII586DooVP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2208466255",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T09:00:08Z",
      "updated_at": "2024-07-04T11:03:42Z",
      "author_association": "MEMBER",
      "body": "> * We add a new zmq publisher, e.g. `-zmqpubtemplate`, which publishes block templates as soon as they become available.\r\n> * We add a new rpc `updatetemplatepub` to configure the template publisher, e.g. for setting the coinbase output data size.\r\n\r\nThis approach would mostly work. I opened a tracking issue on the SRI side: https://github.com/stratum-mining/stratum/issues/1032. Two downsides that come to mind (in addition to the need to install a separate tool):\r\n\r\n1. it limits the number of connected stratum clients to 1, since there's only one ZMQ template feed (that seems ok for the standard suggested sv2 configurations) \r\n2. it precludes the ability to make the template provider public facing, even with an external tool\r\n\r\n> I refuse to believe that re-implementing the entire networking stack, adding a noise protocol implementation and a new networking protocol is the best solution to having a non-RPC/non-poll based template provider.\r\n\r\nI think much of the complexity comes from that we don't have a stateful alternative to RPC, nor an authenticated alternative to p2p. This PR builds that from scratch. If BIP324, along with an authentication mechanism, had existed before Stratum v2 then it could have been built on top of that. In that case the Template Provider would just add a few (authenticated) p2p messages.\r\n\r\nIt's possible that authenticated p2p / stateful RPC has more use cases than just Stratum v2. Perhaps external wallets, lightning nodes, etc could use it - by adding a new stratum subprotocol. They could then e.g. subscribe to mempool updates for a set `scriptPubKeys`, something that currently requires painful mempool polling or using our wallet and then polling it.\r\n\r\nBut even if such use cases existed, maybe we'd want a _different_ protocol for those, based on BIP324 - or even just unix sockets since these examples typically run on the same machine. So even that might not justify the complexity. A mobile wallet or lightning node that connects to your home node could use this.\r\n\r\n> If stratum v2 is so great, then surely someone is willing to implement this. There are at least two new stratum v2 pools that should probably feel responsible for this.\r\n\r\nI think it's just one new pool: DMND.work (they have someone working on SRI). And one existing pool Braiins (their production firmware is about a year behind on spec changes). It remains to be seen if adopting stratum v2 gives them any business advantage. My impression is that if we leave it to just market forces, most pools will simply fix the encryption problem of stratum v1, which has clear market value, and ignore the decentralisation features that stratum v2 packages with that fix.\r\n\r\nThat's not to say that Bitcoin Core must carry this burden, but if some open source devs don't make it a reality, the status quo of very few pools won't change - at least until something bad happens censorship wise.\r\n\r\n---\r\n\r\nAdditionally we'd need a `submitsolution` RPC, and the node needs to hold on to previously generated templates. This replaces the \"push blocks to :8333\" in your diagram. It's a much shorter message than a full block, and at least in the current design the Template Provider doesn't (need to) know the full block. This your design already requires RPC access, adding `submitsolution` and having the TP software call it wouldn't be a difficult addition.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2208466255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2209018643,
      "node_id": "IC_kwDOABII586DqvMT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2209018643",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T13:37:24Z",
      "updated_at": "2024-07-04T13:37:24Z",
      "author_association": "MEMBER",
      "body": "> it limits the number of connected stratum clients to 1, since there's only one ZMQ template feed (that seems ok for the standard suggested sv2 configurations)\r\n\r\nI'm sure we could design the interface in a way that allows for more than one template config (if needed), e.g. the new rpc could accept a list of template configs and the zmq publisher publishes a template for each config.\r\n\r\n> it precludes the ability to make the template provider public facing, even with an external tool\r\n\r\nWhy? In my mind it would be perfectly safe to expose \"startumv2d\" publicly (while the bitcoin core interface remains non-public). I just don't think that expanding the public interfaces of Bitcoin Core is a good idea in general (unless absolutely necessary).\r\n\r\n> Additionally we'd need a submitsolution RPC, and the node needs to hold on to previously generated templates.\r\n\r\nI was thinking that Bitcoin Core does not remember the templates it pushed but \"stratumv2d\" would. That seems plausible to me, looking at the current implementation here (the templates are a few MB in size and the cache only holds on to a few of them). When a sv2 client submits a solution, stratumv2d gets the corresponding template from its cache and publishes it to Bitcoin Core on port :8333.\r\n\r\n> It's a much shorter message than a full block, and at least in the current design the Template Provider doesn't (need to) know the full block\r\n\r\nSo in my design the short messages would still happen between \"stratumv2d\" and its clients, while the full block is pushed to the bitcoin core node (or any number of other nodes), essentially broadcasting the block (which happens in any case).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2209018643",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2209097995,
      "node_id": "IC_kwDOABII586DrCkL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2209097995",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T14:11:37Z",
      "updated_at": "2024-07-04T14:11:37Z",
      "author_association": "MEMBER",
      "body": "> the new rpc could accept a list of template configs and the zmq publisher publishes a template for each config.\r\n\r\nI suppose the external application could forward each to the right client.\r\n\r\n> > it precludes the ability to make the template provider public facing, even with an external tool\r\n> \r\n> Why?\r\n\r\nBecause each consumer of this interface will have its own `coinbase_tx_additional_output_size`, which it can't communicate without RPC access. This can be avoided by picking a single size for everyone, e.g. the current default of 4000, which might be acceptable.\r\n\r\n> When a sv2 client submits a solution, stratumv2d gets the corresponding template from its cache\r\n\r\nThis implies that stratumv2d has access to the all the transactions in the block, which it doesn't in the current design. The [NewTemplate](https://github.com/stratum-mining/sv2-spec/blob/main/07-Template-Distribution-Protocol.md#72-newtemplate-server---client) message uses a merkle path. Imo the new ZQM interface should send the same information and no more, especially if we want to send multiple messages for each requested `coinbase_tx_additional_output_size` (and sigops) permutation.\r\n\r\nThe Template Provider application can then use the existing `-zmqpubhashblock` feed to send `SetNewPrevHash` efficiently.\r\n\r\nIn an alternative design the Template Provider could hold on to the entire proposed block. This would take more time, because it has to parse the whole block and reconstruct the merkle path it needs for `NewTemplate`.\r\n\r\nSending it back over p2p doesn't seem like a good idea, because it makes the configuration more complicated, making the Template Provider software connect over p2p, rpc and zmq, and requiring the user to whitelist that inbound p2p connection. And because finding a block is an extremely rare event, it would have to keep the p2p connection alive and make sure it actually works. It seems safer to use the `submitblock` RPC despite its overhead.\r\n\r\nThe number of full blocks to hold on to could also be quite large. Once cluster mempool is in place, we can push out new templates for every incremental sat in fees - the bottlenecks are the overhead an ASIC might have to switch work and for the Job Declarator Server to inspect it.\r\n\r\nTo take a perhaps unrealistic scenario: if we push one template per second for ten connected clients and there's one hour between blocks, that's 140 GB. Whereas Bitcoin Core can hold on to the same number of templates with much less overhead: CTransactionRef pointers plus holding on to included transactions that aren't in the mempool anymore.\r\n\r\nIn both approaches either we or the Template Provider have to be a bit smarter though, to let go of templates N seconds after we've sent a new one (with some allowance for the possibly that not all downstream machines pick up on every single new template). Otherwise large mempool churn could cause an OOM.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2209097995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2209289584,
      "node_id": "IC_kwDOABII586DrxVw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2209289584",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T16:06:16Z",
      "updated_at": "2024-07-04T16:06:16Z",
      "author_association": "MEMBER",
      "body": "There's also the `RequestTransactionData(.Success)` message flow to consider. This message is separate from `NewTemplate` so that a miner can immediately start hashing while the back and forth the Job Declarator Server is happening. \r\n\r\nIn the approach where the Template Provider software only gets the details it needs to send a `NewTemplate` message, we'll need an additional RPC method of ZMQ feed to provide the information needed in a `RequestTransactionData.Success` message. In the approach where we give it the whole block template, then that's already included.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2209289584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "reviewed",
      "id": 2159373709,
      "node_id": "PRR_kwDOABII586AtW2N",
      "url": null,
      "actor": null,
      "commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "lozanopo",
        "id": 123916116,
        "node_id": "U_kgDOB2LPVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/123916116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lozanopo",
        "html_url": "https://github.com/lozanopo",
        "followers_url": "https://api.github.com/users/lozanopo/followers",
        "following_url": "https://api.github.com/users/lozanopo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lozanopo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lozanopo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lozanopo/subscriptions",
        "organizations_url": "https://api.github.com/users/lozanopo/orgs",
        "repos_url": "https://api.github.com/users/lozanopo/repos",
        "events_url": "https://api.github.com/users/lozanopo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lozanopo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2159373709",
      "submitted_at": "2024-07-04T18:14:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "reviewed",
      "id": 2159374061,
      "node_id": "PRR_kwDOABII586AtW7t",
      "url": null,
      "actor": null,
      "commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "lozanopo",
        "id": 123916116,
        "node_id": "U_kgDOB2LPVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/123916116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lozanopo",
        "html_url": "https://github.com/lozanopo",
        "followers_url": "https://api.github.com/users/lozanopo/followers",
        "following_url": "https://api.github.com/users/lozanopo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lozanopo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lozanopo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lozanopo/subscriptions",
        "organizations_url": "https://api.github.com/users/lozanopo/orgs",
        "repos_url": "https://api.github.com/users/lozanopo/repos",
        "events_url": "https://api.github.com/users/lozanopo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lozanopo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2159374061",
      "submitted_at": "2024-07-04T18:15:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "commented",
      "id": 2210448369,
      "node_id": "IC_kwDOABII586DwMPx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2210448369",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T08:37:07Z",
      "updated_at": "2024-07-05T08:37:07Z",
      "author_association": "MEMBER",
      "body": "A different approach that stays closer to the original design but does not add noise encryption and a dedicated network stack:\r\n\r\n- (Maybe) introduce `SocketTransport` to enable p2p messages over unix sockets with less overhead (but how to handle multiple connections?)\r\n- Add a whitelist permission `mining`\r\n- Peers with that permission have an extra `CNode` field (akin to `Sv2Client`)\r\n  - `m_coinbase_output_data_size`\r\n- We send these peers a `HEADERS` message for every tip update (equivalent to `SetNewPrevHash`)\r\n- Add the following p2p messages (`NetMsgType`):\r\n  - `cb-constr` (equivalent of `CoinbaseOutputDataSize`)\r\n  - `template` (equivalent of `NewTemplate`)\r\n  - `gettempltxs` (equivalent of `RequestTransactionData`)\r\n  - `templtxs` (equivalent of `RequestTransactionData.Success`)\r\n  - `solution` (equivalent of `SubmitSolution`)\r\n- A separate piece of software translates these p2p messages to their corresponding stratum v2 messages and adds noise encryption.\r\n\r\nOnce we feel confident enough to make these p2p messages public facing, we can simply drop the `mining` whitelist requirement - or encourage users to set it to `0.0.0.0`. Additionally that would be the time to make a BIP for the new p2p messages.\r\n\r\nOn the SRI side this may be simpler to implement; it just needs to convert between our p2p messages and their stratum v2 equivalent.\r\n\r\nFor a user this is easier to configure (though we still have the downside of having to install a separate piece of software, configure it and keep it running).\r\n\r\nA few things may make it (a lot) more complicated:\r\n\r\n- If we don't add `SocketTransport`, it will instead need to speak V1Transport or (preferably) V2Transport. Rust-bitcoin has a [BIP340](https://github.com/rust-bitcoin/bip324) but afaik it hasn't been integrated with their p2p message handling, see https://github.com/rust-bitcoin/rust-bitcoin/discussions/2959.\r\n\r\n- It needs to implement our p2p handshake and keepalive stuff, though `SocketTransport` could dispense with some of that. I don't know how well the rust-bitcoin v1 p2p message handling works, e.g. if it takes care of this stuff. RPC is much easier to integrate with, not sure about ZMQ.\r\n\r\n- It needs to maintain a mapping between its incoming stratum v2 clients and p2p connections to the node. Especially for a public facing Template Provider. For that `SocketTransport` would need a way to represent multiple connections, either by connecting via multiple sockets or maybe by prefixing each message with a peer id.\r\n\r\n@dergoegge's proposal has similar issues, especially the variant that uses p2p to submit the block (hence my preference there to use RPC for that, despite the performance hit)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2210448369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "mentioned",
      "id": 13403197110,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMe5I62",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13403197110",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T08:37:08Z"
    },
    {
      "event": "subscribed",
      "id": 13403197129,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMe5I7J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13403197129",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T08:37:08Z"
    },
    {
      "event": "commented",
      "id": 2211020658,
      "node_id": "IC_kwDOABII586DyX9y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2211020658",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T14:55:10Z",
      "updated_at": "2024-07-05T14:55:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I refuse to believe that re-implementing the entire networking stack, adding a noise protocol implementation and a new networking protocol is the best solution to having a non-RPC/non-poll based template provider.\r\n\r\nI left a comment at https://github.com/stratum-mining/stratum/issues/1032#issuecomment-2211001835, but I don't buy that ZMQ is a reasonable way forward here. To be clear, the goal is not to *just* have \"a non-RPC/non-poll based template provider\", but rather to decentralize mining, where one part of that is to support providing work from Bitcoin Core to Sv2 mining proxies in a more efficient way. One important goal there is to support providing that work to untrusted open connections easily - miners may decide they don't want to select work and instead wish to outsource this to a third party, which needs to be as absolutely trivial to build as possible. We've seen time and time again \"just run this sidecar software next to Bitcoin Core\" is not a thing that anyone does.\r\n\r\nI also mention in that post that Bitcoin Core needs to eventually support providing work to miners - its an absolute travesty that today, in order to solo mine, you need to try 5 different unmaintained software stacks and hope one works (they probably dont), write your own software, or pay a few % fee to some \"solo pool\" (which find blocks even at today's hashrate!). The fact that there is no easy way to support the decentralization of the network for small miners who wish to do so is a total failure of the Bitcoin development community. That could be an external daemon, but again we have a long history of encouraging people to run contrib scripts or sidecar daemons and basically no one ever does. They might well just stick with \"solo pools\" instead :facepalm:.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2211020658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2211245443,
      "node_id": "IC_kwDOABII586DzO2D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2211245443",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T18:12:09Z",
      "updated_at": "2024-07-05T18:12:09Z",
      "author_association": "MEMBER",
      "body": "> We've seen time and time again \"just run this sidecar software next to Bitcoin Core\" is not a thing that anyone does.\r\n\r\nYet another approach for said sidecar is to use IPC. It offers first class access to the node, e.g. via the newly added mining interface. It can probably automagically find a running Bitcoin Core process or spin one up. This would require more (review) progress in #10102 and additional tooling so external application can easily use IPC.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2211245443",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2211372904,
      "node_id": "IC_kwDOABII586Dzt9o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2211372904",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T20:19:50Z",
      "updated_at": "2024-07-05T20:19:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think the particular software design really impacts it nearly as much as people simply not wanting to deal with two or three pieces of software.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2211372904",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "reviewed",
      "id": 2161362715,
      "node_id": "PRR_kwDOABII586A08cb",
      "url": null,
      "actor": null,
      "commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "lozanopo",
        "id": 123916116,
        "node_id": "U_kgDOB2LPVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/123916116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lozanopo",
        "html_url": "https://github.com/lozanopo",
        "followers_url": "https://api.github.com/users/lozanopo/followers",
        "following_url": "https://api.github.com/users/lozanopo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lozanopo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lozanopo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lozanopo/subscriptions",
        "organizations_url": "https://api.github.com/users/lozanopo/orgs",
        "repos_url": "https://api.github.com/users/lozanopo/repos",
        "events_url": "https://api.github.com/users/lozanopo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lozanopo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2161362715",
      "submitted_at": "2024-07-06T02:51:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "commented",
      "id": 2213654157,
      "node_id": "IC_kwDOABII586D8a6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2213654157",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T10:38:44Z",
      "updated_at": "2024-07-08T10:38:44Z",
      "author_association": "MEMBER",
      "body": "It looks like we agree that in terms of efficiency the sidecar approach is not a problem, so I'll argue the other points.\r\n\r\n> One important goal there is to support providing that work to untrusted open connections easily\r\n\r\nFrom my perspective, the sidecar approach allows to solve this in a much nicer way (no additional burden on bitcoin core, sidecar can be written in a memory safe language, ...).\r\n\r\n> We've seen time and time again \"just run this sidecar software next to Bitcoin Core\" is not a thing that anyone does.\r\n\r\nThis seems to be the main argument and I don't find this to be true at all. All lightning implementations, ecash mints, electrum servers, alternative GUIs and block explorers are sidecars. Sure, putting all of these into Bitcoin Core would be convenient for users but it would be an absolute nightmare for Bitcoin Core as a software project. I think this just boils down to how useful the sidecar actually is: if there is demand for the sidecar then users will run it.\r\n\r\n> its an absolute travesty that today, in order to solo mine, you need to try 5 different unmaintained software stacks and hope one works\r\n\r\nMaintaining software is hard and by implementing all of this here, you're asking Bitcoin Core to take on this burden. There are always 300-400 open PRs and only 10-20 people working full time on this project. Take a look at the traction that the stratumv2 PRs have gotten so far, does that look like the project has the capacity to review and maintain all of this?\r\n\r\n> but rather to decentralize mining\r\n\r\nThis is obviously an important goal, and also a goal that one would think bitcoin users care enough about to be willing to install a second piece of software.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2213654157",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2213907464,
      "node_id": "IC_kwDOABII586D9YwI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2213907464",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T12:19:33Z",
      "updated_at": "2024-07-08T12:19:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This seems to be the main argument and I don't find this to be true at all. All lightning implementations, ecash mints, electrum servers, alternative GUIs and block explorers are sidecars. Sure, putting all of these into Bitcoin Core would be convenient for users but it would be an absolute nightmare for Bitcoin Core as a software project. I think this just boils down to how useful the sidecar actually is: if there is demand for the sidecar then users will run it.\n\nAnd compared to Bitcoin Core no one runs these things, and certainly not in conjunction with Bitcoin Core). Obviously I'm not claiming all of these things should be in Bitcoin core, but there's some cost to them being outside - users rely on public block explorers and electrum servers giving up privacy, they use wallets that do not track and validate the full UTXO set (preventing proof-of-reserves for mints), etc. Now, some of that is because they want mobile wallets and apps rather than desktop software, but we've never managed to get sidecars of any form to be deployed broadly - only for those who are highly motivated.\n\n> Maintaining software is hard and by implementing all of this here, you're asking Bitcoin Core to take on this burden. There are always 300-400 open PRs and only 10-20 people working full time on this project. Take a look at the traction that the stratumv2 PRs have gotten so far, does that look like the project has the capacity to review and maintain all of this?\n\nIndeed, it is absolutely a maintenance burden, but we've seen time and time and time again - nearly every project in Bitcoin *outside* of Bitcoin Core has not been sustainable and eventually turns into abandonware, especially in the mining world. Maybe Sv2/SRI survives but I'd be astounded if it survived with the level of resources it has now, Bitcoin Core will always have way more resources than other things in the ecosystem (and that's great, it needs them). Again, of course, this isn't to say that Bitcoin Core should \"do all the things\", that's not realistically either, but Bitcoin Core can't dismiss things which are critical to the Bitcoin system as \"someone else will do it\".\n\n> This is obviously an important goal, and also a goal that one would think bitcoin users care enough about to be willing to install a second piece of software.\n\nThen you misunderstood my argument - miners *do not care* about decentralizing mining, we have ten years of proof of this. If decentralizing mining isn't trivial and the default option, they'll never do it.\n\n> I also mention in that post that Bitcoin Core needs to eventually support providing work to miners - me\n\nI believe you missed this point - Bitcoin Core needs to support providing work, it's not excusable that it does not today (outside of \"no one has contributed the code yet\"). An obvious way to do that would be to add code here for the Sv2 framing and then also add the Sv2 work protocol (which is similarly pretty trivial once we have the framing in place). Alternatively Bitcoin Core could support Sv1 but that's an undocumented mess and missing lots of critical features.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2213907464",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2218139440,
      "node_id": "IC_kwDOABII586ENh8w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2218139440",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T16:27:16Z",
      "updated_at": "2024-07-09T16:27:16Z",
      "author_association": "MEMBER",
      "body": "> And compared to Bitcoin Core no one runs these things\r\n\r\nBecause not everyone needs to run these things but if they want to they can. Cramming everything into one software project is not sustainable.\r\n\r\n> Indeed, it is absolutely a maintenance burden, but we've seen time and time and time again - nearly every project in Bitcoin outside of Bitcoin Core has not been sustainable and eventually turns into abandonware.\r\n\r\nIf it would end up unmaintained outside of Bitcoin Core, then it'd also end up unmaintained inside of it.\r\n\r\n> especially in the mining world\r\n\r\nI'll repeat what I said above. There are several startups that are using stratumv2, they should be interested in maintaining the software that they plan to build their business on. There are also several billion dollar mining companies that should be interested in paying for the maintenance of the software they depend on.\r\n\r\nPeople having to install two pieces of software is not a blocker for mining decentralization. That is an outrageous claim. With this line of reasoning we'll just end up shipping a whole operating system at some point. I'm not really interested in debating this further. \r\n\r\nIn any case, looking at how things usually work in this project, it'll likely be years until the current approach would be merged anyway (due to a lack of resources). Would it not be better to focus on an approach that will be operational much sooner?",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2218139440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2218317900,
      "node_id": "IC_kwDOABII586EONhM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2218317900",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T17:51:29Z",
      "updated_at": "2024-07-09T17:51:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2211245443\r\n\r\n> Yet another approach for said sidecar is to use IPC. It offers first class access to the node, e.g. via the newly added mining interface. It can probably automagically find a running Bitcoin Core process or spin one up. This would require more (review) progress in #10102 and additional tooling so external application can easily use IPC.\r\n\r\nI don't actually think much in #10102 is needed, because the bulk of #10102 is wrapping the Wallet interface so the gui can use it, and the Chain interface so the wallet can use it. The mining interface is much smaller than the chain/node/wallet interfaces so it should be much easier to expose. If it would help, I could make a draft PR for a test program that will do what you describe: connect to bitcoin-node over a unix socket if it is running, or start bitcoin-node if it is not running, and then call a mining interface function like `getTipHash()` and print the result.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2218139440\r\n\r\nNiklas, everything you're saying may be true but it doesn't seem self evident. I could imagine there being difficulties with the current approach, but I can also imagine it working out well. It also seems like there is a spectrum of intermediate possibilities between current monolithic design, and your [zmq + rpc suggestion](https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-2156406658) and [sjors p2p over local socket](https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2210448369) design, or other possibilities.\r\n\r\nSo I am curious what design you think would be simplest, best for users, and most maintainable in the long run if there was not a lack of resources in the short run? I agree with you the lack resources is real, and maybe will completely dictate any decision. But I wonder if there is actual disagreement over what the best software design would be if not for that? I do think miner centralization is a problem that is worth spending significant effort to solve, that miners are probably not well equipped to solve themselves even if they are motivated. From my own perspective, I think there's not really a point in bitcoin existing if mining becomes and remains very centralized.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2218317900",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2220756509,
      "node_id": "IC_kwDOABII586EXg4d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2220756509",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T15:04:43Z",
      "updated_at": "2024-07-10T15:04:43Z",
      "author_association": "MEMBER",
      "body": "> Niklas, everything you're saying may be true but it doesn't seem self evident.\r\n\r\nCertainly! I think most of what I (and Matt) said are opinions and not ground truths. It does look like most of the actual discussion is philosophical in nature (software maintenance, willingness of users to run more than one piece of software, ...) and the eventual route we go will depend on a judgement call, which is why I find it important that more contributors with opinions chime in.\r\n\r\n> I could imagine there being difficulties with the current approach, but I can also imagine it working out well.\r\n\r\nYes, I wouldn't definitively say that the current approach can't work, but it is my opinion that it would be better for Bitcoin Core and stratumv2 users to go a different route.\r\n\r\n> So I am curious what design you think would be simplest, best for users, and most maintainable in the long run if there was not a lack of resources in the short run?\r\n\r\nI think our lack of resources will be the key factor in making a decision but there are other things I'm concerned about as well, which could inform the design.\r\n\r\n1. Widening the public facing attack surface\r\n2. DRY violations: e.g. the stratumv2 encryption looks quite similar to BIP324, yet another networking server (that is architecturally a copy of the already existing stack), ...\r\n3. Lack of separation of concerns. Producing good block templates is one concern, implementing the most functional & secure/safe way to serve them is another one.\r\n\r\nThese are mostly maintenance concerns, that exist even with plenty of available resources.\r\n\r\nA multi-process architecture would be the best way to go in my opinion, i.e. a separate process talking to Bitcoin Core through some interface(s) acting as a proxy for the stratumv2 side. This approach should address concern 3. fully, it cleanly separates the concern of producing templates and serving them to untrusted third parties. It lessens concern 1. since bugs in the stratumv2 process won't affect general node operations (e.g. a crash bug doesn't take down the whole node). Depending on the specific implementation detail choices it can also address concern 2. Generally, there are a few implementation details that would have to be answered for this approach:\r\n\r\n* _a) How does the separate process communicate with the node process? (ipc, p2p, rpc, zmq, ...)_\r\n  I think any interface would technically work and all besides p2p would be appropriate (ipc, rpc or zmq are primarily meant for exchanging data with a trusted (local) endpoint, and are therefore suitable). A combination of these interfaces allows for a request/response pattern (like I described in my initial comment). Changes to these interfaces are possible, to accommodate the use-case of the stratumv2 process.\r\n* _b) Does it share code with Bitcoin Core? If not, is there a need to write it in C++?_\r\n  I think if we're already green fielding a stratumv2 server we might as well do it in a memory-safe language, which probably means no code sharing.\r\n* _c) Is the process a child of the node process or is it externally spawned (e.g. manually by a user)?_ How is this packaged in a user friendly way?_\r\n  These questions mostly concern themselves with the user experience, i.e. how will this be shipped and how is it supposed to be operated. There are so many ways of doing this and I'm sure we could come up with a way to make it easy for users. It depends on what the answer to b) is, e.g. we might end up being able to spawn the stratumv2 process through `fork()` or if it is a separate piece of software entirely, we might be able to auto-detect the installation and go from there.\r\n\r\nTLDR: I would suggest a design very similar to my original suggestion (implementation details may vary), although, given the assumption of no lack of resources, we could end up maintaining and shipping the separate tool along side bitcoind as well.\r\n\r\n> I think there's not really a point in bitcoin existing if mining becomes and remains very centralized.\r\n\r\nAgreed but I don't see how the specific software architecture choices discussed here so far have a catastrophic impact on the outcome. They do however, have a sizable impact on Bitcoin Core.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2220756509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2221479047,
      "node_id": "IC_kwDOABII586EaRSH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2221479047",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T21:10:20Z",
      "updated_at": "2024-07-10T21:10:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Because not everyone needs to run these things but if they want to they can. Cramming everything into one software project is not sustainable.\r\n\r\nI don't think you read what I wrote. I said \"Obviously I'm not claiming all of these things should be in Bitcoin core, but there's some cost to them being outside\". Which implies, obviously I agree with you that \"cramming everything into one software project is not sustainable\", but claiming that *the* reason people don't run these projects is because they \"dont need to\" is absurd. There is very real cost for each of the examples I gave that implies people should run these things. Again, for practical purposes it likely doesn't make sense for them to exist in Bitcoin Core, but there's a line, and it isn't \"nothing that could be in an external project\".\r\n\r\n> If it would end up unmaintained outside of Bitcoin Core, then it'd also end up unmaintained inside of it.\r\n\r\nOh come on. There are drastically different levels of \"unmaintained\". The mining software I refer to here is software that is not runnable, that does not work with current versions of Bitcoin Core, sometimes doesn't build on modern toolchains, etc. That level of maintenance any part of Bitcoin Core would absolutely receive.\r\n\r\nIf it would end up unmaintained outside of Bitcoin Core, that may mean that it would get one patch a year inside of it, which would be great! Means very little burden on any Bitcoin Core maintainers or contributors, but it would keep building and basic functionality covered by tests would continue to work!\r\n\r\n> I'll repeat what I said above. There are several startups that are using stratumv2, they should be interested in maintaining the software that they plan to build their business on. There are also several billion dollar mining companies that should be interested in paying for the maintenance of the software they depend on.\r\n\r\nI very, very, very, very much wish I had your level of optimism about the world and about open source software in general. But I really don't see where your optimism comes from...\r\n\r\n> In any case, looking at how things usually work in this project, it'll likely be years until the current approach would be merged anyway (due to a lack of resources). Would it not be better to focus on an approach that will be operational much sooner?\r\n\r\nTo be clear, people are using this patchset already, and will likely continue to do so. Upstreaming it just means that people can benefit from the review and secure builds processes of Bitcoin Core, rather than the Bitcoin mining ecosystem all trusting a random binary posted by Sjors...",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2221479047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2222418506,
      "node_id": "IC_kwDOABII586Ed2pK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222418506",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:43Z",
      "updated_at": "2024-07-11T09:18:29Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky wrote:\r\n\r\n> If it would help, I could make a draft PR for a test program that will do what you describe: connect to bitcoin-node over a unix socket if it is running, or start bitcoin-node if it is not running, and then call a mining interface function like `getTipHash()` and print the result.\r\n\r\nYes that would be very helpful.\r\n\r\nAt least one large objection I have to the sidecar approach is that it tends to be very clunky, having to deal with our p2p, rpc and zmq interfaces which are not a good fit for the job. That hurts usability and maintainability.\r\n\r\nI'd like to try the IPC approach. If you can make the demo in rust that would be ideal, because it would allow me to reuse parts of SRI and other useful bitcoin libraries. I think @josibake is working on something similar.\r\n\r\nThat said, I suspect our `CConnman` and `Transport` classes are in better shape than any Bitcoin Rust library out there including SRI. Not being able to use (derivatives of) them is a big downside. \r\n\r\n@dergoegge wrote:\r\n\r\n> A multi-process architecture would be the best way to go in my opinion, i.e. a separate process talking to Bitcoin Core through some interface(s) acting as a proxy for the stratumv2 side. \r\n\r\nNote that process seperation is something I want to achieve with the current approach as well. That is, even if Bitcoin Core produces and serves the templates, that should be a seperate process. Initially this PR had some preliminary refactoring towards that goal, but that got out of control, see https://github.com/Sjors/bitcoin/pull/47.\r\n\r\n@TheBlueMatt wrote:\r\n\r\n> Oh come on. There are drastically different levels of \"unmaintained\". The mining software I refer to here is software that is not runnable, that does not work with current versions of Bitcoin Core, sometimes doesn't build on modern toolchains, etc. That level of maintenance any part of Bitcoin Core would absolutely receive.\r\n\r\nI think the current `getblocktemplate` code is a useful reference point. Afaik it's used by all miners, with various levels of custom patching that they don't always contribute back. We've made very little changes to it, but it still works after a decade because it rides on the maintenance of the rest of our codebase. (that said, I wouldn't rule out that there's a bug and nuisance in it that every miner knows about, patches and doesn't tell us)\r\n\r\n`<philosophy>`A biologist might call that RPC a parasite or symbiosis depending on the perspective. Being part of the Bitcoin Core codebase can be a way for a smaller piece of code to get better maintainence than being independent. Though there are plenty of examples where the opposite might be true, e.g. libsecp lives on its own is used by many other projects, which might give it more maintaince than it would otherwise get.`</philosophy>`\r\n\r\n(I plan to rebase this PR soon, but would like to incorporate #30205 into #30332 first to get CI reliably green)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222418506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "mentioned",
      "id": 13468630589,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMiyv49",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630589",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:44Z"
    },
    {
      "event": "subscribed",
      "id": 13468630604,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMiyv5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630604",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:44Z"
    },
    {
      "event": "mentioned",
      "id": 13468630619,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMiyv5b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630619",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "subscribed",
      "id": 13468630629,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMiyv5l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630629",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "mentioned",
      "id": 13468630645,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMiyv51",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630645",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "subscribed",
      "id": 13468630656,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMiyv6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630656",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "mentioned",
      "id": 13468630671,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMiyv6P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630671",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "subscribed",
      "id": 13468630683,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMiyv6b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13468630683",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T09:09:45Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzZDY1YjA1ZjE5MTM0MTc2YmQ3NzVkZmRjZGQ4MWQyMjg2MWVhOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53d65b05f19134176bd775dfdcdd81d22861ea9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/53d65b05f19134176bd775dfdcdd81d22861ea9b",
      "tree": {
        "sha": "077f73a605774617dd015e01e8d757722e90e99a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/077f73a605774617dd015e01e8d757722e90e99a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 077f73a605774617dd015e01e8d757722e90e99a\nparent 9b480f7a25a737c9c4ebc33401e94d66c2da9ec3\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701349128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720692841 +0200\n\nAdd sv2 log category for Stratum v2\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPsGkACgkQV/+b28ww\nEAmGvBAAk97ealuCquLWqPQ7hMDlYWNYNAN/1x3fv5Hr9R+ygZD5g5xHB5E86y5M\nxv8fgWHLQ6WppeLJt+RKTPPIDevzyoWFZBHWqPQV3s8BPN4kKZu4U3kiVYnBnbVq\nfDUIlVphTQhojT9zRmoIM4IMQKzDbK4Xkpbkq24Dj9L2s1w/g5jSMbIVXmHFzSfo\nkwxggZPbrWrTSCAbosKGTWKvhV4raaIxVz7gioss86s/HO2vkQ8b7LoOIpzLTREd\nlmD8lOuvZYbFq+iHCfx5xCOuriqUdzbdHBtC3mzQCmQ6QFWLBS52K6F40bkV7U74\nOQyAeOSiTAhZ7SgwkFQPDxiCzI5eWlODmlxV8WFndSQFnAJaMa00r9enARIB1l4d\nwtTdVCGCIut0jm7YqdARTCHGTiemF75cL1qC0enqVKbILXBCqADTXKbeJLZnGM8a\nkyn74bQSo/Z7dpPINOsDQOTSy9/FY4f8gU+ZOKRRGbKKUGfo9f3+Fc9skb3NyaE6\nvRufBdlIDNpmtrDo9eTaz0j7SGgAm4luh2YdqoqYFzCn9PPYvPDbZuhY8M+F51Ga\nt6aoLV2EGzlHXKWrn4CP2n9i5nsoOe5Ts//EOpsSuIK6VII7Ya5GJMjHzOWwEfwH\nbBySjJR95OgVu+kFC+0x/cluExEQZzjAosh3jUm19gcFEFk6spk=\n=m7vT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b480f7a25a737c9c4ebc33401e94d66c2da9ec3",
          "sha": "9b480f7a25a737c9c4ebc33401e94d66c2da9ec3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b480f7a25a737c9c4ebc33401e94d66c2da9ec3"
        }
      ],
      "message": "Add sv2 log category for Stratum v2",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:14:01Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-30T12:58:48Z"
      },
      "sha": "53d65b05f19134176bd775dfdcdd81d22861ea9b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhOTQ5OTI3OWQ2Y2UxN2Y0YjhlNTI1ZDc3ZGRmYzczYzUxY2Y1MTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca9499279d6ce17f4b8e525d77ddfc73c51cf514",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ca9499279d6ce17f4b8e525d77ddfc73c51cf514",
      "tree": {
        "sha": "7ba54de0b71f243fc57796fadd0edb2e8782fd0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ba54de0b71f243fc57796fadd0edb2e8782fd0b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7ba54de0b71f243fc57796fadd0edb2e8782fd0b\nparent 53d65b05f19134176bd775dfdcdd81d22861ea9b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1720693732 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720693732 +0200\n\nAdd sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPs+YACgkQV/+b28ww\nEAlWGhAAvHOOvbPOqIg3BO36pQp0QLNHqSx2S6Xhu2XifmlR4lYmXjN/YEKJp6u8\nlSHqM4AdHbUep1SRSRWez5oGl6Hy5q/ssozMWhzdnbF9tVFm3FO6A6YVZ1Wge8vj\nssdYG9EOYJTxQZcF3TubWrKbRI2VzafTIuuXMaLoUGGZz/FtRzsf74lUX/ovWVJW\njW50h/mWfptepISTBGXtYkqlYi7EUPYPYc2o2l792yjJQZlmOKOLVdJbCPkD0VYl\nTA1nHyXtHlzVqqDcsDXCQNcHpR8lAy47JjkdzWcFprSvCXwdzRadJyoRiK+rD96g\njOExYCTMdolhU9Lb1Zl0avD/ErDBfAnLnrDQqbXal4MRJP2OKZkE4UXg7At4e+i2\nQ77PkaTFeynRa6UdZQ6gAkJQ46coZaVBo02nwCBeWwqHQdu+cbR8jeZZnTAB5OL3\nYdH2gSs3Knp5t4U3RNOzA+wyPBEFTKvU4YVm04UqWOayivrRvaxkqIxCmS2iNisJ\nGaMLjkcv4BMWeHMccMGjs+gSovi3jjCA5SWbCw+CCc3yQWnCa+/qts94rIautxib\njllsYYZnIBi7QJvyAthkiF37Z4WpAzRyANlp6lnW+UuvvYrr1fD83Ngzr/KOwU5e\np26FjqlU3OJrB+a05ObbwTV5LM9nHhf6yAFq1OrJ4bbjOwU0vWA=\n=cRjA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53d65b05f19134176bd775dfdcdd81d22861ea9b",
          "sha": "53d65b05f19134176bd775dfdcdd81d22861ea9b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/53d65b05f19134176bd775dfdcdd81d22861ea9b"
        }
      ],
      "message": "Add sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:28:52Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:28:52Z"
      },
      "sha": "ca9499279d6ce17f4b8e525d77ddfc73c51cf514"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIwMWJlZDk0NTBlNzM1ODJhZjJmMmQ5ZThkZmIzYjJjM2FlZTA4ZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/201bed9450e73582af2f2d9e8dfb3b2c3aee08fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/201bed9450e73582af2f2d9e8dfb3b2c3aee08fd",
      "tree": {
        "sha": "f28a30a8860ad95e4c6c0c20e21f909fd8403a24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f28a30a8860ad95e4c6c0c20e21f909fd8403a24"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f28a30a8860ad95e4c6c0c20e21f909fd8403a24\nparent ca9499279d6ce17f4b8e525d77ddfc73c51cf514\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718889964 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720693910 +0200\n\nAdd sv2 message CoinbaseOutputDataSize\n\nThis commit adds the simplest stratum v2 message. The remaining messages are introduced in later commits.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPtJYACgkQV/+b28ww\nEAk6TQ/8D8WYAxEBBTBqvZEY6oplhP0610PMcLcWPbR4N3yN6QB6b9+za3Jq+Lag\njKtm3jtub84HN16tGgNe0f2BsltH9HO/pWHxu3dexNWARI8Z+Yy8bnRJnaGD/ql+\n2DiMu9vIv6RM43e5mLr+OiZ+xJL6WNtE0LSQu2EZ/RgvO5QefXdoBGQ1xtf0pibX\n6IH/4O5twpUJ1AxfWoi0W1q30fWHE+hwnY7q8WX/PJZwfEr4CRpsQtMw3tgaPoN/\nHNaKPeWXUeaADbymvDaB2ZSDSezHcKePqwo6tcUFWHxiM315VsNVaKhAcZma8yC8\nJy9cGWbg5bczhdXdRFqlRTXHceNMU8ZjrDD53TGjQfZXOzDoFIuY/j70poGQqoqC\ngM0rVgplLnHQ9yFYlcmehzf2HbS77MYY462C+1Fsi6+X2fXzwmWRPsIZj9iTgPIw\n3lnqNw9s4nJdhuojONfOIssmHpmiDySWzhNlDaqUlZSVeIkRFSdW1jGAt8GXTBxa\nw+nl+DdiYI/xyPxunMMQBu+VpPezSKwdxXbmGXnCYCgGI4PHUNhRsO70x+8mpMEL\nGtpGX7UggsgFhhIwfWa25u/l8GDvpk4GsO099Ym1ZkSZZWwnxG0ubmZ/nRLY3oPW\n24l48eKuwVmsZzprCfi9mo8Krt4OE/3CRZAcAffJ0GHV/X13n+8=\n=L0eC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca9499279d6ce17f4b8e525d77ddfc73c51cf514",
          "sha": "ca9499279d6ce17f4b8e525d77ddfc73c51cf514",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ca9499279d6ce17f4b8e525d77ddfc73c51cf514"
        }
      ],
      "message": "Add sv2 message CoinbaseOutputDataSize\n\nThis commit adds the simplest stratum v2 message. The remaining messages are introduced in later commits.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:31:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-20T13:26:04Z"
      },
      "sha": "201bed9450e73582af2f2d9e8dfb3b2c3aee08fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkZmJhNmUxYzIzMTYxYzYwOThkZjliMmI5Y2ZjYzViOTE1NDY2NjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dfba6e1c23161c6098df9b2b9cfcc5b91546661",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1dfba6e1c23161c6098df9b2b9cfcc5b91546661",
      "tree": {
        "sha": "f83dcbc5ef8179bf751f8beb68156b911c7a474e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f83dcbc5ef8179bf751f8beb68156b911c7a474e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f83dcbc5ef8179bf751f8beb68156b911c7a474e\nparent 201bed9450e73582af2f2d9e8dfb3b2c3aee08fd\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718963782 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720693910 +0200\n\nConvert between Sv2NetMsg  and CSerializedNetMsg\n\nThis allows us to subclass Transport.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPtJYACgkQV/+b28ww\nEAmYUw/9Gbmswo4olcGUNWQLWrtBIWRGKjBW1evC6ySRZ2kzfs1u22iOuJBhxg3j\nkX+0FPAgC0HD814PgqTZw9PTBXaXNvfSJM8I9sgvdOvYfvrUIE4vYXvGpTgj3pqE\nEA0GSp1RsZ/B3Ez9sozAaW4mokjGkBjszPBMoeEUwag2sMdcJe9qHzcrXTrlzN1G\n0tMCrwVXWfK8Mpna4p/mlEpp768bYoGMCp7Br5ZcgrzzQ+XfXLmdaooqyNlflyrj\nRaDveQp3qnd8qO2eizYAqsKhZt6dU1WNO1ggw1Uto8MQd0SG0GulxPRLkmH+51Hd\nu1OQvPInropsO8qd1gbMZtxT+4DX4fTVwRVCgwUYsGw1V0nXlTl1NZa+hU/eYn4w\nYOlMo8P609uWH21pqh1HSb/bVW+jcks+zMvhnlXp0IdmXZnBMNqaqEmcT982r3tD\nVFU30HkjYBq6qRJvhGMe0Yl6JxBVEeTeiTNWmpMnncnH/ETjT8pdD2cp4zVYxxDI\n/xkjXLXcxAIWiwa5c4Zh5tscQiQsJTkAuuAPU6UNUCAauNovdyQeF5FdMY4zFPRv\nTdPhEzfVPuvVUELXU6LZNNvuxSxWs03I6UjIeXq7/HOCjt7NKagvOT7y1eT71Npw\nVa+NwfU4jtN/zDuJvrnqnBMN10Y7bBe8U1lMKY90RSbYwxn6W4s=\n=Oor9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/201bed9450e73582af2f2d9e8dfb3b2c3aee08fd",
          "sha": "201bed9450e73582af2f2d9e8dfb3b2c3aee08fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/201bed9450e73582af2f2d9e8dfb3b2c3aee08fd"
        }
      ],
      "message": "Convert between Sv2NetMsg  and CSerializedNetMsg\n\nThis allows us to subclass Transport.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:31:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-21T09:56:22Z"
      },
      "sha": "1dfba6e1c23161c6098df9b2b9cfcc5b91546661"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlZTUwZjczNWViZDJmZTk3NTExZGM0ZjQ2MmIyNDY4Y2E1YTllMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aee50f735ebd2fe97511dc4f462b2468ca5a9e01",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aee50f735ebd2fe97511dc4f462b2468ca5a9e01",
      "tree": {
        "sha": "8af185154c471fc47964906edd7257bbd31cedbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8af185154c471fc47964906edd7257bbd31cedbd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8af185154c471fc47964906edd7257bbd31cedbd\nparent 1dfba6e1c23161c6098df9b2b9cfcc5b91546661\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718989960 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720693910 +0200\n\nIntroduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPtJYACgkQV/+b28ww\nEAl4bA//W+rkQKZD1kAfSwlRyi2hAxoDI2zPYgaSPPxkrekAKj4ASPlrZgU5Pxbj\nI4R/8ef2mPfBvzAkYUu5e7ipl7hu3EnO9bwMgcdW5arP8aWJhoi9tRi5RUMsIniV\nMITEfi18E+J3t4Pu9Du7XyQPXcWGIkVdgjF2k47clKuHsmduxNORtptJtSDA56yN\nX5BPSHHY+Qr56tAKteLe9ieD8hkVSetepJPWChQXydpFH0zRhA84+AQu5ww6/cQW\nMjhmIalMHHa/L/+HVqIhxeKewSmJPPOleyIG7uokiiFNLIsqAt5QKSQGhzbl+u8s\nKJYIxJWKJfNga1W91FpC5AUWU8WtHsW08lYWGWI2f4DPcWgMpEBr83cc/CpD3MjM\nTEtJ3UkJL0hZPUfMKTGQf5R5Laz5DCNr/ZdTxZPXnSWEhmBzSEgUzPMQ+j2Gb6v9\n9Ky7jeGgh63KXWIcobMjE0Xmiza91cV4p7ALlPpukPvxsrYm2LRlY5dXZIBm0SsT\n79vlZrzKHToavu1zUM2FZMVBL999MR7NlDtWJQfu7q5/fFeJrWp4cIusZvrvhb0X\nf5Cs7KFmqf2H+1C0sluHq7UfkCz0lk1PJ4JY4pfbArbvyKYUKaeE6DOxKk7LBaC7\nePKf5U5TKQ+ExJyjcS/uAYc5hM9fm6g+dlemKpBcubCB7jTSNxs=\n=9J3H\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dfba6e1c23161c6098df9b2b9cfcc5b91546661",
          "sha": "1dfba6e1c23161c6098df9b2b9cfcc5b91546661",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1dfba6e1c23161c6098df9b2b9cfcc5b91546661"
        }
      ],
      "message": "Introduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:31:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-21T17:12:40Z"
      },
      "sha": "aee50f735ebd2fe97511dc4f462b2468ca5a9e01"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5YWUzNTVhYTY0NjQzZGJkY2RmOWI4OWIyOTE1NzhiM2E0MDRmYjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19ae355aa64643dbdcdf9b89b291578b3a404fb5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/19ae355aa64643dbdcdf9b89b291578b3a404fb5",
      "tree": {
        "sha": "86d826b6819d09f0b0b51749e4fdbde80b962a60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86d826b6819d09f0b0b51749e4fdbde80b962a60"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 86d826b6819d09f0b0b51749e4fdbde80b962a60\nparent aee50f735ebd2fe97511dc4f462b2468ca5a9e01\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718891317 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720694024 +0200\n\nAdd sv2 SETUP_CONNECTION messages\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPtQgACgkQV/+b28ww\nEAn8eBAAofkI4L3pqjk3FuCkS5SGfATxS/2MEtK3bQvQoCVQ+f9p2aZXH4wdThNn\neBfp3yg+sbsiSYvh33RPXXhKzsU5uhduwVtlB8iM+VGVmQFo9Tsq+KciQiJAZUM1\nnMG3xG9puy5bOhwLqaKeMQ/E+p+CsfaUmR4rK4r/WboqUqPK+/B7lacJw6rxvdLY\nCYEa4dFrdEWHEU+bVIiCqz+GCh4I67k9QDKoqvGf9SObikeK9HOjdkhQ2qelGE1C\nCiNwsNQqcAUNF5nTasrRmQqSEgkrvmh8aIlcbKLTyN99dkTKnIXIOlMl48LjKNVY\nUe+ImNMmnbQ4uUwIl6lafOt3wnCUaO4ajzSOpklq5w1SyC33GqQM/0j3KwuT7xUR\nBMFFJEA99lU93MG2gmeWJGWvCxoZf4QhUI4G7AbqgUgZL33FKYLj7I7B6WQjL9E8\nfm/+Oj17QY9JGovqsIhxzVNa+11XZ5X0KmHbLMX3zVjuCLoC0Moj0nMFpfOQS8py\n2299KabuzGBFvul+paGeyUlDINsDSw3myQXoA7ipyU4EDGKLspgEbRVyOwzdWeQa\ni1uJWE0BzjTUQJoqxcsuAvUrC9FC0e/IZlhvDWxmb0S82CPWUTjkdj8JhCHyJw8L\nU5oSF/64+jY4dChDpGZZXo/ARMCZdq8mnvw/oi/1HI8QPK3UWDU=\n=RX09\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aee50f735ebd2fe97511dc4f462b2468ca5a9e01",
          "sha": "aee50f735ebd2fe97511dc4f462b2468ca5a9e01",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aee50f735ebd2fe97511dc4f462b2468ca5a9e01"
        }
      ],
      "message": "Add sv2 SETUP_CONNECTION messages\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:33:44Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-20T13:48:37Z"
      },
      "sha": "19ae355aa64643dbdcdf9b89b291578b3a404fb5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU4ZDFlOTczNTVkNTRjYTRiODc5MzU4YWE0NjQ1MmJmNWJmZmQzYTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58d1e97355d54ca4b879358aa46452bf5bffd3a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58d1e97355d54ca4b879358aa46452bf5bffd3a1",
      "tree": {
        "sha": "d696bbc2646c010d64702deb5f28681f2c67e7a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d696bbc2646c010d64702deb5f28681f2c67e7a7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d696bbc2646c010d64702deb5f28681f2c67e7a7\nparent 19ae355aa64643dbdcdf9b89b291578b3a404fb5\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719846968 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720694024 +0200\n\nAdd strings for Sv2MsgType\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaPtQgACgkQV/+b28ww\nEAmxkg/+PvVdECe2YVgHBPYhIv/GUSeLCaMn9kZhTAsjlji+YdcTRFXgks4zmuGW\nj1uumFSHZeylr7jLkGjHaXfEbwKb55YazSX251+WXy2IPUpWBHfJGb8Uwn3cVbbF\nTDUvQUPb6447viCwhAy7TV1s164kqot7kshlxTyvOYeJPbKMSxE/4NtjLvDaX60u\n3zml6URcddcXoY4PzJ3VYJYu2c/OK5wQpkN9hF1LkOuC3GW91cue8IUDKdBfL5S7\nmHYEsFKU32LMvNUOp/3ce1gys0Fj73VQeP3Xr5Zs7we2qaHgjwBlW7h32jlz3Dmk\nlztCLdyzqW0cWlMLX9sDlSn8THhBytXBJMiUDx4tGX6oWqxVK5m/VAhUYQLyk53Y\nqcC9tL+MFO7n96IQ+aZ6KHuRRsobUdNjZsZMi8U9sBUF9Rk0niu/oHmFzTKmYDXn\nflUct5UQBHn8xWh6Ix/pmtaKJdQhuT8s8XasAiOZHOd3vTKCoI9fgpJ7hlMucYlr\nKEJIDAE8vmxi2WOWXOY1746MmN4O9cJvIxyewS88pFnba7dBfON5yXJKEMrabTVw\nHbVqoWnMWjShmDlihlQQJ+ik3pxfZewn76zxHcOqyb3HhcLfCt4hMrq+AkKAnsQI\n5j1WClCp2CtoGstYW2U3WYyFxnMWcxoK+onNqlbunYBBl26a1Hg=\n=ZGnK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19ae355aa64643dbdcdf9b89b291578b3a404fb5",
          "sha": "19ae355aa64643dbdcdf9b89b291578b3a404fb5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/19ae355aa64643dbdcdf9b89b291578b3a404fb5"
        }
      ],
      "message": "Add strings for Sv2MsgType",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T10:33:44Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-01T15:16:08Z"
      },
      "sha": "58d1e97355d54ca4b879358aa46452bf5bffd3a1"
    },
    {
      "event": "commented",
      "id": 2222600328,
      "node_id": "IC_kwDOABII586EejCI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222600328",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T10:40:51Z",
      "updated_at": "2024-07-11T11:00:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "I am just catching up on this thread so I haven't really made up my mind on the conceptual question overall. But if we could wave our magic wand to have multiprocess plus sv2 based on that that sounds like a great achievement for the project overall. Adding multiprocess support would take its time though, these would then be two large projects that have been around for a long time but struggled to get enough review power. If sv2 could help move multiprocess forward that would be great but given that it's struggling to get review on its own I don't see that happening unfortunately.\r\n\r\nAn approach that came to my mind and I don't think I have seen mentioned yet: Could everything sv2 related at least be self-contained so that we can build without it like `--disable-sv2`? Then there could be a release policy to start with where we release core without sv2 as a priority and then there is an additional release with sv2 on a best-effort basis. I.e. if the code is broken and nobody steps up to fix it and miners don't want to pay anyone to do it, then there will be no sv2 release. Maybe this \"miner release\" could even be without the GUI to further ensure that this is not the version normal users should use. They could have their own set of builders too and maybe the binary is not even released on bitcoin-core.org but somewhere else. Having another set of binaries flying around is not ideal either but at least this could decouple sv2 support from the general engineering bottleneck. Having this clear separation should also make it much easier to move sv2 into its own process when we get multiprocess support later.\r\n\r\nEDIT: This would also mean that sv2 support should be easy to remove again if this \"experiment\" fails.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222600328",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2222638193,
      "node_id": "IC_kwDOABII586EesRx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222638193",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:21Z",
      "updated_at": "2024-07-11T11:02:21Z",
      "author_association": "MEMBER",
      "body": "It seems to me two topics are being debated here, one about software design and the other about how we get users to run software.\r\n\r\n## Technical design\r\n\r\nI agree with @dergoegge that there have been no _technical_ objections to a multi-process approach, i.e., a `stratumv2` sidecar talking to `bitcoind` via some sort of communication protocol. Instead, I find the arguments for a multi-process architecture to be compelling and the correct _technical_ design. Specifically, exposing a somewhat generic mining interface not specific to SV1/SV2 is the correct long-term choice. Of the proposed multi-process approaches, I've been experimenting with talking to a `bitoin-node` process over a socket using [rust + capnproto](https://github.com/bitcoin-dev-tools/bitcoin-ipc) and have been pleasantly surprised at how performant and powerful this approach is. As @Sjors mentioned, there are existing rust libraries for stratum and bitcoin related stuff in rust, so it seems we could vet this approach easily and compare it to alternatives.\r\n\r\nAs @ryanofsky mentioned, I think the only thing needed to explore this route further is defining a capnproto schema for the mining interface and exposing it over a socket. I've already got a working example of launching a `bitcoin-node` process and talking to it from a rust process over a socket. From what I can tell, if we have the mining interface defined, it should be trivial to adapt this example to an SV2 proof of concept. Out of the proposed architectures, this is the approach I find to be the most technically sound and interesting, so happy to help if people are interested in exploring this route further.\r\n\r\n## All the other stuff\r\n\r\nI sympathize with the argument that the harder we make things for the user, the less likely they are to run the software. I strongly disagree, however, with the conclusion that the best solution then is to put everything into a single binary for the user. All that matters for the user is that it Just Works :tm: and there are plenty of ways we can achieve this regardless of the technical design.\r\n\r\nAs a Bitcoin Core user, if I'm not mining then I don't want mining code in my binary. If I'm a Bitcoin Core user who is mining, there isn't any reason I can't install one piece of mining software that automatically launches a `bitcoin-node` process or discovers an already running one.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222638193",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "mentioned",
      "id": 13470021240,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMi4DZ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021240",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "subscribed",
      "id": 13470021255,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMi4DaH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021255",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "mentioned",
      "id": 13470021273,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMi4DaZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021273",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "subscribed",
      "id": 13470021282,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMi4Dai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021282",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "mentioned",
      "id": 13470021296,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMi4Daw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021296",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "subscribed",
      "id": 13470021306,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMi4Da6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470021306",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:02:23Z"
    },
    {
      "event": "commented",
      "id": 2222675998,
      "node_id": "IC_kwDOABII586Ee1ge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222675998",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T11:23:20Z",
      "updated_at": "2024-07-11T12:33:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It seems to me two topics are being debated here, one about software design and the other about how we get users to run software\r\n\r\nI think the discussion here is mostly about engineering resources in Bitcoin Core\r\n\r\n(Edited for clarity, this was not about my opinion but about what we are disagreeing about here. As I said in my first message I am undecided which way we should go and what arguments weight heavier)",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222675998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13470922050,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMi7fVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13470922050",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:20:22Z"
    },
    {
      "event": "commented",
      "id": 2222789717,
      "node_id": "IC_kwDOABII586EfRRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222789717",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:20:24Z",
      "updated_at": "2024-07-11T12:33:23Z",
      "author_association": "MEMBER",
      "body": "Rebased after #29274 was merged. Now using the new `waitTipChanged()` interface method from #30409: faf0c8ec1701d0b497e962033477d2aed8c556c3 -> c3a0a51aece3f9174be80eea81795140bb2415b3  is a nice simplification in `ThreadSv2Handler()`.\r\n\r\n@fjahr wrote:\r\n\r\n> Could everything sv2 related at least be self-contained so that we can build without it like `--disable-sv2`?\r\n\r\nYes, but I don't think that's useful. If you don't start with `-sv2` none of this code is run. That should be even more clear if it has its own `libbitcoin_sv2` library (which needs something like https://github.com/Sjors/bitcoin/pull/47).\r\n\r\n@josibake wrote:\r\n\r\n>  it should be trivial to adapt this example to an SV2 proof of concept\r\n\r\nI wouldn't say trivial, but certainly worth exploring.\r\n\r\n@fjahr wrote:\r\n\r\n> They could have their own set of builders too and maybe the binary is not even released on bitcoin-core.org but somewhere else.\r\n\r\nCurrently I use the opposite approach, where I build binaries based on this PR while it's not merge ready. With the right code separation it shouldn't be too hard to keep this rebased.\r\n\r\nIn any case it will take time for any of the suggested sidecar approaches to reach feature parity with this PR. Since people are actually use this, I'll have to keep maintaining it for a while and release those binaries anyway.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222789717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "mentioned",
      "id": 13471085710,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMi8HSO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471085710",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 13471085719,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMi8HSX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471085719",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:33:23Z"
    },
    {
      "event": "mentioned",
      "id": 13471085731,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAMi8HSj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471085731",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 13471085740,
      "node_id": "SE_lADOABII585_NKHDzwAAAAMi8HSs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471085740",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:33:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13471541920,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMi92qg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471541920",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T13:06:30Z"
    },
    {
      "event": "commented",
      "id": 2222894099,
      "node_id": "IC_kwDOABII586EfqwT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2222894099",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T13:06:37Z",
      "updated_at": "2024-07-11T13:30:33Z",
      "author_association": "MEMBER",
      "body": "Addressed linter issues and fixed deadlock regression in 02f1f86b6b6d46d8ab5e17d5d824b0c1bba5d789 -> 00201802a19124cc8eb671b7f9311326f99f999d.\r\n\r\nSomething cured the deadlock I ran into previously https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2204312170, maybe using the interface.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222894099",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0NTllYTgwNWY4ZWQyMWEyN2M0N2Y4M2RlMzk2NzMzZTgyOTI5Yjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0459ea805f8ed21a27c47f83de396733e82929b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0459ea805f8ed21a27c47f83de396733e82929b7",
      "tree": {
        "sha": "7732999a2727f8f37a372b18564a7da65c570237",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7732999a2727f8f37a372b18564a7da65c570237"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7732999a2727f8f37a372b18564a7da65c570237\nparent 58d1e97355d54ca4b879358aa46452bf5bffd3a1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719946136 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707261 +0200\n\nAdd Sv2Connman\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L0ACgkQV/+b28ww\nEAn6cRAAxErVeZdVPmK5gvnP8xMvMWcOS9PHJv6FRUfY182t4m6XFXniobiR5B50\nxfCKSSQGXXO8/yJ2arR6zbYMesnHdBa/agCEF1Xp6a7D5VDbw2JD05yavn5w5s3I\nZSGbkA/PfR98dEL7ZI6biB11ctk2NaSt20M1RectOYMUHrzP7mgtI2m/7pBOPwS/\n9GZmNjjfyc0WvRR4PoZYlaWr77xILiulwdGx0PlBimZlp18KT0w0ZXQZX3LIJLXD\na5WOPTf4RTzDzwRsNvGOWazdZDz9BIX64cq5YBx4t4ZpHGgOZHK5VMMK+Lig9xcD\nohxO1qlXVNT7SBEkUzLIfe8qUUkNK/DvuGcao1dGiQV7Fq7Be2efX3e1DwTmwGxC\noVT+LZp8hJNLoB5UhtvYFKTrexoT65BaEZk/Gpq1cSPrEjULoCodK02ALHRLyRSG\ntWpu1ZqJT8tXLEEAfrFb4UhzEis4EZsUcSp2wXoxzdXW0ZDHM7NHrzC/Xg3mb3U8\nt7wZzKyiuwLkDY4/OObqTOzU1SjReoHSCeinSLf9HGyzXkFh06GmliZQKd/mtzqy\nG6bfTkl3wxh/bvQ2GxMmV5WTVyo7NiSQmzEM0Xm5K+otdfcT2lZl7PaAyVP5pPP9\n3lKwiZI9i3lvED5XEHclYUElYhZIAAe+ZJ6rnFrXOLqHjCjMYc8=\n=Z62+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58d1e97355d54ca4b879358aa46452bf5bffd3a1",
          "sha": "58d1e97355d54ca4b879358aa46452bf5bffd3a1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58d1e97355d54ca4b879358aa46452bf5bffd3a1"
        }
      ],
      "message": "Add Sv2Connman",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:21Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-02T18:48:56Z"
      },
      "sha": "0459ea805f8ed21a27c47f83de396733e82929b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3NjE0ODc4Y2E5MzM0NDI5N2JlZGQ2YmMzNDhlZjljZmYwYjczZjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7614878ca93344297bedd6bc348ef9cff0b73f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a7614878ca93344297bedd6bc348ef9cff0b73f9",
      "tree": {
        "sha": "f399db61c53a9422c50be7ec7f448055dd5747d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f399db61c53a9422c50be7ec7f448055dd5747d2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f399db61c53a9422c50be7ec7f448055dd5747d2\nparent 0459ea805f8ed21a27c47f83de396733e82929b7\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701277619 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707261 +0200\n\nChainparams: add default sv2 port\n\nCo-authored-by: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L0ACgkQV/+b28ww\nEAlp4xAAs1pq5h+oLQ4N+1BnyFqff3T0kTmhG2NQxHM9qGOLFh8vWH9W6tWJTRPh\nSISpjEcAOPakeu7vTB4R9Px9lsPpR9l2seLmvYILRbCLwrAdVVSODf4FUlFCq04W\nnb/S8Cye8JpQMq9fdrAalX/dPhAACgzT36c9hFklam2pNrGDwhgIZc92IjAw7qx+\nJsh1nfeSWyV/ibeOxxvVdi2ea55DG+q7QrBm3n7ew54lXH3fm6jN5nA1bKkpqzEu\niedp8QDAFL9bUsiEFDwVQb5RHINNMhojwWm8i+BPMpkc8oSfeZxD1/JNLHPTuP1J\nf0SQuZHarPT7HUTtXzeu3riFqJLfgzuG+R7YdTW01TF70BDdKmLGJ6KRSZOY/GFr\nzx7tdGI7i0BubCC7W4Pc8p0jcJOmWP6sbAQF0mGXiG2J2PXxdL4wSeElHdkOugdG\nqvZUhtzJjfqe/2A7KG11kH02usnFfE0hecyUZd7JIB5QWzCgVIAX+GedkDLjzqc8\nGyj/JU53ksxCxW8aEa3iJpeiFUVhkYQzC2dTSFJV4Pmk1Ogt4WslTd+wcUaFnHI8\nyMcYiQJNEpppdm+k8t1CLkfaq79gyG/rXZGZve+cxXHqo074DI8NyUXRj1QDKRXp\nCxNeO2X8c6ZaLrDQCe/rARxHDA1H5JYTa9B4ssvdhEwXWZFjfw0=\n=0+hp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0459ea805f8ed21a27c47f83de396733e82929b7",
          "sha": "0459ea805f8ed21a27c47f83de396733e82929b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0459ea805f8ed21a27c47f83de396733e82929b7"
        }
      ],
      "message": "Chainparams: add default sv2 port\n\nCo-authored-by: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:21Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-29T17:06:59Z"
      },
      "sha": "a7614878ca93344297bedd6bc348ef9cff0b73f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkOTA4MzI0Y2EyNjQ3ODFkMjM0M2YzYmQ2YTM3ZTIxZjI3ZTIwNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd908324ca264781d2343f3bd6a37e21f27e2054",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd908324ca264781d2343f3bd6a37e21f27e2054",
      "tree": {
        "sha": "25a1228f27c407727dd8ce7b81bada34ea9c0d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25a1228f27c407727dd8ce7b81bada34ea9c0d25"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 25a1228f27c407727dd8ce7b81bada34ea9c0d25\nparent a7614878ca93344297bedd6bc348ef9cff0b73f9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718724046 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707261 +0200\n\nStratum v2 template provider scaffold\n\nThe template provider will listen for a Job Declarator client.\nIt can establish a connection and detect various protocol errors.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L0ACgkQV/+b28ww\nEAlOCA//estWZYFBfw1pa28o/zhxGZdEQ9lUM4oDqTLViFLrggJDKNyL8DCnCtyE\n12a3WU0sE4qeLqtJrYIY9EMEXrrUv5WpBmcWa30wWBYc76lg20Qt5Zt5IH7KGK6F\nhiMiOsLcJFcF0JrrpNd+N3NYEGNzcwLMVS/4TG8DYvsMIOb5ySyKPFo885XZhDFy\nQ7XSw3ZzEzYrERQcJfpIgPoRbTO7ACEUyNdQSQSswDZUDQcW4g4xZyJJq4JxSH76\nsMKjm7BuF/2pr0eSo3BBr6DQPTUsADcD8sAK+w8aP/rRkS2+ts/lbILWh95R92mV\nZclCTrGWaARfuIAZEecm0uW4FsYwtM7uDRga1vxkamBAmJ0DwztaUwjOYUJ3s9/O\nNAgk4nYj2MNUtcnTYFVBBAYG+byHbk08xwS5YJKmzc2JxwH8sTmNddugpVJLlVeQ\nmd9zDSK7ip+P+CsAzWxwR395XBa7VRG9mr78TwWCTpwxZqcziFKlJZem3u2Xufmh\nueYjOm/Rvs5FGgluJm8/MPrMuMUJFn67JZdC84NqlAaz1Bp3vRWPcMGQiUUL+5Li\nv3E8Jzk5nlohp3mLm0xEcg/0xEkTLZuMSqVhy3PKMORIXL2PkpSTaaZC7onUlHXR\nYpeTYqvQaJShbQB3YmSx5kLMqePC3LyOvFu/e575D7AL8xh6wYw=\n=BJG3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7614878ca93344297bedd6bc348ef9cff0b73f9",
          "sha": "a7614878ca93344297bedd6bc348ef9cff0b73f9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7614878ca93344297bedd6bc348ef9cff0b73f9"
        }
      ],
      "message": "Stratum v2 template provider scaffold\n\nThe template provider will listen for a Job Declarator client.\nIt can establish a connection and detect various protocol errors.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:21Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-18T15:20:46Z"
      },
      "sha": "fd908324ca264781d2343f3bd6a37e21f27e2054"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4ZmI4NmZjZjEwMmJlYjkzNzhiNDU2NGIzZWQyZTE1NDhkZDUzNzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88fb86fcf102beb9378b4564b3ed2e1548dd5376",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/88fb86fcf102beb9378b4564b3ed2e1548dd5376",
      "tree": {
        "sha": "43b8c958af13def31d8085181e046285d6c2ada5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43b8c958af13def31d8085181e046285d6c2ada5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 43b8c958af13def31d8085181e046285d6c2ada5\nparent fd908324ca264781d2343f3bd6a37e21f27e2054\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719231725 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707261 +0200\n\nAdd remaining sv2 messages for TemplateProvider\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L0ACgkQV/+b28ww\nEAmxeg//Z3DKDgXLFWlShYlGny3pl7hGuWQG3Dh1SWmf5pmRhRtwvRcycRRVqrs9\nBnMEIJpJyjuqLIGY/ss9WNNaEgKJi1AzVNR06psBf0AmVXzKZS9VLjqzyWgeRDo+\nazRkkTsAZF+oNMhfP6N70DAWbLQ65SZ9oNDtniOvKOyK0WSoKKczR+E3boo+M+4z\nYx0btS21rUCtxBBP8xzzOT/Kg/ttOdzRyyagceSWKGppzEHlpoeBbLN4yAx4rFZi\n8YiX/3FkobwXQ7muZwmSC7MlabCcHRC72371+wDo+hUemgU4NFe316a/kvRGLMje\n3J6GFmkiHJCrecnYSEcWOjUGvnfs2aweQtqVffDWV1DSMonLyOZc8MzFcpgao78l\nZuXmwDeoaTqQ1C6tTOOdUyfGTf+62Nq2gSzacmAXrlmclnMNLkFDeIJGP9ceWXPC\nbg28nAWZdUNl7MWTFNZ22CK0bce25IGqTwEYKC0iptkx8NbcsFsdeCCQ8X5vgPt+\ndQ2r809McCi/m6sHjUgc9Uhxq3vaRE9LUcBAr2NSLcDwqRZS/Dz59O8/wAuXvYj1\njTGx6J9g3f19hRx7V1CDL+pRwNKpFskFvqjRFovpk3A0nQAt3CN7v7BPEbA5pOlh\nPPxcZioFBKl9yU7YywM6qReWNw2rIUC6vEoNIuLHFFV3QguF0tI=\n=EWf1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd908324ca264781d2343f3bd6a37e21f27e2054",
          "sha": "fd908324ca264781d2343f3bd6a37e21f27e2054",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd908324ca264781d2343f3bd6a37e21f27e2054"
        }
      ],
      "message": "Add remaining sv2 messages for TemplateProvider",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:21Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-24T12:22:05Z"
      },
      "sha": "88fb86fcf102beb9378b4564b3ed2e1548dd5376"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1NjlkM2Q3N2VlMzY5Mzg1YjdkYWI4NjBkZjRjNWIxZTlhNmMwNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2569d3d77ee369385b7dab860df4c5b1e9a6c04d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2569d3d77ee369385b7dab860df4c5b1e9a6c04d",
      "tree": {
        "sha": "0f0252919b7ee6e1e520f871f213cc41ab680997",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f0252919b7ee6e1e520f871f213cc41ab680997"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0f0252919b7ee6e1e520f871f213cc41ab680997\nparent 88fb86fcf102beb9378b4564b3ed2e1548dd5376\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719562149 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nrefactor: add coinbase constraints to BlockAssembler::Options\n\nWhen generating a block template through e.g. getblocktemplate RPC,\nwe reserve 4000 weight units and 400 sigops. Pools use this space\nfor their coinbase outputs.\n\nAt least one pool patched their Bitcoin Core node to adjust\nthese hardcoded values. They eventually produced an invalid\nblock which exceeded the sigops limit.\nhttps://bitcoin.stackexchange.com/questions/117837/how-many-sigops-are-in-the-invalid-block-783426\n\nThe existince of such patches suggests it may be useful to\nmake this value configurable. This commit would make such a\nchange easier.\n\nThe main motivation however is that the Stratum v2 spec\nrequires the pool to communicate the maximum bytes they intend\nto add to the coinbase outputs. A proposed change to the spec\nwould also require them to communicate the maximum number of sigops.\n\nThis commit adds both to BlockAssembler::Options. The default\nis the same as the previously hardcode values.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAnACw/4x3ywHiVVwICYdLhH+B0rjxlWO1v3gZFiImhuMrE8XyETnRHU9iABhgU4\n9bbDCim6Tz+6dU/c5Tg5vi5Wzil8EwSs1JvDDO4Wz8oFdKLM9cYFnG3OgPyJsWBt\nFGEFCUsWfJfPNEVXY/tzqLTBfM4v8t9MamUQ9uQ6TRI0nfcBu2itBY4ezfn5tg9V\nlCYxYqA7v/pAeXAf3WbnuQafP8hzFXFnCbz47HlpnjulhAi/zGiJzhId86pC6XqR\nHYAfG8IRwDQFiz6yWWWLmggIz5mIyWKW/2REvhqwrg16gDAKOW5sWKa1w9DHqvO3\nuacuQFokZZZgMa0h5UgEQZKEHpxgAmJvvbBy5nm9zxYhGCn2hYZ/fKgLNJzV3gwv\ndn2A6wLjJD+m5Xnz79B6HE0YXLqZFj0jiHw5N5g3sIAAr3eCLyFV/9bZQ0sp/kee\nZDkGUiU9SL7TFWVxeTdJZn62MfXR8U2njCGZG95AnG97DP6KvOQa0DLmp0jGYpe7\nlYwUs2kYAvXEpcSPRP3VKInae51TNsJy3CxVkz0ar16HkumEenCul27AW0IgnnXg\nKPmEjm8n0+RR39WetZP1zZBGTW/uAkRP3J9QkkaLLnhprMpuRfiaklWKiAs2Cx2v\n6c01sliksBfcZY3W/fQXVBZCgvrRjMBhXkB/cl2nVQLlb4FRxA==\n=Nq5k\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88fb86fcf102beb9378b4564b3ed2e1548dd5376",
          "sha": "88fb86fcf102beb9378b4564b3ed2e1548dd5376",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/88fb86fcf102beb9378b4564b3ed2e1548dd5376"
        }
      ],
      "message": "refactor: add coinbase constraints to BlockAssembler::Options\n\nWhen generating a block template through e.g. getblocktemplate RPC,\nwe reserve 4000 weight units and 400 sigops. Pools use this space\nfor their coinbase outputs.\n\nAt least one pool patched their Bitcoin Core node to adjust\nthese hardcoded values. They eventually produced an invalid\nblock which exceeded the sigops limit.\nhttps://bitcoin.stackexchange.com/questions/117837/how-many-sigops-are-in-the-invalid-block-783426\n\nThe existince of such patches suggests it may be useful to\nmake this value configurable. This commit would make such a\nchange easier.\n\nThe main motivation however is that the Stratum v2 spec\nrequires the pool to communicate the maximum bytes they intend\nto add to the coinbase outputs. A proposed change to the spec\nwould also require them to communicate the maximum number of sigops.\n\nThis commit adds both to BlockAssembler::Options. The default\nis the same as the previously hardcode values.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-28T08:09:09Z"
      },
      "sha": "2569d3d77ee369385b7dab860df4c5b1e9a6c04d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkMzhkODkwYmJjNDVkOWI2NjgzMGZkOTMxNGMzMDZjZWU4YWRkOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d38d890bbc45d9b66830fd9314c306cee8add92",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d38d890bbc45d9b66830fd9314c306cee8add92",
      "tree": {
        "sha": "b80fd8d5b3dcf2af0f72205cc96c721a8653497b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b80fd8d5b3dcf2af0f72205cc96c721a8653497b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b80fd8d5b3dcf2af0f72205cc96c721a8653497b\nparent 2569d3d77ee369385b7dab860df4c5b1e9a6c04d\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718720678 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nAdd util/mining.h for default coinbase constraints\n\nThese defaults are needed by the Mining interface in the next commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAnyOxAAq7KMs9MBrs31l+CVsbObbVIZ9JJ9kAOYDIddmW4TKc9RfQ9Nc+ZGIFls\n6/F5XvpFoFqKy2Dkp+VXhjX1hzcm+WpjGngGTDiVs2F6JoKNSHHWJJ2nndRa0rX+\nJZKeXtVOh6XWxxm3fjPKTNjFPD7Dim8/o1Mdz77D/RZ5AI9lurxpBlpnq1a3U8FS\nZNQ1nmKNM14CIhQifKwOUcSUwc0noXqUBV8wxO80Kjh0UKne4VR4hHOXrkhMMo7u\nqpjBMFuVNsBOy+z4Hd9AfWtlic3Qfl1qfG1EbsQ50vtgdyPX5Y/8rtOlvZGQsZhR\nMH3HQyjlYjGWmtqEkmBdbKkZwfgI3asBrUbUX2WqBIntdtGLX4h537XZ57KwHu67\nLFrP39PgC6Lln/PNwb88yO487EnOmICR63uagDOMRK0Asi+PPMh+AgkW7fOBJ+ER\nUhPpdodLzOPMWjos5rvARdvkwz2KwF8gM4f0zZ1fTqOfCtxX676Do+RW8QhITuW6\nuDP5lS50jCD1n5RP2kSeQenGtx//+mfICYNf2cqbay4YIqalBdV2Q0G1nrfqP0R1\n6pTen32KF+PscNqzAqf+9RcUDU91KdrenSQIJTjMS8h/e9kPIoEelOt63tKywnE/\nk6YqMKW1Fh15nKqj9mwXZov2O3xgwoR39fqivp+S148o30GuyXA=\n=P7Ym\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2569d3d77ee369385b7dab860df4c5b1e9a6c04d",
          "sha": "2569d3d77ee369385b7dab860df4c5b1e9a6c04d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2569d3d77ee369385b7dab860df4c5b1e9a6c04d"
        }
      ],
      "message": "Add util/mining.h for default coinbase constraints\n\nThese defaults are needed by the Mining interface in the next commit.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-18T14:24:38Z"
      },
      "sha": "3d38d890bbc45d9b66830fd9314c306cee8add92"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhYjc5OGNlY2IxMzUwMDI2Zjc1MmVjMmE4MTk2ZjBiNjJmYzAxNTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ab798cecb1350026f752ec2a8196f0b62fc0157",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ab798cecb1350026f752ec2a8196f0b62fc0157",
      "tree": {
        "sha": "dbe07f87942357b8f538b6f6e4b538ee94c5dcd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbe07f87942357b8f538b6f6e4b538ee94c5dcd2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dbe07f87942357b8f538b6f6e4b538ee94c5dcd2\nparent 3d38d890bbc45d9b66830fd9314c306cee8add92\nauthor Sjors Provoost <sjors@sprovoost.nl> 1720687509 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nPass coinbase constraints to createNewBlock\n\nExisting callers of createNewBlock use the defaults,\nso this commit does not change behavior and the\nAssume(s) won't be false.\n\nThis commit also documents what happens when\n-blockmaxweight is lower than the coinbase\nreserved value.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAnEPQ/9Ew19WHLvma8Er/UyLjBr0hb/Ucspeonvbt1SzVIlR5iEkUGW2bpcbTWO\n6yNUZcERFzpoeyIHBhegbjjj0JGxIofbxjEloHQzFfZHr99cFq4zHqRFwgEVZqVj\nD9kbopF8K0Z6groEGFDFVSn0tfm3kW4wZT/CDdX8WpMQPCxcrH8w84FrpLUf1ogb\n4cltcKm1iVqhU3/G2qcih0vTb3eZ+EROplGsw+XyCRk5einLsonTxvERbxW2um51\nmTdJonD4Tut5/ioQCybPbHdnwkhEWn95o7VMTQJciZnvw7gruzogz0kRGv+6DdPU\nfl0PSdbddTHkIaR+u3bEE++PA2FpS4GfoaG9PZbMO5XFjNuB7pQ3nMULnVSYAYrD\nYDSOf1TUwosvknqHGg/ZGaWQP+7dFyp/BakMas/riH+In6A9v3iA+3Wj1BBvPtV3\nqW3EFG3Dtr+3efaiSA/QEkrwMT0W3veo+jgRLrL5tTz/M2Ksm8VVRcKBVMx3ciwA\nU30bWzepe3uZn3j8HzlD2cOwJvk1hRh0FHVm+tuwuUbB3FH9b3g9EyoGnuMyePHt\nlQnhcg9ZCg7YuYnupXDHeHrJo2qDfzbTw1/n+lAbRgMZs901X3l4Ci5c7d1aaCMT\nb53D7murSGz3aDHMqiiqO0VC4mVD4PVVxn3z6OhP4oKBVO2qtTE=\n=H8BB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d38d890bbc45d9b66830fd9314c306cee8add92",
          "sha": "3d38d890bbc45d9b66830fd9314c306cee8add92",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d38d890bbc45d9b66830fd9314c306cee8add92"
        }
      ],
      "message": "Pass coinbase constraints to createNewBlock\n\nExisting callers of createNewBlock use the defaults,\nso this commit does not change behavior and the\nAssume(s) won't be false.\n\nThis commit also documents what happens when\n-blockmaxweight is lower than the coinbase\nreserved value.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T08:45:09Z"
      },
      "sha": "2ab798cecb1350026f752ec2a8196f0b62fc0157"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiODU3MGRiMjg3NjE3ZTU0MzcxZGJkM2U1NTM0M2ZlMzI0ZWMwYTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb8570db287617e54371dbd3e55343fe324ec0a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb8570db287617e54371dbd3e55343fe324ec0a7",
      "tree": {
        "sha": "95bc4d88bfb8d4fe3fb1f4553f876b6ab3df80e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95bc4d88bfb8d4fe3fb1f4553f876b6ab3df80e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 95bc4d88bfb8d4fe3fb1f4553f876b6ab3df80e5\nparent 2ab798cecb1350026f752ec2a8196f0b62fc0157\nauthor Sjors Provoost <sjors@sprovoost.nl> 1720456394 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nAdd waitTipChanged to Mining interface\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAlgow/6Am4Pu/28u2FtMwjJQJIf+MaL8Y17inB4DuXcZkHM3VP2FYgaFFHbPj+z\nxSStetkrDHoaIAboB1MHenKFvEO4WGtiKTxayu/+1Mosdja9MWay7wQNJZFGC5QI\n74ayqG8bqF2MwYAvUUld1Yy8wfXNVjXzXt5/bw2wGwx/USHpKSQ9OnjoC7mr1GFs\nRny1eypFgLUrg3f7L1SDgeY96i1Nl9Yaxsxh2CMGZ89s8j5nwGUanHJY4gL/+MYX\nFx5fnJajkP2Ym7BiF03BYGMqL0FTCoWQuen4TyMR6W2kEfSQTMTaoXn7qYpGX2Am\nRTry53H0BER6ZmsFlERWHVlXUGtiETc3jHszLtWSPbdYDK8i/PF38JudYL+VnJkF\nZntaUd008JWhNLOil42ZGg6ysrAPJN/6ixSCGgHaGB08uGLG3ZeupM5ZlyDicqp3\nBW6cRGm5YJKm2n57SVDNK5JsIzrPepOE5uNPeuNY5U7A2kLQewidIAKVn/M00y95\nfsqTofbO+11XAgTx19cP6q/qY1gLevIzlgTEQ4LTC3Aop16rm5NWhS3E5PcEkAfy\nUgkeIKYf/O5JkHtcj41DidNAitjOZmfbZAl3UhWctpxZOmTx2R5tK7uwyYT1a4/o\nIChqeLBTS9O94DYGGBJEZNduIuehr8UWkWRdcwK6PW9DlnXZU98=\n=hZM3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ab798cecb1350026f752ec2a8196f0b62fc0157",
          "sha": "2ab798cecb1350026f752ec2a8196f0b62fc0157",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ab798cecb1350026f752ec2a8196f0b62fc0157"
        }
      ],
      "message": "Add waitTipChanged to Mining interface",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-08T16:33:14Z"
      },
      "sha": "cb8570db287617e54371dbd3e55343fe324ec0a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4Mjg1MGY3OWE5ODhjZTBiMjgxYzRlNTFjODI2MWQwOGE2MGI0N2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/182850f79a988ce0b281c4e51c8261d08a60b47d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/182850f79a988ce0b281c4e51c8261d08a60b47d",
      "tree": {
        "sha": "8f0bd4c099eaf92b3a036a64477ceaec4b871662",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f0bd4c099eaf92b3a036a64477ceaec4b871662"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8f0bd4c099eaf92b3a036a64477ceaec4b871662\nparent cb8570db287617e54371dbd3e55343fe324ec0a7\nauthor Sjors Provoost <sjors@sprovoost.nl> 1703773536 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nSv2: construct and submit block templates\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAkW2A/+Npndz163xcBMqllKNFiKDKDTAe5uqbcdBRtWFi52OTQN3kMY8x0goQW2\nid31Tn/dM7KfgNIQf0bf2x2vnKXF1FgcaffaBFZQqZDggr/dC2LgrFGbfE0u9Wym\nYf5ViLAAir2vbUc1Xk9Yd6YW4wGnyb1hHwPDHdYlhqbZTra2Ww9nGvw1vdLRAPsr\nWCSAZbcY/p+a+hnX5yh535y7fUXYszpVtC+PwRgUz6WH5cL6AY44mIeUtrUPdRHR\nzb1QyXoSyAq0YVG0o31Pfy6eMP782V1vDkUa5YIqk3wN6R+xGOA++7TxuyzSE5zm\n+7+TjFD017lA/BhmEjUXzpzo7eW/0SSOCH/VX0TYEeWk12vGD6fENBj8rqzebsyV\n32nX4Yw3/R/an8YOGEvOL8srszdizj+2KrPdsU8slODPGepOgQmcClFQz7t9dnKK\nCN6gNEETDWt423iwaCWWs8wl/UQQP6mFOv/F2XUtXQK2FLv+vfgsOoxLbE4GJ8Yk\npkY2jFQdgDjE5/C52YpJ4dXjmfpFsp6h5oyVmsBZddxRKGsiIr6m4CjvPeToWNE7\ndGGnwhSYKDI0wf28/715nOEUeHStp44UyNXw/HXjasr8oLeAYg0FP3+j+wBUAn9D\nX9KG3rgmHzEA1t1afNsA2eOLzfa4t7mk0mbQt/eGWHDio7dSm9g=\n=zVBo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb8570db287617e54371dbd3e55343fe324ec0a7",
          "sha": "cb8570db287617e54371dbd3e55343fe324ec0a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb8570db287617e54371dbd3e55343fe324ec0a7"
        }
      ],
      "message": "Sv2: construct and submit block templates",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-28T14:25:36Z"
      },
      "sha": "182850f79a988ce0b281c4e51c8261d08a60b47d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxZjFiODIyOTU5Y2E5YzZlOTUxMDBmOWI1MThkYzA1OWU3OTdhNzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1f1b822959ca9c6e95100f9b518dc059e797a71",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f1b822959ca9c6e95100f9b518dc059e797a71",
      "tree": {
        "sha": "7e5665010e55487a0019d2f12281c189fe3a2bd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e5665010e55487a0019d2f12281c189fe3a2bd7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7e5665010e55487a0019d2f12281c189fe3a2bd7\nparent 182850f79a988ce0b281c4e51c8261d08a60b47d\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719926029 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707262 +0200\n\nHandle REQUEST_TRANSACTION_DATA\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L4ACgkQV/+b28ww\nEAmrVw/7B3ZfeB3W1N2oZufvYR3Hijtif54NUdNOEG9kcIT3xcIfwsQ8zEfUz/60\nNPoYyiyCTcY2xgQsOetILUeT2zomU8j4FdktAsXiTSP/k6S2/ZYvHzb1cwXT01Pk\nh5SXh+vW5jdqyRStyW7cqEmyVvQ9JtFIo4iNsFBQ9VJ/TF98jrDma5YCyfbQqNCw\nLLmXZPuwsm2Y7tNxi/GUPwL0Asg4LAP+OH9VpK3KwGHcQAX+W5DkrAW5L1s84N+S\nl6LCP7/GEcWMWHjGLjhOTaRCD8IqEIo/d49NXr+lgCBlrKE3RFmAi/b6wusjL2cc\nmBuWB9el0PRQUcvV3oUaUK3aapMVSPU4MO91JiesFVW3mndpKhAvK117/7gGywB3\nBLhJsIPMs+myTFxBHhSuygHd8howO+Nt/BdZRgUR/i5f+cfbgung2ynP64n1UYNc\nFmsDvcPhUd3w3dnVlyh7e6C0k0eENBWHT1yE0JidDoq4dSzzHK/DJ+AhcI9QhaeS\nw25W9IWnlUxFdSl/vAuFMMNLP5pJ5fZBbdX8rqgmCSc4s+UrN6QfWcIy5bh1Xh5v\nEVx8MJNbR9Ps0jWXVgfZoIbV1scQF1UL4avAGDBXq8Zth83K8IF89KoWEpaMNbMS\n2UtZn6Kdl7JQR8J79MmOf44IXYqsk/fRvhy+lXTLuHFwpAHpRuE=\n=YbVl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/182850f79a988ce0b281c4e51c8261d08a60b47d",
          "sha": "182850f79a988ce0b281c4e51c8261d08a60b47d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/182850f79a988ce0b281c4e51c8261d08a60b47d"
        }
      ],
      "message": "Handle REQUEST_TRANSACTION_DATA",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:22Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-02T13:13:49Z"
      },
      "sha": "c1f1b822959ca9c6e95100f9b518dc059e797a71"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzYzg2MjRjMjk5ODkwOGIwN2RlZWYwZTVmOTVkYmU2MDVmNjM4NDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23c8624c2998908b07deef0e5f95dbe605f63840",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23c8624c2998908b07deef0e5f95dbe605f63840",
      "tree": {
        "sha": "6334812e68eb575f5e0f5bf1fb94897b382148fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6334812e68eb575f5e0f5bf1fb94897b382148fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6334812e68eb575f5e0f5bf1fb94897b382148fc\nparent c1f1b822959ca9c6e95100f9b518dc059e797a71\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719938735 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707263 +0200\n\nReject RequestTransactionData for stale templates\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L8ACgkQV/+b28ww\nEAmElxAAig5qofE4fYLt2B3h+6YXMRSvJI2myKnLPBx+trNn/YO4ox5WyZcHrGxx\nJ9pi0LKLbxxctxhccu+znY+Gpexc3qEv6tUZB2aUD7HtB5G8a6AgUIlgm3Y0jcJx\na861JJ200IpKJHMMCyX3JD1fSRvKq0Uo9Wa0WAV9EuqOIdeVr59XyfNTPrPj5JVI\nRtxTdz9qtAoFi3Xyt5pZleBWG1tUvBD1IThxZ2ADnDlqjUiT3aR2QS33ntoG/axc\nrAlFvwsdyFo68L6MPgqNDpeWHZuMDUMdeFe/p44hX8IdM/7+/WK95p7/lsW0R9T6\neFWLx0NpzciHXdZZ/gmFP2j/GZlVNOxNiIx6fbB3O3ED2nTJ4DEiNGptLEdJ7WqW\nOtUUGt8u/CcHWnCDn6wWET3JYZswMdeVV19ygJxK4MHV5zd67zZo5ODPM2H57qMK\n5OKMli6Whdp4BHX3qb/sQWJDDYNVCi92g0isif2j8/8AJew4X3oObZ2ialXj23iC\neLI9KvhPlPPf+z9hPC/28PuYGDY/noW5u6GqD3RVrIZ1SRY07bNbrzhMXm5+Kn1o\nhMyghrC8veeWeXixRhN5hHQAqpRbaB/9WJ2tWIrAVsFnDaYHK6O29nQB4EeMsjb+\nDKMl5mzORViifVNzKZjj3P8W0/42nOUvVveGO8PeqoStBs0oeDc=\n=bVzf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1f1b822959ca9c6e95100f9b518dc059e797a71",
          "sha": "c1f1b822959ca9c6e95100f9b518dc059e797a71",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f1b822959ca9c6e95100f9b518dc059e797a71"
        }
      ],
      "message": "Reject RequestTransactionData for stale templates",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:23Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-02T16:45:35Z"
      },
      "sha": "23c8624c2998908b07deef0e5f95dbe605f63840"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlMzFlNzI1YWExYzMxNzI2NjM2NmU1NDVmMDFkYTQ1NjkxODFmNzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e31e725aa1c317266366e545f01da4569181f70",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e31e725aa1c317266366e545f01da4569181f70",
      "tree": {
        "sha": "bd6c01e2e44a89bc258f4e341a8195cce5cbb350",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd6c01e2e44a89bc258f4e341a8195cce5cbb350"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bd6c01e2e44a89bc258f4e341a8195cce5cbb350\nparent 23c8624c2998908b07deef0e5f95dbe605f63840\nauthor Sjors Provoost <sjors@sprovoost.nl> 1719926042 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707263 +0200\n\nHandle SUBMIT_SOLUTION\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L8ACgkQV/+b28ww\nEAlwFg//RPio4fyJo62P/kWZkgS8A+7jLSiV6tF1YW6MVhizoJ/cWU5+tD7Eh9ET\n6xuvVun743lCOgIuzexEKxhmm1w2lltRXAiW2ag20vtT/KTfIzAHap78V6WARdfH\nXTbYkjZgDmQVkkD3zUBtW0EPyeULXjymyOBImIlgJm2fnB4RNQXI8SqyxS8x5m5o\nOIvmnRLX3Pgjtb4gVMRRrdMt1AdlucRgdg6JmLcmeZFXYMqGWu3qawn28hlX9U32\nNNhR9wzDbsS4DZYNkSSZR2JsXK+e5a59r+/LkyL1sf9A0srKT/5zd/jhOzMyinSu\nqeddQ5hFmGtIAolXL9OLMLjwnmjQKzqYYGeIzFB7saMwod21SOPaW8xvbOMmL8PB\nBppEDts/sZRQBxapSvXSuJcYjb/Ij/PrZ2wEorq7Zw/NXTfpshAyhz7ztaqfxHfe\n2TjUwmziINZA0uDu1cvKYjpIGmLvKZLwBtbJpQT3EuydfTxZylGZxFeFsw0WuYPV\nt0iaEyXXEKfKh7HS8z/G8n/jKSu0cLm+scv9ObJp3XNRXHyGbX0gtRnX4eG4XH6i\nJu5NoY0/p4r8mBfmUY69ZhVFPSeeMzkf+l6CBIfuxJobamdbP76pqH8l05JbPktZ\nKGH/QHbRuwQjo0psYvlKwYyFyeK5zs10u5k03yY0gquicFTDEwU=\n=fc3I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23c8624c2998908b07deef0e5f95dbe605f63840",
          "sha": "23c8624c2998908b07deef0e5f95dbe605f63840",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23c8624c2998908b07deef0e5f95dbe605f63840"
        }
      ],
      "message": "Handle SUBMIT_SOLUTION",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:23Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-02T13:14:02Z"
      },
      "sha": "4e31e725aa1c317266366e545f01da4569181f70"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkOThlYTdlZDg3MWZiZWI4MjA0YTc5ZjgzZjBjNjQ2OGE2ZWQ1Nzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d98ea7ed871fbeb8204a79f83f0c6468a6ed579",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1d98ea7ed871fbeb8204a79f83f0c6468a6ed579",
      "tree": {
        "sha": "370a92f4873e45b85cf39f1885661eb5c4070dc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/370a92f4873e45b85cf39f1885661eb5c4070dc3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 370a92f4873e45b85cf39f1885661eb5c4070dc3\nparent 4e31e725aa1c317266366e545f01da4569181f70\nauthor Sjors Provoost <sjors@sprovoost.nl> 1708086291 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707263 +0200\n\nIncrementally update sv2 block template\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L8ACgkQV/+b28ww\nEAlOihAAp4Pw5vKcPKUbFqhCl4p8s+aH1cMJYhHaXLjyrn/Knj4/YmSSpuDW+Kcx\n1ZxyQ3sBYoBjCoD1B2vbr2Z1U31oEEt7S4ddLEC6jP7JKwJzhWIM+QkJXMls5QWS\np9qsnhz2FmmUkvxxR9iGQNJT4jXQXBtp+j1oqqI6TtchGLPIg0pifnR64o0wEWk3\n3lZC2LFR75VLSDt7RGozfbivXFKESSBRdPZncWWdOEIPo688n78kWyok9tjIbtkp\n5sJZnC+5XfRxfDWwghFxXlXvSyp8g856rnl+7alEpJgopfjouQ+QWI/sqgn2F6Nw\nRo8eh39rQlef9GizOh5vitAV/gYsitglPtWIuoMlxRuOJHAhY4AKw7UWGrE7lHC9\nN6cr60ZuSdKnUYeqmaTNYq7/SJ0/th2UkSB19e1dSND1+lELJT/LbzQXr2cYrIP3\niKQpbb6An/+eRrhayVHSDD6zO0aKir/BPIMim/YK6BO2JQBew/vUNhzqHRkxAZ1Q\n5DtN2YRArFXJXcWLd5Wfp6lrcfRPzZcdgLj+Dd7Gp6NpEoZBke/wNfVV55M7z4ZV\nF352ye59TsNDpjOwqVcllzIQ2pxYVRBiULWgJAPuVn9JzR+MQsugsPBgYOG44122\nwX61V3D9xtbkUg7zUxZ6XWKjhBC8QAhLTvBkyoZCXBYLavkpaV8=\n=gf51\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e31e725aa1c317266366e545f01da4569181f70",
          "sha": "4e31e725aa1c317266366e545f01da4569181f70",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e31e725aa1c317266366e545f01da4569181f70"
        }
      ],
      "message": "Incrementally update sv2 block template",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:23Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-16T12:24:51Z"
      },
      "sha": "1d98ea7ed871fbeb8204a79f83f0c6468a6ed579"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1NWE1ZTA2YzBhNTE0Mjk5N2RhNjM5ZTE1OWI0ODRiYWNjODI5NTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/055a5e06c0a5142997da639e159b484bacc82952",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/055a5e06c0a5142997da639e159b484bacc82952",
      "tree": {
        "sha": "491e6591540b67501aeaf249af3967b638cc1a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/491e6591540b67501aeaf249af3967b638cc1a62"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 491e6591540b67501aeaf249af3967b638cc1a62\nparent 1d98ea7ed871fbeb8204a79f83f0c6468a6ed579\nauthor Sjors Provoost <sjors@sprovoost.nl> 1706793529 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707263 +0200\n\nCKey: add Serialize and Unserialize\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L8ACgkQV/+b28ww\nEAmHjBAAopyf3Io0S5rgEb7p2R7NDKLBaJdzfwz8Pk8iFPS/2APN5mM56gkuyb1W\n9ujKq3fUfvqaiIbfRjS9iI8C2hGuVYOdAyuWrW8axrc8FsO5XOrQ0B7rhDH2owZn\nyyvC8hcCTaJyOunx2GN+EdYCxYLzEtViAPDyapDnJbDvGzNAKhQSCWJNnnRLwf97\nV/5+wK29oKIYm8ypFUiA1mTOAAxojTOunnll5OWbHDcPD+p0I63ourCXjLQBLxRN\npRFqEeydpSUN6dJZHkhUKhNYwKEX/6F/Fg/tkOnEkqU+5OSi0j2V7On2amYen+mk\nQAcmW09Dp8FFZGJJ8aIyX7DZ1ze+xpYDvbdadSkxz6OQ/5S9nXGdGUvoZa4/GZo0\nVFbbihB8DgIoMY4eSPU4wJJQkQZvflh5l/67moE4Gs5CAwMyu6t6piy+MTmx2mmv\nUnCo+A69NhfenHKxaqSa2rmPOKyXIVoH1z5S8GPvZpQ3IdkskeEKrHq4ruMaAOEv\nRF86551xTT6FBlkVOUdPBYwXKlnonp3Cs24k5wBIAdI36GT4B1gK1vCYojVuj/Aw\nbxPWoKePvITKwqzfkTVmSo4SSI/Z9qrMkhRT3I7rk9sa7Hq3ptmuBaqvljL2JamN\nMbJGu4yDNa8AXfGWfXZ3WLWNkQMJyj5riBnidyNMhsUqT3CY0wU=\n=uFvz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d98ea7ed871fbeb8204a79f83f0c6468a6ed579",
          "sha": "1d98ea7ed871fbeb8204a79f83f0c6468a6ed579",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d98ea7ed871fbeb8204a79f83f0c6468a6ed579"
        }
      ],
      "message": "CKey: add Serialize and Unserialize\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:23Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-01T13:18:49Z"
      },
      "sha": "055a5e06c0a5142997da639e159b484bacc82952"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRlZGE0OWYyYTYzYzc1MmI2NzcwYTk0N2JiOTg2NWNmOTMyYmEyMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/deda49f2a63c752b6770a947bb9865cf932ba20c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/deda49f2a63c752b6770a947bb9865cf932ba20c",
      "tree": {
        "sha": "dfa012cb82d79913778353de7cf4d14b5f971f6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfa012cb82d79913778353de7cf4d14b5f971f6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dfa012cb82d79913778353de7cf4d14b5f971f6c\nparent 055a5e06c0a5142997da639e159b484bacc82952\nauthor Fabian Jahr <fjahr@protonmail.com> 1711921842 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707263 +0200\n\ntestnet: Introduce Testnet4\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6L8ACgkQV/+b28ww\nEAlEzg/+LeYLPmB4Z3uUF8gJnbbiqKu5iPyojFwtH8tVMI347uwpcQg8DTh5mbcc\nfPKTb0OVdDNnmz9Zh/D0cYPWcesfdkUGazxTNKHQZ0Zbyo2986pW8ieA/S0YAHR8\nX9x46sc1Q4bd5/SIaqcHU/0oDZGrKGgx1ZFdzjDnB8PCHSciQ9LSAp4pvaRzSS5V\nBRbTYU+hQjkAOHr9GhjoDMS5SYnixY4foA93HRCe4esBFXzdOV4T1h9bmmaK0U+I\nsdnhSaEb1iy9AqN39+LuHPSvyGgLUhgnzR9/c7uGBUl/JFCscaUUCNNxwuC4fFsd\nQxy1FbHEwsUBvyZ8aPwgdk8FX8yGWQEBgOStCqr7DbvD/tcmImb8KBAMsXM3Zs2x\ntrkQ4rGJ30wfOQxknfrtR/OfoqQN2ELTXYxgnjXGrJ36KuoBnMrlxY/AoGB/B0iU\n/1flnbSS9Ic9weLcNeqWQWKH2a7D7HxkdCi+FMJwNN16o5W6Jk7ydnPpx5s/UkRg\nFBCwMFY2AvDg4DlhzI8VSFFxTkn9z4nLgHsILEWsPwJx509iKDyjeDPaFTAg27UV\narTYbeMMwX6TIZFmCqO1ScoH+P4dtQUePlIT5R2IPLyClQ38NfJt4XsYoUr49F65\nk0Hj55gtB0O2ReC6HJ2hGdsgKMhvO/IXzFMDlI4rZiuO3r74eo4=\n=PqvK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/055a5e06c0a5142997da639e159b484bacc82952",
          "sha": "055a5e06c0a5142997da639e159b484bacc82952",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/055a5e06c0a5142997da639e159b484bacc82952"
        }
      ],
      "message": "testnet: Introduce Testnet4",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:23Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-31T21:50:42Z"
      },
      "sha": "deda49f2a63c752b6770a947bb9865cf932ba20c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5ZjYzYTMyNWQ0MDk3Y2ExOWJjMjg3Zjk5YzQ4ZjM1ZTA4NWM5NDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39f63a325d4097ca19bc287f99c48f35e085c949",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39f63a325d4097ca19bc287f99c48f35e085c949",
      "tree": {
        "sha": "c64173008ae6e60ee3fd491cd322d9805c43485f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c64173008ae6e60ee3fd491cd322d9805c43485f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c64173008ae6e60ee3fd491cd322d9805c43485f\nparent deda49f2a63c752b6770a947bb9865cf932ba20c\nauthor Fabian Jahr <fjahr@protonmail.com> 1714698322 +0900\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\ntestnet: Add Testnet4 difficulty adjustment rules fix\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MAACgkQV/+b28ww\nEAmEEA/9E9HmTphd7QS8Jj9os+ukXoWKccuUPVPuu/MOKVsjUJanzTZ/K0ug2ya7\n5U+SzAQCHEHK2lqNK5/YR9jCPozL1evH7Fh4ODG4+agUxs0KnBOcQeW6izi/CKxL\nfJXmhcOHM0Qtg+lu5vwHY4ElFdDlO3zs0wT8b6D7U4uX9xlnfOey4XWHCyq1BGpY\nJoNlGo2GNTRW6nJvBjRkMbl6ZwnTXpS7ylSDxmMQp/Tu44z7MEyIaBr4tNur4IKT\nWLNSH3B3VmZ1P/1n4gGwag+z3PNZjZHPxrp9LtPTNz3Ys68C3rLbcSQQbOXW8KF2\nKAXlJkELxts4OoL818F95zJxRxTS7Oa9odXMSxiVLJE/2lzx1qNMlxsB/uUo1bZI\nDIxgDi94Gugd64p4v2zBILPEUuq/W+eD1AaQezwPYT+pTy2VYyXbYntpnWdKGOP8\nFo+sPgUb6nUbRbUFYlubW6NU1h/JbDrdIYi92GF46G3GE1g1gtvcspI7rVXRVKn5\n/ndn/smAv6GUamgmIsj59Lae/Y7DofP01kEpBbmRb+Un008oOCRTb0Tir4z69fQb\n/FSnOlszwdR2/bxR2+IrbsWx7MPCtZOax2jwRYNJWnAoh9uRczvRDvvsUAK4KmKU\njAx94iwiEbjTBwb5Y7rXPGrYyTuCDIWPFdp7WxZB8J/ZRSBdTAY=\n=G++h\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/deda49f2a63c752b6770a947bb9865cf932ba20c",
          "sha": "deda49f2a63c752b6770a947bb9865cf932ba20c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/deda49f2a63c752b6770a947bb9865cf932ba20c"
        }
      ],
      "message": "testnet: Add Testnet4 difficulty adjustment rules fix",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-05-03T01:05:22Z"
      },
      "sha": "39f63a325d4097ca19bc287f99c48f35e085c949"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiYTMzMzA4YWFiNjA2Y2E1M2IwZGY3ZDY5YTBhMjI0MjY3YTI0NGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cba33308aab606ca53b0df7d69a0a224267a244c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cba33308aab606ca53b0df7d69a0a224267a244c",
      "tree": {
        "sha": "23ef53303df7db58c4417a6dd1c3313ba73b9cd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23ef53303df7db58c4417a6dd1c3313ba73b9cd9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 23ef53303df7db58c4417a6dd1c3313ba73b9cd9\nparent 39f63a325d4097ca19bc287f99c48f35e085c949\nauthor Fabian Jahr <fjahr@protonmail.com> 1714698348 +0900\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\ntestnet: Add timewarp attack prevention for Testnet4\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MAACgkQV/+b28ww\nEAmktQ/+LwCI7/1UEJX12O+Iy34f9EsuHnsKiFjFdpCdfcm78uYE0KR9UG6VXsRY\nKr414dFfZ0o5mAEoUmFNgOsoAR8JLUyaVeHbSmGrzrJ3eLBH9LEku9D/8ATeT5yg\nRkiv/ID2SVrUoome4+ytSFHJzVk9aU5aMVyhesar0Xj9JEvE5lixOZRADWmePMKA\nRZVybMuBv0KtbMYLWLQTneIXtuIo/boot1VA77UHzIIvZv+JakR8L5pXcoqocBtN\nIEbFw1yV0hXUD7dwKy+w9vg4gL8xTs7ufF0byg+89mSnguzyBQn7hHFQZyn1Uw8+\naMFe4OJLsYvBDcJtrVwnOrC2S75jcelTYvyaca/TFfIZ1mmt3kQ/5WQH+eMe+8Ve\nqf5ng3p0i1YJyDBNVQbZ67Y7UBhrEM89yyK0luDo3prmE4zaAx8BkeZnW5jZddh4\nVGZyz+r3DMdy+fJHiZKmA+LCKcM2PdAKVSufeXoOclXEImB9WUqzuWpIFnAjFNse\nRQOhtlJeBTlaPd6E+dc+6MKSFzaQPvJXMGC8czeZVTpvrRofqrwBiiQYbJLNDyvm\nGbl6xFSmgqUS8p0VAjQ00YsQmF56iB2Hpm7vFO6PDcn8lnTXZYzWVoAXHr+7MDuq\nQ5875CbRQdYM+UKjUrvG/BqcV60RGqk4ZA9rNxducFMMS92YUoc=\n=UB38\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39f63a325d4097ca19bc287f99c48f35e085c949",
          "sha": "39f63a325d4097ca19bc287f99c48f35e085c949",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39f63a325d4097ca19bc287f99c48f35e085c949"
        }
      ],
      "message": "testnet: Add timewarp attack prevention for Testnet4",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-05-03T01:05:48Z"
      },
      "sha": "cba33308aab606ca53b0df7d69a0a224267a244c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5NTIzM2NkNTVjYmU4MTk5ZDNiMWRhYTllYzUzNGM2ZTlkN2E5YTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2",
      "tree": {
        "sha": "e97fdff41d6d44cc1caeb1ccc025b0bb93ac25f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e97fdff41d6d44cc1caeb1ccc025b0bb93ac25f3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e97fdff41d6d44cc1caeb1ccc025b0bb93ac25f3\nparent cba33308aab606ca53b0df7d69a0a224267a244c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1704985128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\nPersist static key for Template Provider\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MAACgkQV/+b28ww\nEAn9yw/+IJNbt7DlIiJJUxUHWrH7VanEik5XvxmFM2PzLb3U/ne5LDYPt4ioXofP\nUNR30zep+TGv/0sho5eSqk7Ec+aaZbwuBMqBxkciYshQOd77K8fG5PzTnmiDg9NJ\niymnhEKWreXvaOG/jY1D8u3zW08w4gT8o3eudVaZDjdz8FEtK9tQFdRUHZzgGofw\nEyInkOxpuBNOOegjLTNlLuXo6ISYsz5ZpngDkRWmRQtcjjTFFOTwSreqdzLH2SlV\ndaZZVaGSdBQ9ZNzdfMOMI4BuhTwJQkRQzGrEd9UVDXVgo8VOLAyKVbxJni2+Nsqq\nm9sp0DPg9gzxh6x9g1XnLp2Q8FLIEDJ0+rDAk7ovuIqhqAwsAy3z73hMucd2aiyW\nopl3h+hzm2l8HibTJ1suI7lBfu5e+UlbqO0bEzaPeFPtLNXq5lv+eM7wFbfg8sO5\nspWMgyqWz/DLYIcpLtGh7yi2QMue53283SoRBnXTQ3A2D4YiDW42647RSVOO5jLO\nBgr6pu+OpqqKS6/aN2AnT3Djlk2WvaPVJ3+M2D0dAx4iKr1OTp7uvJQOmyCxStxf\nePPNwouy+mtnXcZmRWt3XrgQ4a0M49b3cD+/CZ/NAdF2X8dUOgwdC83TfreGBnRa\nF6p5qR3LNFsPWLxADFAsTf+x9rb10oWxFCLD2b46GcMpTzOU09k=\n=uLkK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cba33308aab606ca53b0df7d69a0a224267a244c",
          "sha": "cba33308aab606ca53b0df7d69a0a224267a244c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cba33308aab606ca53b0df7d69a0a224267a244c"
        }
      ],
      "message": "Persist static key for Template Provider",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-11T14:58:48Z"
      },
      "sha": "795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDljMDM3ZjNiNWYzY2IyYzAwNzU5NGQ4YjdhNmM1MTVjMWJmNmFjNjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69",
      "tree": {
        "sha": "2a8afc89df71c112b2e5f1cb1f08a0b012a20ed9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a8afc89df71c112b2e5f1cb1f08a0b012a20ed9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2a8afc89df71c112b2e5f1cb1f08a0b012a20ed9\nparent 795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2\nauthor Sjors Provoost <sjors@sprovoost.nl> 1702044481 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\nsignet: miner skips PSBT step for OP_TRUE\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MAACgkQV/+b28ww\nEAmBYA/+KEQcbwltfLjmcBOoszTijHX/gsSo+A2WzKMM5OawwwNLPolhxtB1QFGl\nUdgOwEIt77qflntTypQg8v7t0OHAHmFVUnvo5pdVbVhsT62SVJ2zk6+W6s0Pn4HR\nVYo7laztk0g6hGe8KtVBFxbVktMHeZ06LST+kNPD2jB96giTT6UZtVJyIFHl10NC\nsWMbHkmiXLnoW+d+ay7UaAvVSRDIf75NVF4AjTbjVbl5E41KnJP2TwUOq4wzGFP6\nTha2+VwcUWxuxqIYjcexlG5HaBoHKdthDTZ3hZ9gm8ioGceAJsaXf5ABe2/RmBla\nPl+j5sXtYYrZ6Gpn5qjbeNMDmJhJxYGp4J+xFTFfmFrD5C6cFGHqEpGIMIn6s1Gz\nN5+nf8p5ROXtWMA+G8OoUjVQe2kCFdpB9Jir4UGN57MbBQdYlKVweJ/KWCDfIo1R\n+51Tnub2/OH4l0eA92qUsOyGEQ6F8HjXqu+QUIKpmKi26WD2bdhhsrsHixJ4nAws\ngyXmL6lsvMU/OdccDZnWOYa3ikF8iDNnWcRVu/pvmhL0Zio1BauOexP4rMp+gOpE\nbxKpee7jQCKFWypPQVKBMRn1rhGWOH8TBiLKtWjAth1n/+jTUORIYLC7ousvac2v\n0vVQvF9PWONLTftRThSpCJnj7kDwWB9mxH+73llInDvkBSelTQI=\n=8mKl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2",
          "sha": "795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/795233cd55cbe8199d3b1daa9ec534c6e9d7a9a2"
        }
      ],
      "message": "signet: miner skips PSBT step for OP_TRUE",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-08T14:08:01Z"
      },
      "sha": "9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjZmRhYjExODhlYmFkNDQxZDIzODQ2MGNhYzE0ZWUzNDkzMzIyMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cfdab1188ebad441d238460cac14ee349332230",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4cfdab1188ebad441d238460cac14ee349332230",
      "tree": {
        "sha": "76e2addbb03127695395eee74abc5b4ba45a6537",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76e2addbb03127695395eee74abc5b4ba45a6537"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 76e2addbb03127695395eee74abc5b4ba45a6537\nparent 9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69\nauthor Sjors Provoost <sjors@sprovoost.nl> 1703767798 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\ndoc: explain Stratum v2 design, testing and usage\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MAACgkQV/+b28ww\nEAlfeA//UoHMT2T9z9Po4YRLe2KJlwUHdT0LTnjHWAWnZl3GHJy8L8Xqq7AiINmV\n6L53zVplg3qtidS7R1p75MZKv2ZvWybR70J1dZ9KEDd4paWb51Rf145rPrJ0Hkh1\nRP3Et+ZpEPl4cqx3XEZlLwa6dz2RuVJtRH3Rtx784ri4M163lLT+w0CpOYFDIW84\nO+zOQt+9A934UALpg1T8NySxbPxP8hUe/Jhwdd4W2hMbq6vrL9nCuOfzSg+gC4op\n9HKo+/455Ub/cm/lnZdydc0Z8waeSJFEVJ97rw7S28wvZzUR85j9FrsxxolOagAm\n2PV4SH5DPHSSJM6vGv5Ts+XsYM2TcDZm7KlHG8XAquhtdlNT9rao/rvMEsYQr7Gf\n4X2hK92GUoOYFNvie+JhVXyPPL3NqKVN7hRDnJUJ8rFgFr+Dyc58EtRgimSns9eo\nuamUn4kaHC3TJHTwDj7ph3nOiX95cRFXPc4l9q0GO2alxS/wSzIT7kWoVxxC7Y4a\nJBpi+NRxut7DeDzP/dUSOyIUUSoPb44wdz3dGCw9QidQ/GW7r8cXR4C90rUr4rf8\nViGwHimw+QvTuXlTM9+PFQNpcM8Lak/PFmg7c7j+bHVYGzo2D1iXYlLh6ZC/eR9E\nvNvuXlMHLhm9foZsbMgsgjGvQVhcBsJoeWwSHGJV7MomeyLkx+Y=\n=NOjw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69",
          "sha": "9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9c037f3b5f3cb2c007594d8b7a6c515c1bf6ac69"
        }
      ],
      "message": "doc: explain Stratum v2 design, testing and usage",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-28T12:49:58Z"
      },
      "sha": "4cfdab1188ebad441d238460cac14ee349332230"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1NmQzOWRlNThmMzVhMzBkODgyZDM1NTlhMDkzMWZkODA1M2I0OGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d56d39de58f35a30d882d3559a0931fd8053b48b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d56d39de58f35a30d882d3559a0931fd8053b48b",
      "tree": {
        "sha": "83e3dcfa25f67676df0f2f526745879cc07b04aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83e3dcfa25f67676df0f2f526745879cc07b04aa"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 83e3dcfa25f67676df0f2f526745879cc07b04aa\nparent 4cfdab1188ebad441d238460cac14ee349332230\nauthor Sjors Provoost <sjors@sprovoost.nl> 1705595777 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1720707264 +0200\n\nci: skip Github CI on branch pushes for forks\n\nSimilar to the previous commit, however the behavior isn't opt-in\nwith NO_BRANCH, because Github CI lacks custom variables.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmaP6MEACgkQV/+b28ww\nEAlf2BAAlfZX6XcJApUbrAww2Lt9J1dXsmYGQ+UenIXFxVznNaHFMHLZRjQmCNjV\namN4+04K1nh9URz3Ny30WOcT/wrM+A2bsz5NcPJ9prvmlHg/gwVv9YyqAAJlfEK1\nyQRHuNbh+XNBZ4l1bUSFXw5ivc8bvwzc42aQI4HJ7ILBMmvVl4CoiNdO7R3Jw1Nb\new4Os/jq6+SYGwNwIZMUPXuEK6tJKdM0wP+3UTjgv9rAl9s0pJbpO7TQJPW86rBm\n1xdSZHox76EpGbO4Zk/yt9jpdyEqCZZmxMBS/c1VneMtb9OZl/IWi7rh5I8feIAr\nTqXr8OC/hHqlmgzdF5vXzqsJorQuv11tsF7dZ40D/FfusDPLCMG2N+dTfiQqU82y\nL+JEiu50yDarosyLLx4hb+QAzhIoh2wnS+CteKoc4BFcrdPLIMYSovXtGNZUpH0u\nmiakUKR5VxUnVMs/0wSLfuGKctPhmDjgj/eSEEmaGSdtU+Uo72VU2PlqqTuzG3+P\n/NodmtCjf6OtibTqxG+qT3wu5iUZZWx/rToeDHVAdFEhGz6uKLNkI3u4aiJk+JvJ\n1JUhAECA5Kf27lEua2g1I15YME4iPsl25g4R2VwYa9GaaAg1oARA8cg4FhchiZaM\nVoouw65f6ElNbcHENDPGbenjF2Ej3oSACClwXnKLaPB4vwfTomM=\n=xWrM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cfdab1188ebad441d238460cac14ee349332230",
          "sha": "4cfdab1188ebad441d238460cac14ee349332230",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4cfdab1188ebad441d238460cac14ee349332230"
        }
      ],
      "message": "ci: skip Github CI on branch pushes for forks\n\nSimilar to the previous commit, however the behavior isn't opt-in\nwith NO_BRANCH, because Github CI lacks custom variables.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-07-11T14:14:24Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-18T16:36:17Z"
      },
      "sha": "d56d39de58f35a30d882d3559a0931fd8053b48b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13472563213,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAMjBwAN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13472563213",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:15:05Z"
    },
    {
      "event": "unlabeled",
      "id": 13472693105,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMjCPtx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13472693105",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:24:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2223137778,
      "node_id": "IC_kwDOABII586EgmPy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2223137778",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:48:41Z",
      "updated_at": "2024-07-11T14:48:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I sympathize with the argument that the harder we make things for the user, the less likely they are to run the software. I strongly disagree, however, with the conclusion that the best solution then is to put everything into a single binary for the user. All that matters for the user is that it Just Works ™️ and there are plenty of ways we can achieve this regardless of the technical design.\r\n\r\nRight, I don't at think anyone was making the argument that it *has* to be in the same process, but rather in the same project so that Just Works is even an option. In principle I have no strong opinion about multi-process (as long as the interface is sufficiently performant - one very old complaint about `getblocktemplate` is we end up wasting multiple milliseconds encoding all the crap we shove in there, then wasting another multi milliseconds dealing with JSON parsing on the other end, all right when we're trying to reserve precious CPU time to validate blocks and update the mempool and all kinds of other crap), but only that it must Just Work, and getting multi-process to Just Work is a very nontrivial task unto itself. Blocking any Sv2 support on that seems like it will take something really critical for the Bitcoin system that is already gonna take a while and make it take forever instead.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2223137778",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2223334508,
      "node_id": "IC_kwDOABII586EhWRs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2223334508",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T16:08:27Z",
      "updated_at": "2024-07-11T16:09:47Z",
      "author_association": "MEMBER",
      "body": "> but rather in the same project so that Just Works is even an option\r\n\r\nI don't agree that everything being in the same project is necessary for things to \"Just Work.\" However, I think it's entirely premature to be talking about where the code lives, what project, etc until we've at least decided on a technical design. \r\n\r\n> (as long as the interface is sufficiently performant - one very old complaint about getblocktemplate is we end up wasting multiple milliseconds encoding all the crap we shove in there, then wasting another multi milliseconds dealing with JSON parsing on the other end, all right when we're trying to reserve precious CPU time to validate blocks and update the mempool and all kinds of other crap)\r\n\r\nThis is why I mentioned the multiprocess IPC + capnproto route I've been exploring since I believe it addresses most if not all of these performance concerns. There is no encoding/decoding and things that would take multiple round trips using something like ZMQ/JSON RPC can be collapsed into a single roundtrip via promise pipelining. \r\n\r\n> and getting multi-process to Just Work is a very nontrivial task unto itself\r\n\r\nI think you're overestimating the amount of work required here. Secondly, even if it is more work, process separation has been a project that has had conceptual buy in for quite some time. Given the limited review capacity, we should be looking for two birds, one stone opportunities wherever they arise. If building out SV2 on top of the multiprocess work helps get more review and attention on mulitprocess, this feels like a win to me. Furthermore, from what I understood, there is existing SV2 code in rust. Pursuing a multiprocess approach allows us to reuse that code, rather than rewriting everything in C++ so it can be in `bitcoind`. I don't want to reopen a debate about which project stuff should live under, but given there are currently engineers working on SV2 stuff in rust, it seems more productive to let them apply their SV2 knowledge in their language of choice to building a `stratumv2d` process that can talk to a mining interface in `bitcoind`.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2223334508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 13474425555,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAAMjI2rT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13474425555",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T16:30:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2223419766,
      "node_id": "IC_kwDOABII586EhrF2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2223419766",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T16:48:50Z",
      "updated_at": "2024-07-11T16:53:31Z",
      "author_association": "MEMBER",
      "body": "I took another look at the Template Provider to see what else the interface needs to do for an IPC sidecar to work. In addition to #30356 and #30409 (first commit):\r\n\r\n1. Expand `createNewBlock` to (optionally, only for sv2) return a vector of serialized transactions. Since the node could let go of mempool transactions at any time, and because it doesn't hold on to generated templates, we need to copy all template transactions over to the other process.\r\n\r\nThis means we lose some of the advantage of having separate `NewTemplate` (very small, gives the miner something to do) and `RequestTransactionData.Success` (big, used for declaring the template to the pool - synchronous or asynchronous) messages. But without benchmarking I have no idea if we're talking milliseconds or shorter.\r\n\r\nUnless there's way to halt processing of an IPC message mid-way, push out `NewTemplate` and then process the remainder that we need (much later) to reply to `RequestTransactionData.Success`. \r\n\r\nThe other side, e.g. a rust app, should store the serialized transactions in a hash lookup table with reference counting, hopefully such a thing already exists. Once a template is no longer needed, unreferenced transactions can be purged.\r\n\r\n2. Probably also expand `createNewBlock` to (optionally, only for sv2) return the result of `GetMerklePathForCoinbase`. Though this could be implemented on the other side, I'd sleep better if made sure it's correct and hand it over.\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2223419766",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2224087427,
      "node_id": "IC_kwDOABII586EkOGD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2224087427",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T22:57:39Z",
      "updated_at": "2024-07-12T10:39:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2223419766\r\n\r\n> Unless there's way to halt processing of an IPC message mid-way, push out NewTemplate and then process the remainder that we need (much later) to reply to RequestTransactionData.Success.\r\n\r\nI'm not sure if this is a question about the multiprocess IPC framework, or you're just deciding what the mining IPC interface should look like, but the framework is nonblocking, so there is no problem with the client making multiple calls at the same time, and the client can also decide what threads in the server the calls run on. So any interface you would like to implement should be possible to implement.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2222418506\r\n\r\n> > If it would help, I could make a draft PR for a test program that will do what you describe: connect to bitcoin-node over a unix socket if it is running, or start bitcoin-node if it is not running, and then call a mining interface function like `getTipHash()` and print the result.\r\n> \r\n> Yes that would be very helpful.\r\n\r\nI got a c++ test program working that connects to the bitcoin node over a unix socket and calls the [`getTipHash()`](https://github.com/ryanofsky/bitcoin/blob/ipc-export.653/src/bitcoin-mine.cpp#L122-L127) function.\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/ipc-export.653/src/bitcoin-mine.cpp#L19-L39\r\n\r\nIt will also spawn the `bitcoin-node` process if it is not currently running. This is written on top of my combined IPC branch, so the branch has a lot of other changes that are unneeded and unrelated. But I think I can trim it down to a reasonable sized PR. I'll try trimming it down tomorrow. (EDIT: The trimmed down branch is posted in #30437)\r\n\r\nIt would be possible to write a similar program in rust, too, but I basically don't know any rust, so this was easier for me to get working in c++. The rust program would have to start `bitcoin-node` with the `-ipcbind=unix` option, connect to the `<datadir>/sockets/bitcoin-node.sock` socket, use the rust capnproto runtime to call [`Init.makeMining`](https://github.com/ryanofsky/bitcoin/blob/ipc-export.653/src/ipc/capnp/init.capnp#L30) over the socket and then call [`Mining.getTipHash`](https://github.com/ryanofsky/bitcoin/blob/ipc-export.653/src/ipc/capnp/mining.capnp#L21) on the returned `Mining` interface. That would be equivalent to what the c++ program is doing.\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2224087427",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2225041208,
      "node_id": "IC_kwDOABII586En284",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225041208",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T08:02:15Z",
      "updated_at": "2024-07-12T09:29:42Z",
      "author_association": "MEMBER",
      "body": "> the framework is nonblocking, so there is no problem with the client making multiple calls at the same time, and the client can also decide what threads in the server the calls run on. So any interface you would like to implement should be possible to implement.\r\n\r\nI'm not sure if that helps. I was also a bit confused, so let me rephrase it:\r\n\r\nThe current interface `createNewBlock` returns a template, which contains 4 MB of serialized transaction data. Ideally I would _not_ include those transactions, but only the result of `GetMerklePathForCoinbase`, which is all we need for the `NewTemplate` message.\r\n\r\nI would then make another call to the interface to get those transactions, but by that that time the node has already forgotten the template it gave me and the mempool may have dropped some of the transactions it included.\r\n\r\nI don't think this can be solved with making both calls at the same time; the second call needs to reference a specific template that the first call generated.\r\n\r\n> I got a c++ test program working\r\n\r\nWill take it for a spin!\r\n\r\n---\r\n\r\nUpdate: it works! If it helps getting IPC stuff merged quicker, it's fine by me if the miner can't spin up a node process (see e.g. https://github.com/Sjors/bitcoin/commit/b6dfa5f186e8a4813db21b2547de98280643f51a). Instead it could simply check every second and in the meanwhile show a message:\r\n\r\n> Please start Bitcoin Core, e.g.:\r\n> bitcoin-node -ipcbind=unix\r\n\r\nLater on the GUI could have a check box \"Enable IPC\" under \"Enable RPC server\", which under the hood ensures the node process listens.\r\n\r\n(Even fancier: it always listens and as soon anything tries to connect it prompts for permission and remembers the \"pairing\")\r\n\r\nEase of implementation aside, automagically starting the node from a miner application might also lead to confusion. Desktop users are not used to Bitcoin Core having a separate daemon (we can introduce this later, but starting from the GUI).\r\n\r\nIf we ship this functionality before full GUI IPC support is ready, then presumably the user has to run `bitcoin-node` and shut it down before starting the non-IPC `bitcoin-qt`. Or we might add IPC support to `bitcoind` and `bitcoin-qt`, but only for the miner interface. In either case it's better if the user themselves decides if they want to launch bitcoind or the gui. (or bitcoin-miner could prompt the user which one they want to launch)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2225041208",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2225283367,
      "node_id": "IC_kwDOABII586EoyEn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225283367",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:26:30Z",
      "updated_at": "2024-07-12T10:26:30Z",
      "author_association": "NONE",
      "body": "> I would then make another call to the interface to get those transactions, but by that that time the node has already forgotten the template it gave me and the mempool may have dropped some of the transactions it included.\r\n\r\nCan you cache the tx data and keep them for the time that the template is valid. If you have more templates you save shared txs just one time. ",
      "user": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2225283367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2225337100,
      "node_id": "IC_kwDOABII586Eo_MM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225337100",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T11:03:22Z",
      "updated_at": "2024-07-12T11:03:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2225041208\r\n\r\n> I don't think this can be solved with making both calls at the same time; the second call needs to reference a specific template that the first call generated.\r\n\r\nA natural way to do this would be to have `createNewBlock` return an interface instead of a struct:\r\n\r\n```c++\r\nclass Mining\r\n{\r\n    virtual std::unique_ptr<MiningBlock> createNewBlock(const CScript& script_pub_key, bool use_mempool = true) = 0; \r\n}\r\n\r\nclass MiningBlock\r\n{\r\n    virtual CBlockHeader getHeader() = 0;\r\n    virtual CBlock getBlock() = 0; \r\n}\r\n```\r\n\r\nImplementation of `MiningBlock` could own all the data it needs and release it when it is destroyed.\r\n\r\n> > I got a c++ test program working\r\n> \r\n> Will take it for a spin!\r\n\r\nGreat! Please see #30437 for a cleaned up branch and implementation.\r\n\r\n> Update: it works! If it helps getting IPC stuff merged quicker, it's fine by me if the miner can't spin up a node process (see e.g. [Sjors@b6dfa5f](https://github.com/Sjors/bitcoin/commit/b6dfa5f186e8a4813db21b2547de98280643f51a)). Instead it could simply check every second and in the meanwhile show a message:\r\n> \r\n> > Please start Bitcoin Core, e.g.:\r\n> > bitcoin-node -ipcbind=unix\r\n\r\nThat would simplify the implementation a bit. In addition to bitcoin-mine program being a little simpler, I could drop the commits in #30437 related to allowing a spawned process to detach and not exit when the last IPC connection is closed.\r\n\r\n> Later on the GUI could have a check box \"Enable IPC\" under \"Enable RPC server\", which under the hood ensures the node process listens.\r\n\r\nYeah that would be pretty natural. I'm not sure if maybe it could just listen on the unix socket by default, but for now it doesn't do that.\r\n\r\n> (Even fancier: it always listens and as soon anything tries to connect it prompts for permission and remembers the \"pairing\")\r\n\r\nThis could be a good idea. For now I was just relying on unix file permissions to control access to the socket. \r\n\r\n> Ease of implementation aside, automagically starting the node from a miner application might also lead to confusion. Desktop users are not used to Bitcoin Core having a separate daemon (we can introduce this later, but starting from the GUI).\r\n> \r\n> If we ship this functionality before full GUI IPC support is ready, then presumably the user has to run `bitcoin-node` and shut it down before starting the non-IPC `bitcoin-qt`. Or we might add IPC support to `bitcoind` and `bitcoin-qt`, but only for the miner interface. In either case it's better if the user themselves decides if they want to launch bitcoind or the gui. (or bitcoin-miner could prompt the user which one they want to launch)\r\n\r\nThe changes to the GUI in #19461 would make this smoother. If the node process was listening on a socket and the GUI process was started, it would just connect to it automatically. Even without those changes, I think as long as GUI displays a clear error message if it can't start because node process is running and explains how to resolve the problem, I don't think that would be too confusing. It doesn't seem that much worse than status quo of bitcoind and bitcoin-qt not being able to run at the same time.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2225337100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 2225384531,
      "node_id": "IC_kwDOABII586EpKxT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225384531",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T11:36:39Z",
      "updated_at": "2024-07-12T11:36:39Z",
      "author_association": "MEMBER",
      "body": "> Implementation of `MiningBlock` could own all the data it needs and release it when it is destroyed.\r\n\r\nThanks, that makes sense.\r\n\r\n> I could drop the commits in https://github.com/bitcoin/bitcoin/pull/30437 related to allowing a spawned process to detach and not exit when the last IPC connection is closed.\r\n\r\nI think that's a good idea. Will study the PR.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2225384531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489543326",
      "pull_request_review_id": 1880414088,
      "id": 1489543326,
      "node_id": "PRRC_kwDOABII585YyKCe",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The template provider tests are quite brittle because they use a real socket.",
      "created_at": "2024-02-14T14:17:54Z",
      "updated_at": "2024-02-14T14:21:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489543326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489543326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489710751",
      "pull_request_review_id": 1880677814,
      "id": 1489710751,
      "node_id": "PRRC_kwDOABII585Yyy6f",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For the time being I just added handling for `MSG_MORE` (on e.g. macOS sequential messages are sent separately while on Linux they're combined). I also made the timeouts a bit longer.\r\n\r\nHopefully that does the trick. This can be revisited closer to the time when the Template Provider is ready for its own PR.",
      "created_at": "2024-02-14T15:57:24Z",
      "updated_at": "2024-02-14T15:57:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489710751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489710751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489927269",
      "pull_request_review_id": 1881030165,
      "id": 1489927269,
      "node_id": "PRRC_kwDOABII585Yznxl",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Except the macOS native CI... https://github.com/Sjors/bitcoin/actions/runs/7905485495/job/21578223892?pr=34#step:7:6060",
      "created_at": "2024-02-14T18:54:53Z",
      "updated_at": "2024-02-14T18:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489927269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489927269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489958435",
      "pull_request_review_id": 1881082138,
      "id": 1489958435,
      "node_id": "PRRC_kwDOABII585YzvYj",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Working on a fix in https://github.com/Sjors/bitcoin/pull/34",
      "created_at": "2024-02-14T19:25:39Z",
      "updated_at": "2024-02-14T19:25:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489958435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489958435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489998271",
      "pull_request_review_id": 1881182173,
      "id": 1489998271,
      "node_id": "PRRC_kwDOABII585Yz5G_",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 229,
      "original_position": 226,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TSAN is tripping up somewhere around here. The last thing it logs is ` - Connect 2 transactions:`. It doesn't get to ` - Verify ... txins:`. I wonder if this is related to mock time, which I'm testing in https://github.com/Sjors/bitcoin/pull/34",
      "created_at": "2024-02-14T20:04:56Z",
      "updated_at": "2024-02-14T20:17:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489998271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489998271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490054499",
      "pull_request_review_id": 1881291760,
      "id": 1490054499,
      "node_id": "PRRC_kwDOABII585Y0G1j",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I should probably look into using `StaticContentsSock`",
      "created_at": "2024-02-14T20:53:36Z",
      "updated_at": "2024-02-14T20:53:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490054499",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490054499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490849107",
      "pull_request_review_id": 1882502597,
      "id": 1490849107,
      "node_id": "PRRC_kwDOABII585Y3I1T",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 229,
      "original_position": 226,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@maflcko shouldn't TSan on CI output something useful about why it crashed? I currently only says \"error 2\": https://cirrus-ci.com/task/5124733717446656?logs=ci#L3531\r\n\r\nWhen running this locally on Ubuntu with clang 16.0.6 I get a `WARNING: ThreadSanitizer: data race` and significantly more details (still a bit cryptic, but hopefully enough to figure out what's happening).",
      "created_at": "2024-02-15T11:15:40Z",
      "updated_at": "2024-02-15T11:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490849107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490849107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490855751",
      "pull_request_review_id": 1882517892,
      "id": 1490855751,
      "node_id": "PRRC_kwDOABII585Y3KdH",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild any thoughts on how to make mock `Sock`s that can be used to play messages in two directions?",
      "created_at": "2024-02-15T11:20:56Z",
      "updated_at": "2024-02-15T11:20:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490855751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490855751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490880303",
      "pull_request_review_id": 1882554577,
      "id": 1490880303,
      "node_id": "PRRC_kwDOABII585Y3Qcv",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 229,
      "original_position": 226,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I guess the unit tests don't capture the tsan output?",
      "created_at": "2024-02-15T11:39:27Z",
      "updated_at": "2024-02-15T11:39:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490880303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490880303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490884343",
      "pull_request_review_id": 1882563090,
      "id": 1490884343,
      "node_id": "PRRC_kwDOABII585Y3Rb3",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 229,
      "original_position": 226,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But they should. At least back when I tested https://github.com/bitcoin/bitcoin/pull/27667",
      "created_at": "2024-02-15T11:41:35Z",
      "updated_at": "2024-02-15T11:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490884343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490884343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490885359",
      "pull_request_review_id": 1882564775,
      "id": 1490885359,
      "node_id": "PRRC_kwDOABII585Y3Rrv",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 229,
      "original_position": 226,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe good to re-check this when/after the cmake migration is done?",
      "created_at": "2024-02-15T11:42:32Z",
      "updated_at": "2024-02-15T11:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490885359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490885359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1492773923",
      "pull_request_review_id": 1885639720,
      "id": 1492773923,
      "node_id": "PRRC_kwDOABII585Y-ewj",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 37,
      "original_position": 36,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! See the first two commits in https://github.com/bitcoin/bitcoin/pull/26812:\r\n\r\nbee6bdf0a5 `test: put the generic parts from StaticContentsSock into a separate class`\r\nf42e4f3b3b `test: add a mocked Sock that allows inspecting what has been Send() to it`\r\n\r\nand then how to use that in the last commit of the same PR:\r\n\r\n8b10990aa0 `test: add unit tests exercising full call chain of CConnman and PeerManager`\r\n\r\nWith those it is possible to send/receive raw bytes to/from the (mocked) socket, or NetMsgs, e.g.:\r\n\r\n```cpp\r\npipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\r\n```",
      "created_at": "2024-02-16T17:20:48Z",
      "updated_at": "2024-02-16T17:20:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1492773923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1492773923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664165837",
      "pull_request_review_id": 2156406658,
      "id": 1664165837,
      "node_id": "PRRC_kwDOABII585jMSfN",
      "diff_hunk": "@@ -0,0 +1,404 @@\n+#include <node/sv2_template_provider.h>\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <base58.h>\n+#include <consensus/merkle.h>\n+#include <crypto/hex_base.h>\n+#include <common/args.h>\n+#include <common/sv2_noise.h>\n+#include <logging.h>\n+#include <util/readwritefile.h>\n+#include <util/strencodings.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+\n+Sv2TemplateProvider::Sv2TemplateProvider(interfaces::Mining& mining) : m_mining{mining}\n+{\n+    // TODO: persist static key\n+    CKey static_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"rb\")} >> static_key;\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Reading cached static key from %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!static_key.IsValid()) {\n+        static_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"wb\")} << static_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing static key to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated static key, saved to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    }\n+    LogPrintLevel(BCLog::SV2, BCLog::Level::Info, \"Static key: %s\\n\", HexStr(static_key.GetPubKey()));\n+\n+   // Generate self signed certificate using (cached) authority key\n+    // TODO: skip loading authoritity key if -sv2cert is used\n+\n+    // Load authority key if cached\n+    CKey authority_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"rb\")} >> authority_key;\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!authority_key.IsValid()) {\n+        authority_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"wb\")} << authority_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing authority key to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated authority key, saved to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+    }\n+    // SRI uses base58 encoded x-only pubkeys in its configuration files\n+    std::array<unsigned char, 34> version_pubkey_bytes;\n+    version_pubkey_bytes[0] = 1;\n+    version_pubkey_bytes[1] = 0;\n+    m_authority_pubkey = XOnlyPubKey(authority_key.GetPubKey());\n+    std::copy(m_authority_pubkey.begin(), m_authority_pubkey.end(), version_pubkey_bytes.begin() + 2);\n+    LogInfo(\"Template Provider authority key: %s\\n\", EncodeBase58Check(version_pubkey_bytes));\n+    LogTrace(BCLog::SV2, \"Authority key: %s\\n\", HexStr(m_authority_pubkey));\n+\n+    // Generate and sign certificate\n+    auto now{GetTime<std::chrono::seconds>()};\n+    uint16_t version = 0;\n+    // Start validity a little bit in the past to account for clock difference\n+    uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(now).count()) - 3600;\n+    uint32_t valid_to =  std::numeric_limits<unsigned int>::max(); // 2106\n+    Sv2SignatureNoiseMessage certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to, XOnlyPubKey(static_key.GetPubKey()), authority_key);\n+\n+    m_connman = std::make_unique<Sv2Connman>(TP_SUBPROTOCOL, static_key, m_authority_pubkey, certificate);\n+}\n+\n+fs::path Sv2TemplateProvider::GetStaticKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_static_key\";\n+}\n+\n+fs::path Sv2TemplateProvider::GetAuthorityKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_authority_key\";\n+}\n+\n+bool Sv2TemplateProvider::Start(const Sv2TemplateProviderOptions& options)\n+{\n+    std::string host = \"127.0.0.1\";\n+    uint16_t port{options.port};\n+    if (gArgs.IsArgSet(\"-sv2bind\")) { // Specific bind address\n+        std::optional<std::string> sv2_bind{gArgs.GetArg(\"-sv2bind\")};\n+        if (sv2_bind) {\n+            if (!SplitHostPort(sv2_bind.value(), port, host)) {\n+                throw std::runtime_error(strprintf(\"Invalid port %d\", options.port));\n+            }\n+        }\n+    }\n+\n+    m_minimum_fee_delta = gArgs.GetIntArg(\"-sv2feedelta\", DEFAULT_SV2_FEE_DELTA);\n+\n+    if (!m_connman->Start(this, host, port)) {\n+        return false;\n+    }\n+\n+    m_thread_sv2_handler = std::thread(&util::TraceThread, \"sv2\", [this] { ThreadSv2Handler(); });\n+    return true;\n+}\n+\n+Sv2TemplateProvider::~Sv2TemplateProvider()\n+{\n+    AssertLockNotHeld(m_tp_mutex);\n+\n+    m_connman->Interrupt();\n+    m_connman->StopThreads();\n+\n+    Interrupt();\n+    StopThreads();\n+}\n+\n+void Sv2TemplateProvider::Interrupt()\n+{\n+    m_flag_interrupt_sv2 = true;\n+}\n+\n+void Sv2TemplateProvider::StopThreads()\n+{\n+    if (m_thread_sv2_handler.joinable()) {\n+        m_thread_sv2_handler.join();\n+    }\n+}\n+\n+class Timer {\n+private:\n+    std::chrono::seconds m_interval;\n+    std::chrono::seconds m_last_triggered;\n+\n+public:\n+    Timer() {\n+        m_interval = std::chrono::seconds(gArgs.GetIntArg(\"-sv2interval\", DEFAULT_SV2_INTERVAL));\n+        // Initialize the timer to a time point far in the past\n+        m_last_triggered = GetTime<std::chrono::seconds>() - std::chrono::hours(1);\n+    }\n+\n+    bool trigger() {\n+        auto now{GetTime<std::chrono::seconds>()};\n+        if (now - m_last_triggered >= m_interval) {\n+            m_last_triggered = now;\n+            return true;\n+        }\n+        return false;\n+    }\n+};\n+\n+void Sv2TemplateProvider::ThreadSv2Handler()\n+{\n+    Timer timer;\n+    unsigned int mempool_last_update = 0;\n+    unsigned int template_last_update = 0;\n+\n+    while (!m_flag_interrupt_sv2) {\n+\n+        bool best_block_changed = [this]() {\n+            if (m_mining.isInitialBlockDownload() && gArgs.GetChainType() != ChainType::SIGNET) {\n+                // Keep m_best_prev_hash unset during IBD to avoid pushing outdated\n+                // templates. Except for signet, because we might be the only miner.\n+                return false;\n+            }\n+\n+            WAIT_LOCK(g_best_block_mutex, lock);\n+            auto checktime = std::chrono::steady_clock::now() + std::chrono::milliseconds(50);\n+            g_best_block_cv.wait_until(lock, checktime);\n+            LOCK(m_tp_mutex);\n+            if (m_best_prev_hash != g_best_block && g_best_block != uint256(0)) {\n+                m_best_prev_hash = g_best_block;\n+                return true;\n+            }\n+            return false;\n+        }();",
      "path": "src/node/sv2_template_provider.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is this not polling?",
      "created_at": "2024-07-03T13:08:40Z",
      "updated_at": "2024-07-03T13:28:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1664165837",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664165837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665307304",
      "pull_request_review_id": 2158261827,
      "id": 1665307304,
      "node_id": "PRRC_kwDOABII585jQpKo",
      "diff_hunk": "@@ -0,0 +1,404 @@\n+#include <node/sv2_template_provider.h>\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <base58.h>\n+#include <consensus/merkle.h>\n+#include <crypto/hex_base.h>\n+#include <common/args.h>\n+#include <common/sv2_noise.h>\n+#include <logging.h>\n+#include <util/readwritefile.h>\n+#include <util/strencodings.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+\n+Sv2TemplateProvider::Sv2TemplateProvider(interfaces::Mining& mining) : m_mining{mining}\n+{\n+    // TODO: persist static key\n+    CKey static_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"rb\")} >> static_key;\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Reading cached static key from %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!static_key.IsValid()) {\n+        static_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"wb\")} << static_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing static key to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated static key, saved to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    }\n+    LogPrintLevel(BCLog::SV2, BCLog::Level::Info, \"Static key: %s\\n\", HexStr(static_key.GetPubKey()));\n+\n+   // Generate self signed certificate using (cached) authority key\n+    // TODO: skip loading authoritity key if -sv2cert is used\n+\n+    // Load authority key if cached\n+    CKey authority_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"rb\")} >> authority_key;\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!authority_key.IsValid()) {\n+        authority_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"wb\")} << authority_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing authority key to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated authority key, saved to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+    }\n+    // SRI uses base58 encoded x-only pubkeys in its configuration files\n+    std::array<unsigned char, 34> version_pubkey_bytes;\n+    version_pubkey_bytes[0] = 1;\n+    version_pubkey_bytes[1] = 0;\n+    m_authority_pubkey = XOnlyPubKey(authority_key.GetPubKey());\n+    std::copy(m_authority_pubkey.begin(), m_authority_pubkey.end(), version_pubkey_bytes.begin() + 2);\n+    LogInfo(\"Template Provider authority key: %s\\n\", EncodeBase58Check(version_pubkey_bytes));\n+    LogTrace(BCLog::SV2, \"Authority key: %s\\n\", HexStr(m_authority_pubkey));\n+\n+    // Generate and sign certificate\n+    auto now{GetTime<std::chrono::seconds>()};\n+    uint16_t version = 0;\n+    // Start validity a little bit in the past to account for clock difference\n+    uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(now).count()) - 3600;\n+    uint32_t valid_to =  std::numeric_limits<unsigned int>::max(); // 2106\n+    Sv2SignatureNoiseMessage certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to, XOnlyPubKey(static_key.GetPubKey()), authority_key);\n+\n+    m_connman = std::make_unique<Sv2Connman>(TP_SUBPROTOCOL, static_key, m_authority_pubkey, certificate);\n+}\n+\n+fs::path Sv2TemplateProvider::GetStaticKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_static_key\";\n+}\n+\n+fs::path Sv2TemplateProvider::GetAuthorityKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_authority_key\";\n+}\n+\n+bool Sv2TemplateProvider::Start(const Sv2TemplateProviderOptions& options)\n+{\n+    std::string host = \"127.0.0.1\";\n+    uint16_t port{options.port};\n+    if (gArgs.IsArgSet(\"-sv2bind\")) { // Specific bind address\n+        std::optional<std::string> sv2_bind{gArgs.GetArg(\"-sv2bind\")};\n+        if (sv2_bind) {\n+            if (!SplitHostPort(sv2_bind.value(), port, host)) {\n+                throw std::runtime_error(strprintf(\"Invalid port %d\", options.port));\n+            }\n+        }\n+    }\n+\n+    m_minimum_fee_delta = gArgs.GetIntArg(\"-sv2feedelta\", DEFAULT_SV2_FEE_DELTA);\n+\n+    if (!m_connman->Start(this, host, port)) {\n+        return false;\n+    }\n+\n+    m_thread_sv2_handler = std::thread(&util::TraceThread, \"sv2\", [this] { ThreadSv2Handler(); });\n+    return true;\n+}\n+\n+Sv2TemplateProvider::~Sv2TemplateProvider()\n+{\n+    AssertLockNotHeld(m_tp_mutex);\n+\n+    m_connman->Interrupt();\n+    m_connman->StopThreads();\n+\n+    Interrupt();\n+    StopThreads();\n+}\n+\n+void Sv2TemplateProvider::Interrupt()\n+{\n+    m_flag_interrupt_sv2 = true;\n+}\n+\n+void Sv2TemplateProvider::StopThreads()\n+{\n+    if (m_thread_sv2_handler.joinable()) {\n+        m_thread_sv2_handler.join();\n+    }\n+}\n+\n+class Timer {\n+private:\n+    std::chrono::seconds m_interval;\n+    std::chrono::seconds m_last_triggered;\n+\n+public:\n+    Timer() {\n+        m_interval = std::chrono::seconds(gArgs.GetIntArg(\"-sv2interval\", DEFAULT_SV2_INTERVAL));\n+        // Initialize the timer to a time point far in the past\n+        m_last_triggered = GetTime<std::chrono::seconds>() - std::chrono::hours(1);\n+    }\n+\n+    bool trigger() {\n+        auto now{GetTime<std::chrono::seconds>()};\n+        if (now - m_last_triggered >= m_interval) {\n+            m_last_triggered = now;\n+            return true;\n+        }\n+        return false;\n+    }\n+};\n+\n+void Sv2TemplateProvider::ThreadSv2Handler()\n+{\n+    Timer timer;\n+    unsigned int mempool_last_update = 0;\n+    unsigned int template_last_update = 0;\n+\n+    while (!m_flag_interrupt_sv2) {\n+\n+        bool best_block_changed = [this]() {\n+            if (m_mining.isInitialBlockDownload() && gArgs.GetChainType() != ChainType::SIGNET) {\n+                // Keep m_best_prev_hash unset during IBD to avoid pushing outdated\n+                // templates. Except for signet, because we might be the only miner.\n+                return false;\n+            }\n+\n+            WAIT_LOCK(g_best_block_mutex, lock);\n+            auto checktime = std::chrono::steady_clock::now() + std::chrono::milliseconds(50);\n+            g_best_block_cv.wait_until(lock, checktime);\n+            LOCK(m_tp_mutex);\n+            if (m_best_prev_hash != g_best_block && g_best_block != uint256(0)) {\n+                m_best_prev_hash = g_best_block;\n+                return true;\n+            }\n+            return false;\n+        }();",
      "path": "src/node/sv2_template_provider.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "in_reply_to_id": 1664165837,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not polling over RPC.",
      "created_at": "2024-07-04T08:06:05Z",
      "updated_at": "2024-07-04T08:06:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1665307304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665307304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665352969",
      "pull_request_review_id": 2158335015,
      "id": 1665352969,
      "node_id": "PRRC_kwDOABII585jQ0UJ",
      "diff_hunk": "@@ -0,0 +1,404 @@\n+#include <node/sv2_template_provider.h>\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <base58.h>\n+#include <consensus/merkle.h>\n+#include <crypto/hex_base.h>\n+#include <common/args.h>\n+#include <common/sv2_noise.h>\n+#include <logging.h>\n+#include <util/readwritefile.h>\n+#include <util/strencodings.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+\n+Sv2TemplateProvider::Sv2TemplateProvider(interfaces::Mining& mining) : m_mining{mining}\n+{\n+    // TODO: persist static key\n+    CKey static_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"rb\")} >> static_key;\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Reading cached static key from %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!static_key.IsValid()) {\n+        static_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetStaticKeyFile(), \"wb\")} << static_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing static key to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated static key, saved to %s\\n\", fs::PathToString(GetStaticKeyFile()));\n+    }\n+    LogPrintLevel(BCLog::SV2, BCLog::Level::Info, \"Static key: %s\\n\", HexStr(static_key.GetPubKey()));\n+\n+   // Generate self signed certificate using (cached) authority key\n+    // TODO: skip loading authoritity key if -sv2cert is used\n+\n+    // Load authority key if cached\n+    CKey authority_key;\n+    try {\n+        AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"rb\")} >> authority_key;\n+    } catch (const std::ios_base::failure&) {\n+        // File is not expected to exist the first time.\n+        // In the unlikely event that loading an existing key fails, create a new one.\n+    }\n+    if (!authority_key.IsValid()) {\n+        authority_key = GenerateRandomKey();\n+        try {\n+            AutoFile{fsbridge::fopen(GetAuthorityKeyFile(), \"wb\")} << authority_key;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrintLevel(BCLog::SV2, BCLog::Level::Error, \"Error writing authority key to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+            // Continue, because this is not a critical failure.\n+        }\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Debug, \"Generated authority key, saved to %s\\n\", fs::PathToString(GetAuthorityKeyFile()));\n+    }\n+    // SRI uses base58 encoded x-only pubkeys in its configuration files\n+    std::array<unsigned char, 34> version_pubkey_bytes;\n+    version_pubkey_bytes[0] = 1;\n+    version_pubkey_bytes[1] = 0;\n+    m_authority_pubkey = XOnlyPubKey(authority_key.GetPubKey());\n+    std::copy(m_authority_pubkey.begin(), m_authority_pubkey.end(), version_pubkey_bytes.begin() + 2);\n+    LogInfo(\"Template Provider authority key: %s\\n\", EncodeBase58Check(version_pubkey_bytes));\n+    LogTrace(BCLog::SV2, \"Authority key: %s\\n\", HexStr(m_authority_pubkey));\n+\n+    // Generate and sign certificate\n+    auto now{GetTime<std::chrono::seconds>()};\n+    uint16_t version = 0;\n+    // Start validity a little bit in the past to account for clock difference\n+    uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(now).count()) - 3600;\n+    uint32_t valid_to =  std::numeric_limits<unsigned int>::max(); // 2106\n+    Sv2SignatureNoiseMessage certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to, XOnlyPubKey(static_key.GetPubKey()), authority_key);\n+\n+    m_connman = std::make_unique<Sv2Connman>(TP_SUBPROTOCOL, static_key, m_authority_pubkey, certificate);\n+}\n+\n+fs::path Sv2TemplateProvider::GetStaticKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_static_key\";\n+}\n+\n+fs::path Sv2TemplateProvider::GetAuthorityKeyFile()\n+{\n+    return gArgs.GetDataDirNet() / \"sv2_authority_key\";\n+}\n+\n+bool Sv2TemplateProvider::Start(const Sv2TemplateProviderOptions& options)\n+{\n+    std::string host = \"127.0.0.1\";\n+    uint16_t port{options.port};\n+    if (gArgs.IsArgSet(\"-sv2bind\")) { // Specific bind address\n+        std::optional<std::string> sv2_bind{gArgs.GetArg(\"-sv2bind\")};\n+        if (sv2_bind) {\n+            if (!SplitHostPort(sv2_bind.value(), port, host)) {\n+                throw std::runtime_error(strprintf(\"Invalid port %d\", options.port));\n+            }\n+        }\n+    }\n+\n+    m_minimum_fee_delta = gArgs.GetIntArg(\"-sv2feedelta\", DEFAULT_SV2_FEE_DELTA);\n+\n+    if (!m_connman->Start(this, host, port)) {\n+        return false;\n+    }\n+\n+    m_thread_sv2_handler = std::thread(&util::TraceThread, \"sv2\", [this] { ThreadSv2Handler(); });\n+    return true;\n+}\n+\n+Sv2TemplateProvider::~Sv2TemplateProvider()\n+{\n+    AssertLockNotHeld(m_tp_mutex);\n+\n+    m_connman->Interrupt();\n+    m_connman->StopThreads();\n+\n+    Interrupt();\n+    StopThreads();\n+}\n+\n+void Sv2TemplateProvider::Interrupt()\n+{\n+    m_flag_interrupt_sv2 = true;\n+}\n+\n+void Sv2TemplateProvider::StopThreads()\n+{\n+    if (m_thread_sv2_handler.joinable()) {\n+        m_thread_sv2_handler.join();\n+    }\n+}\n+\n+class Timer {\n+private:\n+    std::chrono::seconds m_interval;\n+    std::chrono::seconds m_last_triggered;\n+\n+public:\n+    Timer() {\n+        m_interval = std::chrono::seconds(gArgs.GetIntArg(\"-sv2interval\", DEFAULT_SV2_INTERVAL));\n+        // Initialize the timer to a time point far in the past\n+        m_last_triggered = GetTime<std::chrono::seconds>() - std::chrono::hours(1);\n+    }\n+\n+    bool trigger() {\n+        auto now{GetTime<std::chrono::seconds>()};\n+        if (now - m_last_triggered >= m_interval) {\n+            m_last_triggered = now;\n+            return true;\n+        }\n+        return false;\n+    }\n+};\n+\n+void Sv2TemplateProvider::ThreadSv2Handler()\n+{\n+    Timer timer;\n+    unsigned int mempool_last_update = 0;\n+    unsigned int template_last_update = 0;\n+\n+    while (!m_flag_interrupt_sv2) {\n+\n+        bool best_block_changed = [this]() {\n+            if (m_mining.isInitialBlockDownload() && gArgs.GetChainType() != ChainType::SIGNET) {\n+                // Keep m_best_prev_hash unset during IBD to avoid pushing outdated\n+                // templates. Except for signet, because we might be the only miner.\n+                return false;\n+            }\n+\n+            WAIT_LOCK(g_best_block_mutex, lock);\n+            auto checktime = std::chrono::steady_clock::now() + std::chrono::milliseconds(50);\n+            g_best_block_cv.wait_until(lock, checktime);\n+            LOCK(m_tp_mutex);\n+            if (m_best_prev_hash != g_best_block && g_best_block != uint256(0)) {\n+                m_best_prev_hash = g_best_block;\n+                return true;\n+            }\n+            return false;\n+        }();",
      "path": "src/node/sv2_template_provider.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d56d39de58f35a30d882d3559a0931fd8053b48b",
      "original_commit_id": "e65a074312b41bf7e8a251ac5684c1c796397a40",
      "in_reply_to_id": 1664165837,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> How is this not polling?\r\n\r\nI was reading it as \"check every 50ms\" but I just noticed that it is also using a condvar, so it'll get notified when `g_best_block` changes.",
      "created_at": "2024-07-04T08:39:07Z",
      "updated_at": "2024-07-04T08:39:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1665352969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665352969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    }
  ]
}