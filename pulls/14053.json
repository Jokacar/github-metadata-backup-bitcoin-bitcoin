{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053",
    "id": 210820647,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwODIwNjQ3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14053",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14053.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14053.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cd274024b8e47e840a54e21a1c0e27c7024d3d73",
    "number": 14053,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add address-based index (attempt 4?)",
    "user": {
      "login": "marcinja",
      "id": 12243734,
      "node_id": "MDQ6VXNlcjEyMjQzNzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcinja",
      "html_url": "https://github.com/marcinja",
      "followers_url": "https://api.github.com/users/marcinja/followers",
      "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
      "organizations_url": "https://api.github.com/users/marcinja/orgs",
      "repos_url": "https://api.github.com/users/marcinja/repos",
      "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/marcinja/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adds index to transactions by scriptPubKey. Based off of #2802. Stores hashes of scripts (hashed using Murmurhash3, with a hash seed that is stored in the index database), along with the `COutPoint` for the output which was spent/created, and the `CDiskTxPos` for the transaction in which this happened.",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 1392286103,
        "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
        "name": "Needs Conceptual Review",
        "description": "",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 1648013533,
        "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
        "name": "Review club",
        "description": "",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-08-24T18:51:45Z",
    "updated_at": "2022-08-16T17:11:15Z",
    "closed_at": "2021-01-04T16:21:10Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "0dc00febf645facf17ba280c6b4905ac5bd2404e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "marcinja:add-address-index",
      "ref": "add-address-index",
      "sha": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 137785946,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMzc3ODU5NDY=",
        "name": "bitcoin",
        "full_name": "marcinja/bitcoin",
        "owner": {
          "login": "marcinja",
          "id": 12243734,
          "node_id": "MDQ6VXNlcjEyMjQzNzM0",
          "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marcinja",
          "html_url": "https://github.com/marcinja",
          "followers_url": "https://api.github.com/users/marcinja/followers",
          "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
          "organizations_url": "https://api.github.com/users/marcinja/orgs",
          "repos_url": "https://api.github.com/users/marcinja/repos",
          "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/marcinja/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/marcinja/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/marcinja/bitcoin",
        "archive_url": "https://api.github.com/repos/marcinja/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/marcinja/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/marcinja/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/marcinja/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/marcinja/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/marcinja/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/marcinja/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/marcinja/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/marcinja/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/marcinja/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/marcinja/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/marcinja/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/marcinja/bitcoin/events",
        "forks_url": "https://api.github.com/repos/marcinja/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/marcinja/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/marcinja/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/marcinja/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/marcinja/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/marcinja/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/marcinja/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/marcinja/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/marcinja/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/marcinja/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/marcinja/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/marcinja/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/marcinja/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/marcinja/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/marcinja/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/marcinja/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:marcinja/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/marcinja/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/marcinja/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/marcinja/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/marcinja/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/marcinja/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/marcinja/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/marcinja/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/marcinja/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/marcinja/bitcoin/hooks",
        "svn_url": "https://github.com/marcinja/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 148046,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-10-01T01:27:29Z",
        "created_at": "2018-06-18T17:42:57Z",
        "updated_at": "2018-08-21T19:00:32Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3487e421a7fef4b28381efcf21a7e38483946cec",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70607,
        "watchers_count": 70607,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T17:47:04Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T16:22:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 805,
    "deletions": 1,
    "changed_files": 13,
    "commits": 4,
    "review_comments": 68,
    "comments": 50
  },
  "events": [
    {
      "event": "mentioned",
      "id": 1808317884,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgwODMxNzg4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808317884",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T18:51:45Z"
    },
    {
      "event": "subscribed",
      "id": 1808317886,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MDgzMTc4ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808317886",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T18:51:45Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T18:57:29Z",
      "updated_at": "2018-08-24T18:57:29Z",
      "source": {
        "issue": {
          "id": 353522878,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwNTUzMTg5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14035",
          "number": 14035,
          "state": "closed",
          "state_reason": null,
          "title": "Utxoscriptindex",
          "body": "Yet another attempt to introduce UTxO index by script. Based on #9806 with review remarks and new index framework introduced in #13033 taken into account.",
          "user": {
            "login": "mgrychow",
            "id": 42271287,
            "node_id": "MDQ6VXNlcjQyMjcxMjg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/42271287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgrychow",
            "html_url": "https://github.com/mgrychow",
            "followers_url": "https://api.github.com/users/mgrychow/followers",
            "following_url": "https://api.github.com/users/mgrychow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mgrychow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mgrychow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mgrychow/subscriptions",
            "organizations_url": "https://api.github.com/users/mgrychow/orgs",
            "repos_url": "https://api.github.com/users/mgrychow/repos",
            "events_url": "https://api.github.com/users/mgrychow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mgrychow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14035",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14035",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14035.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14035.patch"
          },
          "closed_at": "2019-04-19T17:37:46Z",
          "created_at": "2018-08-23T19:34:19Z",
          "updated_at": "2022-02-15T11:04:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 415858539,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTg1ODUzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415858539",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T19:23:51Z",
      "updated_at": "2021-01-02T19:00:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20404 (Remove names from translatable strings by hebasto)\n* #20012 (rpc: Remove duplicate name and argNames from CRPCCommand by MarcoFalke)\n* #19873 (Flush dbcache early if system is under memory pressure by luke-jr)\n* #19806 (validation: UTXO snapshot activation by jamesob)\n* #19521 (Coinstats Index (without UTXO set hash) by fjahr)\n* #15946 (Allow maintaining the blockfilterindex when using prune by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-415858539",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T19:51:48Z",
      "updated_at": "2018-08-24T19:51:48Z",
      "source": {
        "issue": {
          "id": 350176326,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MDkwMDYw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13961",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13961/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13961/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13961/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13961",
          "number": 13961,
          "state": "closed",
          "state_reason": null,
          "title": "util: Replace boost::signals2 with std::function",
          "body": "This removes the `#include <boost/signals2/signal.hpp>` from `util.h` (hopefully speeding up the build time and reducing the memory usage further after  #13634)\r\n\r\nThe whole translation interface is replaced by a function `G_TRANSLATION_FUN` that is set to nullptr in units that don't need translation. (Thus only set in the gui)",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13961",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13961",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13961.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13961.patch"
          },
          "closed_at": "2018-08-25T19:14:53Z",
          "created_at": "2018-08-13T20:13:14Z",
          "updated_at": "2022-02-15T10:48:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T19:55:43Z",
      "updated_at": "2018-08-24T19:55:43Z",
      "source": {
        "issue": {
          "id": 349770915,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3Nzk2OTE4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13945",
          "number": 13945,
          "state": "closed",
          "state_reason": null,
          "title": "Refactoring CRPCCommand with enum category",
          "body": "refactoring `CRPCCommand` changing the  type of its member `category` from `std::string` to a `typedef enum ERPCCategory`.\r\nThe behaviour should be exactly the same with a very very small, in any way irrelevant, speed dump.\r\n\r\nI am doing this, in preparation to add attributes, likes `visibility` and `state` to `CRPCCommand ` structure, to avoid using category names, for overridden informations like visibility or deprecation.\r\n\r\nFor example, from v0.16.0 the command `getinfo` switched its category from `control` to `hidden`, while I think the idea was to let it to `control` category, with attributes similar to `visibility = false` and `state = deprecated`\r\n\r\nThanks,\r\nIsidoro Ghezzi\r\n\r\np.s:\r\n* Take care on the fact, that I had no warning assigning the enum to a std::string :-(\r\nAlso take care I'm never testing on QT. (I simply never configure nor compile on QT); anyway I was able to catch the QT command `rpcNestedTest`.\r\n* I tested only on `regtest` and `macOS`\r\n\r\nEDITs: \r\n 1. Using `enum class` it's giving right error trying to assign by mistake to a std::string :-) https://github.com/bitcoin/bitcoin/pull/13945/commits/cf190f57a078df1d37bd1822e3fa69ba0d9c90e6\r\n2. I tested on `regtest` on `ubuntu` and `macOS`\r\n3. I never tested nor compiled on windows.",
          "user": {
            "login": "isghe",
            "id": 1006078,
            "node_id": "MDQ6VXNlcjEwMDYwNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isghe",
            "html_url": "https://github.com/isghe",
            "followers_url": "https://api.github.com/users/isghe/followers",
            "following_url": "https://api.github.com/users/isghe/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isghe/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isghe/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
            "organizations_url": "https://api.github.com/users/isghe/orgs",
            "repos_url": "https://api.github.com/users/isghe/repos",
            "events_url": "https://api.github.com/users/isghe/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isghe/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13945",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13945",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13945.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13945.patch"
          },
          "closed_at": "2018-09-01T08:31:58Z",
          "created_at": "2018-08-11T23:21:07Z",
          "updated_at": "2022-02-15T10:48:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T19:56:21Z",
      "updated_at": "2018-08-24T19:56:21Z",
      "source": {
        "issue": {
          "id": 349699844,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzU0MDI1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13942",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13942/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13942/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13942/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13942",
          "number": 13942,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Removal of circular dependency between index/txindex, validation and index/base",
          "body": "After PR #13033 and PR #13243 there is a useful framework to add more indexes other than txindex, however circular dependencies detected by lint (`index/txindex -> validation -> index/txindex` and `index/txindex -> index/base -> validation -> index/txindex`) would prevent such solution to pass CI checks without adding an exception rule in check scrypt. In case one calls newly added index method in `validation.cpp`, another circular dependency is created because new index is supposed to inherit from index/base. My proposition is to split `validation.cpp` into two parts, one with its core features / functionalities and other with utils used in other translation units that require including `validation`. No functional change in code is expected here as it is only moved between files, and a circular dependency is removed.",
          "user": {
            "login": "mgrychow",
            "id": 42271287,
            "node_id": "MDQ6VXNlcjQyMjcxMjg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/42271287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgrychow",
            "html_url": "https://github.com/mgrychow",
            "followers_url": "https://api.github.com/users/mgrychow/followers",
            "following_url": "https://api.github.com/users/mgrychow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mgrychow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mgrychow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mgrychow/subscriptions",
            "organizations_url": "https://api.github.com/users/mgrychow/orgs",
            "repos_url": "https://api.github.com/users/mgrychow/repos",
            "events_url": "https://api.github.com/users/mgrychow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mgrychow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13942",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13942",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13942.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13942.patch"
          },
          "closed_at": "2018-09-20T20:15:33Z",
          "created_at": "2018-08-11T02:48:45Z",
          "updated_at": "2022-02-15T10:48:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1809017570,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDkwMTc1NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809017570",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T14:46:51Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 1809130485,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDkxMzA0ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809130485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T20:46:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1810838739,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxMDgzODczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1810838739",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-27T15:07:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1810882146,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxMDg4MjE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1810882146",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-27T15:26:09Z"
    },
    {
      "event": "unlabeled",
      "id": 1810925978,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgxMDkyNTk3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1810925978",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-27T15:44:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1813764121,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxMzc2NDEyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1813764121",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T18:00:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1814140316,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNDE0MDMxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814140316",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T20:57:32Z"
    },
    {
      "event": "mentioned",
      "id": 1816360287,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgxNjM2MDI4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1816360287",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T18:14:04Z"
    },
    {
      "event": "subscribed",
      "id": 1816360288,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MTYzNjAyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1816360288",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T18:14:04Z"
    },
    {
      "event": "reviewed",
      "id": 150655713,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNjU1NzEz",
      "url": null,
      "actor": null,
      "commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed most of the code, but just skimmed tests. It looks to me like this PR could be merged basically in its current form, so I'm curious if you're intending to make the improvements cited in the PR description above here or in a separate PRs.\r\n\r\nI left a few minor suggestions about the code, which you should feel free to ignore. The only changes I would definitely like to see here are:\r\n\r\n- adding some python code in `test/functional/` to call the new rpc method\r\n- adding a blurb in `doc/release notes.md` to describe the feature and maybe mention some use-cases",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-150655713",
      "submitted_at": "2018-08-29T18:58:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 150972075,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwOTcyMDc1",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-150972075",
      "submitted_at": "2018-08-30T12:37:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 150972977,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwOTcyOTc3",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-150972977",
      "submitted_at": "2018-08-30T12:46:04Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-30T18:08:56Z",
      "updated_at": "2018-08-30T18:08:56Z",
      "source": {
        "issue": {
          "id": 355671636,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyMTQ2MDUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14111",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14111/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14111/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14111/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14111",
          "number": 14111,
          "state": "closed",
          "state_reason": null,
          "title": "index: Create IndexRunner class for activing indexes.",
          "body": "As noted by @ryanofsky and mitigated in #13894 and #14071, the index destructor previously had a memory violation by accessing its own address in call to UnregisterValidationInterface. This is problematic even if `Start` is never called on the index. The new runner class is an RAII-style interface for sync thread management and validation interface registration.\r\n\r\nI'm not sure if this is a good idea or an unnecessary abstraction since the `init` module still has responsibility for starting/stopping via global pointers. I do think it's a better separation of concerns though. Looking for feedback before polishing up the PR.",
          "user": {
            "login": "jimpo",
            "id": 881253,
            "node_id": "MDQ6VXNlcjg4MTI1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpo",
            "html_url": "https://github.com/jimpo",
            "followers_url": "https://api.github.com/users/jimpo/followers",
            "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpo/orgs",
            "repos_url": "https://api.github.com/users/jimpo/repos",
            "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jimpo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14111",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14111",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14111.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14111.patch"
          },
          "closed_at": "2019-03-02T21:53:57Z",
          "created_at": "2018-08-30T16:55:22Z",
          "updated_at": "2022-02-15T10:48:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 151142587,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxMTQyNTg3",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-151142587",
      "submitted_at": "2018-08-30T19:14:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 151126290,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUxMTI2Mjkw",
      "url": null,
      "actor": null,
      "commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Nice work! I'm glad someone's working on this. Concept ACK.\r\n\r\n1. The AddrIndex should return information about the outpoints and differentiate between outputs and spends, not just return the raw transactions. In fact, the AddrIndex could *just* return outpoints, then the client code could use the TxIndex could to fetch the tx bodies. It'd involve a separate lookup though.\r\n2. I don't think it's necessary to delete keys from the database when a block is disconnected. There's no harm in leaving it. The higher level methods to search the index can then filter for results that are on the main chain if that's what the client wants. It'd have to do this anyway to avoid races with reorgs and such.\r\n3. I'm worried about collisions on address IDs because they are only 64 bits. I can think of three options, 1) use a 32 byte cryptographic hash, 2) use a 20 byte cryptographic hash of the script plus some randomly generated, database-global salt, 3) use a 32- or 64-bit non-cryptographic hash (might as well use Murmur3 or SipHash, not truncated SHA256), then store the full script as the database value to double check against. Option 3 feels best to me.\r\n4. What's the purpose of having the first byte of the block hash as the value? It doesn't seem robust nor particularly useful.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-151126290",
      "submitted_at": "2018-08-30T23:15:30Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "commented",
      "id": 417697510,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzY5NzUxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417697510",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T15:19:08Z",
      "updated_at": "2018-08-31T15:19:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for all the reviews. \r\n\r\nTo answer some of @jimpo's questions:\r\n2 & 4. I included part of the block hash so that in BlockDisconnected we ae sure to remove the entries in the index from this block only (that's where  `filter_by_value` is used). The reason I chose to remove entries from the database is to prevent reading into a block file using an old `CDiskTxPos`  that may no longer be a valid position. Otherwise in `FindTxsByScript` you could run into errors. You're right that this problem would be better handled by higher level methods.\r\n\r\nI think that returning just the outpoint is a better idea than the current choice so I'll switch to that and try to incorporate all the other feedback here.",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-417697510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 1820854858,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgyMDg1NDg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820854858",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T15:19:08Z"
    },
    {
      "event": "subscribed",
      "id": 1820854860,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MjA4NTQ4NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820854860",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T15:19:08Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T22:47:52Z",
      "updated_at": "2018-08-31T22:47:52Z",
      "source": {
        "issue": {
          "id": 356128531,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyNDk3ODc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14121",
          "number": 14121,
          "state": "closed",
          "state_reason": null,
          "title": "Index for BIP 157 block filters",
          "body": "This introduces a new BlockFilterIndex class, which is required for BIP 157 support.\r\n\r\nThe index is uses the asynchronous BaseIndex infrastructure driven by the ValidationInterface callbacks. Filters are stored sequentially in flat files and the disk location of each filter is indexed in LevelDB along with the filter hash and header. The index is designed to ensure persistence of filters reorganized out of the main chain to simplify the BIP 157 net implementation.\r\n\r\nStats (block height = 565500):\r\n- Syncing the index from scratch takes 45m\r\n- Total index size is 3.8 GiB",
          "user": {
            "login": "jimpo",
            "id": 881253,
            "node_id": "MDQ6VXNlcjg4MTI1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpo",
            "html_url": "https://github.com/jimpo",
            "followers_url": "https://api.github.com/users/jimpo/followers",
            "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpo/orgs",
            "repos_url": "https://api.github.com/users/jimpo/repos",
            "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jimpo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14121",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14121",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14121.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14121.patch"
          },
          "closed_at": "2019-04-18T13:49:38Z",
          "created_at": "2018-08-31T21:28:20Z",
          "updated_at": "2022-02-15T10:32:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 152365361,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY1MzYx",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152365361",
      "submitted_at": "2018-09-05T07:30:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152365501,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY1NTAx",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152365501",
      "submitted_at": "2018-09-05T07:30:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152365584,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY1NTg0",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152365584",
      "submitted_at": "2018-09-05T07:30:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152365666,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY1NjY2",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152365666",
      "submitted_at": "2018-09-05T07:31:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152365920,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY1OTIw",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152365920",
      "submitted_at": "2018-09-05T07:32:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152366108,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY2MTA4",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152366108",
      "submitted_at": "2018-09-05T07:32:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 152366243,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyMzY2MjQz",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-152366243",
      "submitted_at": "2018-09-05T07:32:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153102413,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAyNDEz",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153102413",
      "submitted_at": "2018-09-06T20:16:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153102721,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAyNzIx",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153102721",
      "submitted_at": "2018-09-06T20:17:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153102835,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAyODM1",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153102835",
      "submitted_at": "2018-09-06T20:17:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153102932,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAyOTMy",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153102932",
      "submitted_at": "2018-09-06T20:18:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153103042,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAzMDQy",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153103042",
      "submitted_at": "2018-09-06T20:18:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 153103233,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzMTAzMjMz",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153103233",
      "submitted_at": "2018-09-06T20:18:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "mentioned",
      "id": 1833387408,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgzMzM4NzQwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1833387408",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-07T17:37:02Z"
    },
    {
      "event": "subscribed",
      "id": 1833387409,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MzMzODc0MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1833387409",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-07T17:37:02Z"
    },
    {
      "event": "reviewed",
      "id": 153436851,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUzNDM2ODUx",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Suggest adding `-addrindex` and `searchrawtransactions <address>` to the PR description for easier review.\r\n\r\nI would do \"integrating output descriptors\" in a different PR.\r\n\r\nLightly tested on macOS. It doesn't find the coinbase transaction to `mtnNvZY7iQCfzJCVon13tfJSVYDn9iiUWD` in [block 120](https://testnet.blockchain.info/en/block/0000000058dbb5e3fce9be42ae79beb564be666866c6b85c9791863219ec36db), `mg4bQva8w7Cjs8KaKHeEbyXUaCzoQAcXyH`  in [block 10001](https://testnet.blockchain.info/nl/block/0000000000629d100db387f37d0f37c51118f250fb0946310a8c37316cbc4028) and several others.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-153436851",
      "submitted_at": "2018-09-07T18:13:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-10T01:49:43Z",
      "updated_at": "2018-09-10T01:49:43Z",
      "source": {
        "issue": {
          "id": 325704506,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5OTc0NTY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13311",
          "number": 13311,
          "state": "closed",
          "state_reason": null,
          "title": "Don't edit Chainparams after initialization",
          "body": "This encapsulates the \"-vbparams\" option, which is only meant for regtest, directly on CRegTestParams.\r\n\r\nThis is a refactor and doesn't change functionality.\r\n\r\nRelated to https://github.com/bitcoin/bitcoin/pull/8994",
          "user": {
            "login": "jtimon",
            "id": 1008458,
            "node_id": "MDQ6VXNlcjEwMDg0NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jtimon",
            "html_url": "https://github.com/jtimon",
            "followers_url": "https://api.github.com/users/jtimon/followers",
            "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
            "organizations_url": "https://api.github.com/users/jtimon/orgs",
            "repos_url": "https://api.github.com/users/jtimon/repos",
            "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jtimon/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13311",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13311.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13311.patch"
          },
          "closed_at": "2018-09-24T21:25:34Z",
          "created_at": "2018-05-23T13:26:21Z",
          "updated_at": "2021-09-08T11:58:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:32:43Z",
      "updated_at": "2018-09-21T13:32:43Z",
      "source": {
        "issue": {
          "id": 247218529,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNTg0NTYw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10973",
          "number": 10973,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor: separate wallet from node",
          "body": "This PR is the last in a chain of PRs (#14437, #14711, and #15288) that make the wallet code access node state through an abstract [`Chain`](https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/interfaces/chain.h) class in [`src/interfaces/`](https://github.com/ryanofsky/bitcoin/tree/pr/wipc-sep/src/interfaces) instead of using global variables like `cs_main`, `chainActive`, and `g_connman`. After this PR, wallet code no longer accesses global variables declared outside the wallet directory, and no longer calls functions accessing those globals (as verified by the `hide-globals` script in #10244).\r\n\r\nThis PR and the previous PRs have been refactoring changes that do not affect behavior. Previous PRs have consisted of lots of mechanical changes like:\r\n\r\n```diff\r\n-    wtx.nTimeReceived = GetAdjustedTime();\r\n+    wtx.nTimeReceived = m_chain->getAdjustedTime();\r\n```\r\n\r\nThis PR is smaller, but less mechanical. It replaces last few bits of wallet code that access node state directly (through `CValidationInterface`, `CRPCTable`, and `CCoinsViewMemPool` interfaces) with code that uses the `Chain` interface.\r\n\r\nThese changes allow followup PR #10102 (multiprocess gui & wallet PR) to work without any significant updates to wallet code. Additionally they:\r\n\r\n* Provide a single place to describe the interface between wallet and node code.\r\n* Can make better wallet testing possible, because the `Chain` object consists of virtual methods that can be overloaded for mocking. (This could be used to test edge cases in the rescan code, for example).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 35,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10973",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10973.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10973.patch"
          },
          "closed_at": "2019-03-21T07:59:20Z",
          "created_at": "2017-08-01T22:17:26Z",
          "updated_at": "2021-12-16T14:06:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 157931838,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMxODM4",
      "url": null,
      "actor": null,
      "commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-157931838",
      "submitted_at": "2018-09-23T07:59:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "labeled",
      "id": 1864329899,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NjQzMjk4OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1864329899",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T22:23:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 427261876,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzI2MTg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/427261876",
      "actor": {
        "login": "karelbilek",
        "id": 104945,
        "node_id": "MDQ6VXNlcjEwNDk0NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/104945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karelbilek",
        "html_url": "https://github.com/karelbilek",
        "followers_url": "https://api.github.com/users/karelbilek/followers",
        "following_url": "https://api.github.com/users/karelbilek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/karelbilek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/karelbilek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/karelbilek/subscriptions",
        "organizations_url": "https://api.github.com/users/karelbilek/orgs",
        "repos_url": "https://api.github.com/users/karelbilek/repos",
        "events_url": "https://api.github.com/users/karelbilek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/karelbilek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-05T06:40:09Z",
      "updated_at": "2018-10-05T07:09:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Comments to the concept\r\n\r\nSome time ago I have rebased bitpay's bitcore patches (from their insight block explorer) to bitcoin core here (without much work on my own)\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/10370\r\n\r\nThe consensus back then seemed to be that more indexes in the core is not a good thing, and work should be instead done on external indexes. However I am no sure how this PR differs, I just quickly skimmed it.",
      "user": {
        "login": "karelbilek",
        "id": 104945,
        "node_id": "MDQ6VXNlcjEwNDk0NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/104945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karelbilek",
        "html_url": "https://github.com/karelbilek",
        "followers_url": "https://api.github.com/users/karelbilek/followers",
        "following_url": "https://api.github.com/users/karelbilek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/karelbilek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/karelbilek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/karelbilek/subscriptions",
        "organizations_url": "https://api.github.com/users/karelbilek/orgs",
        "repos_url": "https://api.github.com/users/karelbilek/repos",
        "events_url": "https://api.github.com/users/karelbilek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/karelbilek/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-427261876",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 427280137,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzI4MDEzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/427280137",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-05T08:02:32Z",
      "updated_at": "2018-10-05T08:02:32Z",
      "author_association": "MEMBER",
      "body": "@karel-3d I think this one is based on  #13033, so at least the performance impact should be less pronounced. Other than that it should be rather similar.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-427280137",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 1886485127,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg4NjQ4NTEyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1886485127",
      "actor": {
        "login": "karelbilek",
        "id": 104945,
        "node_id": "MDQ6VXNlcjEwNDk0NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/104945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karelbilek",
        "html_url": "https://github.com/karelbilek",
        "followers_url": "https://api.github.com/users/karelbilek/followers",
        "following_url": "https://api.github.com/users/karelbilek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/karelbilek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/karelbilek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/karelbilek/subscriptions",
        "organizations_url": "https://api.github.com/users/karelbilek/orgs",
        "repos_url": "https://api.github.com/users/karelbilek/repos",
        "events_url": "https://api.github.com/users/karelbilek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/karelbilek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-05T08:02:32Z"
    },
    {
      "event": "subscribed",
      "id": 1886485129,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4ODY0ODUxMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1886485129",
      "actor": {
        "login": "karelbilek",
        "id": 104945,
        "node_id": "MDQ6VXNlcjEwNDk0NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/104945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karelbilek",
        "html_url": "https://github.com/karelbilek",
        "followers_url": "https://api.github.com/users/karelbilek/followers",
        "following_url": "https://api.github.com/users/karelbilek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/karelbilek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/karelbilek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/karelbilek/subscriptions",
        "organizations_url": "https://api.github.com/users/karelbilek/orgs",
        "repos_url": "https://api.github.com/users/karelbilek/repos",
        "events_url": "https://api.github.com/users/karelbilek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/karelbilek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-05T08:02:32Z"
    },
    {
      "event": "commented",
      "id": 447556680,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzU1NjY4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447556680",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-15T10:14:36Z",
      "updated_at": "2018-12-15T10:14:36Z",
      "author_association": "MEMBER",
      "body": "We talked about (address) indexes during the previous [IRC meeting](http://www.erisian.com.au/meetbot/bitcoin-core-dev/2018/bitcoin-core-dev.2018-12-13-19.00.html). ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-447556680",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2089904209,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA4OTkwNDIwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2089904209",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T20:37:26Z"
    },
    {
      "event": "unsubscribed",
      "id": 2089914657,
      "node_id": "MDE3OlVuc3Vic2NyaWJlZEV2ZW50MjA4OTkxNDY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2089914657",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T20:41:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2090001012,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5MDAwMTAxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2090001012",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T21:21:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2090028836,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5MDAyODgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2090028836",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T21:33:36Z"
    },
    {
      "event": "unlabeled",
      "id": 2090034807,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjA5MDAzNDgwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2090034807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T21:36:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2090504137,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5MDUwNDEzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2090504137",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-23T02:36:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2091937015,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5MTkzNzAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2091937015",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-23T15:16:10Z"
    },
    {
      "event": "reviewed",
      "id": 195908542,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk1OTA4NTQy",
      "url": null,
      "actor": null,
      "commit_id": "fc075a0d94bcc5b8453da5da3ac78614c76470df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-195908542",
      "submitted_at": "2019-01-24T08:48:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 195908614,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk1OTA4NjE0",
      "url": null,
      "actor": null,
      "commit_id": "fc075a0d94bcc5b8453da5da3ac78614c76470df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-195908614",
      "submitted_at": "2019-01-24T08:48:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2094722048,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5NDcyMjA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2094722048",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-24T15:06:31Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146452,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2NDUy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146452",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:35Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146535,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2NTM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146535",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:39Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146678,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2Njc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146678",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:46Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146745,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2NzQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146745",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:50Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146803,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2ODAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146803",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:53Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146871,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2ODcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146871",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:24:56Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096146964,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ2OTY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096146964",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:01Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147031,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3MDMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147031",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:06Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147106,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3MTA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147106",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:10Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147194,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3MTk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147194",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:14Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147333,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3MzMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147333",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:20Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147420,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3NDIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147420",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:25Z"
    },
    {
      "event": "comment_deleted",
      "id": 2096147488,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMDk2MTQ3NDg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2096147488",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T02:25:29Z"
    },
    {
      "event": "labeled",
      "id": 2107100446,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxMDcxMDA0NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107100446",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T16:48:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2107560831,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNzU2MDgzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107560831",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T19:51:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2107605727,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNzYwNTcyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107605727",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T20:09:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2107613223,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNzYxMzIyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107613223",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T20:12:21Z"
    },
    {
      "event": "unlabeled",
      "id": 2107731207,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjEwNzczMTIwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107731207",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T21:04:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2107858261,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNzg1ODI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107858261",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T22:02:24Z"
    },
    {
      "event": "commented",
      "id": 459132969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTEzMjk2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459132969",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T22:19:56Z",
      "updated_at": "2019-01-30T22:19:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors \r\n> Lightly tested on macOS. It doesn't find the coinbase transaction to `mtnNvZY7iQCfzJCVon13tfJSVYDn9iiUWD` in [block 120](https://testnet.blockchain.info/en/block/0000000058dbb5e3fce9be42ae79beb564be666866c6b85c9791863219ec36db), `mg4bQva8w7Cjs8KaKHeEbyXUaCzoQAcXyH` in [block 10001](https://testnet.blockchain.info/nl/block/0000000000629d100db387f37d0f37c51118f250fb0946310a8c37316cbc4028) and several others.\r\n\r\nI'm confused at what you're referring to by`mtn...` and `mg4...`. The outputs for those two coinbase transactions are P2PK, so the only way to search for them is by scriptPubKey.  I used the hex value of the scriptPubKey from [here](https://blockstream.info/block/00000000000080b66c911bd5ba14a74260057311eaeb1982802f7010f1a9f090) and was able to find it.",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-459132969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2107895401,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwNzg5NTQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107895401",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T22:19:56Z"
    },
    {
      "event": "subscribed",
      "id": 2107895404,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDc4OTU0MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2107895404",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T22:19:56Z"
    },
    {
      "event": "labeled",
      "id": 2149833924,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxNDk4MzM5MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2149833924",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-19T19:03:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-05T19:33:57Z",
      "updated_at": "2019-03-05T19:33:57Z",
      "source": {
        "issue": {
          "id": 208765129,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTA2OTI3NzEy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9806",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9806/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9806/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9806/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9806",
          "number": 9806,
          "state": "closed",
          "state_reason": null,
          "title": "txoutsbyaddress index (take 3)",
          "body": "This is an attempt to revive PR #8660 (and, by extension, PR #5048). For now, this PR simply compiles without fresh warnings or errors. Once it is confirmed that no more conflicts exist, the remaining comments/requests from #8660 will be fully addressed.",
          "user": {
            "login": "droark",
            "id": 5931802,
            "node_id": "MDQ6VXNlcjU5MzE4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5931802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/droark",
            "html_url": "https://github.com/droark",
            "followers_url": "https://api.github.com/users/droark/followers",
            "following_url": "https://api.github.com/users/droark/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/droark/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/droark/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/droark/subscriptions",
            "organizations_url": "https://api.github.com/users/droark/orgs",
            "repos_url": "https://api.github.com/users/droark/repos",
            "events_url": "https://api.github.com/users/droark/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/droark/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9806",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9806",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9806.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9806.patch"
          },
          "closed_at": "2018-04-23T22:01:10Z",
          "created_at": "2017-02-20T01:38:38Z",
          "updated_at": "2022-02-15T11:04:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2185009038,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE4NTAwOTAzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2185009038",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-06T18:30:34Z"
    },
    {
      "event": "unlabeled",
      "id": 2185152610,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjE4NTE1MjYxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2185152610",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-06T19:25:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2211293552,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyMTEyOTM1NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2211293552",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T18:09:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2215477018,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxNTQ3NzAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2215477018",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T01:46:53Z"
    },
    {
      "event": "unlabeled",
      "id": 2215546190,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjIxNTU0NjE5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2215546190",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T02:44:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2217467931,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyMTc0Njc5MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2217467931",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T16:39:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2218498392,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxODQ5ODM5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218498392",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T23:52:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2218503590,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxODUwMzU5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218503590",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T23:56:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2218505543,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxODUwNTU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218505543",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T23:58:11Z"
    },
    {
      "event": "unlabeled",
      "id": 2218515249,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjIxODUxNTI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218515249",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T00:05:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2219025573,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIyMTkwMjU1NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2219025573",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T08:26:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 512578228,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjU3ODIyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512578228",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-17T21:36:31Z",
      "updated_at": "2019-07-17T21:36:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe tag this [needing concept ack](https://github.com/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review).\r\n\r\nThis would probably be pretty easy to rebase, and has a previous concept ack from jimpo, but it's not clear if other people want this change or might object to it.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-512578228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "labeled",
      "id": 2492509609,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI0OTI1MDk2MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2492509609",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-18T12:17:26Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "labeled",
      "id": 2532216288,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1MzIyMTYyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2532216288",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-05T03:34:10Z",
      "label": {
        "name": "Needs Conceptual Review",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 518964997,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxODk2NDk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518964997",
      "actor": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-07T06:50:40Z",
      "updated_at": "2019-08-07T06:50:40Z",
      "author_association": "NONE",
      "body": "I for one would be very happy to see an optional addr index + api finally available in bitcoin-core, and not as a separate patch or hacky thing.\r\n\r\n@marcinja is there an API in your PR that accepts multiple addresses as input and returns total received/spent for each?  Some block explorers have this functionality and it is great because much more efficient than calling API for each addr individually.  \r\n\r\nAlso I think it should be caller's option (via param) whether to return list of tx or not.  Sometimes only addr summary info is needed eg total received/spent and tx info just adds bloat and slows things down in such cases.",
      "user": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-518964997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2538973659,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUzODk3MzY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2538973659",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-07T06:50:40Z"
    },
    {
      "event": "subscribed",
      "id": 2538973662,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1Mzg5NzM2NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2538973662",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-07T06:50:40Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-07T15:45:02Z",
      "updated_at": "2019-08-07T15:45:02Z",
      "source": {
        "issue": {
          "id": 477927098,
          "node_id": "MDU6SXNzdWU0Nzc5MjcwOTg=",
          "url": "https://api.github.com/repos/dan-da/bitprices/issues/3",
          "repository_url": "https://api.github.com/repos/dan-da/bitprices",
          "labels_url": "https://api.github.com/repos/dan-da/bitprices/issues/3/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dan-da/bitprices/issues/3/comments",
          "events_url": "https://api.github.com/repos/dan-da/bitprices/issues/3/events",
          "html_url": "https://github.com/dan-da/bitprices/issues/3",
          "number": 3,
          "state": "open",
          "state_reason": null,
          "title": "Can i use bitcoin core instead of btcd?",
          "body": "(If question issues are inappropriate, let me know where I shoud post instead)\r\n\r\nI'd like to avoid having to run a full node through bitcoin core *and* btcd just to run this tool privately at home...\r\n",
          "user": {
            "login": "lestephane",
            "id": 5460884,
            "node_id": "MDQ6VXNlcjU0NjA4ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5460884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lestephane",
            "html_url": "https://github.com/lestephane",
            "followers_url": "https://api.github.com/users/lestephane/followers",
            "following_url": "https://api.github.com/users/lestephane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lestephane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lestephane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lestephane/subscriptions",
            "organizations_url": "https://api.github.com/users/lestephane/orgs",
            "repos_url": "https://api.github.com/users/lestephane/repos",
            "events_url": "https://api.github.com/users/lestephane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lestephane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 8,
          "created_at": "2019-08-07T13:24:19Z",
          "updated_at": "2019-11-28T05:13:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2561098060,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU2MTA5ODA2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2561098060",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T01:40:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2561108702,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU2MTEwODcwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2561108702",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T01:50:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2561113529,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU2MTExMzUyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2561113529",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T01:55:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2561131258,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU2MTEzMTI1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2561131258",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T02:10:46Z"
    },
    {
      "event": "unlabeled",
      "id": 2561220849,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjU2MTIyMDg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2561220849",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T03:31:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 537065474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzA2NTQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537065474",
      "actor": {
        "login": "abunsen",
        "id": 93429,
        "node_id": "MDQ6VXNlcjkzNDI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/93429?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abunsen",
        "html_url": "https://github.com/abunsen",
        "followers_url": "https://api.github.com/users/abunsen/followers",
        "following_url": "https://api.github.com/users/abunsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/abunsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/abunsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/abunsen/subscriptions",
        "organizations_url": "https://api.github.com/users/abunsen/orgs",
        "repos_url": "https://api.github.com/users/abunsen/repos",
        "events_url": "https://api.github.com/users/abunsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/abunsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-01T14:33:55Z",
      "updated_at": "2019-10-01T14:33:55Z",
      "author_association": "NONE",
      "body": "@marcinja you're so close. Thanks for all your hard work on this! Does anyone know if this is getting merged anytime soon?",
      "user": {
        "login": "abunsen",
        "id": 93429,
        "node_id": "MDQ6VXNlcjkzNDI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/93429?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abunsen",
        "html_url": "https://github.com/abunsen",
        "followers_url": "https://api.github.com/users/abunsen/followers",
        "following_url": "https://api.github.com/users/abunsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/abunsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/abunsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/abunsen/subscriptions",
        "organizations_url": "https://api.github.com/users/abunsen/orgs",
        "repos_url": "https://api.github.com/users/abunsen/repos",
        "events_url": "https://api.github.com/users/abunsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/abunsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-537065474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2677287799,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjY3NzI4Nzc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2677287799",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-01T14:33:55Z"
    },
    {
      "event": "subscribed",
      "id": 2677287801,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2NzcyODc4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2677287801",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-01T14:33:55Z"
    },
    {
      "event": "added_to_project",
      "id": 2706894756,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQyNzA2ODk0NzU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2706894756",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-11T17:29:06Z",
      "project_card": {
        "id": 27673411,
        "url": "https://api.github.com/projects/columns/cards/27673411",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Chasing Concept ACK"
      }
    },
    {
      "event": "unlabeled",
      "id": 2717859253,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjcxNzg1OTI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2717859253",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-16T14:29:58Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "labeled",
      "id": 2719343518,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3MTkzNDM1MTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2719343518",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-16T22:39:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 555957701,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTk1NzcwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555957701",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-20T11:12:54Z",
      "updated_at": "2019-11-20T11:12:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "I haven't looked at how this is implemented, at all-- but the goal is one that is extraordinarily useful and addresses a severe and growing usability probable in the software that has burned me many times. ",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-555957701",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 557117513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzExNzUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557117513",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-21T14:48:06Z",
      "updated_at": "2019-11-21T14:48:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I haven't looked at how this is implemented, at all-- but the goal is one that is extraordinarily useful and addresses a severe and growing usability probable in the software that has burned me many times.\r\n\r\nSorry for the dumb question, but what's the severe usability problem?",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-557117513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558330123,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMzMDEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558330123",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:38:52Z",
      "updated_at": "2019-11-25T20:38:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Most recent IRC discussion I could find about address indexes, http://www.erisian.com.au/bitcoin-core-dev/log-2018-12-13.html#l-601 seemed to have conclusion (from @jamesob) with: \r\n\"I'll report on any compelling usecases I find for addr index, but I suspect sipa et al are right that that's usually just the Wrong way\"",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558330123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2829547392,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgyOTU0NzM5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2829547392",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:38:52Z"
    },
    {
      "event": "subscribed",
      "id": 2829547400,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4Mjk1NDc0MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2829547400",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:38:52Z"
    },
    {
      "event": "commented",
      "id": 558335048,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMzNTA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558335048",
      "actor": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:52:54Z",
      "updated_at": "2019-11-25T20:52:54Z",
      "author_association": "NONE",
      "body": "> \"usually just the Wrong way\"\r\n\r\nThis sounds like an ivory tower attitude to me.   So tell us wise ones, if an addrindex is the wrong way, then what exactly is the right way?   Because thus far bitcoin-core's answer seems to be:  don't lookup transactions related to an address AT ALL unless they are in your own wallet, which is useless for anyone trying to provide address lookup as a service.  They then must either run a patched bitcoind or turn to btcd or some other 3rd party solution.",
      "user": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558335048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558337160,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMzNzE2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558337160",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:58:35Z",
      "updated_at": "2019-11-25T20:58:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> what exactly is the right way?\r\n\r\nThe right way to do what? Can you provide more detail? I think it'd be good to keep the discussion as concrete as possible and discuss specific problems and use cases.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558337160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558344637,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM0NDYzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558344637",
      "actor": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T21:19:28Z",
      "updated_at": "2019-11-25T21:20:21Z",
      "author_association": "NONE",
      "body": "ok, here are two tools I alone have written that need something like searchrawtransactions().\r\n\r\n[hd-wallet-addrs](https://github.com/dan-da/hd-wallet-addrs#blockchain-api-provider-notes) - a tool for discovering all hd-wallet addresses that have ever been used.  So it derives [receive,change] and checks if each address has ever received funds, up to gap limit.  Presently it must rely on 3rd party block explorers APIs.\r\n\r\n[bitprices](https://github.com/dan-da/bitprices#blockchain-api-provider-notes) A tool for querying all transactions for all used addresses in a wallet (or any group of addresses) and generating reports including historical prices on the date of each transaction.  Useful for audits and finding gain/loss, etc after the fact.  Presently btcd has the best/fastest implementation, but only after I submitted patches for searchrawtransactions.\r\n\r\nHere is a [website frontend](https://mybitprices.info).\r\n\r\nNote that the above tools work with any arbitrary seeds or addresses and are expected to return results quickly, so creating a watch-only wallet for each request is not a good option, and anyway it would then just be discarded immediately, so why bother?\r\n\r\nThe first two links above actually link to discussions of the various API providers and their various strengths/weaknesses for these purposes.\r\n\r\nOthers have their own reasons.  afaict, most block explorers or bitcoin API providers need some sort of address index and are rolling their own somehow.",
      "user": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558344637",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558351495,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM1MTQ5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558351495",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T21:37:56Z",
      "updated_at": "2019-11-25T21:37:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks. From what I can gather the tools described in https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558344637 are accounting / auditing tools useful for someone running the bitcoin wallet, and this PR would let people who want to use these tools run them locally instead of relying on centralized third party services.\r\n\r\nIt seems like a good argument in favor of this feature.\r\n\r\nI'm not sure what the better arguments against this feature are, so it would be helpful if someone wanted to articulate them. One argument might be that we don't want people getting used to using tools like these, because eventually in the future historical indexes will be less able to scale, and people who are using these tools in their workflow will be forced to turn to centralized third party services.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558351495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558361845,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM2MTg0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558361845",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T22:07:58Z",
      "updated_at": "2019-11-25T22:07:58Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. The main argument against adding an address index to Bitcoin Core is that people/services will come to rely on them, and they're not scalable long term. My response to that is that people are already using address indexes and block explorers. Providing/not providing that functionality in Bitcoin Core isn't going to change that.\r\n\r\nThe new indexing infrastructure means that this can be done in a very unobtrusive way. The index has no direct interaction at all with validation or networking. Instead it hooks into the validation interface and runs in a background thread, and so should have no performance impact when the node is sync'ed (I expect this might slow down IBD as `ActivateBestChain()` gets blocked on `LimitValidationInterfaceQueue()`, but presumably users who are indexing the entire transaction history are prepared to wait a bit longer).",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558361845",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558362070,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM2MjA3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558362070",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T22:08:42Z",
      "updated_at": "2019-11-25T22:08:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "addr-index is the most frequently patched-in change to Core, across the years, IME.",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558362070",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558366875,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM2Njg3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558366875",
      "actor": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T22:21:44Z",
      "updated_at": "2019-11-25T22:21:44Z",
      "author_association": "NONE",
      "body": "querying a 3rd party entails a loss of privacy and requires trusting the 3rd party to return truthful data.  ",
      "user": {
        "login": "dan-da",
        "id": 5110592,
        "node_id": "MDQ6VXNlcjUxMTA1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5110592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dan-da",
        "html_url": "https://github.com/dan-da",
        "followers_url": "https://api.github.com/users/dan-da/followers",
        "following_url": "https://api.github.com/users/dan-da/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dan-da/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dan-da/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dan-da/subscriptions",
        "organizations_url": "https://api.github.com/users/dan-da/orgs",
        "repos_url": "https://api.github.com/users/dan-da/repos",
        "events_url": "https://api.github.com/users/dan-da/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dan-da/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558366875",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 558717488,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODcxNzQ4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558717488",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T16:45:44Z",
      "updated_at": "2019-11-26T16:45:44Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nI know I've flip-flopped on this feature historically, but I agree very much with the points that @jnewbery makes. Trading the maintenance burden of ~800 lines of relatively non-consensus-risky indexing code for some very practical gains in user privacy is compelling to me. Even with the caveat that we don't think some of these uses are architecturally sound for years and years.\r\n\r\nOne might make the argument that there's a slippery slope here - if we consent to this index now, would demand for yet another index come along, and the next and so on? I don't think so. In the few years I've followed this, there has been reliable demand for an address index (and numerous community implementations of varying repute) and nothing else - aside of course from the compact block index - so I don't think a slippery-slope argument holds.\r\n\r\n@marcinja do you have time to rebase this PR?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558717488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2832674952,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgzMjY3NDk1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2832674952",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T16:45:44Z"
    },
    {
      "event": "mentioned",
      "id": 2832674962,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgzMjY3NDk2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2832674962",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T16:45:44Z"
    },
    {
      "event": "subscribed",
      "id": 2832674982,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MzI2NzQ5ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2832674982",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T16:45:44Z"
    },
    {
      "event": "subscribed",
      "id": 2832674992,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MzI2NzQ5OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2832674992",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T16:45:44Z"
    },
    {
      "event": "commented",
      "id": 558858883,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODg1ODg4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558858883",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-26T23:18:59Z",
      "updated_at": "2019-11-26T23:18:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, I will rebase this and clean it up a bit. Thanks for the conceptual review.  ",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-558858883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 559105948,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEwNTk0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559105948",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-27T14:18:05Z",
      "updated_at": "2019-11-27T14:18:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe we should log a warning when the address index is enabled, like:\r\n\r\n<dl><dd>Warning: built-in address index is enabled! Address indexing is going to become less scalable as transaction history increases, and will eventually need to be removed from [PACKAGE_NAME] and replaced by a dedicated external index. Users relying on the address index for accounting purposes are advised to track metadata in real time so relying on a historical index is not necessary.</dd></dl>\r\n\r\nCould also add a coda if the built in wallet is enabled:\r\n\r\n<dl><dd>If using the address index to work around lack of tagging or notifications from the built-in [PACKAGE_NAME] wallet, please file wallet feature requests: [PACKAGE_BUGREPORT]</dd></dl>\r\n\r\nThe idea would be to give end users relying on third party accounting tools a way of knowing about the limitations of those tools, and encouraging authors to implement more scalable approaches.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-559105948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-27T14:28:59Z",
      "updated_at": "2019-11-27T14:28:59Z",
      "source": {
        "issue": {
          "id": 465350991,
          "node_id": "MDU6SXNzdWU0NjUzNTA5OTE=",
          "url": "https://api.github.com/repos/bitcoin-core-review-club/website/issues/14",
          "repository_url": "https://api.github.com/repos/bitcoin-core-review-club/website",
          "labels_url": "https://api.github.com/repos/bitcoin-core-review-club/website/issues/14/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core-review-club/website/issues/14/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core-review-club/website/issues/14/events",
          "html_url": "https://github.com/bitcoin-core-review-club/website/issues/14",
          "number": 14,
          "state": "closed",
          "state_reason": "completed",
          "title": "Future PRs",
          "body": "Please comment in this issue to request PRs to be covered in future review club meetings.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 52,
          "closed_at": "2022-01-08T20:24:06Z",
          "created_at": "2019-07-08T16:24:43Z",
          "updated_at": "2022-01-08T20:24:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 560176208,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE3NjIwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/560176208",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-01T23:51:16Z",
      "updated_at": "2019-12-01T23:51:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-560176208",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2850012881,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjg1MDAxMjg4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2850012881",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-03T13:33:35Z"
    },
    {
      "event": "unlabeled",
      "id": 2850263777,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjg1MDI2Mzc3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2850263777",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-03T14:37:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2850614634,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjg1MDYxNDYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2850614634",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-03T16:01:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2852237244,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjg1MjIzNzI0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2852237244",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-04T01:04:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2918675657,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkxODY3NTY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2918675657",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-02T20:15:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2918689958,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkxODY4OTk1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2918689958",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-02T20:21:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2918751757,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkxODc1MTc1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2918751757",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-02T20:49:36Z"
    },
    {
      "event": "labeled",
      "id": 2920901083,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5MjA5MDEwODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2920901083",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T18:29:49Z",
      "label": {
        "name": "Review club",
        "color": "0052cc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2921263897,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkyMTI2Mzg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921263897",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T21:23:51Z"
    },
    {
      "event": "commented",
      "id": 571208221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTIwODIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571208221",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-06T16:31:17Z",
      "updated_at": "2020-01-06T16:31:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice set of notes on this PR at https://bitcoincore.reviews/14053.html",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-571208221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "reviewed",
      "id": 339511029,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NTExMDI5",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've done a preliminary review and left a few comments.\r\n\r\nI think this PR could use:\r\n\r\n- some design documentation - what's being stored as keys and values in the addr index database and why, and what values are being returned to the RPC user. This could be a code comment at the top of `addrindex.cpp` or `addrindex.h`.\r\n- more test cases, particularly of the spent outputs values (there aren't currently any tests for that) and persistence across stop-start. The functional test can be moved to its own file, rather than being added to `rpc_rawtransaction.py`.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339511029",
      "submitted_at": "2020-01-07T22:20:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339621545,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjIxNTQ1",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339621545",
      "submitted_at": "2020-01-08T02:45:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339622658,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjIyNjU4",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339622658",
      "submitted_at": "2020-01-08T02:50:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339626587,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjI2NTg3",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339626587",
      "submitted_at": "2020-01-08T03:09:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339627272,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjI3Mjcy",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339627272",
      "submitted_at": "2020-01-08T03:13:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339627472,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjI3NDcy",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339627472",
      "submitted_at": "2020-01-08T03:14:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 339988317,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTg4MzE3",
      "url": null,
      "actor": null,
      "commit_id": "e739288bd5eadfd4f684b869a2e8067a1406052e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-339988317",
      "submitted_at": "2020-01-08T16:31:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 340025939,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDI1OTM5",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-340025939",
      "submitted_at": "2020-01-08T17:31:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 340041837,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDQxODM3",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Still gathering context here in light of the Concept ACKs others have given. Nevertheless, on first look I'm finding it difficult to ack the concept of investing resources on reviewing, adding, and maintaining a feature that will need to be removed down the road in favor of a dedicated external index by interested parties.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-340041837",
      "submitted_at": "2020-01-08T18:00:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "commented",
      "id": 572200658,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MjIwMDY1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572200658",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-08T18:39:19Z",
      "updated_at": "2020-01-08T18:39:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "For me what this PR is missing some analysis on the current size of the index in mainnet and the growth rate of the data. Has anyone run the numbers recently and can report?",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-572200658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "reviewed",
      "id": 340071893,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDcxODkz",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-340071893",
      "submitted_at": "2020-01-08T18:53:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "reviewed",
      "id": 340073212,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDczMjEy",
      "url": null,
      "actor": null,
      "commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-340073212",
      "submitted_at": "2020-01-08T18:56:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "commented",
      "id": 572239482,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MjIzOTQ4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572239482",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-08T20:19:29Z",
      "updated_at": "2020-01-08T20:19:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think @jnewbery was hinting at this in the PR Review Club as well: it seems like this index does not handle reorgs. `BaseIndex` handles this through `Rewind` which is not overridden.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-572239482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2932591150,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjkzMjU5MTE1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2932591150",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-08T20:19:29Z"
    },
    {
      "event": "subscribed",
      "id": 2932591153,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5MzI1OTExNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2932591153",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-08T20:19:29Z"
    },
    {
      "event": "commented",
      "id": 572849475,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjg0OTQ3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572849475",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-10T02:49:31Z",
      "updated_at": "2020-01-10T18:07:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ran on i7-8750H, took about 48 hours on an already synced node. Took 200 GB disk space.\r\n```\r\n2020-01-08T02:22:01Z addr_index thread start\r\n...\r\n2020-01-10T02:37:07Z addr_index is enabled at height 611001\r\n2020-01-10T02:37:07Z addr_index thread exit\r\n```\r\n```\r\n$ du -h addr_index\r\n200G\taddr_index\r\n```",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-572849475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "labeled",
      "id": 2969544045,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5Njk1NDQwNDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2969544045",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-22T10:41:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 579571607,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU3MTYwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579571607",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T03:06:11Z",
      "updated_at": "2020-01-29T03:06:11Z",
      "author_association": "MEMBER",
      "body": "Might be a good idea to replace `CDiskTxPos` with a height+tx# for [future?] pruning compatibility, like #13014",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-579571607",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 579571984,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU3MTk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579571984",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T03:07:59Z",
      "updated_at": "2020-01-29T03:07:59Z",
      "author_association": "MEMBER",
      "body": "> I think @jnewbery was hinting at this in the PR Review Club as well: it seems like this index does not handle reorgs. BaseIndex handles this through Rewind which is not overridden.\r\n\r\nHandling reorgs might actually be undesirable for this... but changing CDiskTxPos like I just suggested to a block height could be incompatible with saving references to blocks not in the main chain too. (Maybe storing height OR blockhash would work?)",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-579571984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 2988026475,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk4ODAyNjQ3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2988026475",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T03:07:59Z"
    },
    {
      "event": "subscribed",
      "id": 2988026478,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5ODgwMjY0Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2988026478",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T03:07:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3029103666,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyOTEwMzY2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3029103666",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T02:44:12Z"
    },
    {
      "event": "unlabeled",
      "id": 3029217327,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzAyOTIxNzMyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3029217327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T03:38:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3029281168,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyOTI4MTE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3029281168",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T04:12:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T14:20:40Z",
      "updated_at": "2020-02-12T14:20:40Z",
      "source": {
        "issue": {
          "id": 465981953,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk1OTE2OTY0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16365",
          "number": 16365,
          "state": "closed",
          "state_reason": null,
          "title": "Log RPC parameters (arguments) if -debug=rpcparams",
          "body": "When a developer is examining `debug.log` (or client terminal output), it's often useful to know which RPCs have been submitted to the client; this can be enabled with the `-debug=rpc` configuration option. But this prints only the method name. This PR adds `-debug=rpcparams` to enable the logging of each RPC's parameters (arguments). The parameters of certain RPCs are keys or passwords; these should not be logged.",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16365",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16365.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16365.patch"
          },
          "closed_at": "2022-12-06T10:45:03Z",
          "created_at": "2019-07-09T20:58:19Z",
          "updated_at": "2022-12-06T10:45:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T14:23:25Z",
      "updated_at": "2020-02-12T14:23:25Z",
      "source": {
        "issue": {
          "id": 456922680,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4ODM2Nzg4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16224",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16224/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16224/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16224/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16224",
          "number": 16224,
          "state": "closed",
          "state_reason": null,
          "title": "gui: Bilingual GUI error messages",
          "body": "This is an alternative to #15340 (it works with the `Chain` interface; see: https://github.com/bitcoin/bitcoin/pull/15340#issuecomment-502674004).\r\nRefs:\r\n- #16218 (partial fix)\r\n- https://github.com/bitcoin/bitcoin/pull/15894#issuecomment-487947077\r\n\r\nThis PR:\r\n- makes GUI error messages bilingual: user's native language + untranslated (i.e. English)\r\n- insures that only untranslated messages are written to the debug log file and to `stderr` (that is not the case on master).\r\n\r\nIf a translated string is unavailable only an English string appears to a user.\r\n\r\nHere are some **examples** (updated):\r\n\r\n![Screenshot from 2020-04-24 17-08-37](https://user-images.githubusercontent.com/32963518/80222043-e2458780-864e-11ea-83fc-197b7121dba5.png)\r\n\r\n![Screenshot from 2020-04-24 17-12-17](https://user-images.githubusercontent.com/32963518/80222051-e5407800-864e-11ea-92f7-dfef1144becd.png)\r\n\r\n* `qt5ct: using qt5ct plugin` message is my local environment specific; please ignore it.\r\n\r\n---\r\n\r\nNote for reviewers: `InitWarning()` is out of this PR scope.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16224",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16224",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16224.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16224.patch"
          },
          "closed_at": "2020-05-08T16:20:40Z",
          "created_at": "2019-06-17T13:02:55Z",
          "updated_at": "2022-08-16T17:02:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T04:55:37Z",
      "updated_at": "2020-02-26T04:55:37Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\n---\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 78,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-06-21T07:40:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T03:28:09Z",
      "updated_at": "2020-03-07T03:28:09Z",
      "source": {
        "issue": {
          "id": 554996240,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3MDUwMzM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18000",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18000/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18000/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18000/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18000",
          "number": 18000,
          "state": "closed",
          "state_reason": null,
          "title": "[WIP] Index for UTXO Set Statistics",
          "body": "**This PR will not be updated anymore because the project is now split up into multiple pull requests. But I will use it to keep track of the projects PRs:**\r\n\r\n| Content                                             | PR     | Status   | Review Club |\r\n| --------------------------------------------------- |--------|----------|--------|\r\n| Add Muhash and SHA256Writer (unused)                | #19055 | Merged     | [notes](https://bitcoincore.reviews/19055.html)\r\n| Add Muhash Python implementation (unused)           | #19105 | Merged  | [notes](https://bitcoincore.reviews/19105.html) |\r\n| Add hash_type NONE (Muhash code independent)\t\t  | #19328 | Merged\t  | - |\r\n| Add hash_type MUHASH\t\t\t\t\t\t          | #19145 | Merged     | ?  |\r\n| Add ASM optimizations for MuHash\t\t\t\t\t  | #19181 | Open\t  | ?   |\r\n| Add CoinStatsIndex          | #19521       | Merged         | ? |\r\n| Parallelize gettxoutsetinfo        |      |     |   |\r\n| Remove legacy UTXO set hash                         |        | (future) | |\r\n\r\nSince it's starting to get confusing I am trying to visualize the dependencies of the open PRs in this depency graph:\r\n\r\n```\r\n+--------------+   +-------------+   +----------+\r\n|#19328        |   |#19105       |   |#19055    |\r\n|hash_type NONE|   |Muhash Python|   |Muhash CPP|\r\n+----+-----+---+   +------+------+   +-+----+---+\r\n     ^     ^              ^            ^    ^\r\n     |     |              |            |    |\r\n     |     |    +---------+------+     |    |\r\n     |     +----+#19145          +-----+    |\r\n     |          |hash_type MUHASH|          |\r\n     |          +----------------+          |\r\n     |                               +------+---+\r\n+----+--------+                      |#19181    |\r\n|#19521       |                      |MuHash ASM|\r\n|No hash Index|                      +----------+\r\n+-------------+\r\n\r\n```\r\n\r\n---\r\n\r\nThis implements an index of coin statistics with the goal of making the response time of the `gettxoutsetinfo` RPC call dramatically faster. Currently, this RPC is scanning the full UTXO set every time it is called which makes it hard to use for users that [want to continually check the coin supply](https://blog.bitmex.com/forkmonitor-unexpected-inflation-detection-and-warning-system/) or compare UTXO set hashes between different nodes. It is especially challenging in periods of multiple quickly mined blocks, even relatively fast machines.\r\n\r\nImplementation overview:\r\n- The current serialization of the UTXO set for the purpose of hashing is changed based on sipa's concept in proposed on the [mailing list in 2017](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014337.html) and #10434\r\n- The hashing algorithm in for the UTXO set is changed to Muhash, which was also implemented by sipa\r\n- CoinStatsIndex is added which keeps an index of all values that would require `gettxoutsetinfo` to scan the UTXO set\r\n- CoinStatsIndex can be activated through the flag `-coinstatsindex`\r\n\r\nTodos/Open questions:\r\n- The transactions count is currently not implemented as it seems not knowable ex-post without running a full IBD to build up the index. I am looking for a solution to this. Ideas are:\r\n  - Require `txindex` and the transactions count from it\r\n  - Remove transactions count or mark it as unreliable in a different way if coinstatsindex is enabled\r\n- The transactions count question is also interesting because it seems to be the only obstacle to providing access to historical coin statistics, which may be a nice follow-up feature if transaction counts can be ignored somehow\r\n- More benchmarking to evaluate potential switch from Muhash to [ECMH](https://github.com/bitcoin-core/secp256k1/pull/477) as the hashing algorithm\r\n- IBD benchmarking with the index enabled\r\n- Tests could be improved\r\n\r\nThis is an extension to my [rolling UTXO set hash proposal](https://gist.github.com/fjahr/fa4892874b090d3a4f4fccc5bafa0210) from last year.\r\n\r\nEdit: 3c5c1ca should probably be squashed into the prior commits but I wanted to leave sipa's commits unchanged for the start.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18000",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18000",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18000.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18000.patch"
          },
          "closed_at": "2021-12-19T16:51:12Z",
          "created_at": "2020-01-24T23:07:27Z",
          "updated_at": "2022-12-19T10:03:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T17:43:05Z",
      "updated_at": "2020-03-11T17:43:05Z",
      "source": {
        "issue": {
          "id": 579407814,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODA3Mzk4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18317/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18317/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18317/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18317",
          "number": 18317,
          "state": "closed",
          "state_reason": null,
          "title": "Serialization improvements step 6 (all except wallet/gui)",
          "body": "The next step of changes from #10785. \r\n\r\nThis:\r\n* Adds support for enum serialization to `CustomUintFormatter`, used in `CAddress` for service flags.\r\n* Merges `BigEndian` into `CustomUintFormatter`, used in `CNetAddr` for port numbers.\r\n* Converts everything (except wallet and gui) to use the new serialization framework.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18317",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18317.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18317.patch"
          },
          "closed_at": "2020-05-20T11:33:01Z",
          "created_at": "2020-03-11T16:53:13Z",
          "updated_at": "2022-02-15T10:31:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T23:38:55Z",
      "updated_at": "2020-03-13T23:38:55Z",
      "source": {
        "issue": {
          "id": 518001350,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2OTY1MzM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17383",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17383/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17383/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17383/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17383",
          "number": 17383,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor: Move consts to their correct translation units",
          "body": "Following the main.cpp split, there are still some constants in the wrong places, eg net_processing constants in validation.h. Move them all to their rightful homes. At the same time, make them constexpr.\r\n\r\nAlso move all const declarations to the top of their files, and ensure that they all have doxygen comments.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17383",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17383",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17383.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17383.patch"
          },
          "closed_at": "2020-04-25T12:38:32Z",
          "created_at": "2019-11-05T20:12:40Z",
          "updated_at": "2022-02-15T10:30:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-25T16:04:52Z",
      "updated_at": "2020-03-25T16:04:52Z",
      "source": {
        "issue": {
          "id": 581753448,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzY5NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
          "number": 18354,
          "state": "closed",
          "state_reason": null,
          "title": "Use shared pointers only in validation interface",
          "body": "This pull request fully replace #18279 it fix 3 issues with wallet\r\n1. Crash in wallet destructor while it tries to delete mutex while it's hold by notification thread\r\n2. Crash in notification disconnect due to notification callback is set to nullptr before unregister interface is done\r\n3. Ensure unregister interface has no more background callbacks before returning to notification disconnect",
          "user": {
            "login": "bvbfan",
            "id": 8323581,
            "node_id": "MDQ6VXNlcjgzMjM1ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8323581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvbfan",
            "html_url": "https://github.com/bvbfan",
            "followers_url": "https://api.github.com/users/bvbfan/followers",
            "following_url": "https://api.github.com/users/bvbfan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bvbfan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bvbfan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bvbfan/subscriptions",
            "organizations_url": "https://api.github.com/users/bvbfan/orgs",
            "repos_url": "https://api.github.com/users/bvbfan/repos",
            "events_url": "https://api.github.com/users/bvbfan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bvbfan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18354.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18354.patch"
          },
          "closed_at": "2022-02-22T10:56:18Z",
          "created_at": "2020-03-15T17:27:23Z",
          "updated_at": "2023-02-22T10:14:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T19:34:30Z",
      "updated_at": "2020-03-29T19:34:30Z",
      "source": {
        "issue": {
          "id": 589585110,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTAxMjkz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18458",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18458/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18458/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18458/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18458",
          "number": 18458,
          "state": "closed",
          "state_reason": null,
          "title": "net: Add missing cs_vNodes lock",
          "body": "Fixes #18457 ",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/42",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42/labels",
            "id": 4116761,
            "node_id": "MDk6TWlsZXN0b25lNDExNjc2MQ==",
            "number": 42,
            "state": "closed",
            "title": "0.20.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 91,
            "created_at": "2019-03-06T20:02:40Z",
            "updated_at": "2020-06-02T07:55:47Z",
            "closed_at": "2020-06-02T07:55:47Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18458",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18458",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18458.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18458.patch"
          },
          "closed_at": "2020-04-06T19:06:37Z",
          "created_at": "2020-03-28T14:14:09Z",
          "updated_at": "2022-02-15T10:42:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-05T19:37:23Z",
      "updated_at": "2020-04-05T19:37:23Z",
      "source": {
        "issue": {
          "id": 594528722,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk5MTQ0NzY5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18531",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18531/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18531/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18531/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18531",
          "number": 18531,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: remove deprecated CRPCCommand constructor",
          "body": "Remove the CRPCCommand arguments, now that they are asserted to be equal and thus redundant\r\n\r\n### Future work\r\n\r\n> Here or follow up, makes sense to also assert type of returned UniValue?\r\n\r\nSure, but let's not get ahead of ourselves. I am going to submit any further works as follow-ups, including:\r\n\r\n* Removing all python regex linters on the args, now that RPCMan can be used to generate any output, including the cli.cpp table\r\n* Auto-formatting and sanity checking the RPCExamples with RPCMan\r\n* Checking passed-in json in self-check. Removing redundant checks\r\n* Checking returned json against documentation to avoid regressions or false documentation\r\n* Compile the RPC documentation at compile-time to ensure it doesn't change at runtime and is completely static\r\n\r\n### Bugs found\r\n\r\n* The assert identified issue #18607 \r\n* The changes itself fixed bug #19250 ",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18531",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18531",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18531.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18531.patch"
          },
          "closed_at": "2020-11-19T13:20:21Z",
          "created_at": "2020-04-05T15:58:34Z",
          "updated_at": "2022-02-15T10:48:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3207208165,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMDcyMDgxNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3207208165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-06T21:00:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 610942861,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDk0Mjg2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610942861",
      "actor": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-08T12:56:00Z",
      "updated_at": "2020-04-08T12:56:00Z",
      "author_association": "NONE",
      "body": "@marcinja Do you believe this index could allow wallets such as Electrum to avoid relying on extra applications (like ElectrumX, Electrum Private Server, etc), and (if leared how to speak Bitcoin RPC) use Bitcoin Core node directly?",
      "user": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-610942861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 3213979422,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzIxMzk3OTQyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3213979422",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-08T12:56:01Z"
    },
    {
      "event": "subscribed",
      "id": 3213979426,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyMTM5Nzk0MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3213979426",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-08T12:56:01Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-25T14:02:34Z",
      "updated_at": "2020-04-25T14:02:34Z",
      "source": {
        "issue": {
          "id": 30917252,
          "node_id": "MDU6SXNzdWUzMDkxNzI1Mg==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4007",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4007/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4007/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4007/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/4007",
          "number": 4007,
          "state": "closed",
          "state_reason": "completed",
          "title": "[Feature] Unspent Transaction Outputs Index",
          "body": "As per the conversation started in #3383, I am submitting a feature proposal for `bitcoind`.\n\nThe proposal is pretty straightforward (to describe, anyways): Implement an unspent transaction outputs index, and allow users to query it via the RPC API.\n\nThis is very similar in design to the `txindex`. It would be disabled by default, and enabled via the config file with something like `utxoindex=1`.\n\nThen the user could query the daemon for all the unspent transactions available on any address at any time, on demand:\n\n```\ngetutxo [minconf=1] [maxconf=9999999] [\"address\",...]\n```\n\nAnd receive an array response of the utxo objects (perhaps with a few more niceties for people building wallets, such as the date the utxo was received):\n\n```\n[\n    {\n        \"txid\" : \"00003b2f320f9618162d209c67d2c29a812a8644f321093adc6b8f4a925f430e\",\n        \"vout\" : 0,\n        \"address\" : \"mhZFsQJddG5jGNEmwQgwzeKeiqVT2XgX84\",\n        \"scriptPubKey\" : \"2102224f4fd0ce5aeb19b7212218f6fdf86f6cd0cef870537294d277014bcc4bcf09ac\",\n        \"amount\" : 50.00000000,\n        \"confirmations\" : 5332\n    }\n]\n```\n\nI have spent a lot of time promoting the adoption of the watchonly address patch, but I believe this would provide essentially the same resource that don't-trust-the-server wallet developers need to implement. The transaction information can easily be stored in a ledger on the wallet developer's end, and this complements the goal of separating bitcoind from the wallet code so that it can focus on its primary goal as a listener node that provides information to developers from the network.\n\nI think this is potentially a very important feature to add. Right now, developers solve this by building their own custom blockchain parser, that duplicates (often poorly) a lot of the same business logic that's already in bitcoind. It's really slow to have to do this, it's easy to screw things up, and it's more stuff you need to install/manage.\n\nWith this functionality, developers could easily spawn a pool of bitcoind servers to request data and not have to worry about \"priming\" the daemons with the needed addresses to listen on. It also (relatively) increases privacy/security, because an attacker cannot use bitcoind to find which addresses are associated with it (sans a packet sniffer or something like that).\n",
          "user": {
            "login": "kyledrake",
            "id": 28153,
            "node_id": "MDQ6VXNlcjI4MTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kyledrake",
            "html_url": "https://github.com/kyledrake",
            "followers_url": "https://api.github.com/users/kyledrake/followers",
            "following_url": "https://api.github.com/users/kyledrake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kyledrake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kyledrake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kyledrake/subscriptions",
            "organizations_url": "https://api.github.com/users/kyledrake/orgs",
            "repos_url": "https://api.github.com/users/kyledrake/repos",
            "events_url": "https://api.github.com/users/kyledrake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kyledrake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "closed_at": "2020-04-25T14:02:34Z",
          "created_at": "2014-04-05T15:03:35Z",
          "updated_at": "2022-02-15T11:03:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-14T12:46:31Z",
      "updated_at": "2020-05-14T12:46:31Z",
      "source": {
        "issue": {
          "id": 615449370,
          "node_id": "MDU6SXNzdWU2MTU0NDkzNzA=",
          "url": "https://api.github.com/repos/spesmilo/electrum/issues/6155",
          "repository_url": "https://api.github.com/repos/spesmilo/electrum",
          "labels_url": "https://api.github.com/repos/spesmilo/electrum/issues/6155/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/spesmilo/electrum/issues/6155/comments",
          "events_url": "https://api.github.com/repos/spesmilo/electrum/issues/6155/events",
          "html_url": "https://github.com/spesmilo/electrum/issues/6155",
          "number": 6155,
          "state": "closed",
          "state_reason": "completed",
          "title": "Feature/Plugin request: Mnemonic recovery UI with derivation path \"scanning\"",
          "body": "I see many newbies having trouble with recovery of BIP39 mnemonics when they don't know the mnemonic path, especially if created by a wallet that used a non-standard path. I am motivated to help them, while steering them away from dangerous alternative choices such as web-based seed derivation tools or giving their seeds to strangers in return for promises of help (both of which are often proposed on various forums). While this can be solved with a full node and a rescan, such a solution is not useful for newbies as it is too complex. A GUI-based self-hosted multi-platform solution like Electrum, that already has access to indexed UTXO scripts seems to fit perfectly with the use case and be more secure than alternatives. \r\n\r\nI would like to fund a plugin that allows Electrum to import a BIP39 mnemonic such that it \"scans\" several possible derivation paths to find ones that have UTXO history on at least one address. The plugin would then offer a drop down of \"discovered\" active derivation paths and allow the user to select the one to import into a wallet file, using that derivation path to follow the normal BIP39 derivation procedure. See https://walletsrecovery.org/ for a good list of how varied the derivation paths in different wallet implementations are. \r\n\r\nI am considering funding this with a gitcoin grant, to encourage someone with experience to implement this, as well as attract more funding from others and more developers to Electrum. \r\n\r\nAt this stage, I'd like to gauge interest in the idea and see if there are any principled objections to doing this. I don't want to start any drama accidentally if this is an undesirable use-case or violates some kind of principle held by Electrum developers. I would like to fund this only if it is likely to succeed and be incorporated into a future release. \r\n\r\n",
          "user": {
            "login": "aantonop",
            "id": 1181915,
            "node_id": "MDQ6VXNlcjExODE5MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181915?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aantonop",
            "html_url": "https://github.com/aantonop",
            "followers_url": "https://api.github.com/users/aantonop/followers",
            "following_url": "https://api.github.com/users/aantonop/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aantonop/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aantonop/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aantonop/subscriptions",
            "organizations_url": "https://api.github.com/users/aantonop/orgs",
            "repos_url": "https://api.github.com/users/aantonop/repos",
            "events_url": "https://api.github.com/users/aantonop/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aantonop/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1127643965,
              "node_id": "MDU6TGFiZWwxMTI3NjQzOTY1",
              "url": "https://api.github.com/repos/spesmilo/electrum/labels/topic-wallet%20%F0%9F%91%9B",
              "name": "topic-wallet 👛",
              "description": "related to wallet.py, or maybe address_synchronizer.py/coinchooser.py",
              "color": "d110b7",
              "default": false
            },
            {
              "id": 1200267202,
              "node_id": "MDU6TGFiZWwxMjAwMjY3MjAy",
              "url": "https://api.github.com/repos/spesmilo/electrum/labels/topic-wizard%20%F0%9F%A7%99%E2%80%8D%E2%99%82%EF%B8%8F",
              "name": "topic-wizard 🧙‍♂️",
              "description": "related to wallet creation/restore wizard",
              "color": "ffe8b2",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 45,
          "closed_at": "2020-06-20T17:27:46Z",
          "created_at": "2020-05-10T18:32:27Z",
          "updated_at": "2020-08-27T13:06:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 650716222,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDcxNjIyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650716222",
      "actor": {
        "login": "baso10",
        "id": 1388925,
        "node_id": "MDQ6VXNlcjEzODg5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1388925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/baso10",
        "html_url": "https://github.com/baso10",
        "followers_url": "https://api.github.com/users/baso10/followers",
        "following_url": "https://api.github.com/users/baso10/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/baso10/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/baso10/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/baso10/subscriptions",
        "organizations_url": "https://api.github.com/users/baso10/orgs",
        "repos_url": "https://api.github.com/users/baso10/repos",
        "events_url": "https://api.github.com/users/baso10/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/baso10/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T08:18:44Z",
      "updated_at": "2020-06-28T08:18:44Z",
      "author_association": "NONE",
      "body": "Any update when this could be merged?",
      "user": {
        "login": "baso10",
        "id": 1388925,
        "node_id": "MDQ6VXNlcjEzODg5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1388925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/baso10",
        "html_url": "https://github.com/baso10",
        "followers_url": "https://api.github.com/users/baso10/followers",
        "following_url": "https://api.github.com/users/baso10/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/baso10/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/baso10/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/baso10/subscriptions",
        "organizations_url": "https://api.github.com/users/baso10/orgs",
        "repos_url": "https://api.github.com/users/baso10/repos",
        "events_url": "https://api.github.com/users/baso10/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/baso10/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650716222",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 650726577,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDcyNjU3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650726577",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T09:49:39Z",
      "updated_at": "2020-06-28T09:49:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Any update when this could be merged?\r\n\r\nI kind of thought that this was still in conceptual review but it has received 5 Concept ACKs from experienced Core developers and I did not see much of the push back this has received historically, so I tend to believe this can be moved out of Conceptual review phase and move forward. There is still a lot of work to be done in terms of testing, documentation etc.\r\n\r\n@marcinja If you are currently unable to work on this I would be happy to take this over since I have some experience with indexes already :)",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650726577",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 3490076797,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MDA3Njc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490076797",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T09:49:39Z"
    },
    {
      "event": "subscribed",
      "id": 3490076798,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTAwNzY3OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490076798",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T09:49:39Z"
    },
    {
      "event": "commented",
      "id": 650727850,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDcyNzg1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650727850",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T10:00:52Z",
      "updated_at": "2020-06-28T10:00:52Z",
      "author_association": "MEMBER",
      "body": "Past NACKs don't disappear just because a new PR is opened...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650727850",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 650729233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDcyOTIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650729233",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T10:12:59Z",
      "updated_at": "2020-06-28T10:12:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Past NACKs don't disappear just because a new PR is opened...\r\n\r\nDefinitely agree, especially if the PRs are very close. But I think if a new PR is opened with a different approach it can still be expected for the reviewers who gave NACKs in the past, to participate in the discussion again and reinstate their NACK or someone else who agrees with their view should do it for them. Otherwise, we might never be able to move forward if a concept is NACKed and then the reviewer leaves the project or just does not comment on the new approach. But it would probably be good if @marcinja would address the past NACKs directly and give those reviewers another chance to say if they have changed their minds or not.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650729233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 3490092960,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MDA5Mjk2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490092960",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T10:12:59Z"
    },
    {
      "event": "subscribed",
      "id": 3490092961,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTAwOTI5NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490092961",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T10:12:59Z"
    },
    {
      "event": "commented",
      "id": 650737107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDczNzEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650737107",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T11:22:53Z",
      "updated_at": "2020-06-28T11:22:53Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650737107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 650740221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDc0MDIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650740221",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T11:49:38Z",
      "updated_at": "2020-06-28T11:49:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Any update when this could be merged?\r\n\r\n@baso10 \r\n\r\n1. This PR needs to be rebased, as you can see in https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-610034274\r\n\r\n2. The PR is still going through peer review -- see the discussion above\r\n\r\n3. See https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#peer-review for more info about the peer review process in this project\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650740221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 3490157897,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MDE1Nzg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490157897",
      "actor": {
        "login": "baso10",
        "id": 1388925,
        "node_id": "MDQ6VXNlcjEzODg5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1388925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/baso10",
        "html_url": "https://github.com/baso10",
        "followers_url": "https://api.github.com/users/baso10/followers",
        "following_url": "https://api.github.com/users/baso10/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/baso10/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/baso10/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/baso10/subscriptions",
        "organizations_url": "https://api.github.com/users/baso10/orgs",
        "repos_url": "https://api.github.com/users/baso10/repos",
        "events_url": "https://api.github.com/users/baso10/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/baso10/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T11:49:38Z"
    },
    {
      "event": "subscribed",
      "id": 3490157898,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTAxNTc4OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490157898",
      "actor": {
        "login": "baso10",
        "id": 1388925,
        "node_id": "MDQ6VXNlcjEzODg5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1388925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/baso10",
        "html_url": "https://github.com/baso10",
        "followers_url": "https://api.github.com/users/baso10/followers",
        "following_url": "https://api.github.com/users/baso10/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/baso10/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/baso10/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/baso10/subscriptions",
        "organizations_url": "https://api.github.com/users/baso10/orgs",
        "repos_url": "https://api.github.com/users/baso10/repos",
        "events_url": "https://api.github.com/users/baso10/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/baso10/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T11:49:39Z"
    },
    {
      "event": "commented",
      "id": 650740253,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDc0MDI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650740253",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T11:49:51Z",
      "updated_at": "2020-06-28T11:49:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "A good resource for more context and history and reasons for and against this addition: https://bitcoincore.reviews/14053.\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-650740253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3522834492,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyMjgzNDQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3522834492",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T00:29:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3522838279,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyMjgzODI3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3522838279",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T00:31:12Z"
    },
    {
      "event": "unlabeled",
      "id": 3522870168,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUyMjg3MDE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3522870168",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T00:45:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3522993447,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyMjk5MzQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3522993447",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T01:44:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3523206879,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyMzIwNjg3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3523206879",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T03:22:18Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T04:17:25Z",
      "updated_at": "2020-07-08T04:17:25Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2023-05-30T16:04:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T04:18:24Z",
      "updated_at": "2020-07-08T04:18:24Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2023-05-30T16:04:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T11:28:40Z",
      "updated_at": "2020-07-08T11:28:40Z",
      "source": {
        "issue": {
          "id": 653108922,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDg5NzEy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19464",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19464/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19464/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19464/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19464",
          "number": 19464,
          "state": "closed",
          "state_reason": null,
          "title": "net: remove -banscore configuration option",
          "body": "per https://github.com/bitcoin/bitcoin/pull/19219#issuecomment-652684340, https://github.com/bitcoin/bitcoin/pull/19219#discussion_r443074487 and https://github.com/bitcoin/bitcoin/pull/19219#issuecomment-652699592. Edit: now split into 3 PRs:\r\n- net: remove -banscore configuration option (this PR)\r\n- rpc: deprecate banscore field in getpeerinfo (#19469)\r\n- gui, doc, doc: no longer display \"Ban Score\" in GUI Peers window + test/doc fixups (#19512)",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 2189737281,
              "node_id": "MDU6TGFiZWwyMTg5NzM3Mjgx",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Settings",
              "name": "Settings",
              "description": "",
              "color": "e410ef",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19464",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19464",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19464.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19464.patch"
          },
          "closed_at": "2020-07-14T06:15:29Z",
          "created_at": "2020-07-08T08:44:00Z",
          "updated_at": "2022-02-15T10:33:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T05:51:54Z",
      "updated_at": "2020-07-13T05:51:54Z",
      "source": {
        "issue": {
          "id": 655575257,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDI5OTQw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19503",
          "number": 19503,
          "state": "closed",
          "state_reason": null,
          "title": "Add parameter feature to serialization and use it for CAddress",
          "body": "This introduces a concept of \"serialization parameters\". Every serializer can define its own parameter type, and a value of that type must be provided when serializing/deserializing, e.g. using `ss << WithParams(parameter, value)`, causing `value` to be serialized to `ss`, with parameter `parameter`. Note these parameters are automatically passed down the stack, so for example a vector can be serialized with a parameter, which will be available to all the elements' serializers.\r\n\r\nIn this PR, the feature is only used for `CAddress` serialization, but I plan to also convert `SERIALIZE_TRANSACTION_NO_WITNESS` in a follow-up. Eventually I hope to get rid of all GetVersion/GetType and replace it with this approach, which is type-safe (code won't compile if the correct parameter isn't passed somewhere), and avoids collisions between flags.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19503",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19503.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19503.patch"
          },
          "closed_at": "2021-12-19T15:59:37Z",
          "created_at": "2020-07-13T04:40:34Z",
          "updated_at": "2022-08-08T08:46:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3542821309,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1NDI4MjEzMDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3542821309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T07:20:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3546135871,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NjEzNTg3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546135871",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T22:17:56Z"
    },
    {
      "event": "unlabeled",
      "id": 3546348352,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU0NjM0ODM1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546348352",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T00:03:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 658499547,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODQ5OTU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658499547",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T01:54:08Z",
      "updated_at": "2020-07-15T01:56:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hey everyone. Just wanted to give a small update here. I am still planning on keeping this PR up-to-date and rebased. I've realized it's more annoying to rebase after procrastinating, and also it's not fair to the reviewers and other people interested so I will be much more diligent about rebasing now.\r\n\r\nThe total size of the address index right now is 223GB. I don't have a good answer on  index sync time because I was re-syncing on a laptop. This was done on the 8f3fc6b4b8fb1a2db3035398d3dd5a2ed91cc3f9 branch over the course of a few days.  I'm going to time an IBD and addrindex sync on a desktop with a good SSD so as to get meaningful results.\r\n\r\nThe good news is that `searchrawtransactions` is not prohibitively slow. \r\n```\r\ntime ./src/bitcoin-cli searchrawtransactions 3EiAcrzq1cELXScc98KeCswGWZaPGceT1d true 30000 > big-search\r\n\r\n./src/bitcoin-cli searchrawtransactions 3EiAcrzq1cELXScc98KeCswGWZaPGceT1d     4.79s user 1.95s system 49% cpu 13.575 total\r\n```\r\n(the file `big-search` created here is about 366MB)\r\n\r\nI have also confirmed that the address index has the same number of created/spent outpoints as on this explorer:  https://blockstream.info/address/3EiAcrzq1cELXScc98KeCswGWZaPGceT1d\r\n\r\n",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-658499547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T05:44:57Z",
      "updated_at": "2020-07-15T05:44:57Z",
      "source": {
        "issue": {
          "id": 656967146,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTcwMTYx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19521",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19521/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19521/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19521/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19521",
          "number": 19521,
          "state": "closed",
          "state_reason": null,
          "title": "Coinstats Index",
          "body": "This is part of the coinstats index project tracked in #18000 \r\n\r\nWhile the review of the new UTXO set hash algorithm (MuHash) takes longer recently #19328 was merged which added the possibility to run `gettxoutsetinfo` with a specific hash type. As the first type it added `hash_type=none` which skips the hashing of the UTXO set altogether. This alone did not make `gettxoutsetinfo` much faster but it allows the use of an index for the remaining coin statistics even before a new hashing algorithm has been added. Credit to Sjors for the idea to take this intermediate step.\r\n\r\nFeatures summary:\r\n- Users can start their node with the option `-coinstatsindex` which syncs the index in the background\r\n- After the index is synced the user can  use `gettxoutsetinfo` with `hash_type=none` or `hash_type=muhash` and will get the response instantly out of the index\r\n- The user can specify a height or block hash when calling `gettxoutsetinfo` to see coin statistics at a specific block height",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 67,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19521",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19521",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19521.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19521.patch"
          },
          "closed_at": "2021-04-30T15:27:57Z",
          "created_at": "2020-07-14T23:58:39Z",
          "updated_at": "2022-08-16T17:22:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T22:21:54Z",
      "updated_at": "2020-07-18T22:21:54Z",
      "source": {
        "issue": {
          "id": 660416950,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDUyMTc1Mjg1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19550",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19550/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19550/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19550/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19550",
          "number": 19550,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add getindexinfo RPC",
          "body": "As I was playing with indices a I was missing an RPC that gives information about the active indices in the node. I think this can be helpful for many users, especially since there are some new index candidates coming up (#14053, #18000) that can give a quick overview without the user having to parse the logs.\r\n\r\nFeature summary:\r\n- Adds new RPC `getindexinfo` (placed in Util section)\r\n- That RPC only lists the actively running indices\r\n- For each index it gives the name, whether it is synced and up to which block height it is synced\r\n",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19550",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19550",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19550.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19550.patch"
          },
          "closed_at": "2020-08-20T14:01:00Z",
          "created_at": "2020-07-18T22:21:54Z",
          "updated_at": "2022-02-15T10:35:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-21T12:14:03Z",
      "updated_at": "2020-07-21T12:14:03Z",
      "source": {
        "issue": {
          "id": 662889934,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU0Mzk0NzEx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19561",
          "number": 19561,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Pass ArgsManager into functions that register args",
          "body": "Rationale: reduce use of gArgs to decouple code and simplify future maintenance and easier unit testing.\r\n\r\nThis PR is continuation of work started in  #18926 and #18662\r\nIt covers only places that register args in ArgsManager with `AddArgs()` or `AddHiddenArgs()`.\r\n\r\nCloses #19511 ",
          "user": {
            "login": "S3RK",
            "id": 1466284,
            "node_id": "MDQ6VXNlcjE0NjYyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/S3RK",
            "html_url": "https://github.com/S3RK",
            "followers_url": "https://api.github.com/users/S3RK/followers",
            "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
            "organizations_url": "https://api.github.com/users/S3RK/orgs",
            "repos_url": "https://api.github.com/users/S3RK/repos",
            "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/S3RK/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19561",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19561",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19561.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19561.patch"
          },
          "closed_at": "2020-07-30T15:10:09Z",
          "created_at": "2020-07-21T11:08:27Z",
          "updated_at": "2022-02-15T10:36:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3604731188,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MDQ3MzExODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604731188",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T16:28:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3606157783,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwNjE1Nzc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606157783",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T23:05:11Z"
    },
    {
      "event": "unlabeled",
      "id": 3606401118,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYwNjQwMTExOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606401118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T00:59:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 666891128,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njg5MTEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666891128",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T03:19:18Z",
      "updated_at": "2020-07-31T03:19:18Z",
      "author_association": "MEMBER",
      "body": "@marcinja If you feel like it, you could pull 2ce521784432550007c0df1da85b4d3d0b1c7477 and 2761d11cc798d42839676f98250781a3ea445ce2 out of here and PR separately.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-666891128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 3606675472,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYwNjY3NTQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606675472",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T03:19:19Z"
    },
    {
      "event": "subscribed",
      "id": 3606675474,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MDY2NzU0NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606675474",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T03:19:19Z"
    },
    {
      "event": "reviewed",
      "id": 462721671,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzIxNjcx",
      "url": null,
      "actor": null,
      "commit_id": "75e044564bc0561c72fe1bcbb6d21dfc3a3314fd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#pullrequestreview-462721671",
      "submitted_at": "2020-08-06T17:17:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
    },
    {
      "event": "labeled",
      "id": 3651325066,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2NTEzMjUwNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651325066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:57:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3658842007,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY1ODg0MjAwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3658842007",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-15T21:24:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3658843195,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY1ODg0MzE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3658843195",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-15T21:27:02Z"
    },
    {
      "event": "unlabeled",
      "id": 3658870650,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY1ODg3MDY1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3658870650",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-15T22:21:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-15T22:21:48Z",
      "updated_at": "2020-08-15T22:21:48Z",
      "source": {
        "issue": {
          "id": 679650799,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MzcwNzc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19733",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19733/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19733/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19733/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19733",
          "number": 19733,
          "state": "closed",
          "state_reason": null,
          "title": " Move comment about BaseIndex::DB from TxIndex::DB ",
          "body": "Moves a comment about the `BaseIndex::DB` from the `TxIndex::DB` into the correct place. Originally part of https://github.com/bitcoin/bitcoin/pull/14053.",
          "user": {
            "login": "marcinja",
            "id": 12243734,
            "node_id": "MDQ6VXNlcjEyMjQzNzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcinja",
            "html_url": "https://github.com/marcinja",
            "followers_url": "https://api.github.com/users/marcinja/followers",
            "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
            "organizations_url": "https://api.github.com/users/marcinja/orgs",
            "repos_url": "https://api.github.com/users/marcinja/repos",
            "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/marcinja/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19733",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19733",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19733.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19733.patch"
          },
          "closed_at": "2020-08-21T04:49:09Z",
          "created_at": "2020-08-15T22:21:47Z",
          "updated_at": "2022-02-15T11:15:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-15T22:32:09Z",
      "updated_at": "2020-08-15T22:32:09Z",
      "source": {
        "issue": {
          "id": 679652135,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MzcxNTE0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19734",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19734/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19734/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19734/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19734",
          "number": 19734,
          "state": "closed",
          "state_reason": null,
          "title": "Move CDiskTxPos to its own file",
          "body": "Moves `CDiskTxPos` it its own file so it can be used without the `txindex.h` include elsewhere. Originally part of #14053.",
          "user": {
            "login": "marcinja",
            "id": 12243734,
            "node_id": "MDQ6VXNlcjEyMjQzNzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcinja",
            "html_url": "https://github.com/marcinja",
            "followers_url": "https://api.github.com/users/marcinja/followers",
            "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
            "organizations_url": "https://api.github.com/users/marcinja/orgs",
            "repos_url": "https://api.github.com/users/marcinja/repos",
            "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/marcinja/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19734",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19734",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19734.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19734.patch"
          },
          "closed_at": "2020-08-17T10:48:46Z",
          "created_at": "2020-08-15T22:32:09Z",
          "updated_at": "2022-02-15T10:48:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3661297820,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NjEyOTc4MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661297820",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1bc8e8eae2dc4b47ef67afc6880ea48b8e84a086",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bc8e8eae2dc4b47ef67afc6880ea48b8e84a086",
      "created_at": "2020-08-17T10:48:44Z"
    },
    {
      "event": "labeled",
      "id": 3661517334,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2NjE1MTczMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661517334",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T11:56:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 3664501766,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NjQ1MDE3NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664501766",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4e2e81b871e6ad25996b17f3364eb17e1f661c1a",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/4e2e81b871e6ad25996b17f3364eb17e1f661c1a",
      "created_at": "2020-08-18T04:31:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3668733863,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2ODczMzg2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3668733863",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T01:53:28Z"
    },
    {
      "event": "unlabeled",
      "id": 3668921804,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY2ODkyMTgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3668921804",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T03:39:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 3675411546,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NzU0MTE1NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3675411546",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27eeb0337b083713879645bcdb28b046e91d631c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27eeb0337b083713879645bcdb28b046e91d631c",
      "created_at": "2020-08-20T14:00:37Z"
    },
    {
      "event": "referenced",
      "id": 3676672745,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NzY2NzI3NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3676672745",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "defff9334830b9fbce40f9448e864eb2ec3bc69f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/defff9334830b9fbce40f9448e864eb2ec3bc69f",
      "created_at": "2020-08-20T18:54:57Z"
    },
    {
      "event": "referenced",
      "id": 3678015817,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NzgwMTU4MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3678015817",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0d9e14a6466cd1644cb659b7b79d40d8761034c0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d9e14a6466cd1644cb659b7b79d40d8761034c0",
      "created_at": "2020-08-21T04:49:04Z"
    },
    {
      "event": "labeled",
      "id": 3678152127,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2NzgxNTIxMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3678152127",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T05:57:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 3680321206,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2ODAzMjEyMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3680321206",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e954a012af5c28683a375898c408ad7474cf7925",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/e954a012af5c28683a375898c408ad7474cf7925",
      "created_at": "2020-08-21T16:31:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3682133830,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4MjEzMzgzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3682133830",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-22T16:13:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3682137260,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4MjEzNzI2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3682137260",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-22T16:18:32Z"
    },
    {
      "event": "unlabeled",
      "id": 3682177260,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY4MjE3NzI2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3682177260",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-22T17:17:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T21:25:41Z",
      "updated_at": "2020-08-24T21:25:41Z",
      "source": {
        "issue": {
          "id": 684894935,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyNzA2NjM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19792",
          "number": 19792,
          "state": "open",
          "state_reason": null,
          "title": "rpc: Add dumpcoinstats",
          "body": "Requires #19521 (this PR only adds the last commit).\r\n\r\nThe rpc `dumpcoinstats` dumps the content of the coinstats index into a CSV file for auditing purposes.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19792",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19792",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19792.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19792.patch"
          },
          "created_at": "2020-08-24T19:01:38Z",
          "updated_at": "2023-05-17T19:26:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T01:08:50Z",
      "updated_at": "2020-08-26T01:08:50Z",
      "source": {
        "issue": {
          "id": 685710084,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDczMzkxNTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19806",
          "number": 19806,
          "state": "closed",
          "state_reason": null,
          "title": "validation: UTXO snapshot activation",
          "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11):\r\n\r\nParent PR: #15606 \r\nIssue: #15605 \r\nSpecification: https://github.com/jamesob/assumeutxo-docs/tree/master/proposal\r\n\r\n---\r\n\r\nThis change proposes logic for activating UTXO snapshots, which is unused at the moment aside from an included unittest. There are a few moveonyish/refactoring commits to allow for halfway decent unittests.\r\n\r\nBasic structure is included for specifying and checking the assumeutxo hash values used to validate activated snapshots. Initially I had specified a few height/hash pairs for mainnet in this change, but because of the security-critical nature of those parameters, I figured it was better to leave their inclusion to a future PR that includes only that change - my intent being that reviewers will be more likely to verify those parameters firsthand in a dedicated PR.\r\n\r\nAside from that and the snapshot activation logic, there are a few related changes:\r\n\r\n- ~~allow caching the `nChainTx` value in the CCoinsViewDB; this is set during snapshot activation. Because we don't necessarily have access to the full chain at the time of snapshot load, this value is communicated through the snapshot metadata and must be cached within the chainstate to survive restarts.~~\r\n- break out `CreateUTXOSnapshot()` from dumptxoutset. This is essentially a move-only change to allow the reuse of snapshot creation logic from within unittests.\r\n- ...and a few other misc. changes that are solely related to unittests.\r\n\r\nThe move-onlyish commit is most easily reviewed with `--color-moved=zebra`.",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 35,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19806",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19806",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19806.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19806.patch"
          },
          "closed_at": "2021-02-16T18:23:27Z",
          "created_at": "2020-08-25T18:49:41Z",
          "updated_at": "2022-08-18T18:23:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T16:54:13Z",
      "updated_at": "2020-08-31T16:54:13Z",
      "source": {
        "issue": {
          "id": 689335970,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2NDA0MDE2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19849",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19849/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19849/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19849/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19849",
          "number": 19849,
          "state": "closed",
          "state_reason": null,
          "title": "Assert that RPCArg names are equal to CRPCCommand ones (blockchain,rawtransaction)",
          "body": "This is split out from #18531 to just touch some RPC methods. Description from the main pr:\r\n\r\n### Motivation\r\n\r\nRPCArg names in the rpc help are currently only used for documentation. However, in the future they could be used to teach the server the named arguments. Named arguments are currently registered by the `CRPCCommand`s and duplicate the RPCArg names from the documentation. This redundancy is fragile, and has lead to errors in the past (despite having linters to catch those kind of errors). See section \"bugs found\" for a list of bugs that have been found as a result of the changes here.\r\n\r\n### Changes\r\n\r\nThe changes here add an assert in the `CRPCCommand` constructor that the RPCArg names are identical to the ones in the `CRPCCommand`.\r\n\r\n### Future work\r\n\r\n> Here or follow up, makes sense to also assert type of returned UniValue?\r\n\r\nSure, but let's not get ahead of ourselves. I am going to submit any further works as follow-ups, including:\r\n\r\n* Removing the CRPCCommand arguments, now that they are asserted to be equal and thus redundant\r\n* Removing all python regex linters on the args, now that RPCMan can be used to generate any output, including the cli.cpp table\r\n* Auto-formatting and sanity checking the RPCExamples with RPCMan\r\n* Checking passed-in json in self-check. Removing redundant checks\r\n* Checking returned json against documentation to avoid regressions or false documentation\r\n* Compile the RPC documentation at compile-time to ensure it doesn't change at runtime and is completely static\r\n\r\n### Bugs found\r\n\r\n* The assert identified issue #18607 \r\n* The changes itself fixed bug #19250 ",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19849",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19849",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19849.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19849.patch"
          },
          "closed_at": "2020-09-22T15:14:12Z",
          "created_at": "2020-08-31T16:31:45Z",
          "updated_at": "2022-02-15T11:04:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jakesylvestre",
        "id": 6392429,
        "node_id": "MDQ6VXNlcjYzOTI0Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6392429?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jakesylvestre",
        "html_url": "https://github.com/jakesylvestre",
        "followers_url": "https://api.github.com/users/jakesylvestre/followers",
        "following_url": "https://api.github.com/users/jakesylvestre/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jakesylvestre/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jakesylvestre/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jakesylvestre/subscriptions",
        "organizations_url": "https://api.github.com/users/jakesylvestre/orgs",
        "repos_url": "https://api.github.com/users/jakesylvestre/repos",
        "events_url": "https://api.github.com/users/jakesylvestre/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jakesylvestre/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T16:30:08Z",
      "updated_at": "2020-09-03T16:30:08Z",
      "source": {
        "issue": {
          "id": 373769141,
          "node_id": "MDU6SXNzdWUzNzM3NjkxNDE=",
          "url": "https://api.github.com/repos/btcsuite/btcd/issues/1339",
          "repository_url": "https://api.github.com/repos/btcsuite/btcd",
          "labels_url": "https://api.github.com/repos/btcsuite/btcd/issues/1339/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/btcsuite/btcd/issues/1339/comments",
          "events_url": "https://api.github.com/repos/btcsuite/btcd/issues/1339/events",
          "html_url": "https://github.com/btcsuite/btcd/issues/1339",
          "number": 1339,
          "state": "open",
          "state_reason": null,
          "title": "seems btcd is way slower than bitcoin core in syncing?",
          "body": "I remember I used bitcoin core to sync btc full node on EC2 (200+G) in one day. But I used `btcd` to sync full node -- two days later it just synced 108G ?\r\n\r\nThe EC2 config is the same.",
          "user": {
            "login": "lzl124631x",
            "id": 5824517,
            "node_id": "MDQ6VXNlcjU4MjQ1MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5824517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lzl124631x",
            "html_url": "https://github.com/lzl124631x",
            "followers_url": "https://api.github.com/users/lzl124631x/followers",
            "following_url": "https://api.github.com/users/lzl124631x/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lzl124631x/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lzl124631x/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lzl124631x/subscriptions",
            "organizations_url": "https://api.github.com/users/lzl124631x/orgs",
            "repos_url": "https://api.github.com/users/lzl124631x/repos",
            "events_url": "https://api.github.com/users/lzl124631x/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lzl124631x/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 71642325,
              "node_id": "MDU6TGFiZWw3MTY0MjMyNQ==",
              "url": "https://api.github.com/repos/btcsuite/btcd/labels/medium%20priority",
              "name": "medium priority",
              "color": "eb6420",
              "default": false
            },
            {
              "id": 111269153,
              "node_id": "MDU6TGFiZWwxMTEyNjkxNTM=",
              "url": "https://api.github.com/repos/btcsuite/btcd/labels/brainstorming",
              "name": "brainstorming",
              "color": "207de5",
              "default": false
            },
            {
              "id": 159687875,
              "node_id": "MDU6TGFiZWwxNTk2ODc4NzU=",
              "url": "https://api.github.com/repos/btcsuite/btcd/labels/go%20runtime",
              "name": "go runtime",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 59,
          "created_at": "2018-10-25T04:30:18Z",
          "updated_at": "2023-02-16T22:50:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3794319300,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3OTQzMTkzMDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3794319300",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-22T17:08:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3824641689,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNDY0MTY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3824641689",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T13:54:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3824691896,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNDY5MTg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3824691896",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T14:04:32Z"
    },
    {
      "event": "unlabeled",
      "id": 3825174554,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzgyNTE3NDU1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3825174554",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T15:37:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzRjMGNmMjM5NjgwOTgwMGVlNjlmM2YxZWU4MDY5ODg1ZTE2YTA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c4c0cf2396809800ee69f3f1ee8069885e16a06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c4c0cf2396809800ee69f3f1ee8069885e16a06",
      "tree": {
        "sha": "047be3db5d995424ed47af51830a4a8adb711672",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/047be3db5d995424ed47af51830a4a8adb711672"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3487e421a7fef4b28381efcf21a7e38483946cec",
          "sha": "3487e421a7fef4b28381efcf21a7e38483946cec",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3487e421a7fef4b28381efcf21a7e38483946cec"
        }
      ],
      "message": "Add address index\n\nAdds index that relates scriptPubKeys to location of transactions in the\nfilesystem, along with the hash of the block they are found in, and the\noutpoint information of the txout with the related script.",
      "committer": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2020-10-01T00:46:51Z"
      },
      "author": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2019-11-27T00:59:33Z"
      },
      "sha": "4c4c0cf2396809800ee69f3f1ee8069885e16a06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDViYzQ2YTIyNWI2OGQwOWExMjk5MjRiYmVkZjQxZmVmNThkMDcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/545bc46a225b68d09a129924bbedf41fef58d071",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/545bc46a225b68d09a129924bbedf41fef58d071",
      "tree": {
        "sha": "300fcc4b25586b8b1d643d0e4ddd85dff9e5e07d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/300fcc4b25586b8b1d643d0e4ddd85dff9e5e07d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c4c0cf2396809800ee69f3f1ee8069885e16a06",
          "sha": "4c4c0cf2396809800ee69f3f1ee8069885e16a06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c4c0cf2396809800ee69f3f1ee8069885e16a06"
        }
      ],
      "message": "Initialize address index\n\nSetup address index in initialization process.\nAdd initialization warning and wallet feature request warning as\nsuggested by ryanofsky.",
      "committer": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2020-10-01T00:46:51Z"
      },
      "author": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2019-11-26T23:41:39Z"
      },
      "sha": "545bc46a225b68d09a129924bbedf41fef58d071"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjg1ZWI5MDQzZjg5OTIzNWFjYjdiNGI3NTQ3MmQxMjViNTQwMDhl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f85eb9043f899235acb7b4b75472d125b54008e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f85eb9043f899235acb7b4b75472d125b54008e",
      "tree": {
        "sha": "189852b6bd8551070133560d564f4801c1b5ebef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/189852b6bd8551070133560d564f4801c1b5ebef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/545bc46a225b68d09a129924bbedf41fef58d071",
          "sha": "545bc46a225b68d09a129924bbedf41fef58d071",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/545bc46a225b68d09a129924bbedf41fef58d071"
        }
      ],
      "message": "Add address index test",
      "committer": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2020-10-01T00:46:51Z"
      },
      "author": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2019-11-27T00:59:44Z"
      },
      "sha": "0f85eb9043f899235acb7b4b75472d125b54008e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDI3NDAyNGI4ZTQ3ZTg0MGE1NGUyMWExYzBlMjdjNzAyNGQzZDcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "tree": {
        "sha": "78c2cebf36a1ad8ab8473bfeb375e297abc23a38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78c2cebf36a1ad8ab8473bfeb375e297abc23a38"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f85eb9043f899235acb7b4b75472d125b54008e",
          "sha": "0f85eb9043f899235acb7b4b75472d125b54008e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f85eb9043f899235acb7b4b75472d125b54008e"
        }
      ],
      "message": "Add searchrawtransactions RPC\n\nAdds searchrawtransactions RPC that uses the address index to lookup\ntransactions and outpoints by script and address. Adds basic functional\ntests for searchrawtransactions.",
      "committer": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2020-10-01T01:27:17Z"
      },
      "author": {
        "name": "Marcin Jachymiak",
        "email": "marcin.jachymiak1@gmail.com",
        "date": "2019-08-16T01:37:32Z"
      },
      "sha": "cd274024b8e47e840a54e21a1c0e27c7024d3d73"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3827069335,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNzA2OTMzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3827069335",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T01:27:32Z"
    },
    {
      "event": "commented",
      "id": 707536003,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzUzNjAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707536003",
      "actor": {
        "login": "c78867886",
        "id": 10693052,
        "node_id": "MDQ6VXNlcjEwNjkzMDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/10693052?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/c78867886",
        "html_url": "https://github.com/c78867886",
        "followers_url": "https://api.github.com/users/c78867886/followers",
        "following_url": "https://api.github.com/users/c78867886/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/c78867886/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/c78867886/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/c78867886/subscriptions",
        "organizations_url": "https://api.github.com/users/c78867886/orgs",
        "repos_url": "https://api.github.com/users/c78867886/repos",
        "events_url": "https://api.github.com/users/c78867886/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/c78867886/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-13T07:01:53Z",
      "updated_at": "2020-10-13T07:01:53Z",
      "author_association": "NONE",
      "body": "Can someone plz approve this?",
      "user": {
        "login": "c78867886",
        "id": 10693052,
        "node_id": "MDQ6VXNlcjEwNjkzMDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/10693052?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/c78867886",
        "html_url": "https://github.com/c78867886",
        "followers_url": "https://api.github.com/users/c78867886/followers",
        "following_url": "https://api.github.com/users/c78867886/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/c78867886/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/c78867886/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/c78867886/subscriptions",
        "organizations_url": "https://api.github.com/users/c78867886/orgs",
        "repos_url": "https://api.github.com/users/c78867886/repos",
        "events_url": "https://api.github.com/users/c78867886/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/c78867886/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-707536003",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-24T19:38:00Z",
      "updated_at": "2020-10-24T19:38:00Z",
      "source": {
        "issue": {
          "id": 728861129,
          "node_id": "MDU6SXNzdWU3Mjg4NjExMjk=",
          "url": "https://api.github.com/repos/romanz/electrs/issues/308",
          "repository_url": "https://api.github.com/repos/romanz/electrs",
          "labels_url": "https://api.github.com/repos/romanz/electrs/issues/308/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/romanz/electrs/issues/308/comments",
          "events_url": "https://api.github.com/repos/romanz/electrs/issues/308/events",
          "html_url": "https://github.com/romanz/electrs/issues/308",
          "number": 308,
          "state": "closed",
          "state_reason": "completed",
          "title": "electrs improvement proposal",
          "body": "# Current issues\r\n\r\nThe current version of electrs has several open issues:\r\n\r\n## RPC overhead\r\n\r\nelectrs issues RPCs to bitcoind to index the blocks' data (after the initial indexing is over).\r\n\r\nIn addition, it uses bitcoind to verify that the returned transactions are in the valid chain.\r\n\r\n## Index structure\r\n\r\nThe current version uses multiple [indices](https://github.com/romanz/electrs/blob/master/doc/schema.md):\r\n\r\n- scrtipthash -> funding txid\r\n- funding txid -> spending txid\r\n- txid -> confirmed height\r\n\r\nSo every scripthash query requires multiple RocksDB reads.\r\n\r\nAlso, the resulting DB takes 65 GB (as of Oct. 2020).\r\n\r\n## Inconsistent history\r\n\r\nWhen returning address status, the transactions [need to be ordered according to their appearence in a block](https://github.com/romanz/electrs/issues/297#issuecomment-695040748).\r\n\r\n## Other\r\n\r\nThe current version doesn't use the latest Rust features (e.g. `async`) and probably can benefit from updating its dependencies (e.g. [RocksDB](https://github.com/rust-rocksdb/rust-rocksdb) and [rust-bitcoincore-rpc](https://github.com/rust-bitcoin/rust-bitcoincore-rpc/)).\r\n\r\n# Proposal\r\n\r\nBy utilizing the \"block undo\" data (as done in [#14053](https://github.com/bitcoin/bitcoin/pull/14053) and [#14121](https://github.com/bitcoin/bitcoin/pull/14121), we can add [a new `getblocklocations` RPC to bitcoind](https://github.com/bitcoin/bitcoin/compare/master...romanz:locations).\r\n\r\nIt would allow electrs to get the actual file system locations of bitcoind [Block](https://github.com/bitcoin/bitcoin/blob/d67883d01e507dd22d1281f4a4860e79d6a46a47/src/primitives/block.h) and [BlockUndo](https://github.com/bitcoin/bitcoin/blob/d67883d01e507dd22d1281f4a4860e79d6a46a47/src/undo.h) data structures.\r\n\r\nBy reading this data directly from the file system, it is possible to directly build the following index:\r\n\r\n| Script Hash Prefix   | `blk*.dat` file index | `blk*.dat` file offset |\r\n| -------------------- | --------------------- | ---------------------- |\r\n| `SHA256(script)[:8]` | 16-bit integer        | 32-bit integer         |\r\n\r\nToday, Bitcoin mainnet has ~2300 `blk*.dat` files, each taking ~128MB.\r\n\r\nThis index allows retrieving an address' history using a single RocksDB read, followed by file system reads (which can be done concurrently if the blocks are stored on an SSD).\r\n\r\nIn order to make sure the transactions are in the valid chain, we also keep an in-memory mapping from each block location to its length and block hash. Given a transaction location, this mapping can be used to find the block hash in which the transaction was confirmed (since the blocks are stored consecutevily).\r\n\r\n## Benefits\r\n\r\n- indexing and history queries don't require any RPCs to bitcoind (except the initial retrieval of block locations).\r\n- the resulting \"scripthash index\" takes ~23GB (as of Oct. 2020).\r\n-  \"txindex\" can be added similarly, taking ~6GB (as of Oct. 2020).\r\n- much better utilization of OS caching (on subsequent queries).\r\n- consistent ordering of confirmed transactions within the same block.\r\n\r\n# Can I try it?\r\n\r\nPlease take a look at the [`next`](https://github.com/romanz/electrs/compare/next) branch - and let me know what you think :)\r\n\r\nMake sure to use a custom version of `bitcoind`, built with the [following patch](https://github.com/bitcoin/bitcoin/compare/master...romanz:locations) for the proposed `getblocklocations` RPC:\r\n\r\n```\r\n$ bitcoin-cli getblocklocations 00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09 10\r\n```\r\n\r\nIn order to build the Bitcoin mainnet index, run:\r\n```\r\n$ cargo build --release\r\n$ export RUST_LOG=electrs=debug \r\n$ ./query.sh mainnet\r\n```\r\nThe indexing takes around 1.5 hours (using an AMD Ryzen 5, 16GB RAM and a HDD).\r\n\r\nTo query the index for a specific address history and balance, run:\r\n```\r\n./query.sh mainnet $BITCOIN_ADDRESS\r\n```\r\n\r\nTo run an experimental Electrum server (based on [async-std](https://github.com/async-rs/async-std)), run:\r\n```\r\n$ ./server.sh mainnet\r\n```\r\nin case you are running electrs on devices with limited memory (e.g. Raspberry Pi), please use the following command (it would take longer but use less RAM):\r\n```\r\n$ ./server.sh mainnet --low-memory\r\n```\r\nPlease let me know about any questions/bugs/issues/suggestions!\r\n\r\n",
          "user": {
            "login": "romanz",
            "id": 9900,
            "node_id": "MDQ6VXNlcjk5MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romanz",
            "html_url": "https://github.com/romanz",
            "followers_url": "https://api.github.com/users/romanz/followers",
            "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
            "organizations_url": "https://api.github.com/users/romanz/orgs",
            "repos_url": "https://api.github.com/users/romanz/repos",
            "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/romanz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 894893246,
              "node_id": "MDU6TGFiZWw4OTQ4OTMyNDY=",
              "url": "https://api.github.com/repos/romanz/electrs/labels/enhancement",
              "name": "enhancement",
              "description": "New feature or request",
              "color": "a2eeef",
              "default": true
            }
          ],
          "assignee": {
            "login": "romanz",
            "id": 9900,
            "node_id": "MDQ6VXNlcjk5MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romanz",
            "html_url": "https://github.com/romanz",
            "followers_url": "https://api.github.com/users/romanz/followers",
            "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
            "organizations_url": "https://api.github.com/users/romanz/orgs",
            "repos_url": "https://api.github.com/users/romanz/repos",
            "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/romanz/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "romanz",
              "id": 9900,
              "node_id": "MDQ6VXNlcjk5MDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/romanz",
              "html_url": "https://github.com/romanz",
              "followers_url": "https://api.github.com/users/romanz/followers",
              "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
              "organizations_url": "https://api.github.com/users/romanz/orgs",
              "repos_url": "https://api.github.com/users/romanz/repos",
              "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/romanz/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "OWNER",
          "milestone": {
            "url": "https://api.github.com/repos/romanz/electrs/milestones/1",
            "html_url": "https://github.com/romanz/electrs/milestone/1",
            "labels_url": "https://api.github.com/repos/romanz/electrs/milestones/1/labels",
            "id": 6164813,
            "node_id": "MDk6TWlsZXN0b25lNjE2NDgxMw==",
            "number": 1,
            "state": "closed",
            "title": "0.9.0",
            "description": "Implements p2p-based sync and several indexing optimizations, as described in https://github.com/romanz/electrs/issues/308#issuecomment-806061229.",
            "creator": {
              "login": "romanz",
              "id": 9900,
              "node_id": "MDQ6VXNlcjk5MDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/romanz",
              "html_url": "https://github.com/romanz",
              "followers_url": "https://api.github.com/users/romanz/followers",
              "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
              "organizations_url": "https://api.github.com/users/romanz/orgs",
              "repos_url": "https://api.github.com/users/romanz/repos",
              "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/romanz/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 24,
            "created_at": "2020-11-30T21:51:45Z",
            "updated_at": "2021-10-19T18:25:44Z",
            "closed_at": "2021-10-04T11:12:07Z",
            "due_on": "2021-09-30T07:00:00Z"
          },
          "locked": false,
          "comments": 67,
          "closed_at": "2021-09-17T17:02:55Z",
          "created_at": "2020-10-24T19:37:59Z",
          "updated_at": "2022-03-15T21:19:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-24T20:37:17Z",
      "updated_at": "2020-10-24T20:37:17Z",
      "source": {
        "issue": {
          "id": 693473218,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5OTU4MDg4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19873",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19873/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19873/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19873/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19873",
          "number": 19873,
          "state": "closed",
          "state_reason": null,
          "title": "Flush dbcache early if system is under memory pressure",
          "body": "No point forcing memory to get pushed out to swap just to cache db changes when we can write the db changes out instead\r\n\r\n~~Chasing Concept ACKs and opinions on approach taken~~ (no longer draft)\r\n\r\nOne eventual goal might be to (on systems where this is supported) allow dbcache to be unlimited.",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 234877,
              "node_id": "MDU6TGFiZWwyMzQ4Nzc=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Windows",
              "name": "Windows",
              "color": "884400",
              "default": false
            },
            {
              "id": 234878,
              "node_id": "MDU6TGFiZWwyMzQ4Nzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix",
              "name": "Linux/Unix",
              "color": "770000",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19873",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19873",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19873.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19873.patch"
          },
          "closed_at": "2022-10-12T18:15:18Z",
          "created_at": "2020-09-04T18:29:11Z",
          "updated_at": "2022-11-12T23:59:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 723519083,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzUxOTA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723519083",
      "actor": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-08T01:48:30Z",
      "updated_at": "2020-11-08T01:48:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "decryp2kanon",
        "id": 60179867,
        "node_id": "MDQ6VXNlcjYwMTc5ODY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decryp2kanon",
        "html_url": "https://github.com/decryp2kanon",
        "followers_url": "https://api.github.com/users/decryp2kanon/followers",
        "following_url": "https://api.github.com/users/decryp2kanon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/decryp2kanon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/decryp2kanon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
        "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
        "repos_url": "https://api.github.com/users/decryp2kanon/repos",
        "events_url": "https://api.github.com/users/decryp2kanon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-723519083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dgpv",
        "id": 43240089,
        "node_id": "MDQ6VXNlcjQzMjQwMDg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/43240089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dgpv",
        "html_url": "https://github.com/dgpv",
        "followers_url": "https://api.github.com/users/dgpv/followers",
        "following_url": "https://api.github.com/users/dgpv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dgpv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dgpv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dgpv/subscriptions",
        "organizations_url": "https://api.github.com/users/dgpv/orgs",
        "repos_url": "https://api.github.com/users/dgpv/repos",
        "events_url": "https://api.github.com/users/dgpv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dgpv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T08:46:46Z",
      "updated_at": "2020-11-10T08:46:46Z",
      "source": {
        "issue": {
          "id": 739276945,
          "node_id": "MDU6SXNzdWU3MzkyNzY5NDU=",
          "url": "https://api.github.com/repos/petertodd/python-bitcoinlib/issues/249",
          "repository_url": "https://api.github.com/repos/petertodd/python-bitcoinlib",
          "labels_url": "https://api.github.com/repos/petertodd/python-bitcoinlib/issues/249/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/petertodd/python-bitcoinlib/issues/249/comments",
          "events_url": "https://api.github.com/repos/petertodd/python-bitcoinlib/issues/249/events",
          "html_url": "https://github.com/petertodd/python-bitcoinlib/issues/249",
          "number": 249,
          "state": "closed",
          "state_reason": "completed",
          "title": "How to query against all transactions involving a public key?",
          "body": "How do I query for all transactions involving the public key of a wallet?\r\n\r\nAssume I have a running bitcoin node.\r\n\r\nThanks in advance,\r\nVincent",
          "user": {
            "login": "valexandersaulys",
            "id": 8105763,
            "node_id": "MDQ6VXNlcjgxMDU3NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8105763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/valexandersaulys",
            "html_url": "https://github.com/valexandersaulys",
            "followers_url": "https://api.github.com/users/valexandersaulys/followers",
            "following_url": "https://api.github.com/users/valexandersaulys/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/valexandersaulys/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/valexandersaulys/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/valexandersaulys/subscriptions",
            "organizations_url": "https://api.github.com/users/valexandersaulys/orgs",
            "repos_url": "https://api.github.com/users/valexandersaulys/repos",
            "events_url": "https://api.github.com/users/valexandersaulys/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/valexandersaulys/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "closed_at": "2020-11-10T17:17:00Z",
          "created_at": "2020-11-09T18:52:11Z",
          "updated_at": "2020-11-10T17:47:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T01:17:21Z",
      "updated_at": "2020-11-17T01:17:21Z",
      "source": {
        "issue": {
          "id": 744082050,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTIxODY0MzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20404",
          "number": 20404,
          "state": "closed",
          "state_reason": null,
          "title": "Remove names from translatable strings",
          "body": "This PR removes the following tokens from translatable strings:\r\n- command line option names\r\n- RPC names\r\n- debug log file name\r\n\r\nAll of them are untranslatable by their nature.\r\n\r\nThe Translation Strings Policy updated accordingly.\r\n\r\nThis was done while reviewing #20401. Good to get it just after 0.21 branch off :)",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20404",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20404",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20404.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20404.patch"
          },
          "closed_at": "2021-05-16T23:04:48Z",
          "created_at": "2020-11-16T18:59:31Z",
          "updated_at": "2022-08-16T17:22:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-19T19:35:18Z",
      "updated_at": "2020-11-19T19:35:18Z",
      "source": {
        "issue": {
          "id": 708713173,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDkyODkwMjU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20012",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20012/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20012/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20012/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20012",
          "number": 20012,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Remove duplicate name and argNames from CRPCCommand",
          "body": "Currently, the RPC argument names are specified twice to simplify consistency linting. To avoid having to specify the argnames twice when adding new arguments, remove the linter and add an equivalent test based on RPCHelpMan.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20012",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20012",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20012.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20012.patch"
          },
          "closed_at": "2021-01-28T18:25:35Z",
          "created_at": "2020-09-25T07:28:46Z",
          "updated_at": "2022-08-16T17:11:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T08:43:16Z",
      "updated_at": "2020-12-11T08:43:16Z",
      "source": {
        "issue": {
          "id": 440000738,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1Njc2MDU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15946",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15946/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15946/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15946/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15946",
          "number": 15946,
          "state": "closed",
          "state_reason": null,
          "title": "Allow maintaining the blockfilterindex when using prune",
          "body": "Maintaining the blockfilterindexes in prune mode is possible and may lead to efficient p2p based rescans of wallets (restore backups, import/sweep keys) beyond the prune height (rescans not part of that PR).\r\n\r\nThis PR allows running the blockfilterindex(es) in conjunction with pruning.\r\n* Bitcoind/Qt will shutdown during startup when missing block data has been detected ([re]enable `-blockfilterindex` when we already have pruned)\r\n* manual block pruning is disabled during blockfilterindex sync\r\n* auto-pruning is delayed during blockfilterindex sync\r\n\r\nToDos:\r\n* [x] Functional tests",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15946",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15946",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15946.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15946.patch"
          },
          "closed_at": "2021-02-18T08:41:08Z",
          "created_at": "2019-05-03T11:17:01Z",
          "updated_at": "2022-09-15T15:13:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 744002909,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDAwMjkwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744002909",
      "actor": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z",
      "updated_at": "2020-12-13T12:47:55Z",
      "author_association": "NONE",
      "body": "@marcinja will this allow other wallets like Electrum to utilize this feature (RPC credentials provided, of course) and avoid having to run ElecturmX (https://github.com/spesmilo/electrumx), EPS (https://github.com/chris-belcher/electrum-personal-server) or BWT (https://github.com/shesek/bwt) intermediary software?\r\n\r\n@ecdsa @SomberNight @chris-belcher @shesek could you provide your input on how this feature might be useful (or not)?",
      "user": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-744002909",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 4105985704,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNTk4NTcwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985704",
      "actor": {
        "login": "shesek",
        "id": 877904,
        "node_id": "MDQ6VXNlcjg3NzkwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shesek",
        "html_url": "https://github.com/shesek",
        "followers_url": "https://api.github.com/users/shesek/followers",
        "following_url": "https://api.github.com/users/shesek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shesek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shesek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
        "organizations_url": "https://api.github.com/users/shesek/orgs",
        "repos_url": "https://api.github.com/users/shesek/repos",
        "events_url": "https://api.github.com/users/shesek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shesek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z"
    },
    {
      "event": "subscribed",
      "id": 4105985705,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDU5ODU3MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985705",
      "actor": {
        "login": "shesek",
        "id": 877904,
        "node_id": "MDQ6VXNlcjg3NzkwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shesek",
        "html_url": "https://github.com/shesek",
        "followers_url": "https://api.github.com/users/shesek/followers",
        "following_url": "https://api.github.com/users/shesek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shesek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shesek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
        "organizations_url": "https://api.github.com/users/shesek/orgs",
        "repos_url": "https://api.github.com/users/shesek/repos",
        "events_url": "https://api.github.com/users/shesek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shesek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z"
    },
    {
      "event": "mentioned",
      "id": 4105985709,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNTk4NTcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985709",
      "actor": {
        "login": "ecdsa",
        "id": 2343238,
        "node_id": "MDQ6VXNlcjIzNDMyMzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2343238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ecdsa",
        "html_url": "https://github.com/ecdsa",
        "followers_url": "https://api.github.com/users/ecdsa/followers",
        "following_url": "https://api.github.com/users/ecdsa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ecdsa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ecdsa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ecdsa/subscriptions",
        "organizations_url": "https://api.github.com/users/ecdsa/orgs",
        "repos_url": "https://api.github.com/users/ecdsa/repos",
        "events_url": "https://api.github.com/users/ecdsa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ecdsa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z"
    },
    {
      "event": "subscribed",
      "id": 4105985711,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDU5ODU3MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985711",
      "actor": {
        "login": "ecdsa",
        "id": 2343238,
        "node_id": "MDQ6VXNlcjIzNDMyMzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2343238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ecdsa",
        "html_url": "https://github.com/ecdsa",
        "followers_url": "https://api.github.com/users/ecdsa/followers",
        "following_url": "https://api.github.com/users/ecdsa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ecdsa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ecdsa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ecdsa/subscriptions",
        "organizations_url": "https://api.github.com/users/ecdsa/orgs",
        "repos_url": "https://api.github.com/users/ecdsa/repos",
        "events_url": "https://api.github.com/users/ecdsa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ecdsa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z"
    },
    {
      "event": "mentioned",
      "id": 4105985714,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNTk4NTcxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985714",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:55Z"
    },
    {
      "event": "subscribed",
      "id": 4105985715,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDU5ODU3MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985715",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:56Z"
    },
    {
      "event": "mentioned",
      "id": 4105985717,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNTk4NTcxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985717",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:56Z"
    },
    {
      "event": "subscribed",
      "id": 4105985720,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDU5ODU3MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985720",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:56Z"
    },
    {
      "event": "mentioned",
      "id": 4105985721,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNTk4NTcyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985721",
      "actor": {
        "login": "SomberNight",
        "id": 29142493,
        "node_id": "MDQ6VXNlcjI5MTQyNDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29142493?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SomberNight",
        "html_url": "https://github.com/SomberNight",
        "followers_url": "https://api.github.com/users/SomberNight/followers",
        "following_url": "https://api.github.com/users/SomberNight/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SomberNight/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SomberNight/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SomberNight/subscriptions",
        "organizations_url": "https://api.github.com/users/SomberNight/orgs",
        "repos_url": "https://api.github.com/users/SomberNight/repos",
        "events_url": "https://api.github.com/users/SomberNight/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SomberNight/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:56Z"
    },
    {
      "event": "subscribed",
      "id": 4105985723,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDU5ODU3MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105985723",
      "actor": {
        "login": "SomberNight",
        "id": 29142493,
        "node_id": "MDQ6VXNlcjI5MTQyNDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29142493?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SomberNight",
        "html_url": "https://github.com/SomberNight",
        "followers_url": "https://api.github.com/users/SomberNight/followers",
        "following_url": "https://api.github.com/users/SomberNight/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SomberNight/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SomberNight/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SomberNight/subscriptions",
        "organizations_url": "https://api.github.com/users/SomberNight/orgs",
        "repos_url": "https://api.github.com/users/SomberNight/repos",
        "events_url": "https://api.github.com/users/SomberNight/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SomberNight/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T12:47:56Z"
    },
    {
      "event": "commented",
      "id": 744015971,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDAxNTk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744015971",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T14:30:13Z",
      "updated_at": "2020-12-13T14:30:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "The main issue AFAIU is that Electrum is using `SHA256(scriptPubKey)` while this PR is using `MurmurHash3(scriptPubKey)`.\r\nAlso, ElectrumX & [electrs](https://github.com/romanz/electrs) are using RocksDB for the index storage - resulting in better performance and disk usage (compared to LevelDB).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-744015971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 744020488,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDAyMDQ4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744020488",
      "actor": {
        "login": "SomberNight",
        "id": 29142493,
        "node_id": "MDQ6VXNlcjI5MTQyNDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29142493?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SomberNight",
        "html_url": "https://github.com/SomberNight",
        "followers_url": "https://api.github.com/users/SomberNight/followers",
        "following_url": "https://api.github.com/users/SomberNight/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SomberNight/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SomberNight/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SomberNight/subscriptions",
        "organizations_url": "https://api.github.com/users/SomberNight/orgs",
        "repos_url": "https://api.github.com/users/SomberNight/repos",
        "events_url": "https://api.github.com/users/SomberNight/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SomberNight/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T15:04:58Z",
      "updated_at": "2020-12-13T15:04:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Talkless note that while some Electrum users run their own bitcoind, many do not. Electrum wants to support both use cases, and in fact the suspicion is that most users just use a public server. When using a public server, the client cannot use bitcoind RPC, hence in that case I don't see how the middleware (e.g. ElectrumX) could be avoided.\r\n\r\nFor the own bitcoind use case, maybe the client could have another optional mode of operation where it uses bitcoind RPC directly, which is I guess what you are asking about. For that, an address-index in bitcoind is the main thing missing indeed, however not the only one. For one, the electrum protocol (the client<->\"middleware server\" connection) has address subscriptions - the client gets a notification when a history of one its addresses changes. We are also planning on soon adding another method into the protocol that allows `txoutpoint->spender_txid` lookups (and notifications); I guess that could be implemented using the index in this PR albeit in a very inefficient way for heavily reused addresses.\r\n\r\nIMHO there are multiple upsides for having this middleware setup for Electrum:\r\n- for the project, it keeps the codebase simpler (again, we want to support users without own bitcoind)\r\n- for the project, it also allows for more flexibility for implementing new functionality: just consider present PR here, we have needed such an index for 9 years but bitcoind did not have it or want it, so we could just implement it ourselves\r\n- for the server operator, even if they don't want to open up the server for the public, they could share it with their friends and family. I don't think that's feasible with bitcoind RPC. I think this is a common use case.\r\n\r\nNevertheless if someone steps up and contributes patches, this kind of thing could be added.\r\n\r\n-----\r\n\r\n> The total size of the address index right now is 223GB\r\n\r\nThat sounds much larger than expected.\r\nEven with the `txoutpoint->spender_txid` map I mentioned above, when using LevelDB, ElectrumX uses around 90 GiB of disk space.\r\n\r\n> The DB keys are structured as follows: `<addr_id, key_type, outpoint>`\r\n> The DB values are simply: `<CDiskTxPos, CScript> `\r\n\r\nInstead of having both `addr_id` and `CScript`, why not just put a long hash, e.g. `sha256(CScript)` into the key?\r\n\r\nAlso, I expect most users of this index would also want txindex enabled. You might want to consider making address index dependent on txindex. Have you investigated how much space that would save? There would be no need to store `CDiskTxPos`.\r\n\r\nAnother trick that ElectrumX uses is that only the best chain is indexed. We have a `tx_num->txid` map as raw files on disk. A `tx_num` is the index of the transaction in the linear history of the blockchain, a 5-byte integer (so e.g. the genesis block coinbase tx has `tx_num=0`). This map uses around 17 GiB atm. With this, you can encode the txid part of the `outpoint` as 5 bytes instead of 32 bytes.",
      "user": {
        "login": "SomberNight",
        "id": 29142493,
        "node_id": "MDQ6VXNlcjI5MTQyNDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/29142493?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SomberNight",
        "html_url": "https://github.com/SomberNight",
        "followers_url": "https://api.github.com/users/SomberNight/followers",
        "following_url": "https://api.github.com/users/SomberNight/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SomberNight/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SomberNight/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SomberNight/subscriptions",
        "organizations_url": "https://api.github.com/users/SomberNight/orgs",
        "repos_url": "https://api.github.com/users/SomberNight/repos",
        "events_url": "https://api.github.com/users/SomberNight/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SomberNight/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-744020488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 4106106650,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwNjEwNjY1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4106106650",
      "actor": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T15:04:58Z"
    },
    {
      "event": "subscribed",
      "id": 4106106651,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDYxMDY2NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4106106651",
      "actor": {
        "login": "Talkless",
        "id": 292191,
        "node_id": "MDQ6VXNlcjI5MjE5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Talkless",
        "html_url": "https://github.com/Talkless",
        "followers_url": "https://api.github.com/users/Talkless/followers",
        "following_url": "https://api.github.com/users/Talkless/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Talkless/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Talkless/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
        "organizations_url": "https://api.github.com/users/Talkless/orgs",
        "repos_url": "https://api.github.com/users/Talkless/repos",
        "events_url": "https://api.github.com/users/Talkless/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Talkless/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T15:04:58Z"
    },
    {
      "event": "removed_from_project",
      "id": 4126617512,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50NDEyNjYxNzUxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4126617512",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:08:21Z",
      "project_card": {
        "id": 27673411,
        "url": "https://api.github.com/projects/columns/cards/27673411",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Chasing Concept ACK"
      }
    },
    {
      "event": "commented",
      "id": 747639681,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzYzOTY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747639681",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:09:02Z",
      "updated_at": "2020-12-17T19:09:02Z",
      "author_association": "MEMBER",
      "body": "Concept ACK (might have already done that)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-747639681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 747648440,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzY0ODQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747648440",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:25:09Z",
      "updated_at": "2020-12-17T19:28:06Z",
      "author_association": "MEMBER",
      "body": "I'm concept -0 on this.\r\n\r\nMy primary objection is that I think it's a bad idea for any infrastructure to be built all that relies on having fully-indexed blockchain data available (this also applies to txindex, but we can't just remove support...).\r\n\r\nHowever, it seems many people want something like this, and are going to use it anyway. The question is then whether it belongs in the bitcoin-core codebase. Alternative, and more performant presumably, like electrs exist already too, so it isn't exactly impossible to do this elsewhere.\r\n\r\nStill, given that we now have the indexes infrastructure, it means that things like this are easy to add in a fairly modular way without invading consensus code. So if people really want this, fine.\r\n\r\nOverall approach comment: I don't think MurmurHash should be used for anything new; there are strictly better hash functions available. I'd suggest SipHash if that's fast enough.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-747648440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "commented",
      "id": 747658388,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzY1ODM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747658388",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:42:23Z",
      "updated_at": "2020-12-17T19:42:23Z",
      "author_association": "MEMBER",
      "body": "I'm also a little more negative on having this in Core than I previously was. After working in a few industrial contexts on wallet stuff, it's clear to me that an address index is really only required if you want to implement a block explorer or do chain analysis. For both of these applications, using something like electrs seems sufficient.\r\n\r\nFor personal wallet management, a full address index is not required. I think the origin of some confusion is that things like the Electrum Personal Server have become synonymous with this kind of usage, but in reality a full index is overkill when descriptor-specific rescans can be done once for a historical backfill and then per-block scanning can be done from there on out.\r\n\r\nI want to point out that this is a nice implementation and good work by @marcinja, but I'm leaning slightly against the inclusion of such an index in Core at this point.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-747658388",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 4126741857,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEyNjc0MTg1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4126741857",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:42:23Z"
    },
    {
      "event": "subscribed",
      "id": 4126741860,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMjY3NDE4NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4126741860",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:42:23Z"
    },
    {
      "event": "commented",
      "id": 747661798,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzY2MTc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747661798",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:48:52Z",
      "updated_at": "2020-12-17T19:48:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> My primary objection is that I think it's a bad idea for any infrastructure to be built that relies on having fully-indexed blockchain data available.\r\n\r\nI agree on this.\r\n\r\nIMO the only use cases to ever use a full address index are:\r\n* 1) Instant seed/xpriv backup recovery including spent history\r\n* 2) Backend service for thousands of wallets\r\n* 3) Debug/explore purposes\r\n\r\n**1** (instant backup recovery) could be solved with either `scantxoutset` (take a minute or two) or by an address-index for the utxo set only. But both would not restore the spent history.\r\nA scalable non-enterprise solution to restore the spent history is using blockfilters. Scan through the filters and rescan only the relevant blocks (a matter of minutes), see #20664.\r\n\r\n**2** (a backend for thousands of wallets): out of scope for this project.\r\n\r\n**3** (explore purposes): I think this is a valid use case. Though adding this PR to Bitcoin Core will lead to **many many projects** using it **in production** increasing the traffic in this project and eventually *steal* time from existing contributors (rebase, maintenance, drag-along)\r\n\r\n**My main fear is that people are going to use this index (a full address index) to use it as an electrum(ish) backend for a handful of wallets.**\r\n\r\nWith multiwallet, watch-only-wallets, PSBT, we have all tools to server multiple wallets in a scalable way for external applications.\r\n\r\nI also think merging this as it is, would be in contradiction to the process- and repository-separation effort.\r\n\r\nTherefore I'm ~0 (slightly towards NACK) to add this.\r\nIf this would be in another repository (still under `bitcoin/*`) and process separated, I would ACK it.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-747661798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T20:13:58Z",
      "updated_at": "2020-12-17T20:13:58Z",
      "source": {
        "issue": {
          "id": 769987532,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxODQzNTI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20685",
          "number": 20685,
          "state": "closed",
          "state_reason": null,
          "title": "Add I2P support using I2P SAM",
          "body": "Add I2P support by using the [I2P SAM](https://geti2p.net/en/docs/api/samv3) protocol. Unlike Tor, for incoming connections we get the I2P address of the peer (and they also receive ours when we are the connection initiator).\r\n\r\nTwo new options are added:\r\n\r\n```\r\n  -i2psam=<ip:port>\r\n       I2P SAM proxy to reach I2P peers and accept I2P connections (default:\r\n       none)\r\n\r\n  -i2pacceptincoming\r\n       If set and -i2psam is also set then incoming I2P connections are\r\n       accepted via the SAM proxy. If this is not set but -i2psam is set\r\n       then only outgoing connections will be made to the I2P network.\r\n       Ignored if -i2psam is not set. Notice that listening for incoming\r\n       I2P connections is done through the SAM proxy, not by binding to\r\n       a local address and port (default: true)\r\n```\r\n\r\n# Overview of the changes\r\n\r\n## Make `ReadBinary()` and `WriteBinary()` reusable\r\n\r\nWe would need to dump the I2P private key to a file and read it back later. Move those two functions out of `torcontrol.cpp`.\r\n\r\n```\r\nutil: extract {Read,Write}BinaryFile() to its own files\r\nutil: fix ReadBinaryFile() returning partial contents\r\nutil: fix WriteBinaryFile() claiming success even if error occurred\r\n```\r\n\r\n## Split `CConnman::AcceptConnection()`\r\n\r\nMost of `CConnman::AcceptConnection()` is agnostic of how the socket was accepted. The other part of it deals with the details of the `accept(2)` system call. Split those so that the protocol-agnostic part can be reused if we accept a socket by other means.\r\n\r\n```\r\nnet: check for invalid socket earlier in CConnman::AcceptConnection()\r\nnet: get the bind address earlier in CConnman::AcceptConnection()\r\nnet: isolate the protocol-agnostic part of CConnman::AcceptConnection()\r\nnet: avoid unnecessary GetBindAddress() call\r\n```\r\n\r\n## Implement the I2P [SAM](https://geti2p.net/en/docs/api/samv3) protocol (not all of it)\r\n\r\nJust the parts that would enable us to make outgoing and accept incoming I2P connections.\r\n\r\n```\r\nnet: extend CNetAddr::SetSpecial() to support I2P\r\nnet: move the constant maxWait out of InterruptibleRecv()\r\nnet: dedup MSG_NOSIGNAL and MSG_DONTWAIT definitions\r\nnet: extend Sock::Wait() to report a timeout\r\nnet: extend Sock with methods for robust send & read until terminator\r\nnet: extend Sock with a method to check whether connected\r\nnet: implement the necessary parts of the I2P SAM protocol\r\n```\r\n\r\n## Use I2P SAM to connect to and accept connections from I2P peers\r\n\r\nProfit from all of the preceding commits.\r\n\r\n```\r\ninit: introduce I2P connectivity options\r\nnet: add I2P to the reachability map\r\nnet: make outgoing I2P connections from CConnman\r\nnet: accept incoming I2P connections from CConnman\r\nnet: recognize I2P from ParseNetwork() so that -onlynet=i2p works\r\nnet: Do not skip the I2P network from GetNetworkNames()\r\n```",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 79,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20685",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20685",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20685.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20685.patch"
          },
          "closed_at": "2021-03-02T10:50:39Z",
          "created_at": "2020-12-17T12:49:55Z",
          "updated_at": "2022-08-18T18:30:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-19T10:11:58Z",
      "updated_at": "2020-12-19T10:11:58Z",
      "source": {
        "issue": {
          "id": 770852012,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyNTE2NDU0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20702",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20702/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20702/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20702/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20702",
          "number": 20702,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add getblocklocations call",
          "body": "This RPC allows the client to retrieve the file system locations\r\nof the confirmed blocks and their undo data, to allow building\r\nefficient indexes outside of Bitcoin Core.\r\n\r\nAn example usage is described here: https://github.com/romanz/electrs/issues/308\r\n\r\nBy using the new RPC, it is possible to build an address-based\r\nindex taking ~24GB and a txindex taking ~6GB (as of Dec. 2020).",
          "user": {
            "login": "romanz",
            "id": 9900,
            "node_id": "MDQ6VXNlcjk5MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romanz",
            "html_url": "https://github.com/romanz",
            "followers_url": "https://api.github.com/users/romanz/followers",
            "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
            "organizations_url": "https://api.github.com/users/romanz/orgs",
            "repos_url": "https://api.github.com/users/romanz/repos",
            "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/romanz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20702",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20702",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20702.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20702.patch"
          },
          "closed_at": "2021-01-12T10:37:04Z",
          "created_at": "2020-12-18T12:33:14Z",
          "updated_at": "2022-08-16T17:03:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-27T23:33:32Z",
      "updated_at": "2020-12-27T23:33:32Z",
      "source": {
        "issue": {
          "id": 734784557,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0Mjg4NjMz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20286",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20286/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20286/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20286/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20286",
          "number": 20286,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: deprecate `addresses` and `reqSigs` from rpc outputs",
          "body": "Considering the limited applicability of `reqSigs` and the confusing output of `1` in all cases except bare multisig, the `addresses` and `reqSigs` outputs are removed for all rpc commands.\r\n    \r\n1) add a new sane \"address\" field (for outputs that have an identifiable address, which doesn't include bare multisig)\r\n2) with -deprecatedrpc: leave \"reqSigs\" and \"addresses\" intact (with all weird/wrong behavior they have now)\r\n3) without -deprecatedrpc: drop \"reqSigs\" and \"addresses\" entirely always.\r\n    \r\nNote: Some light refactoring done to allow us to very easily delete a few chunks of code (marked with TODOs) when we remove this deprecated behavior.\r\n\r\nUsing `IsDeprecatedRPCEnabled` in core_write.cpp caused some circular dependencies involving core_io\r\n\r\nCircular dependencies were caused by rpc/util unnecessarily importing node/coinstats and node/transaction. Really what rpc/util needs are some fundamental type/helper-function definitions. So this was cleaned up to make more sense.\r\n\r\nThis fixes #20102.",
          "user": {
            "login": "mjdietzx",
            "id": 7217256,
            "node_id": "MDQ6VXNlcjcyMTcyNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjdietzx",
            "html_url": "https://github.com/mjdietzx",
            "followers_url": "https://api.github.com/users/mjdietzx/followers",
            "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
            "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
            "repos_url": "https://api.github.com/users/mjdietzx/repos",
            "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20286",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20286",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20286.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20286.patch"
          },
          "closed_at": "2021-03-29T13:16:39Z",
          "created_at": "2020-11-02T20:07:10Z",
          "updated_at": "2022-08-16T17:07:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 754071381,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDA3MTM4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754071381",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-04T16:21:10Z",
      "updated_at": "2021-01-04T16:21:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi all, thanks for the feedback and review. This was an enjoyable PR to work on and I learned a lot from all your comments.\r\n\r\nI'm closing this PR because its size probably requires stronger support from contributors to get in. It also seems more clear now that all of the practical use-cases are covered by existing features and some lightweight alternatives (https://github.com/bitcoin/bitcoin/pull/20664) .\r\n\r\nI also agree that it would be bad to incentivize using an address index to support an external electrum wallet, when it's not the intended use-case and would cause unnecessary burden on contributors and maintainers in this project, e.g. from users of those wallets wanting new features or updates.",
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-754071381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "closed",
      "id": 4165693175,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDE2NTY5MzE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4165693175",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-04T16:21:10Z"
    },
    {
      "event": "commented",
      "id": 754089336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDA4OTMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754089336",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-04T16:53:22Z",
      "updated_at": "2021-01-04T16:53:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "@marcinja thank you and I hope to see more contributions of this quality from you.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#issuecomment-754089336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053"
    },
    {
      "event": "mentioned",
      "id": 4165820789,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2NTgyMDc4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4165820789",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-04T16:53:23Z"
    },
    {
      "event": "subscribed",
      "id": 4165820793,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjU4MjA3OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4165820793",
      "actor": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-04T16:53:23Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-25T12:33:02Z",
      "updated_at": "2021-04-25T12:33:02Z",
      "source": {
        "issue": {
          "id": 866954465,
          "node_id": "MDU6SXNzdWU4NjY5NTQ0NjU=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21774",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21774/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21774/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21774/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/21774",
          "number": 21774,
          "state": "closed",
          "state_reason": "completed",
          "title": "scantxoutset fails via javascript rpc call in mainnet (ok in testnet) with: OperationalError: ESOCKETTIMEDOUT",
          "body": "Hi.\r\n\r\nI can successfully  request utxos in mainnet with:\r\n`bitcoin-cli -rpcport=8332 -rpcuser=xxxx -rpcpassword=xxxx scantxoutset start '[\"addr(bc1qnffp2jccqnwjwymkheqkkkrgdhslxyg3wpu0rq)\"]'`\r\n\r\nBut \r\n```\r\nconst Client = require('bitcoin-core')\r\nlet btcNode = new Client( { host, username, password, port, timeout: 30000 } ) \r\nconst address = { _id: 'bc1qnffp2jccqnwjwymkheqkkkrgdhslxyg3wpu0rq', ...}\r\nconst utxos = await btcNode.command('scantxoutset', 'start', [`addr(${address._id})`])\r\n```\r\nfails in mainnet (ok in testnet) with \r\n\r\n```\r\nOperationalError: ESOCKETTIMEDOUT\r\n    at ClientRequest.<anonymous> (/graphql/node_modules/request/request.js:816:19)\r\n    at Object.onceWrapper (events.js:421:28)\r\n    at ClientRequest.emit (events.js:315:20)\r\n    at ClientRequest.EventEmitter.emit (domain.js:485:12)\r\n    at Socket.emitRequestTimeout (_http_client.js:717:9)\r\n    at Object.onceWrapper (events.js:421:28)\r\n    at Socket.emit (events.js:327:22)\r\n    at Socket.EventEmitter.emit (domain.js:485:12)\r\n    at Socket._onTimeout (net.js:481:8)\r\n    at listOnTimeout (internal/timers.js:549:17)\r\n    at processTimers (internal/timers.js:492:7) {\r\n  cause: Error: ESOCKETTIMEDOUT\r\n      at ClientRequest.<anonymous> (/graphql/node_modules/request/request.js:816:19)\r\n      at Object.onceWrapper (events.js:421:28)\r\n      at ClientRequest.emit (events.js:315:20)\r\n      at ClientRequest.EventEmitter.emit (domain.js:485:12)\r\n      at Socket.emitRequestTimeout (_http_client.js:717:9)\r\n      at Object.onceWrapper (events.js:421:28)\r\n      at Socket.emit (events.js:327:22)\r\n      at Socket.EventEmitter.emit (domain.js:485:12)\r\n      at Socket._onTimeout (net.js:481:8)\r\n      at listOnTimeout (internal/timers.js:549:17)\r\n      at processTimers (internal/timers.js:492:7) {\r\n    code: 'ESOCKETTIMEDOUT',\r\n    connect: false\r\n  },\r\n  isOperational: true,\r\n  code: 'ESOCKETTIMEDOUT',\r\n  connect: false\r\n}\r\n```\r\n\r\nOther commands like` btcNode.sendRawTransaction estimateSmartFee getBlockByHash` works ok.\r\n\r\nThanks.\r\n\r\nupdate: in the server I opened a single btcNode connection that I reuse all the time.",
          "user": {
            "login": "educob",
            "id": 12698227,
            "node_id": "MDQ6VXNlcjEyNjk4MjI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12698227?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/educob",
            "html_url": "https://github.com/educob",
            "followers_url": "https://api.github.com/users/educob/followers",
            "following_url": "https://api.github.com/users/educob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/educob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/educob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/educob/subscriptions",
            "organizations_url": "https://api.github.com/users/educob/orgs",
            "repos_url": "https://api.github.com/users/educob/repos",
            "events_url": "https://api.github.com/users/educob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/educob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "closed_at": "2021-04-25T09:39:25Z",
          "created_at": "2021-04-25T08:51:41Z",
          "updated_at": "2022-08-18T18:35:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5306723513,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE8Tiy5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5306723513",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "909c5fa563abd208bc6c15c80d5910dec0879ff3",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/909c5fa563abd208bc6c15c80d5910dec0879ff3",
      "created_at": "2021-09-15T15:14:58Z"
    },
    {
      "event": "referenced",
      "id": 5311868182,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE8nK0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5311868182",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f3165ddc4526933b1426d688c679ac8e4368d4a8",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/f3165ddc4526933b1426d688c679ac8e4368d4a8",
      "created_at": "2021-09-16T11:15:42Z"
    },
    {
      "event": "referenced",
      "id": 5321369410,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9LadC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5321369410",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e3b75d39120241bededab24037d95660a4d3006",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/0e3b75d39120241bededab24037d95660a4d3006",
      "created_at": "2021-09-17T20:06:56Z"
    },
    {
      "event": "referenced",
      "id": 5321369418,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9LadK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5321369418",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4526efc6ac0077120181416002045220177fca74",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4526efc6ac0077120181416002045220177fca74",
      "created_at": "2021-09-17T20:06:56Z"
    },
    {
      "event": "referenced",
      "id": 5330096828,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9stK8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5330096828",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "736421f02ef1328b620c4457a74edb05d18bf234",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/736421f02ef1328b620c4457a74edb05d18bf234",
      "created_at": "2021-09-20T18:12:23Z"
    },
    {
      "event": "referenced",
      "id": 5330096839,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9stLH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5330096839",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a97683ff3ad84d4dfbe23ad8cd5412d6f1a88ee6",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/a97683ff3ad84d4dfbe23ad8cd5412d6f1a88ee6",
      "created_at": "2021-09-20T18:12:23Z"
    },
    {
      "event": "referenced",
      "id": 5330171304,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9s_Wo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5330171304",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "feddd3c0c20e90707b556971e3f8799e47c8e813",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/feddd3c0c20e90707b556971e3f8799e47c8e813",
      "created_at": "2021-09-20T18:27:10Z"
    },
    {
      "event": "referenced",
      "id": 5330171316,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE9s_W0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5330171316",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "71df8f25db3322d6936bdc4e696e3d01209f6d4f",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/71df8f25db3322d6936bdc4e696e3d01209f6d4f",
      "created_at": "2021-09-20T18:27:11Z"
    },
    {
      "event": "referenced",
      "id": 5345052635,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE-lwfb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5345052635",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a489420e16cb3470ceaa1ab96d031221d25d1e56",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/a489420e16cb3470ceaa1ab96d031221d25d1e56",
      "created_at": "2021-09-22T18:19:44Z"
    },
    {
      "event": "referenced",
      "id": 5345052645,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAE-lwfl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5345052645",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "829aeff0f6d14b554b942a9afc2df3de177bcecc",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/829aeff0f6d14b554b942a9afc2df3de177bcecc",
      "created_at": "2021-09-22T18:19:44Z"
    },
    {
      "event": "referenced",
      "id": 5446824507,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAFEp_I7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5446824507",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c7dff0d165e851c8b94be36fae807e784627db5c",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/c7dff0d165e851c8b94be36fae807e784627db5c",
      "created_at": "2021-10-12T04:14:06Z"
    },
    {
      "event": "referenced",
      "id": 5446824513,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAFEp_JB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5446824513",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1d2c79f4d3ee1456f017176c1252a543ee96b55",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/c1d2c79f4d3ee1456f017176c1252a543ee96b55",
      "created_at": "2021-10-12T04:14:06Z"
    },
    {
      "event": "referenced",
      "id": 6532926784,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAGFZI1A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6532926784",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bef7b2508d35248a0c548985e6da180e60f147c3",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/bef7b2508d35248a0c548985e6da180e60f147c3",
      "created_at": "2022-05-02T12:01:40Z"
    },
    {
      "event": "referenced",
      "id": 6532926790,
      "node_id": "REFE_lADOABII584VF_M_zwAAAAGFZI1G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6532926790",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cf54acf2ce068f2b8a372fff87ae0d2210b66952",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/cf54acf2ce068f2b8a372fff87ae0d2210b66952",
      "created_at": "2022-05-02T12:01:40Z"
    },
    {
      "event": "locked",
      "id": 7199061613,
      "node_id": "LOE_lADOABII584VF_M_zwAAAAGtGPZt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199061613",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:11:15Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213754112",
      "pull_request_review_id": 150655713,
      "id": 213754112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc1NDExMg==",
      "diff_hunk": "@@ -93,6 +96,33 @@ class BaseIndex : public CValidationInterface\n \n     /// Stops the instance from staying in sync with blockchain updates.\n     void Stop();\n+\n+    bool IsInSyncWithMainChain() const;\n+};\n+\n+struct CDiskTxPos : public CDiskBlockPos",
      "path": "src/index/base.h",
      "position": null,
      "original_position": 25,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nNote: this class is moved from `src/index/txindex.cpp` with no changes (except whitespace)",
      "created_at": "2018-08-29T16:47:20Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213754112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213754112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213756026",
      "pull_request_review_id": 150655713,
      "id": 213756026,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc1NjAyNg==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nNote: new `index/addrindex.cpp`, `index/addrindex.h`, and `test/addrindex_tests.cpp` files in this commit mirror existing `index/txindex.cpp` and `index/txindex.h`, `test/txindex_tests.cpp` files and have some code and comments in common. It can help to diff the `addr` files against the `tx` files when reviewing this PR.",
      "created_at": "2018-08-29T16:53:38Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213756026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213756026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213770206",
      "pull_request_review_id": 150655713,
      "id": 213770206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc3MDIwNg==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nI think this code could benefit from some typedefs and more consistent use of types internally to improve readability. Maybe:\r\n\r\n```\r\nusing AddressId = uint64_t;\r\nusing BlockId = uint64;\r\nusing DbKey = std::pair<std::pair<char, AddressID>, CDiskTxPos>;\r\nusing DbValue = BlockId;\r\n```\r\n\r\nI also wonder if `std::tuple<char, AddressId, CDiskTxPos>` might be a more natural key format than the nested pair.",
      "created_at": "2018-08-29T17:37:39Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213770206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213770206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773597",
      "pull_request_review_id": 150655713,
      "id": 213773597,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc3MzU5Nw==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nCould just make this a return value instead of an output parameter. Existing return value seems redundant.",
      "created_at": "2018-08-29T17:47:55Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213773597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773659",
      "pull_request_review_id": 150655713,
      "id": 213773659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc3MzY1OQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nCould consolidate last two parameters into single `boost::optional<AddressId> filter_value` param.",
      "created_at": "2018-08-29T17:48:07Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213773659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213782329",
      "pull_request_review_id": 150655713,
      "id": 213782329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc4MjMyOQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nThis sleep + BlockUntilSyncedToCurrentChain call is pretty hacky but probably ok in principle. I think @jimpo could easily tell you how to improve it. I would move this code out of the `AddrIndex` class and into a `g_txindex->WaitForSync()` or similar method, and probably replace the sleep with a condition variable wait.\r\n\r\nOr maybe this code will be unnecessary with #14035 undo data?",
      "created_at": "2018-08-29T18:14:05Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213782329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213782329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213785140",
      "pull_request_review_id": 150655713,
      "id": 213785140,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc4NTE0MA==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce address index\" (3c7cc3c705b08828dc8dc919e53343df78568ebd)\r\n\r\nShould probably reorder this condition. It seems pointless to retrieve the value when the key is wrong, and maybe dangerous if the value is a different format and deserializing could throw an exception.",
      "created_at": "2018-08-29T18:22:29Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213785140",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213785140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213788343",
      "pull_request_review_id": 150655713,
      "id": 213788343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc4ODM0Mw==",
      "diff_hunk": "@@ -203,6 +204,123 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "226eeea9736127269058fbbf7816c7100f90974d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add searchrawtransactions RPC\" (226eeea9736127269058fbbf7816c7100f90974d)\r\n\r\nShould add a basic python functional test for the new RPC method.",
      "created_at": "2018-08-29T18:32:17Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r213788343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213788343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013007",
      "pull_request_review_id": 150972075,
      "id": 214013007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxMzAwNw==",
      "diff_hunk": "@@ -1611,6 +1625,13 @@ bool AppInitMain()\n         g_txindex->Start();\n     }\n \n+    if (gArgs.GetBoolArg(\"-addrindex\", DEFAULT_ADDRINDEX)) {\n+        if (!g_txindex)\n+            InitWarning(_(\"-txindex must be enabled for -addrindex to index spends from addresses.\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no such thing as a \"spend from address\"",
      "created_at": "2018-08-30T12:37:52Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214013007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013753",
      "pull_request_review_id": 150972977,
      "id": 214013753,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxMzc1Mw==",
      "diff_hunk": "@@ -203,6 +204,129 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+            \"searchrawtransactions <address> [verbose=true] [skip=0] [count=100]\\n\"\n+            \"\\nReturns raw transactions that contain the given address and the hash of the block(s) they were found in.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"    (string, required) The address to search for\\n\"\n+            \"2. \\\"verbose\\\"    (bool, optional, default = false) If set to false, only returns data for hex-encoded `txid`s. \\n\"\n+            \"3. \\\"skip\\\"       (numeric, optional, default = 0) If set, the result skips this number of initial values. \\n\"",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`skip` and `count` probably make sense on an options object instead.",
      "created_at": "2018-08-30T12:40:10Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214013753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013906",
      "pull_request_review_id": 150972977,
      "id": 214013906,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxMzkwNg==",
      "diff_hunk": "@@ -203,6 +204,129 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+            \"searchrawtransactions <address> [verbose=true] [skip=0] [count=100]\\n\"\n+            \"\\nReturns raw transactions that contain the given address and the hash of the block(s) they were found in.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"    (string, required) The address to search for\\n\"\n+            \"2. \\\"verbose\\\"    (bool, optional, default = false) If set to false, only returns data for hex-encoded `txid`s. \\n\"\n+            \"3. \\\"skip\\\"       (numeric, optional, default = 0) If set, the result skips this number of initial values. \\n\"\n+            \"3. \\\"count\\\"      (numeric, optional, default = 100) If set, the result will only contain this amount of values. \\n\"",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(this would be number 4, but n/a once on an options object)",
      "created_at": "2018-08-30T12:40:32Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214013906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214013906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015214",
      "pull_request_review_id": 150972977,
      "id": 214015214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxNTIxNA==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This basically shouldn't be here. The address used to receive a coin has zero relationship with the transaction spending that coin.\r\n\r\nIf someone really cares about getting it anyway, there should be a separate input txid/index -> spend txid index.",
      "created_at": "2018-08-30T12:45:05Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214015214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015281",
      "pull_request_review_id": 150972977,
      "id": 214015281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxNTI4MQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This looks like a very fragile assumption.",
      "created_at": "2018-08-30T12:45:18Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214015281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015451",
      "pull_request_review_id": 150972977,
      "id": 214015451,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDAxNTQ1MQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With this, why is the loop waiting for IsInSyncWithMainChain needed?",
      "created_at": "2018-08-30T12:45:50Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214015451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214015451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214093388",
      "pull_request_review_id": 151073881,
      "id": 214093388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDA5MzM4OA==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": 214015451,
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`BlockUntilSyncedToCurrentChain` returns false immediately if `m_synced` is false.\r\n\r\nThe loop waiting for `IsInSyncWithMainChain` waits for txindex to finish in `ThreadSync`. Once txindex finishes in `ThreadSync` it will be updated by ValiditionInterface callbacks from that point on.\r\n\r\nThis line (since txindex must have `m_synced` =  true now) will actually block now until txindex syncs with the ValidationInterface queue.",
      "created_at": "2018-08-30T16:16:00Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214093388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214093388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214136359",
      "pull_request_review_id": 151126290,
      "id": 214136359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDEzNjM1OQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit: Introduce address index\r\n\r\nCan you move this comment to `BaseIndex::DB` and delete from `TxIndex::DB` as well? No need to copy it to every new index file, especially since it's handled at the base layer.",
      "created_at": "2018-08-30T18:31:21Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214136359",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214136359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214149325",
      "pull_request_review_id": 151142587,
      "id": 214149325,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDE0OTMyNQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;\n+                }\n+\n+                CScript script_pub_key = tx->vout[tx_in.prevout.n].scriptPubKey;\n+                positions.emplace_back(GetAddrID(script_pub_key), pos);\n+            }\n+        }\n+\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(positions, block.GetHash());\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>>& positions, const uint256 block_hash)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& pos : positions) {\n+        // Insert (address, position) pair with a part of the block hash.\n+        // Different transactions for the same address will be differentiated\n+        // in leveldb by their CDiskTxPos suffix.\n+        batch.Write(std::make_pair(std::make_pair(DB_ADDRINDEX, pos.first), pos.second), block_hash.GetUint64(0));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+void AddrIndex::BlockDisconnected(const std::shared_ptr<const CBlock> &block) {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This needs an `if (!m_synced) return;`",
      "created_at": "2018-08-30T19:14:05Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214149325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214149325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203100",
      "pull_request_review_id": 151126290,
      "id": 214203100,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwMzEwMA==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": 214015214,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Spends from an address should at least get indexed under a separate key prefix even if it's done by the same indexer.\r\n\r\nUsing the undo files is a much better way to get this information than the txindex.",
      "created_at": "2018-08-30T22:45:49Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214203100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203436",
      "pull_request_review_id": 151126290,
      "id": 214203436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwMzQzNg==",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_ADDRINDEX_H\n+#define BITCOIN_INDEX_ADDRINDEX_H\n+\n+#include <chain.h>\n+#include <index/base.h>\n+#include <vector>\n+#include <txdb.h>\n+#include <uint256.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <script/script.h>\n+\n+/**\n+ * AddrIndex is used to look up transactions included in the blockchain by script.\n+ * The index is written to a LevelDB database and records the filesystem\n+ * location of transactions by script.\n+ */\n+class AddrIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+protected:\n+    bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block) override;\n+\n+    const char* GetName() const override { return \"addrindex\"; }\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.\n+    explicit AddrIndex(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Destructor is declared because this class contains a unique_ptr to an incomplete type.\n+    virtual ~AddrIndex() override;\n+\n+    /// Lookup transaction(s) by scriptPubKey. Fills txs vector with (block_hash, tx) pairs.\n+    bool FindTxsByScript(const CScript& dest, std::vector<std::pair<uint256, CTransactionRef>> &txs);",
      "path": "src/index/addrindex.h",
      "position": null,
      "original_position": 47,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There should be a way of differentiating between txs where the script is the output and ones that spend from the address. Perhaps two methods or two output vector parameters.",
      "created_at": "2018-08-30T22:47:56Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214203436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203723",
      "pull_request_review_id": 151126290,
      "id": 214203723,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwMzcyMw==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": 214015451,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A better way to do it is to loop until `BlockUntilSyncedToCurrentChain` becomes true.",
      "created_at": "2018-08-30T22:49:33Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214203723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214203723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204067",
      "pull_request_review_id": 151126290,
      "id": 214204067,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNDA2Nw==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;\n+                }\n+\n+                CScript script_pub_key = tx->vout[tx_in.prevout.n].scriptPubKey;\n+                positions.emplace_back(GetAddrID(script_pub_key), pos);\n+            }\n+        }\n+\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(positions, block.GetHash());\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>>& positions, const uint256 block_hash)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& pos : positions) {\n+        // Insert (address, position) pair with a part of the block hash.\n+        // Different transactions for the same address will be differentiated\n+        // in leveldb by their CDiskTxPos suffix.\n+        batch.Write(std::make_pair(std::make_pair(DB_ADDRINDEX, pos.first), pos.second), block_hash.GetUint64(0));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+void AddrIndex::BlockDisconnected(const std::shared_ptr<const CBlock> &block) {\n+    const uint64_t block_hash_bits = block->GetHash().GetUint64(0);\n+    std::unordered_set<uint64_t> addr_ids_to_remove;\n+\n+    {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Use the undo files instead of CCoinsViewCache.",
      "created_at": "2018-08-30T22:51:37Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214204067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204133",
      "pull_request_review_id": 151126290,
      "id": 214204133,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNDEzMw==",
      "diff_hunk": "@@ -276,3 +278,8 @@ void BaseIndex::Stop()\n         m_thread_sync.join();\n     }\n }\n+\n+\n+bool BaseIndex::IsInSyncWithMainChain() const {",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This shouldn't be necessary.",
      "created_at": "2018-08-30T22:52:00Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214204133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204265",
      "pull_request_review_id": 151126290,
      "id": 214204265,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNDI2NQ==",
      "diff_hunk": "@@ -61,6 +62,8 @@ class BaseIndex : public CValidationInterface\n     void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex,\n                         const std::vector<CTransactionRef>& txn_conflicted) override;\n \n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block) override;",
      "path": "src/index/base.h",
      "position": null,
      "original_position": 12,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why? The implementation is empty.",
      "created_at": "2018-08-30T22:52:49Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214204265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204406",
      "pull_request_review_id": 151126290,
      "id": 214204406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNDQwNg==",
      "diff_hunk": "@@ -93,6 +96,33 @@ class BaseIndex : public CValidationInterface\n \n     /// Stops the instance from staying in sync with blockchain updates.\n     void Stop();\n+\n+    bool IsInSyncWithMainChain() const;\n+};\n+\n+struct CDiskTxPos : public CDiskBlockPos",
      "path": "src/index/base.h",
      "position": null,
      "original_position": 25,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": 213754112,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd vote to move it to it's own file, like `src/index/disktxpos.{h,cpp}`.",
      "created_at": "2018-08-30T22:53:47Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214204406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204889",
      "pull_request_review_id": 151126290,
      "id": 214204889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNDg4OQ==",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_ADDRINDEX_H\n+#define BITCOIN_INDEX_ADDRINDEX_H\n+\n+#include <chain.h>\n+#include <index/base.h>\n+#include <vector>\n+#include <txdb.h>\n+#include <uint256.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <script/script.h>\n+\n+/**\n+ * AddrIndex is used to look up transactions included in the blockchain by script.\n+ * The index is written to a LevelDB database and records the filesystem\n+ * location of transactions by script.\n+ */\n+class AddrIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+protected:\n+    bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block) override;\n+\n+    const char* GetName() const override { return \"addrindex\"; }\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.\n+    explicit AddrIndex(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Destructor is declared because this class contains a unique_ptr to an incomplete type.\n+    virtual ~AddrIndex() override;\n+\n+    /// Lookup transaction(s) by scriptPubKey. Fills txs vector with (block_hash, tx) pairs.\n+    bool FindTxsByScript(const CScript& dest, std::vector<std::pair<uint256, CTransactionRef>> &txs);\n+\n+    // Returns part of key used to store information in db.\n+    static uint64_t GetAddrID(const CScript& script);",
      "path": "src/index/addrindex.h",
      "position": null,
      "original_position": 50,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this exposed? It seems internal.",
      "created_at": "2018-08-30T22:56:35Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214204889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214204889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214205452",
      "pull_request_review_id": 151126290,
      "id": 214205452,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIwNTQ1Mg==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "3c7cc3c705b08828dc8dc919e53343df78568ebd",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems that `filter_by_value` functionality isn't used? Also, I'd rename to something like `filter_by_block` because it's not clear what value means and is tightly coupled to the database layout chosen.",
      "created_at": "2018-08-30T23:00:15Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r214205452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214205452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161819",
      "pull_request_review_id": 152365361,
      "id": 215161819,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MTgxOQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Redundant condition `filter_by_value`: what about `!filter_by_value || value == value_wanted` instead?",
      "created_at": "2018-09-05T07:30:12Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215161819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161936",
      "pull_request_review_id": 152365501,
      "id": 215161936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MTkzNg==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;\n+                }\n+\n+                CScript script_pub_key = tx->vout[tx_in.prevout.n].scriptPubKey;\n+                positions.emplace_back(GetAddrID(script_pub_key), pos);\n+            }\n+        }\n+\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(positions, block.GetHash());\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>>& positions, const uint256 block_hash)",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 146,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`block_hash` should be passed by const reference?",
      "created_at": "2018-09-05T07:30:41Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215161936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161992",
      "pull_request_review_id": 152365584,
      "id": 215161992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MTk5Mg==",
      "diff_hunk": "@@ -173,6 +175,76 @@ TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>&\n     return result;\n }\n \n+// Based off of BuildChain in validation_block_tests.cpp\n+\n+// Build a chain of blocks that contains all of the transactions in txns.\n+void TestChain100Setup::BuildChain(const uint256 prev_hash, const uint32_t prev_time, int height, std::vector<CMutableTransaction> &txns, const CScript& scriptPubKey, std::vector<std::shared_ptr<const CBlock>>& blocks) {",
      "path": "src/test/test_bitcoin.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`prev_hash` should be passed by const reference?",
      "created_at": "2018-09-05T07:30:58Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215161992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215161992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162067",
      "pull_request_review_id": 152365666,
      "id": 215162067,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MjA2Nw==",
      "diff_hunk": "@@ -89,6 +89,15 @@ struct TestChain100Setup : public TestingSetup {\n     CBlock CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns,\n                                  const CScript& scriptPubKey);\n \n+    void BuildChain(const uint256 prev_hash,",
      "path": "src/test/test_bitcoin.h",
      "position": null,
      "original_position": 4,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`prev_hash` should be passed by const reference?",
      "created_at": "2018-09-05T07:31:15Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215162067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162287",
      "pull_request_review_id": 152365920,
      "id": 215162287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MjI4Nw==",
      "diff_hunk": "@@ -173,6 +175,76 @@ TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>&\n     return result;\n }\n \n+// Based off of BuildChain in validation_block_tests.cpp\n+\n+// Build a chain of blocks that contains all of the transactions in txns.\n+void TestChain100Setup::BuildChain(const uint256 prev_hash, const uint32_t prev_time, int height, std::vector<CMutableTransaction> &txns, const CScript& scriptPubKey, std::vector<std::shared_ptr<const CBlock>>& blocks) {\n+    if (height <= 0) return;\n+\n+    const CChainParams& chainparams = Params();\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    CBlock& block = pblocktemplate->block;\n+\n+    // Replace mempool-selected txns with just coinbase plus some of the passed-in txns:\n+    block.vtx.resize(1);\n+\n+    // If this is the last block, add all remaining transactions.\n+    // Otherwise add with some randomness.\n+    for (auto it = txns.begin(); it != txns.end();) {\n+        bool add_tx = (height == 1) || (GetRandInt(height) < txns.size());\n+\n+        if (add_tx) {\n+            CMutableTransaction tx = *it;\n+            block.vtx.push_back(MakeTransactionRef(tx));\n+            it = txns.erase(it);\n+        } else {\n+            it++;\n+        }\n+    }\n+\n+    block.hashPrevBlock = prev_hash;\n+    block.nTime = prev_time + 1;\n+\n+    // This is the body of IncrementExtraNonce, modified specifically for this function.\n+    // (IncrementExtraNonce creates a valid coinbase and merkleRoot)\n+    // Height first in coinbase required for block.version=2\n+    unsigned int extraNonce = 1;\n+    unsigned int nHeight = chainActive.Tip()->nHeight+1+blocks.size();\n+    CMutableTransaction txCoinbase(*block.vtx[0]);\n+    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(extraNonce)) + COINBASE_FLAGS;\n+    assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n+\n+    block.vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n+    block.hashMerkleRoot = BlockMerkleRoot(block);\n+\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, chainparams.GetConsensus())) ++block.nNonce;\n+\n+    std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(block);\n+    blocks.push_back(shared_pblock);\n+\n+    BuildChain(blocks.back()->GetHash(), blocks.back()->nTime, height - 1, txns, scriptPubKey, blocks);\n+}\n+\n+void TestChain100Setup::CreateSpendingTxs(int coinbase_spent_offset, std::vector<CScript>& script_pub_keys, std::vector<CMutableTransaction> &spends, CScript coinbase_script_pub_key) {",
      "path": "src/test/test_bitcoin.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`coinbase_script_pub_key` should be passed by const reference?",
      "created_at": "2018-09-05T07:32:04Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215162287",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162430",
      "pull_request_review_id": 152366108,
      "id": 215162430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MjQzMA==",
      "diff_hunk": "@@ -203,6 +204,129 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+            \"searchrawtransactions <address> [verbose=true] [skip=0] [count=100]\\n\"\n+            \"\\nReturns raw transactions that contain the given address and the hash of the block(s) they were found in.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"    (string, required) The address to search for\\n\"\n+            \"2. \\\"verbose\\\"    (bool, optional, default = false) If set to false, only returns data for hex-encoded `txid`s. \\n\"\n+            \"3. \\\"skip\\\"       (numeric, optional, default = 0) If set, the result skips this number of initial values. \\n\"\n+            \"3. \\\"count\\\"      (numeric, optional, default = 100) If set, the result will only contain this amount of values. \\n\"\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"\n+            \"   {\\n\"\n+            \"      \\\"hex\\\" : \\\"data\\\",             (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      \\\"txid\\\" : \\\"id\\\",              (string) The transaction id (same as provided)\\n\"\n+            \"      \\\"hash\\\" : \\\"id\\\",              (string) The transaction hash (differs from txid for witness transactions)\\n\"\n+            \"      \\\"size\\\" : n,                   (numeric) The serialized transaction size\\n\"\n+            \"      \\\"vsize\\\" : n,                  (numeric) The virtual transaction size (differs from size for witness transactions)\\n\"\n+            \"      \\\"weight\\\" : n,                 (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\\n\"\n+            \"      \\\"version\\\" : n,                (numeric) The version\\n\"\n+            \"      \\\"locktime\\\" : ttt,             (numeric) The lock time\\n\"\n+            \"      \\\"vin\\\" : [                     (array of json objects)\\n\"\n+            \"        {\\n\"\n+            \"          \\\"txid\\\": \\\"id\\\",           (string) The transaction id\\n\"\n+            \"          \\\"vout\\\": n,                (numeric) \\n\"\n+            \"          \\\"scriptSig\\\": {            (json object) The script\\n\"\n+            \"            \\\"asm\\\": \\\"asm\\\",         (string) asm\\n\"\n+            \"            \\\"hex\\\": \\\"hex\\\"          (string) hex\\n\"\n+            \"        },\\n\"\n+            \"      \\\"sequence\\\": n                 (numeric) The script sequence number\\n\"\n+            \"      \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"    }\\n\"\n+            \"    ,...\\n\"\n+            \"    \\\"vout\\\" : [                       (array of json objects)\\n\"\n+            \"       {\\n\"\n+            \"         \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n+            \"         \\\"n\\\" : n,                    (numeric) index\\n\"\n+            \"         \\\"scriptPubKey\\\" : {          (json object)\\n\"\n+            \"           \\\"asm\\\" : \\\"asm\\\",          (string) the asm\\n\"\n+            \"           \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n+            \"           \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n+            \"           \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n+            \"           \\\"addresses\\\" : [           (json array of string)\\n\"\n+            \"             \\\"address\\\"               (string) bitcoin address\\n\"\n+            \"             ,...\\n\"\n+            \"           ]\\n\"\n+            \"         }\\n\"\n+            \"       }\\n\"\n+            \"       ,...\\n\"\n+            \"    ],\\n\"\n+            \"    \\\"blockhash\\\" : \\\"hash\\\",         (string) the block hash\\n\"\n+            \"  }\\n\"\n+            \" ]\\n\"\n+            );\n+\n+\n+    CScript scriptPubKey;\n+    const CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if(IsValidDestination(dest)) {\n+        scriptPubKey = GetScriptForDestination(dest);\n+    } else if(IsHex(request.params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n+        scriptPubKey = CScript(data.begin(), data.end());\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n+    bool verbose = false;\n+    if (!request.params[1].isNull()) {\n+        verbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    int skip = 0;\n+    int count = 100;\n+    if (request.params.size() > 2) {\n+        if (!request.params[2].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 3 must be an integer\");\n+        }\n+        skip = request.params[2].get_int();\n+    }\n+    if (request.params.size() > 3) {\n+        if (!request.params[3].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 4 must be an integer\");\n+        }\n+        count = request.params[3].get_int();\n+    }\n+\n+    if (!g_addrindex) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"This RPC requires -addrindex to be enabled.\");\n+    }\n+\n+    bool addrindex_ready = g_addrindex->BlockUntilSyncedToCurrentChain();\n+\n+    UniValue ret(UniValue::VARR);\n+    std::vector<std::pair<uint256, CTransactionRef>> result;\n+    if (!g_addrindex->FindTxsByScript(scriptPubKey, result)) {\n+        if (!addrindex_ready) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY,\"Transactions with given address not found. Blockchain transactions are still in the process of being indexed\");\n+        }\n+        return ret;\n+    }\n+\n+    std::vector<std::pair<uint256, CTransactionRef>>::const_iterator it = result.begin();\n+    while (it != result.end() && skip--) it++; // Skip first set of results as needed.",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `++it`",
      "created_at": "2018-09-05T07:32:35Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215162430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162543",
      "pull_request_review_id": 152366243,
      "id": 215162543,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE2MjU0Mw==",
      "diff_hunk": "@@ -203,6 +204,129 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+            \"searchrawtransactions <address> [verbose=true] [skip=0] [count=100]\\n\"\n+            \"\\nReturns raw transactions that contain the given address and the hash of the block(s) they were found in.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"    (string, required) The address to search for\\n\"\n+            \"2. \\\"verbose\\\"    (bool, optional, default = false) If set to false, only returns data for hex-encoded `txid`s. \\n\"\n+            \"3. \\\"skip\\\"       (numeric, optional, default = 0) If set, the result skips this number of initial values. \\n\"\n+            \"3. \\\"count\\\"      (numeric, optional, default = 100) If set, the result will only contain this amount of values. \\n\"\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"\n+            \"   {\\n\"\n+            \"      \\\"hex\\\" : \\\"data\\\",             (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      \\\"txid\\\" : \\\"id\\\",              (string) The transaction id (same as provided)\\n\"\n+            \"      \\\"hash\\\" : \\\"id\\\",              (string) The transaction hash (differs from txid for witness transactions)\\n\"\n+            \"      \\\"size\\\" : n,                   (numeric) The serialized transaction size\\n\"\n+            \"      \\\"vsize\\\" : n,                  (numeric) The virtual transaction size (differs from size for witness transactions)\\n\"\n+            \"      \\\"weight\\\" : n,                 (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\\n\"\n+            \"      \\\"version\\\" : n,                (numeric) The version\\n\"\n+            \"      \\\"locktime\\\" : ttt,             (numeric) The lock time\\n\"\n+            \"      \\\"vin\\\" : [                     (array of json objects)\\n\"\n+            \"        {\\n\"\n+            \"          \\\"txid\\\": \\\"id\\\",           (string) The transaction id\\n\"\n+            \"          \\\"vout\\\": n,                (numeric) \\n\"\n+            \"          \\\"scriptSig\\\": {            (json object) The script\\n\"\n+            \"            \\\"asm\\\": \\\"asm\\\",         (string) asm\\n\"\n+            \"            \\\"hex\\\": \\\"hex\\\"          (string) hex\\n\"\n+            \"        },\\n\"\n+            \"      \\\"sequence\\\": n                 (numeric) The script sequence number\\n\"\n+            \"      \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"    }\\n\"\n+            \"    ,...\\n\"\n+            \"    \\\"vout\\\" : [                       (array of json objects)\\n\"\n+            \"       {\\n\"\n+            \"         \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n+            \"         \\\"n\\\" : n,                    (numeric) index\\n\"\n+            \"         \\\"scriptPubKey\\\" : {          (json object)\\n\"\n+            \"           \\\"asm\\\" : \\\"asm\\\",          (string) the asm\\n\"\n+            \"           \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n+            \"           \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n+            \"           \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n+            \"           \\\"addresses\\\" : [           (json array of string)\\n\"\n+            \"             \\\"address\\\"               (string) bitcoin address\\n\"\n+            \"             ,...\\n\"\n+            \"           ]\\n\"\n+            \"         }\\n\"\n+            \"       }\\n\"\n+            \"       ,...\\n\"\n+            \"    ],\\n\"\n+            \"    \\\"blockhash\\\" : \\\"hash\\\",         (string) the block hash\\n\"\n+            \"  }\\n\"\n+            \" ]\\n\"\n+            );\n+\n+\n+    CScript scriptPubKey;\n+    const CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if(IsValidDestination(dest)) {\n+        scriptPubKey = GetScriptForDestination(dest);\n+    } else if(IsHex(request.params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n+        scriptPubKey = CScript(data.begin(), data.end());\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n+    bool verbose = false;\n+    if (!request.params[1].isNull()) {\n+        verbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    int skip = 0;\n+    int count = 100;\n+    if (request.params.size() > 2) {\n+        if (!request.params[2].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 3 must be an integer\");\n+        }\n+        skip = request.params[2].get_int();\n+    }\n+    if (request.params.size() > 3) {\n+        if (!request.params[3].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 4 must be an integer\");\n+        }\n+        count = request.params[3].get_int();\n+    }\n+\n+    if (!g_addrindex) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"This RPC requires -addrindex to be enabled.\");\n+    }\n+\n+    bool addrindex_ready = g_addrindex->BlockUntilSyncedToCurrentChain();\n+\n+    UniValue ret(UniValue::VARR);\n+    std::vector<std::pair<uint256, CTransactionRef>> result;\n+    if (!g_addrindex->FindTxsByScript(scriptPubKey, result)) {\n+        if (!addrindex_ready) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY,\"Transactions with given address not found. Blockchain transactions are still in the process of being indexed\");\n+        }\n+        return ret;\n+    }\n+\n+    std::vector<std::pair<uint256, CTransactionRef>>::const_iterator it = result.begin();\n+    while (it != result.end() && skip--) it++; // Skip first set of results as needed.\n+    while (it != result.end() && count--) {\n+        const auto& tuple = *it;\n+        UniValue tx_val(UniValue::VOBJ);\n+        if (verbose) {\n+            TxToJSON(*(tuple.second), tuple.first, tx_val);\n+        } else {\n+            std::string hex_tx = EncodeHexTx(*(tuple.second), RPCSerializationFlags());\n+            tx_val.pushKV(\"hex\", hex_tx);\n+            tx_val.pushKV(\"blockhash\", tuple.first.GetHex());\n+        }\n+        ret.push_back(tx_val);\n+        it++;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `++it`",
      "created_at": "2018-09-05T07:32:59Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215162543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215162543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215762841",
      "pull_request_review_id": 153102413,
      "id": 215762841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2Mjg0MQ==",
      "diff_hunk": "@@ -173,6 +175,76 @@ TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>&\n     return result;\n }\n \n+// Based off of BuildChain in validation_block_tests.cpp\n+\n+// Build a chain of blocks that contains all of the transactions in txns.\n+void TestChain100Setup::BuildChain(const uint256 prev_hash, const uint32_t prev_time, int height, std::vector<CMutableTransaction> &txns, const CScript& scriptPubKey, std::vector<std::shared_ptr<const CBlock>>& blocks) {\n+    if (height <= 0) return;\n+\n+    const CChainParams& chainparams = Params();\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    CBlock& block = pblocktemplate->block;\n+\n+    // Replace mempool-selected txns with just coinbase plus some of the passed-in txns:\n+    block.vtx.resize(1);\n+\n+    // If this is the last block, add all remaining transactions.\n+    // Otherwise add with some randomness.\n+    for (auto it = txns.begin(); it != txns.end();) {\n+        bool add_tx = (height == 1) || (GetRandInt(height) < txns.size());",
      "path": "src/test/test_bitcoin.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\ntest/test_bitcoin.cpp:194:60: warning: comparison of integers of different signs: 'int' and 'std::vector::size_type' (aka 'unsigned long') [-Wsign-compare]\r\n        bool add_tx = (height == 1) || (GetRandInt(height) < txns.size());\r\n                                        ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~\r\n```",
      "created_at": "2018-09-06T20:16:34Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215762841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215762841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763081",
      "pull_request_review_id": 153102721,
      "id": 215763081,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2MzA4MQ==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nindex/addrindex.cpp:110:25: warning: loop variable 'tx_out' of type 'const CTxOut' creates a copy from type 'const CTxOut' [-Wrange-loop-analysis]\r\n        for (const auto tx_out : tx->vout){\r\n                        ^\r\nindex/addrindex.cpp:110:14: note: use reference type 'const CTxOut &' to prevent copying\r\n        for (const auto tx_out : tx->vout){\r\n             ^~~~~~~~~~~~~~~~~~~\r\n```",
      "created_at": "2018-09-06T20:17:28Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215763081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763177",
      "pull_request_review_id": 153102835,
      "id": 215763177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2MzE3Nw==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here - see above.",
      "created_at": "2018-09-06T20:17:47Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215763177",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763264",
      "pull_request_review_id": 153102932,
      "id": 215763264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2MzI2NA==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;\n+                }\n+\n+                CScript script_pub_key = tx->vout[tx_in.prevout.n].scriptPubKey;\n+                positions.emplace_back(GetAddrID(script_pub_key), pos);\n+            }\n+        }\n+\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(positions, block.GetHash());\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>>& positions, const uint256 block_hash)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& pos : positions) {\n+        // Insert (address, position) pair with a part of the block hash.\n+        // Different transactions for the same address will be differentiated\n+        // in leveldb by their CDiskTxPos suffix.\n+        batch.Write(std::make_pair(std::make_pair(DB_ADDRINDEX, pos.first), pos.second), block_hash.GetUint64(0));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+void AddrIndex::BlockDisconnected(const std::shared_ptr<const CBlock> &block) {\n+    const uint64_t block_hash_bits = block->GetHash().GetUint64(0);\n+    std::unordered_set<uint64_t> addr_ids_to_remove;\n+\n+    {\n+        LOCK(cs_main);\n+        CCoinsViewCache view(pcoinsTip.get());\n+\n+        // Collect all addr_ids from txs in this block.\n+        for (const auto& tx : block->vtx) {\n+            for (const auto tx_out : tx->vout){",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here - see above.",
      "created_at": "2018-09-06T20:18:04Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215763264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763353",
      "pull_request_review_id": 153103042,
      "id": 215763353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2MzM1Mw==",
      "diff_hunk": "@@ -0,0 +1,225 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+constexpr char DB_ADDRINDEX = 'a';\n+std::unique_ptr<AddrIndex> g_addrindex;\n+\n+/**\n+ * Access to the addrindex database (indexes/addrindex/)\n+ *\n+ * The database stores a block locator of the chain the database is synced to\n+ * so that the AddrIndex can efficiently determine the point it last stopped at.\n+ * A locator is used instead of a simple hash of the chain tip because blocks\n+ * and block index entries may not be flushed to disk until after this database\n+ * is updated.\n+ */\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Find all entries in the index for addr_id.\n+    // If filter_by_value is true, only returns keys with values equal to value_wanted.\n+    bool ReadAddrIndex(const uint64_t addr_id,\n+                       std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                       const bool filter_by_value = false,\n+                       const uint64_t value_wanted = 0);\n+\n+    bool WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>> &positions, const uint256 block_hash);\n+\n+    void RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove);\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addrindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+bool AddrIndex::DB::ReadAddrIndex(const uint64_t addr_id,\n+                                  std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_found,\n+                                  const bool filter_by_value,\n+                                  const uint64_t value_wanted){\n+    bool found_tx = false; // return true only if at least one transaction was found\n+    const std::pair<char, uint64_t> key_prefix = std::make_pair(DB_ADDRINDEX, addr_id);\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+\n+    iter->Seek(key_prefix);\n+    while (iter->Valid()) {\n+        std::pair<std::pair<char, uint64_t>, CDiskTxPos> key;\n+        uint64_t value;\n+        if (!iter->GetKey(key) || !iter->GetValue(value) || key.first != key_prefix) break;\n+\n+        if  (!filter_by_value || (filter_by_value && value == value_wanted)) {\n+            found_tx = true;\n+            keys_found.emplace_back(key);\n+        }\n+\n+        iter->Next();\n+    }\n+\n+    return found_tx;\n+}\n+\n+void AddrIndex::DB::RemoveKeys(const std::vector<std::pair<std::pair<char, uint64_t>, CDiskTxPos>> &keys_to_remove) {\n+    CDBBatch batch(*this);\n+    for (const auto& key : keys_to_remove) {\n+        batch.Erase(key);\n+    }\n+    WriteBatch(batch);\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)){}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+uint64_t AddrIndex::GetAddrID(const CScript& script) {\n+    uint256 hashed_script;\n+\n+    CSHA256 hasher;\n+    hasher.Write((unsigned char*)&(*script.begin()), script.end() - script.begin());\n+    hasher.Finalize(hashed_script.begin());\n+\n+    return hashed_script.GetUint64(0);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint64_t, CDiskTxPos>> positions;\n+    positions.reserve(2 * block.vtx.size());  // Most transactions have at least 1 input and 1 output.\n+\n+    // Index addresses of spent outputs if txindex is enabled,\n+    for (const auto& tx : block.vtx) {\n+        for (const auto tx_out : tx->vout){\n+            positions.emplace_back(GetAddrID(tx_out.scriptPubKey), pos);\n+        }\n+\n+        if (g_txindex && !tx->IsCoinBase()) {\n+            for (const auto tx_in : tx->vin) {\n+                CTransactionRef tx;\n+                uint256 block_hash;\n+\n+                if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) {\n+                    // Both addrindex and txindex may be syncing in parallel, and addrindex might\n+                    // be ahead of txindex. We let txindex sync first so that addrindex can continue\n+                    // after it.\n+                    while (!g_txindex->IsInSyncWithMainChain()) {\n+                        MilliSleep(1000); //TODO: find a less arbitrary sleep time.\n+                    }\n+\n+                    // It's also possible we can't find the tx in txindex because it fell behind in\n+                    // the ValidationInterface queue. In this case we also let it finish before continuing.\n+                    g_txindex->BlockUntilSyncedToCurrentChain();\n+\n+                    // If we still can't find the tx then a re-org may have happened.\n+                    if (!g_txindex->FindTx(tx_in.prevout.hash, block_hash, tx)) return false;\n+                }\n+\n+                CScript script_pub_key = tx->vout[tx_in.prevout.n].scriptPubKey;\n+                positions.emplace_back(GetAddrID(script_pub_key), pos);\n+            }\n+        }\n+\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(positions, block.GetHash());\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<uint64_t, CDiskTxPos>>& positions, const uint256 block_hash)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& pos : positions) {\n+        // Insert (address, position) pair with a part of the block hash.\n+        // Different transactions for the same address will be differentiated\n+        // in leveldb by their CDiskTxPos suffix.\n+        batch.Write(std::make_pair(std::make_pair(DB_ADDRINDEX, pos.first), pos.second), block_hash.GetUint64(0));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+void AddrIndex::BlockDisconnected(const std::shared_ptr<const CBlock> &block) {\n+    const uint64_t block_hash_bits = block->GetHash().GetUint64(0);\n+    std::unordered_set<uint64_t> addr_ids_to_remove;\n+\n+    {\n+        LOCK(cs_main);\n+        CCoinsViewCache view(pcoinsTip.get());\n+\n+        // Collect all addr_ids from txs in this block.\n+        for (const auto& tx : block->vtx) {\n+            for (const auto tx_out : tx->vout){\n+                addr_ids_to_remove.emplace(GetAddrID(tx_out.scriptPubKey));\n+            }\n+\n+            if (!tx->IsCoinBase()) {\n+                for (const auto tx_in : tx->vin){",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 173,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here - see above.",
      "created_at": "2018-09-06T20:18:20Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215763353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763499",
      "pull_request_review_id": 153103233,
      "id": 215763499,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2MzQ5OQ==",
      "diff_hunk": "@@ -0,0 +1,418 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <script/standard.h>\n+#include <test/test_bitcoin.h>\n+#include <util.h>\n+#include <utiltime.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(addrindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(addrindex_initial_sync, TestChain100Setup)\n+{\n+    AddrIndex addr_index(1 << 20, true);\n+\n+    CTransactionRef tx_disk;\n+    uint256 block_hash;\n+\n+    // Transactions should not be found in the index before it is started.\n+    for (const auto& txn : m_coinbase_txns) {\n+        for (const auto& out : txn->vout) {\n+            std::vector<std::pair<uint256, CTransactionRef>> txs;\n+            BOOST_CHECK(!addr_index.FindTxsByScript(out.scriptPubKey, txs));\n+        }\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before addrindex is started.\n+    BOOST_CHECK(!addr_index.BlockUntilSyncedToCurrentChain());\n+    addr_index.Start();\n+\n+    // Allow addrindex to catch up with the block index.\n+    constexpr int64_t timeout_ms = 10 * 1000;\n+    int64_t time_start = GetTimeMillis();\n+    while (!addr_index.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n+        MilliSleep(100);\n+    }\n+\n+    // Check that addrindex has all addresses sent to that were in the chain before it started.\n+    for (const auto& txn : m_coinbase_txns) {\n+        uint256 tx_hash = txn->GetHash();\n+        for (const auto& out : txn->vout) {\n+            std::vector<std::pair<uint256, CTransactionRef>> txs;\n+            if (!addr_index.FindTxsByScript(out.scriptPubKey, txs)) {\n+                    BOOST_ERROR(\"FindTxsByScript failed\");\n+            }\n+\n+            // Confirm that the transaction's destination is in the index.\n+            bool found_tx = false;\n+            for (const auto& tuple : txs) {\n+                if (tuple.second->GetHash() == tx_hash) {\n+                    found_tx = true;\n+                    break;\n+                }\n+            }\n+\n+            if (!found_tx) {\n+                BOOST_ERROR(\"Transaction not found by destination\");\n+            }\n+        }\n+    }\n+\n+    // Check that new transactions in new blocks make it into the index.\n+    CScript coinbase_script_pub_key = GetScriptForDestination(coinbaseKey.GetPubKey().GetID());\n+    for (int i = 0; i < 10; i++) {\n+        std::vector<CMutableTransaction> no_txns;\n+        const CBlock& block = CreateAndProcessBlock(no_txns, coinbase_script_pub_key);\n+        const CTransaction& txn = *block.vtx[0];\n+\n+        BOOST_CHECK(addr_index.BlockUntilSyncedToCurrentChain());\n+\n+        uint256 tx_hash = txn.GetHash();\n+        std::vector<std::pair<uint256, CTransactionRef>> txs;\n+        if (!addr_index.FindTxsByScript(coinbase_script_pub_key, txs)) {\n+            BOOST_ERROR(\"FindTransactionsByDestionation failed\");\n+        }\n+\n+        // Every coinbase tx sends to the same address so we should expect the number of txs\n+        // for this address to increase with each tx we add.\n+        BOOST_CHECK_EQUAL(txs.size(), i + 1);\n+\n+        // Confirm that the transaction's destination is in the index.\n+        bool found_tx = false;\n+        for (const auto& tuple : txs) {\n+            if (tuple.second->GetHash() == tx_hash) {\n+                found_tx = true;\n+                break;\n+            }\n+        }\n+\n+        if (!found_tx) {\n+            BOOST_ERROR(\"Transaction not found by destination\");\n+        }\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(addrindex_many_spends, TestChain100Setup)\n+{\n+    AddrIndex addr_index(1 << 20, true);\n+    addr_index.Start();\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+    CScript coinbase_script_pub_key = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < 20; i++) {\n+        std::vector<CMutableTransaction> no_txns;\n+        const CBlock& block = CreateAndProcessBlock(no_txns, coinbase_script_pub_key);",
      "path": "src/test/addrindex_tests.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\ntest/addrindex_tests.cpp:112:23: warning: unused variable 'block' [-Wunused-variable]\r\n        const CBlock& block = CreateAndProcessBlock(no_txns, coinbase_script_pub_key);\r\n                      ^\r\n```",
      "created_at": "2018-09-06T20:18:50Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r215763499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215763499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216033759",
      "pull_request_review_id": 153436851,
      "id": 216033759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjAzMzc1OQ==",
      "diff_hunk": "@@ -1611,6 +1625,13 @@ bool AppInitMain()\n         g_txindex->Start();\n     }\n \n+    if (gArgs.GetBoolArg(\"-addrindex\", DEFAULT_ADDRINDEX)) {\n+        if (!g_txindex)\n+            InitWarning(_(\"-txindex must be enabled for -addrindex to index spends from addresses.\"));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": 214013007,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggest dropping \"to index spends from addresses\"; if someone configures `addrindex=` I assume they know why. Also prevents a long debate :-)",
      "created_at": "2018-09-07T17:35:14Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r216033759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216033759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216034219",
      "pull_request_review_id": 153436851,
      "id": 216034219,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjAzNDIxOQ==",
      "diff_hunk": "@@ -173,6 +175,76 @@ TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>&\n     return result;\n }\n \n+// Based off of BuildChain in validation_block_tests.cpp\n+\n+// Build a chain of blocks that contains all of the transactions in txns.\n+void TestChain100Setup::BuildChain(const uint256 prev_hash, const uint32_t prev_time, int height, std::vector<CMutableTransaction> &txns, const CScript& scriptPubKey, std::vector<std::shared_ptr<const CBlock>>& blocks) {\n+    if (height <= 0) return;\n+\n+    const CChainParams& chainparams = Params();\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    CBlock& block = pblocktemplate->block;\n+\n+    // Replace mempool-selected txns with just coinbase plus some of the passed-in txns:\n+    block.vtx.resize(1);\n+\n+    // If this is the last block, add all remaining transactions.\n+    // Otherwise add with some randomness.\n+    for (auto it = txns.begin(); it != txns.end();) {\n+        bool add_tx = (height == 1) || (GetRandInt(height) < txns.size());",
      "path": "src/test/test_bitcoin.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": 215762841,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MarcoFalke why is it again that Travis doesn't fail on warnings?",
      "created_at": "2018-09-07T17:37:02Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r216034219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216034219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216037366",
      "pull_request_review_id": 153436851,
      "id": 216037366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjAzNzM2Ng==",
      "diff_hunk": "@@ -203,6 +204,129 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+            \"searchrawtransactions <address> [verbose=true] [skip=0] [count=100]\\n\"\n+            \"\\nReturns raw transactions that contain the given address and the hash of the block(s) they were found in.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"    (string, required) The address to search for\\n\"\n+            \"2. \\\"verbose\\\"    (bool, optional, default = false) If set to false, only returns data for hex-encoded `txid`s. \\n\"\n+            \"3. \\\"skip\\\"       (numeric, optional, default = 0) If set, the result skips this number of initial values. \\n\"\n+            \"3. \\\"count\\\"      (numeric, optional, default = 100) If set, the result will only contain this amount of values. \\n\"\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"\n+            \"   {\\n\"\n+            \"      \\\"hex\\\" : \\\"data\\\",             (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      \\\"txid\\\" : \\\"id\\\",              (string) The transaction id (same as provided)\\n\"\n+            \"      \\\"hash\\\" : \\\"id\\\",              (string) The transaction hash (differs from txid for witness transactions)\\n\"\n+            \"      \\\"size\\\" : n,                   (numeric) The serialized transaction size\\n\"\n+            \"      \\\"vsize\\\" : n,                  (numeric) The virtual transaction size (differs from size for witness transactions)\\n\"\n+            \"      \\\"weight\\\" : n,                 (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\\n\"\n+            \"      \\\"version\\\" : n,                (numeric) The version\\n\"\n+            \"      \\\"locktime\\\" : ttt,             (numeric) The lock time\\n\"\n+            \"      \\\"vin\\\" : [                     (array of json objects)\\n\"\n+            \"        {\\n\"\n+            \"          \\\"txid\\\": \\\"id\\\",           (string) The transaction id\\n\"\n+            \"          \\\"vout\\\": n,                (numeric) \\n\"\n+            \"          \\\"scriptSig\\\": {            (json object) The script\\n\"\n+            \"            \\\"asm\\\": \\\"asm\\\",         (string) asm\\n\"\n+            \"            \\\"hex\\\": \\\"hex\\\"          (string) hex\\n\"\n+            \"        },\\n\"\n+            \"      \\\"sequence\\\": n                 (numeric) The script sequence number\\n\"\n+            \"      \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"    }\\n\"\n+            \"    ,...\\n\"\n+            \"    \\\"vout\\\" : [                       (array of json objects)\\n\"\n+            \"       {\\n\"\n+            \"         \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n+            \"         \\\"n\\\" : n,                    (numeric) index\\n\"\n+            \"         \\\"scriptPubKey\\\" : {          (json object)\\n\"\n+            \"           \\\"asm\\\" : \\\"asm\\\",          (string) the asm\\n\"\n+            \"           \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n+            \"           \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n+            \"           \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n+            \"           \\\"addresses\\\" : [           (json array of string)\\n\"\n+            \"             \\\"address\\\"               (string) bitcoin address\\n\"\n+            \"             ,...\\n\"\n+            \"           ]\\n\"\n+            \"         }\\n\"\n+            \"       }\\n\"\n+            \"       ,...\\n\"\n+            \"    ],\\n\"\n+            \"    \\\"blockhash\\\" : \\\"hash\\\",         (string) the block hash\\n\"\n+            \"  }\\n\"\n+            \" ]\\n\"\n+            );\n+\n+\n+    CScript scriptPubKey;\n+    const CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if(IsValidDestination(dest)) {\n+        scriptPubKey = GetScriptForDestination(dest);\n+    } else if(IsHex(request.params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n+        scriptPubKey = CScript(data.begin(), data.end());\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n+    bool verbose = false;\n+    if (!request.params[1].isNull()) {\n+        verbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    int skip = 0;\n+    int count = 100;\n+    if (request.params.size() > 2) {\n+        if (!request.params[2].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 3 must be an integer\");\n+        }\n+        skip = request.params[2].get_int();\n+    }\n+    if (request.params.size() > 3) {\n+        if (!request.params[3].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 4 must be an integer\");\n+        }\n+        count = request.params[3].get_int();\n+    }\n+\n+    if (!g_addrindex) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"This RPC requires -addrindex to be enabled.\");\n+    }\n+\n+    bool addrindex_ready = g_addrindex->BlockUntilSyncedToCurrentChain();\n+\n+    UniValue ret(UniValue::VARR);\n+    std::vector<std::pair<uint256, CTransactionRef>> result;\n+    if (!g_addrindex->FindTxsByScript(scriptPubKey, result)) {\n+        if (!addrindex_ready) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY,\"Transactions with given address not found. Blockchain transactions are still in the process of being indexed\");",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 100,
      "original_position": 111,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `Blockchain transactions are still in the process of being indexed` warning should always be shown, because there might be missing transactions while indexing is in progress (`txindex` doesn't have that problem).",
      "created_at": "2018-09-07T17:47:50Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r216037366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216037366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": 313,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691273",
      "pull_request_review_id": 157931838,
      "id": 219691273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTI3Mw==",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_ADDRINDEX_H\n+#define BITCOIN_INDEX_ADDRINDEX_H\n+\n+#include <chain.h>\n+#include <index/base.h>\n+#include <vector>\n+#include <txdb.h>\n+#include <uint256.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <script/script.h>\n+\n+/**\n+ * AddrIndex is used to look up transactions included in the blockchain by script.\n+ * The index is written to a LevelDB database and records the filesystem\n+ * location of transactions by script.\n+ */\n+class AddrIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+protected:\n+    bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block) override;\n+\n+    const char* GetName() const override { return \"addrindex\"; }\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.\n+    explicit AddrIndex(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Destructor is declared because this class contains a unique_ptr to an incomplete type.\n+    virtual ~AddrIndex() override;",
      "path": "src/index/addrindex.h",
      "position": null,
      "original_position": 44,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "4865275573a56abb9e079d8a4ff5957c3694c583",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 21:20:09 cpplint(pr=14053): src/index/addrindex.h:44:  \"virtual\" is redundant since function is already declared as \"override\"  [readability/inheritance] [4]\r\n```",
      "created_at": "2018-09-23T07:59:48Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r219691273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250509440",
      "pull_request_review_id": 195908542,
      "id": 250509440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDUwOTQ0MA==",
      "diff_hunk": "@@ -0,0 +1,154 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <script/standard.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(addrindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(addrindex_initial_sync_and_spends, TestChain100Setup)\n+{\n+    AddrIndex addr_index(1 << 20, true);\n+    CScript coinbase_script_pub_key = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+\n+    // Transactions should not be found in the index before it is started.\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations;\n+    BOOST_CHECK(!addr_index.FindTxsByScript(coinbase_script_pub_key, spends, creations));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before addrindex is started.\n+    BOOST_CHECK(!addr_index.BlockUntilSyncedToCurrentChain());\n+    addr_index.Start();\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+    for (int i = 0; i < 20; i++) {\n+        std::vector<CMutableTransaction> no_txns;\n+        CreateAndProcessBlock(no_txns, coinbase_script_pub_key);\n+    }\n+\n+    // Allow addrindex to catch up with the block index.\n+    constexpr int64_t timeout_ms = 10 * 1000;\n+    int64_t time_start = GetTimeMillis();\n+    while (!addr_index.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n+        MilliSleep(100);\n+    }\n+\n+    // Check that addrindex has all coinbase outputs indexed.\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends2;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations2;\n+    if (!addr_index.FindTxsByScript(coinbase_script_pub_key, spends2, creations2)) {\n+            BOOST_ERROR(\"FindTxsByScript failed\");\n+    }\n+    // The coinbase transactions have the same scriptPubKey in their output.\n+    BOOST_CHECK_EQUAL(spends2.size(), 0);\n+    BOOST_CHECK_EQUAL(creations2.size(), 120);\n+\n+    // Create several new key pairs to test sending to many different addresses in the same block.\n+    std::vector<CKey> priv_keys(10);\n+    std::vector<CScript> script_pub_keys(10);\n+    for (int i = 0; i < 10; i++) {\n+        priv_keys[i].MakeNewKey(true);\n+        script_pub_keys[i] = CScript() <<  ToByteVector(priv_keys[i].GetPubKey()) << OP_CHECKSIG;\n+    }\n+\n+    // Create a transaction sending to each of the new addresses.\n+    std::vector<CMutableTransaction> spend_txns(10);\n+    CreateSpendingTxs(0, script_pub_keys, spend_txns, coinbase_script_pub_key);\n+\n+    const CBlock& block = CreateAndProcessBlock(spend_txns, coinbase_script_pub_key);\n+    const uint256 block_hash = block.GetHash();\n+    BOOST_CHECK(addr_index.BlockUntilSyncedToCurrentChain()); // Let the address index catch up.\n+    BOOST_CHECK(chainActive.Tip()->GetBlockHash() == block_hash); // Sanity check to make sure this block is actually being used.\n+\n+    // Now check that all the addresses we sent to are present in the index.\n+    for (int i = 0; i < 10; i++) {\n+        std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends;",
      "path": "src/test/addrindex_tests.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "fc075a0d94bcc5b8453da5da3ac78614c76470df",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`spends` shadows a variable existing in the outer scope.",
      "created_at": "2019-01-24T08:48:21Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r250509440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250509440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250509491",
      "pull_request_review_id": 195908614,
      "id": 250509491,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDUwOTQ5MQ==",
      "diff_hunk": "@@ -0,0 +1,154 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/addrindex.h>\n+#include <index/txindex.h>\n+#include <script/standard.h>\n+#include <test/test_bitcoin.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(addrindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(addrindex_initial_sync_and_spends, TestChain100Setup)\n+{\n+    AddrIndex addr_index(1 << 20, true);\n+    CScript coinbase_script_pub_key = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+\n+    // Transactions should not be found in the index before it is started.\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations;\n+    BOOST_CHECK(!addr_index.FindTxsByScript(coinbase_script_pub_key, spends, creations));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before addrindex is started.\n+    BOOST_CHECK(!addr_index.BlockUntilSyncedToCurrentChain());\n+    addr_index.Start();\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+    for (int i = 0; i < 20; i++) {\n+        std::vector<CMutableTransaction> no_txns;\n+        CreateAndProcessBlock(no_txns, coinbase_script_pub_key);\n+    }\n+\n+    // Allow addrindex to catch up with the block index.\n+    constexpr int64_t timeout_ms = 10 * 1000;\n+    int64_t time_start = GetTimeMillis();\n+    while (!addr_index.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n+        MilliSleep(100);\n+    }\n+\n+    // Check that addrindex has all coinbase outputs indexed.\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends2;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations2;\n+    if (!addr_index.FindTxsByScript(coinbase_script_pub_key, spends2, creations2)) {\n+            BOOST_ERROR(\"FindTxsByScript failed\");\n+    }\n+    // The coinbase transactions have the same scriptPubKey in their output.\n+    BOOST_CHECK_EQUAL(spends2.size(), 0);\n+    BOOST_CHECK_EQUAL(creations2.size(), 120);\n+\n+    // Create several new key pairs to test sending to many different addresses in the same block.\n+    std::vector<CKey> priv_keys(10);\n+    std::vector<CScript> script_pub_keys(10);\n+    for (int i = 0; i < 10; i++) {\n+        priv_keys[i].MakeNewKey(true);\n+        script_pub_keys[i] = CScript() <<  ToByteVector(priv_keys[i].GetPubKey()) << OP_CHECKSIG;\n+    }\n+\n+    // Create a transaction sending to each of the new addresses.\n+    std::vector<CMutableTransaction> spend_txns(10);\n+    CreateSpendingTxs(0, script_pub_keys, spend_txns, coinbase_script_pub_key);\n+\n+    const CBlock& block = CreateAndProcessBlock(spend_txns, coinbase_script_pub_key);\n+    const uint256 block_hash = block.GetHash();\n+    BOOST_CHECK(addr_index.BlockUntilSyncedToCurrentChain()); // Let the address index catch up.\n+    BOOST_CHECK(chainActive.Tip()->GetBlockHash() == block_hash); // Sanity check to make sure this block is actually being used.\n+\n+    // Now check that all the addresses we sent to are present in the index.\n+    for (int i = 0; i < 10; i++) {\n+        std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends;\n+        std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations;",
      "path": "src/test/addrindex_tests.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "fc075a0d94bcc5b8453da5da3ac78614c76470df",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here but for `creations`.",
      "created_at": "2019-01-24T08:48:33Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r250509491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250509491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363953762",
      "pull_request_review_id": 339511029,
      "id": 363953762,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk1Mzc2Mg==",
      "diff_hunk": "@@ -135,6 +135,8 @@ BITCOIN_CORE_H = \\\n   httpserver.h \\\n   index/base.h \\\n   index/blockfilterindex.h \\\n+  index/addrindex.h \\\n+  index/disktxpos.h \\",
      "path": "src/Makefile.am",
      "position": 7,
      "original_position": 5,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this is added in the wrong commit (should be in _Move only: Move CDiskTxPos to own file_, not _Add address index_)",
      "created_at": "2020-01-07T21:14:19Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363953762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363953762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 145,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363956015",
      "pull_request_review_id": 339511029,
      "id": 363956015,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk1NjAxNQ==",
      "diff_hunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_ADDRINDEX_H\n+#define BITCOIN_INDEX_ADDRINDEX_H\n+\n+#include <chain.h>\n+#include <index/base.h>\n+#include <vector>\n+#include <txdb.h>\n+#include <uint256.h>\n+#include <primitives/transaction.h>\n+#include <script/standard.h>\n+#include <script/script.h>\n+#include <undo.h>\n+\n+/**\n+ * AddrIndex is used to look up transactions included in the blockchain by script.\n+ * The index is written to a LevelDB database and records the filesystem\n+ * location of transactions by script.\n+ */\n+class AddrIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    // m_hash_seed is used by GetAddrID in its calls to MurmurHash3.\n+    // It is stored in the index, and restored from their on construction",
      "path": "src/index/addrindex.h",
      "position": null,
      "original_position": 32,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "spelling: there",
      "created_at": "2020-01-07T21:19:58Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363956015",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363956015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363963378",
      "pull_request_review_id": 339511029,
      "id": 363963378,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk2MzM3OA==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if this is actually needed. The other indexes have different prefixes for the different object types that they store, but all objects in this index are given the same prefix, so is it necessary?",
      "created_at": "2020-01-07T21:38:17Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363963378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363963378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363965804",
      "pull_request_review_id": 339511029,
      "id": 363965804,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk2NTgwNA==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this branch need to advance the iterator? If not, I think `value` will be the same the next time round and we'll never break out of this loop.\r\n\r\nI think the following is what we want:\r\n\r\n```\r\n    ...\r\n    if (value.second == script) {\r\n        result.emplace_back(std::make_pair(key, value));\r\n    }\r\n\r\n    iter->Next();\r\n}\r\n```",
      "created_at": "2020-01-07T21:44:27Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363965804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363965804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363967426",
      "pull_request_review_id": 339511029,
      "id": 363967426,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk2NzQyNg==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 178,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit: having a variable defined as `not_thing` seems unintuitive to me. I think it'd be better to define `genesis` and then test on `!genesis`.",
      "created_at": "2020-01-07T21:48:29Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363967426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363967426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363971325",
      "pull_request_review_id": 339511029,
      "id": 363971325,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3MTMyNQ==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);\n+    if (not_genesis_block && !UndoReadFromDisk(block_undo, pindex)) {\n+      return false;\n+    }\n+\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransaction& tx = *(block.vtx[i]);\n+        const uint256 tx_hash = tx.GetHash();\n+        for (size_t j = 0; j < tx.vout.size(); ++j) {\n+            CScript script_pub_key = tx.vout[j].scriptPubKey;\n+            DBKey key(DBKeyType::CREATED, GetAddrId(script_pub_key), COutPoint(tx_hash, j));\n+            entries.emplace_back(key, std::make_pair(pos, script_pub_key));\n+        }\n+\n+        // Skip coinbase inputs.\n+        if (not_genesis_block && i > 0) {\n+            const CTxUndo& tx_undo = block_undo.vtxundo[i-1];\n+            for (size_t k = 0; k < tx.vin.size(); ++k) {\n+                CScript spent_outputs_scriptpubkey = tx_undo.vprevout[k].out.scriptPubKey;\n+                DBKey key(DBKeyType::SPENT, GetAddrId(spent_outputs_scriptpubkey), tx.vin[k].prevout);",
      "path": "src/index/addrindex.cpp",
      "position": 209,
      "original_position": 197,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this isn't the information that we want to save in the address index. For a given scriptPubKey, a user wants to know:\r\n\r\n- which txouts (txid, output index) spent to that scriptPubKey (the CREATED DBKeyType above)\r\n- which txins (txid, input index) consume UTXOs for that scriptPubKey (the SPENT DBKeyType here)\r\n\r\nSo here, I think you want to save the txid and input index spending the coin. You're actually saving the txid and output index that creates the coin, because you're using the prevout.\r\n\r\n(I'm not entirely sure about this. Perhaps you are trying to return the outpoint that created the coin in the spent outputs array, but that's not clear to me from the RPC documentation).",
      "created_at": "2020-01-07T21:57:55Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363971325",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363971325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363973201",
      "pull_request_review_id": 339511029,
      "id": 363973201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3MzIwMQ==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+             RPCHelpMan{ \"searchrawtransactions\\n\",\n+            \"\\nReturns raw transactions that contain outputs with the given script/address, and outpoint information for those outputs.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, /* default_val */ \"\", \"address or scriptPubKey\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, /* default_val */ \"false\", \"If false, return hex-encoded tx, otherwise return a json object\"},\n+                    {\"count\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, /* default_val */ \"\", \"The block in which to look for the transaction\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"The block in which to look for the transaction\" is wrong",
      "created_at": "2020-01-07T22:02:33Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363973201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363973201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363976031",
      "pull_request_review_id": 339511029,
      "id": 363976031,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3NjAzMQ==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+             RPCHelpMan{ \"searchrawtransactions\\n\",\n+            \"\\nReturns raw transactions that contain outputs with the given script/address, and outpoint information for those outputs.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, /* default_val */ \"\", \"address or scriptPubKey\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, /* default_val */ \"false\", \"If false, return hex-encoded tx, otherwise return a json object\"},\n+                    {\"count\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, /* default_val */ \"\", \"The block in which to look for the transaction\"},\n+                },\n+                {\n+                    RPCResult{\"if verbose is not set or set to false\",\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suggest you make this an object with two keys: `creates` and `spends`",
      "created_at": "2020-01-07T22:10:07Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r363976031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363976031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364043704",
      "pull_request_review_id": 339621545,
      "id": 364043704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0MzcwNA==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\r\n```",
      "created_at": "2020-01-08T02:45:03Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364043704",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364043704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364044637",
      "pull_request_review_id": 339622658,
      "id": 364044637,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0NDYzNw==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+             RPCHelpMan{ \"searchrawtransactions\\n\",\n+            \"\\nReturns raw transactions that contain outputs with the given script/address, and outpoint information for those outputs.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, /* default_val */ \"\", \"address or scriptPubKey\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, /* default_val */ \"false\", \"If false, return hex-encoded tx, otherwise return a json object\"},\n+                    {\"count\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, /* default_val */ \"\", \"The block in which to look for the transaction\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The default value is implicitly 100. It should be explicitly defined here.",
      "created_at": "2020-01-08T02:50:16Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364044637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364044637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364047738",
      "pull_request_review_id": 339626587,
      "id": 364047738,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0NzczOA==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);\n+    if (not_genesis_block && !UndoReadFromDisk(block_undo, pindex)) {\n+      return false;\n+    }\n+\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransaction& tx = *(block.vtx[i]);\n+        const uint256 tx_hash = tx.GetHash();\n+        for (size_t j = 0; j < tx.vout.size(); ++j) {\n+            CScript script_pub_key = tx.vout[j].scriptPubKey;\n+            DBKey key(DBKeyType::CREATED, GetAddrId(script_pub_key), COutPoint(tx_hash, j));\n+            entries.emplace_back(key, std::make_pair(pos, script_pub_key));\n+        }\n+\n+        // Skip coinbase inputs.\n+        if (not_genesis_block && i > 0) {\n+            const CTxUndo& tx_undo = block_undo.vtxundo[i-1];\n+            for (size_t k = 0; k < tx.vin.size(); ++k) {\n+                CScript spent_outputs_scriptpubkey = tx_undo.vprevout[k].out.scriptPubKey;\n+                DBKey key(DBKeyType::SPENT, GetAddrId(spent_outputs_scriptpubkey), tx.vin[k].prevout);\n+                entries.emplace_back(key, std::make_pair(pos, spent_outputs_scriptpubkey));\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(tx, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(entries);\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& entry : entries) {\n+        batch.Write(entry.first, entry.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+// FindTxsByScript fills the spends_result vector with outpoints corresponding\n+// to the output spent with the given script, and the transaction it was spent\n+// in. creations_result is filled with outpoints for outputs created with this\n+// script as their script pubkey, and the transactions they were created in.\n+bool AddrIndex::FindTxsByScript(const CScript& script,",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 220,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this method take the count as a parameter and return early when enough entries are found?",
      "created_at": "2020-01-08T03:09:17Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364047738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364047738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364048337",
      "pull_request_review_id": 339627272,
      "id": 364048337,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0ODMzNw==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+             RPCHelpMan{ \"searchrawtransactions\\n\",\n+            \"\\nReturns raw transactions that contain outputs with the given script/address, and outpoint information for those outputs.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, /* default_val */ \"\", \"address or scriptPubKey\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, /* default_val */ \"false\", \"If false, return hex-encoded tx, otherwise return a json object\"},\n+                    {\"count\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, /* default_val */ \"\", \"The block in which to look for the transaction\"},\n+                },\n+                {\n+                    RPCResult{\"if verbose is not set or set to false\",\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"\n+            \" [                                    (array of json objects) outpoint/tx pairs for spent outputs with this scriptPubKey\\n\"\n+            \"   {\\n\"\n+            \"      \\\"spent_outpoint\\\" : \\n\"\n+            \"      {\\n\"\n+            \"        \\\"txid\\\" : \\\"id\\\",            (string) The transaction id\\n\"\n+            \"        \\\"hex\\\" : \\\"data\\\",           (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      }\\n\"\n+            \"      (raw transaction OR hex-encoded transaction) \\n\"\n+            \"   }\\n\"\n+            \" ],\\n\"\n+            \"     \\n\"\n+            \" [                                    (array of json objects) outpoint/tx pairs for outputs created with this scriptPubKey\\n\"\n+            \"   {\\n\"\n+            \"      \\\"created_outpoint\\\" : \\n\"\n+            \"      {\\n\"\n+            \"        \\\"txid\\\" : \\\"id\\\",            (string) The transaction id\\n\"\n+            \"        \\\"hex\\\" : \\\"data\\\",           (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      }\\n\"\n+            \"      (raw transaction OR hex-encoded transaction) \\n\"\n+            \"   }\\n\"\n+            \" ],\\n\"\n+            \" ]\\n\"\n+                },\n+            },\n+            RPCExamples{\n+                    HelpExampleCli(\"searchrawtransactions\", \"\\\"address\\\"\")\n+        + HelpExampleCli(\"searchrawtransactions\", \"\\\"address\\\" true\")\n+            },\n+        }.ToString());\n+\n+    CScript scriptPubKey;\n+    const CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if(IsValidDestination(dest)) {\n+        scriptPubKey = GetScriptForDestination(dest);\n+    } else if(IsHex(request.params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n+        scriptPubKey = CScript(data.begin(), data.end());\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n+    bool verbose = false;\n+    if (!request.params[1].isNull()) {\n+        verbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    int count = 100;\n+    if (request.params.size() > 2) {\n+        if (!request.params[2].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 3 must be an integer\");\n+        }\n+        count = request.params[2].get_int();\n+    }\n+\n+    if (!g_addr_index) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"This RPC requires -addrindex to be enabled.\");\n+    }\n+\n+    bool addrindex_ready = g_addr_index->BlockUntilSyncedToCurrentChain();\n+\n+    UniValue ret(UniValue::VARR);\n+\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends_result;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations_result;\n+    if (!g_addr_index->FindTxsByScript(scriptPubKey, spends_result, creations_result)) {\n+        if (!addrindex_ready) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY,\"Transactions with given address not found. Blockchain transactions are still in the process of being indexed\");\n+        }\n+        return ret;\n+    }\n+\n+    UniValue spends(UniValue::VARR);\n+    UniValue creations(UniValue::VARR);\n+\n+    auto spends_it = spends_result.begin();\n+    while (spends_it != spends_result.end() && count--) {\n+        const auto& spend = *spends_it;\n+        UniValue tx_val(UniValue::VOBJ);\n+\n+        UniValue outpoint_val(UniValue::VOBJ);\n+        outpoint_val.pushKV(\"txid\", spend.first.hash.GetHex());\n+        outpoint_val.pushKV(\"n\", static_cast<int>(spend.first.n));\n+\n+        tx_val.pushKV(\"spent_outpoint\", outpoint_val);\n+        if (verbose) {\n+            TxToJSON(*(spend.second.first), spend.second.second, tx_val);\n+        } else {\n+            std::string hex_tx = EncodeHexTx(*(spend.second.first), RPCSerializationFlags());\n+            tx_val.pushKV(\"hex\", hex_tx);\n+        }\n+        spends.push_back(tx_val);\n+        ++spends_it;\n+    }",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 126,
      "original_position": 121,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If there are more spends than `count` then no creates will be returned. Ideally the spends and creates will be returned in order, rather than all spends first.",
      "created_at": "2020-01-08T03:13:01Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364048337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364048337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 339,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364048499",
      "pull_request_review_id": 339627472,
      "id": 364048499,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0ODQ5OQ==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There doesn't seem to be a way to skip transactions anymore. Was this removed intentionally?",
      "created_at": "2020-01-08T03:14:01Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364048499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364048499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364324758",
      "pull_request_review_id": 339988317,
      "id": 364324758,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyNDc1OA==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "e739288bd5eadfd4f684b869a2e8067a1406052e",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you want to log or throw something here? If I understand the LevelDB docs correctly, you have what LevelDB says is a valid iterator which should be positioned at the key. I think if any of these return false you'd want to know as the DB could be corrupted.",
      "created_at": "2020-01-08T16:31:43Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364324758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364324758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364329232",
      "pull_request_review_id": 339994050,
      "id": 364329232,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTIzMg==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "e739288bd5eadfd4f684b869a2e8067a1406052e",
      "in_reply_to_id": 364324758,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think in general it would be nice if this class did some of the error logging that I see in `blockfilterindex.cpp`.  ",
      "created_at": "2020-01-08T16:40:09Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364329232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364329232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364353217",
      "pull_request_review_id": 340025939,
      "id": 364353217,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM1MzIxNw==",
      "diff_hunk": "@@ -487,6 +486,44 @@ def run_test(self):\n         assert_equal(testres['allowed'], True)\n         self.nodes[2].sendrawtransaction(hexstring=rawTxSigned['hex'], maxfeerate='0.20000000')\n \n+        self._test_searchrawtransactions()\n+\n+    def _test_searchrawtransactions(self):",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 23,
      "original_position": 32,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please also test the spends_results path (returning transactions which spend from this address).",
      "created_at": "2020-01-08T17:31:40Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364353217",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364353217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 494,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364361434",
      "pull_request_review_id": 340036491,
      "id": 364361434,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2MTQzNA==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);\n+    if (not_genesis_block && !UndoReadFromDisk(block_undo, pindex)) {\n+      return false;\n+    }\n+\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransaction& tx = *(block.vtx[i]);\n+        const uint256 tx_hash = tx.GetHash();\n+        for (size_t j = 0; j < tx.vout.size(); ++j) {\n+            CScript script_pub_key = tx.vout[j].scriptPubKey;\n+            DBKey key(DBKeyType::CREATED, GetAddrId(script_pub_key), COutPoint(tx_hash, j));\n+            entries.emplace_back(key, std::make_pair(pos, script_pub_key));\n+        }\n+\n+        // Skip coinbase inputs.\n+        if (not_genesis_block && i > 0) {\n+            const CTxUndo& tx_undo = block_undo.vtxundo[i-1];\n+            for (size_t k = 0; k < tx.vin.size(); ++k) {\n+                CScript spent_outputs_scriptpubkey = tx_undo.vprevout[k].out.scriptPubKey;\n+                DBKey key(DBKeyType::SPENT, GetAddrId(spent_outputs_scriptpubkey), tx.vin[k].prevout);",
      "path": "src/index/addrindex.cpp",
      "position": 209,
      "original_position": 197,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": 363971325,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I *think* this is correct because he is using the prevout in the *key*. When looking up by this script with this outpoint, one would want to find this transaction because it spends this outpoint.\r\n\r\nAFAICT the value just contains the position of the relevant transaction on disk and the scriptPubKey (to detect collisions).  The value does not contain any indexes into inputs or outputs.",
      "created_at": "2020-01-08T17:50:39Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364361434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364361434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364363443",
      "pull_request_review_id": 340039105,
      "id": 364363443,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2MzQ0Mw==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);\n+    if (not_genesis_block && !UndoReadFromDisk(block_undo, pindex)) {\n+      return false;\n+    }\n+\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransaction& tx = *(block.vtx[i]);\n+        const uint256 tx_hash = tx.GetHash();\n+        for (size_t j = 0; j < tx.vout.size(); ++j) {\n+            CScript script_pub_key = tx.vout[j].scriptPubKey;\n+            DBKey key(DBKeyType::CREATED, GetAddrId(script_pub_key), COutPoint(tx_hash, j));\n+            entries.emplace_back(key, std::make_pair(pos, script_pub_key));\n+        }\n+\n+        // Skip coinbase inputs.\n+        if (not_genesis_block && i > 0) {\n+            const CTxUndo& tx_undo = block_undo.vtxundo[i-1];\n+            for (size_t k = 0; k < tx.vin.size(); ++k) {\n+                CScript spent_outputs_scriptpubkey = tx_undo.vprevout[k].out.scriptPubKey;\n+                DBKey key(DBKeyType::SPENT, GetAddrId(spent_outputs_scriptpubkey), tx.vin[k].prevout);",
      "path": "src/index/addrindex.cpp",
      "position": 209,
      "original_position": 197,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": 363971325,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you add a comment with your key/value format somewhere and the justification?",
      "created_at": "2020-01-08T17:55:21Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364363443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364363443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364388433",
      "pull_request_review_id": 340071893,
      "id": 364388433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM4ODQzMw==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n+        throw std::runtime_error(\n+             RPCHelpMan{ \"searchrawtransactions\\n\",\n+            \"\\nReturns raw transactions that contain outputs with the given script/address, and outpoint information for those outputs.\\n\"\n+            \"\\nRequires -addrindex to be enabled.\\n\"\n+            \"\\nArguments:\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, /* default_val */ \"\", \"address or scriptPubKey\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, /* default_val */ \"false\", \"If false, return hex-encoded tx, otherwise return a json object\"},\n+                    {\"count\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, /* default_val */ \"\", \"The block in which to look for the transaction\"},\n+                },\n+                {\n+                    RPCResult{\"if verbose is not set or set to false\",\n+            \"\\nResult:\\n\"\n+            \" [                                    (array of json objects)\\n\"\n+            \" [                                    (array of json objects) outpoint/tx pairs for spent outputs with this scriptPubKey\\n\"\n+            \"   {\\n\"\n+            \"      \\\"spent_outpoint\\\" : \\n\"\n+            \"      {\\n\"\n+            \"        \\\"txid\\\" : \\\"id\\\",            (string) The transaction id\\n\"\n+            \"        \\\"hex\\\" : \\\"data\\\",           (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      }\\n\"\n+            \"      (raw transaction OR hex-encoded transaction) \\n\"\n+            \"   }\\n\"\n+            \" ],\\n\"\n+            \"     \\n\"\n+            \" [                                    (array of json objects) outpoint/tx pairs for outputs created with this scriptPubKey\\n\"\n+            \"   {\\n\"\n+            \"      \\\"created_outpoint\\\" : \\n\"\n+            \"      {\\n\"\n+            \"        \\\"txid\\\" : \\\"id\\\",            (string) The transaction id\\n\"\n+            \"        \\\"hex\\\" : \\\"data\\\",           (string) The serialized, hex-encoded data for 'txid'\\n\"\n+            \"      }\\n\"\n+            \"      (raw transaction OR hex-encoded transaction) \\n\"\n+            \"   }\\n\"\n+            \" ],\\n\"\n+            \" ]\\n\"\n+                },\n+            },\n+            RPCExamples{\n+                    HelpExampleCli(\"searchrawtransactions\", \"\\\"address\\\"\")\n+        + HelpExampleCli(\"searchrawtransactions\", \"\\\"address\\\" true\")\n+            },\n+        }.ToString());\n+\n+    CScript scriptPubKey;\n+    const CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if(IsValidDestination(dest)) {\n+        scriptPubKey = GetScriptForDestination(dest);\n+    } else if(IsHex(request.params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n+        scriptPubKey = CScript(data.begin(), data.end());\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n+    bool verbose = false;\n+    if (!request.params[1].isNull()) {\n+        verbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    int count = 100;\n+    if (request.params.size() > 2) {\n+        if (!request.params[2].isNum()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, argument 3 must be an integer\");\n+        }\n+        count = request.params[2].get_int();\n+    }\n+\n+    if (!g_addr_index) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"This RPC requires -addrindex to be enabled.\");\n+    }\n+\n+    bool addrindex_ready = g_addr_index->BlockUntilSyncedToCurrentChain();\n+\n+    UniValue ret(UniValue::VARR);\n+\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> spends_result;\n+    std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> creations_result;\n+    if (!g_addr_index->FindTxsByScript(scriptPubKey, spends_result, creations_result)) {\n+        if (!addrindex_ready) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY,\"Transactions with given address not found. Blockchain transactions are still in the process of being indexed\");\n+        }\n+        return ret;\n+    }\n+\n+    UniValue spends(UniValue::VARR);\n+    UniValue creations(UniValue::VARR);\n+\n+    auto spends_it = spends_result.begin();\n+    while (spends_it != spends_result.end() && count--) {\n+        const auto& spend = *spends_it;\n+        UniValue tx_val(UniValue::VOBJ);\n+\n+        UniValue outpoint_val(UniValue::VOBJ);\n+        outpoint_val.pushKV(\"txid\", spend.first.hash.GetHex());",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "marcinja",
        "id": 12243734,
        "node_id": "MDQ6VXNlcjEyMjQzNzM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcinja",
        "html_url": "https://github.com/marcinja",
        "followers_url": "https://api.github.com/users/marcinja/followers",
        "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
        "organizations_url": "https://api.github.com/users/marcinja/orgs",
        "repos_url": "https://api.github.com/users/marcinja/repos",
        "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcinja/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        outpoint_val.pushKV(\"txid\", spend.second.first.hash.GetHex());\r\n```\r\nI'll write a functional test that catches this too :)",
      "created_at": "2020-01-08T18:53:46Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364388433",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364388433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364389525",
      "pull_request_review_id": 340073212,
      "id": 364389525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM4OTUyNQ==",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <ui_interface.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+#include <boost/thread.hpp>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+static constexpr char DB_ADDR_INDEX = 'a';\n+\n+// DBKeyType is used by the address index to distinguish between the\n+// different kinds of values stored.\n+enum class DBKeyType : uint8_t {\n+    SEED,    // Seed used for MurmurHash3 inside GetAddrId\n+    SPENT,   // Used for values in the index indicating a spend\n+    CREATED, // Used for values in the index indicating the creation of an input\n+};\n+\n+// AddrId is used to identify each script.\n+using AddrId = unsigned int;\n+\n+namespace {\n+\n+struct DBKeyPrefix {\n+  AddrId m_addr_id;\n+\n+  DBKeyPrefix() {}\n+  explicit DBKeyPrefix(AddrId addr_id) :  m_addr_id(addr_id) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    char prefix = DB_ADDR_INDEX;\n+    READWRITE(prefix);\n+    if (prefix != DB_ADDR_INDEX) {\n+      throw std::ios_base::failure(\"Invalid format for address index DB key\");\n+    }\n+\n+    READWRITE(m_addr_id);\n+  }\n+};\n+\n+struct DBKey : DBKeyPrefix {\n+  DBKeyType m_key_type;\n+  COutPoint m_outpoint;\n+\n+  DBKey() {}\n+  explicit DBKey(DBKeyType key_type, AddrId addr_id, COutPoint outpoint) : DBKeyPrefix(addr_id), m_key_type(key_type), m_outpoint(outpoint) {}\n+\n+  ADD_SERIALIZE_METHODS;\n+\n+  template <typename Stream, typename Operation>\n+  inline void SerializationOp(Stream& s, Operation ser_action) {\n+    READWRITEAS(DBKeyPrefix, *this);\n+\n+    uint8_t key_type = static_cast<uint8_t>(m_key_type);\n+    READWRITE(key_type);\n+    m_key_type = static_cast<DBKeyType>(key_type);\n+\n+    // Check if the key type is a valid key. SEED keys are excluded because they\n+    // are never created with this type.\n+    if ((m_key_type != DBKeyType::SPENT) && (m_key_type != DBKeyType::CREATED)) {\n+      throw std::ios_base::failure(\"Invalid key type for address index DB key\");\n+    }\n+\n+    READWRITE(m_outpoint);\n+  }\n+};\n+\n+}; // namespace\n+\n+// The address index stores information needed to get relevant transactions,\n+// and a copy of the CScript to double check against in case of hash collisions.\n+using DBValue = std::pair<CDiskTxPos, CScript>;\n+\n+/** Access to the addr_index database (indexes/addr_index/)*/\n+class AddrIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    /** ReadAddrIndex returns the set of entries stored in the index for this addr_id. */\n+    std::vector<std::pair<DBKey, DBValue>> ReadAddrIndex(const unsigned int addr_id, const CScript& script);\n+\n+    /** WriteToIndex writes the input vector of database entries into the index.  */\n+    bool WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries);\n+\n+    /** SetupHashSeed is used to create/backup/restore the seed used by the index for hashing. */\n+    unsigned int SetupHashSeed();\n+};\n+\n+AddrIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(GetDataDir() / \"indexes\" / \"addr_index\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+BaseIndex::DB& AddrIndex::GetDB() const { return *m_db; }\n+\n+std::vector<std::pair<DBKey, DBValue>> AddrIndex::DB::ReadAddrIndex(const unsigned int addr_id, const CScript& script)\n+{\n+    std::vector<std::pair<DBKey, DBValue>> result;\n+    DBKeyPrefix search_key(addr_id);\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    iter->Seek(search_key);\n+    while (iter->Valid()) {\n+        DBKey key;\n+        DBValue value;\n+        if (!iter->GetKey(key) || key.m_addr_id != addr_id || !iter->GetValue(value) ) break;\n+\n+        // Check that the stored script matches the one we're searching for, in case of hash collisions.\n+        if (value.second != script) continue;\n+\n+        result.emplace_back(std::make_pair(key, value));\n+        iter->Next();\n+    }\n+\n+    return result;\n+}\n+\n+bool AddrIndex::Init() {\n+        m_hash_seed = m_db->SetupHashSeed();\n+        return BaseIndex::Init();\n+}\n+\n+AddrIndex::AddrIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(MakeUnique<AddrIndex::DB>(n_cache_size, f_memory, f_wipe)) {}\n+\n+unsigned int AddrIndex::DB::SetupHashSeed() {\n+    static const auto seed_key = std::make_pair(DB_ADDR_INDEX, static_cast<uint8_t>(DBKeyType::SEED));\n+    unsigned int seed;\n+\n+    std::unique_ptr<CDBIterator> iter(NewIterator());\n+    std::pair<char, uint8_t> key;\n+\n+    // If key is in the index already, read it and return.\n+    iter->Seek(seed_key);\n+    if (iter->Valid() && iter->GetKey(key) && key == seed_key && iter->GetValue(seed)) {\n+        return seed;\n+    }\n+\n+    // Generate a random key and write it to the index.\n+    seed = GetRandInt(std::numeric_limits<int>::max());\n+    Write(seed_key, seed);\n+    return seed;\n+}\n+\n+AddrIndex::~AddrIndex() {}\n+\n+unsigned int AddrIndex::GetAddrId(const CScript& script) {\n+    std::vector<unsigned char> script_data;\n+    for (auto it = script.begin(); it != script.end(); ++it) {\n+        script_data.push_back(*it);\n+    }\n+    return MurmurHash3(m_hash_seed, script_data);\n+}\n+\n+bool AddrIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n+{\n+    CBlockUndo block_undo;\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<DBKey, DBValue>> entries;\n+\n+    const bool not_genesis_block = (pindex->nHeight > 0);\n+    if (not_genesis_block && !UndoReadFromDisk(block_undo, pindex)) {\n+      return false;\n+    }\n+\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransaction& tx = *(block.vtx[i]);\n+        const uint256 tx_hash = tx.GetHash();\n+        for (size_t j = 0; j < tx.vout.size(); ++j) {\n+            CScript script_pub_key = tx.vout[j].scriptPubKey;\n+            DBKey key(DBKeyType::CREATED, GetAddrId(script_pub_key), COutPoint(tx_hash, j));\n+            entries.emplace_back(key, std::make_pair(pos, script_pub_key));\n+        }\n+\n+        // Skip coinbase inputs.\n+        if (not_genesis_block && i > 0) {\n+            const CTxUndo& tx_undo = block_undo.vtxundo[i-1];\n+            for (size_t k = 0; k < tx.vin.size(); ++k) {\n+                CScript spent_outputs_scriptpubkey = tx_undo.vprevout[k].out.scriptPubKey;\n+                DBKey key(DBKeyType::SPENT, GetAddrId(spent_outputs_scriptpubkey), tx.vin[k].prevout);\n+                entries.emplace_back(key, std::make_pair(pos, spent_outputs_scriptpubkey));\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(tx, CLIENT_VERSION);\n+    }\n+\n+    return m_db->WriteToIndex(entries);\n+}\n+\n+bool AddrIndex::DB::WriteToIndex(const std::vector<std::pair<DBKey, DBValue>> &entries)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& entry : entries) {\n+        batch.Write(entry.first, entry.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+// FindTxsByScript fills the spends_result vector with outpoints corresponding\n+// to the output spent with the given script, and the transaction it was spent\n+// in. creations_result is filled with outpoints for outputs created with this\n+// script as their script pubkey, and the transactions they were created in.\n+bool AddrIndex::FindTxsByScript(const CScript& script,\n+                                std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> &spends_result,\n+                                std::vector<std::pair<COutPoint, std::pair<CTransactionRef, uint256>>> &creations_result)\n+{\n+    auto db_entries = m_db->ReadAddrIndex(GetAddrId(script), script);\n+    if (db_entries.size() == 0) return false;\n+\n+    for (const auto& entry : db_entries) {\n+        DBKey key = entry.first;\n+        CDiskTxPos pos = entry.second.first;\n+\n+        CAutoFile file(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n+        if (file.IsNull()) {\n+            return error(\"%s: OpenBlockFile failed\", __func__);\n+        }\n+        CBlockHeader header;\n+        CTransactionRef tx;\n+        try {\n+            file >> header;\n+            if (fseek(file.Get(), pos.nTxOffset, SEEK_CUR)) {\n+                return error(\"%s: fseek(...) failed\", __func__);\n+            }\n+            file >> tx;\n+        } catch (const std::exception& e) {\n+            return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        }\n+        std::pair<CTransactionRef, uint256> result =  std::make_pair(tx, header.GetHash());\n+\n+        // Place entry into correct vector depending on its type.\n+        switch (key.m_key_type) {\n+            case DBKeyType::SPENT:\n+                spends_result.emplace_back(std::make_pair(key.m_outpoint, result));",
      "path": "src/index/addrindex.cpp",
      "position": 267,
      "original_position": 251,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As pointed out by jnewbery in review club, I think this is wrong. \r\n\r\nThe DB's key always represents the outpoint that *created* the scriptPubKey.  For spends_result, you want the txid of the transaction that *spends* the scriptPubKey.  So instead of the DB key's outpoint as the transaction id to be returned to the user, you want the transaction id of the transaction in the DB value.  Or, in the RPC code lines 314 and 315, use the txid from `spend.second`.\r\n\r\nEdit: Or maybe this field of the returned result is always the created_outpoint, even though it's called the spent_outpoint sometimes?  Would be good to clarify this.",
      "created_at": "2020-01-08T18:56:02Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r364389525",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364389525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 267,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/365356888",
      "pull_request_review_id": 341326570,
      "id": 365356888,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1Njg4OA==",
      "diff_hunk": "@@ -213,6 +214,142 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue searchrawtransactions(const JSONRPCRequest& request) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "c21767116be0d0ebcac5966db240d596be2b5920",
      "in_reply_to_id": 364043704,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should use the new `.Check()` syntax instead",
      "created_at": "2020-01-10T17:56:13Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r365356888",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/365356888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466563287",
      "pull_request_review_id": 462721671,
      "id": 466563287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzI4Nw==",
      "diff_hunk": "@@ -0,0 +1,279 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+/*\n+ * The address index stores two main types of objects that allow for\n+ * script-based/address-based look-ups of all created outputs and all spent\n+ * outputs in the Bitcoin blockchain. These are differentiated by their key_type\n+ * as either DBKeyType::SPENT or DBKekyType::CREATED. The address index also\n+ * stores one unique global value under the DBKeyType::SEED key that seeds the\n+ * MurmurHash3 hasher used to create AddrIds.\n+ *\n+ * The DB keys are structured as follows: <addr_id, key_type, outpoint>\n+ *\n+ * addr_id is the hash of the script_pub_key computed using MurmurHash3, a a\n+ * short non-cryptographic hash function. It also functions as the search key,\n+ * since LevelDB keys are iterated through in lexicograpical order. Collisions\n+ * are resolved by storing the full script_pub_key in the DB value. This can be\n+ * checked against the script used to make a look-up in the index.\n+ *\n+ * key_type is SPENT when the outpoint stored in the key is spent, i.e. it is\n+ * used as a prevout in a transaction input.  It is CREATED when the outpoint is\n+ * created as a new  COutpoint in that transaction.\n+ *\n+ * outpoints are stored in the key as opposed to in the DB value to preserve\n+ * uniqueness and to support multiple values for a a single addr_id and key_type",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "75e044564bc0561c72fe1bcbb6d21dfc3a3314fd",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n * uniqueness and to support multiple values for a single addr_id and key_type\r\n```",
      "created_at": "2020-08-06T17:16:24Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r466563287",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466563287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466563439",
      "pull_request_review_id": 462721671,
      "id": 466563439,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzQzOQ==",
      "diff_hunk": "@@ -0,0 +1,279 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/addrindex.h>\n+#include <index/disktxpos.h>\n+#include <shutdown.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <script/standard.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <vector>\n+#include <uint256.h>\n+\n+std::unique_ptr<AddrIndex> g_addr_index;\n+\n+/*\n+ * The address index stores two main types of objects that allow for\n+ * script-based/address-based look-ups of all created outputs and all spent\n+ * outputs in the Bitcoin blockchain. These are differentiated by their key_type\n+ * as either DBKeyType::SPENT or DBKekyType::CREATED. The address index also\n+ * stores one unique global value under the DBKeyType::SEED key that seeds the\n+ * MurmurHash3 hasher used to create AddrIds.\n+ *\n+ * The DB keys are structured as follows: <addr_id, key_type, outpoint>\n+ *\n+ * addr_id is the hash of the script_pub_key computed using MurmurHash3, a a",
      "path": "src/index/addrindex.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "cd274024b8e47e840a54e21a1c0e27c7024d3d73",
      "original_commit_id": "75e044564bc0561c72fe1bcbb6d21dfc3a3314fd",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n * addr_id is the hash of the script_pub_key computed using MurmurHash3, a\r\n```",
      "created_at": "2020-08-06T17:16:41Z",
      "updated_at": "2020-10-01T01:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14053#discussion_r466563439",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466563439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    }
  ]
}