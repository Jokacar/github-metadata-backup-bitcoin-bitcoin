{
  "type": "issue",
  "issue": {
    "id": 2365705728,
    "node_id": "I_kwDOABII586NAc4A",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30318",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30318/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30318/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30318/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30318",
    "number": 30318,
    "state": "open",
    "state_reason": null,
    "title": "Fuzzing related configuration/build options can be improved",
    "body": "### Please describe the feature you'd like to see added.\n\nThe fuzzing related configuration options are somewhat confusing and redundant and can be simplified.\n\n### Is your feature related to a problem, if so please describe it.\n\nThanks for the [discussion](https://www.erisian.com.au/bitcoin-core-dev/log-2024-06-20.html#l-248) yesterday. Correct me if I am wrong below. There are the following options (to `./configure` and in the coming CMake replacement):\r\n\r\n* `--enable-fuzz`: only disables compiling all other targets (e.g. `src/bitcoind`) and forces `--enable-fuzz-binary=yes` (default no). Other targets should be disabled because the fuzzing framework provides its own `main()` function. Note that this option does not engage the fuzzing framework. That is, it does not enable fuzzing.\r\n* `--enable-fuzz-binary`: whether to compile `src/test/fuzz/fuzz` (default yes)\r\n* `--with-sanitizers=fuzzer`: engage the fuzzing framework, ie enable fuzzing.\r\n\r\nWithout the fuzzing framework (`--with-sanitizers=fuzzer`) `src/test/fuzz/fuzz` cannot do fuzzing but it can run existent inputs from e.g. https://github.com/bitcoin-core/qa-assets/tree/main/fuzz_seed_corpus (phony fuzz binary). So currently all of the below produce such a phony fuzz binary:\r\n* compiling by default without any options\r\n* compiling with `--enable-fuzz`\r\n* compiling with `--enable-fuzz-binary`\n\n### Describe the solution you'd like\n\nIdeally there should be one boolean option which enables/disables fuzzing instead of 3:\r\n\r\n* when enabled: engage the fuzzing harness (compile with `-fsanitize=fuzzer`), force compiling `src/test/fuzz/fuzz` (if it is even possible to disable it via another option), force disable all other targets\r\n* when disabled: don't use `-fsanitize=fuzzer`, leave alone `src/test/fuzz/fuzz` and other build targets to be decided by other options. If `src/test/fuzz/fuzz` is to be build, then create a \"phony fuzz\" binary which cannot do fuzzing but can execute existent fuzz inputs.\n\n### Describe any alternatives you've considered\n\n_No response_\n\n### Please leave any additional context\n\n_No response_",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 1,
    "created_at": "2024-06-21T04:48:05Z",
    "updated_at": "2024-06-21T06:07:43Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 13237394887,
      "node_id": "LE_lADOABII586NAc4AzwAAAAMVAp3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13237394887",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T04:48:05Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "commented",
      "id": 2182067595,
      "node_id": "IC_kwDOABII586CD7WL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2182067595",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T06:07:42Z",
      "updated_at": "2024-06-21T06:07:42Z",
      "author_association": "MEMBER",
      "body": "> when enabled: engage the fuzzing harness (compile with `-fsanitize=fuzzer`), force compiling `src/test/fuzz/fuzz` (if it is even possible to disable it via another option), force disable all other targets\r\n\r\nMore than one sanitizer exists. For example, the CI system uses more than one sanitizer. So afterwards you'd have two redundant and confusing ways to set sanitizers. Not sure that is an improvement.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30318#issuecomment-2182067595",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30318"
    }
  ]
}