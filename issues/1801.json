{
  "type": "issue",
  "issue": {
    "id": 6730648,
    "node_id": "MDU6SXNzdWU2NzMwNjQ4",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1801",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1801/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1801/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1801/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/1801",
    "number": 1801,
    "state": "closed",
    "state_reason": "completed",
    "title": "Potential deadlocks",
    "body": "I performed a bit of hand-rolled static analysis on the Bitcoin source to check for potential deadlocks, by examining partial lock orders (like DEBUG_LOCKORDER but more thorough). I found a few, which I checked manually.\n\nThis list is not comprehensive, as indirect calls (functions pointers, virtual functions, such as in the RPC dispatcher) are currently ignored by my static checker.\n\nThese cases are the exceptions. The cases under \"counterexample\" are the \"normal\" order, or at least the most common one.\n\nCase 4 involves TRY_LOCKs, so it is probably OK.\n\n**1.**\n\n`SendMessages` **LOCK**s cs_inventory lock on a node\n→ `CWallet::GetTransaction` **LOCK**s the cs_wallet lock.\n\n_Counterexample_:\n`CWallet::ResendWalletTransactions` **LOCK**s cs_wallet lock\n→ `CWallet::RelayWalletTransaction`\n→ `RelayMessage`\n→ `RelayInventory`\n→ `CNode::PushInventory` which **LOCK**s the cs_inventory lock\n\n**2.**\n\n`CTxMemPool::accept(CTxDB&, CTransaction&, bool, bool*)` **LOCK**s local static lock for rate-limit\n→ `CWallet::GetDebit(CTransaction const&) const`\n→`CWallet::GetDebit(CTxIn const&) const` **LOCK**s CWallet lock\n\n_Counterexample_:\n`CWallet::CommitTransaction(CWalletTx&, CReserveKey&)` **LOCK**s CWallet lock\n→ `CMerkleTx::AcceptToMemoryPool()`\n→ `CTxMemPool::accept(CTxDB&, CTransaction&, bool, bool*)` **LOCK**s local static lock for rate-limit\n\n**3.**\n\n`CWalletTx::AcceptWalletTransaction(CTxDB&, bool)` **LOCK**s CTxMemPool:cs\n→ `CTxMemPool::accept(CTxDB&, CTransaction&, bool, bool*)`\n→`CWallet::GetDebit(CTransaction const&)`\n→`CWallet::GetDebit(CTxIn const&)` **LOCK**s CWallet:cs_wallet\n\n`CreateNewBlock(CReserveKey&)` **LOCK**s CTxMemPool:cs\n→ `CBlock::ConnectBlock(CTxDB&, CBlockIndex*, bool)` \n→ `CWallet::AddToWalletIfInvolvingMe(CTransaction const&, CBlock const*, bool, bool)` **LOCK**s CWallet:cs_wallet\n\n_Counterexample_:\n`CWallet::CommitTransaction(CWalletTx&, CReserveKey&)` **LOCK**s CWallet:cs_wallet\n→ `CMerkleTx::AcceptToMemoryPool()` \n→ `CTransaction::ClientConnectInputs()` **LOCK**s CTxMemPool:cs\n\n**4.**\n\n`ThreadSocketHandler2(void*)` **LOCK**s cs_vNodes, then **TRYLOCK**s CNode:cs_vSend (when disconnecting nodes)\n\n_Counterexample_:\n`ThreadMessageHandler2(void*)` **TRYLOCK**s CNode:cs_vSend\n→ `SendMessages(CNode*, bool)` **LOCK**s cs_vNodes (for address refresh broadcast)\n",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 1,
    "closed_at": "2014-01-10T15:21:10Z",
    "created_at": "2012-09-08T11:22:29Z",
    "updated_at": "2021-09-08T12:32:34Z"
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-11-10T11:41:35Z",
      "updated_at": "2012-11-10T11:41:35Z",
      "source": {
        "issue": {
          "id": 8248110,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0ODYzNQ==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1995",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1995/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1995/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1995/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/1995",
          "number": 1995,
          "state": "closed",
          "state_reason": null,
          "title": "Large locking change",
          "body": "A while back I started looking at bitcoin, and I was disappointed with the code quality wrt locking.\n\nI tried to fix the code to be clang -Wthread-safety clean, but I don't know the code enough to understand some of the entanglements that are currently present.\n\nI've added lots of annotations that specifies the locking requirements on functions and data.  This might seem a little overzealous, but I believe that this is necessary to \"get back on track\" and make the locking strategy clear and consistent.\n\nEven with this patch there are lots of locking issues left - probably benign like things happening during startup and shutdown.   There are also false positives from me not getting clang to grok TRY_LOCK correctly.\n\nBelow is a long note I wrote while looking through the source code a while back.  Maybe you guys agree or maybe not - at least it explains the whats and the whys.\n\n---\n\nFor an object that is accessed by multiple threads we have, for every field:\n- It is const, constant after initialization, or guarded by a mutex.\n- Re-using an object is a _bad idea_.  It should never be done. If we\n  do, we are mutating the constant-after-initialization fields.  This\n  leads to exessive locking and overcomplicated code.  It is a lot\n  simpler to discard the object and re-create it.  This works, because\n  the object is owned by some other object, and in that other object,\n  it is a \"guarded by mutex\" field.  Thus by re-creating the object,\n  we lift the responsibility for locking into the parent.\n- A result of the above is that \"constructors\" must be separate from\n  other functions in the class.  Constructors that are not strictly\n  C++ constructors, such as deserializing should be static functions\n  if possible.  This makes it impossible for them to to be used to\n  mutate constant-after-initialization fields.\n- Locks should not be exported outside of a class.  Java did this\n  mistake and it is considered an anti-pattern.\n- Locks should never serialize code, they should protect data from\n  being accessed while invariants on that data are broken.\n- Locks should be textually close to the fields.  Given a lock, it\n  should be easy to understand what it guards, and given a field, it\n  should be easy to see which locks guard that field.\n  Thus, locks should be private members of a class.\n  \n  A good way to obfuscate this is to put a lock in a parent class, as\n  done in keystore.h where CKeyStore.  It is hard to know what that\n  lock guards.  It is a lot cleaner to duplicate that lock in the data\n  section of the subclasses.\n- Recursive locks should never be used.  They lead to bugs, and are\n  _only_ necessary in order to write sloppy code.  If some functionality\n  is both a transaction that ensures that the invariants of the data are\n  obeyed, and part of larger transactions, then it is much clearer to\n  separate these conserns into two functions:\n  \n  void DoFoo() {\n     LOCK(cs);\n     DoFooUnlocked();\n  }\n  void DoFooUnlocked() { ... }\n- Using locks to protect simple setters and getters is often buggy\n  and/or complex.  In most cases, mutating some state is part of a\n  larger transaction, so the setter is often protected by some other\n  lock external to the class.  In these cases, re-building a new\n  object is usually the best approach, but otherwise, explicitly\n  marking setters as SetFooUnlocked() and not lock is clearer.  It\n  makes it explicit that you can't just mutate randomly without doing\n  some external locking.\n- Do not hold locks over callbacks out of an object.  This means that\n  objects should _signal_ some state change, and not guarantee which\n  state the object is in when a callback happens.  Sometimes, it makes\n  sense to break this, but then the callback will have to be treated\n  like a signal handler, or irq handler - i.e. it can only do simple\n  things and not call out to other random code.\n- Every time you call TRY_LOCK, a kitten dies.  The reason why this is\n  bad is that it makes reasoning, and testing the code incredibly\n  hard.  TRY_LOCK is basically this:\n  \n    if (rand() % 1) {\n      DoA();\n    } else {\n      DoB();\n    }\n  \n  It is simply unnecessary randomness. The TRY_LOCK macro should be\n  removed, it kills kittens.\n  \n  If something like TRY_LOCK is truly needed, then at least it should\n  be abstracted out of the actual functions, so that the functions\n  themselves are testable.  Thus in the above case, DoA() would be a\n  separate, testable, function.\n  \n  In some really large systems (millions of large tps), sharding work\n  queues by lock is a reasonable design to reduce resource usage by\n  threads (so you do cs_someLock.DoWorkNowOrWhenUnlocked(&DoA), and it\n  is more efficient than TRY_LOCK, but for bitcoin - this is just\n  overkill.\n- Having lots of semantically different locks in a class is not ideal.\n  For example CNode has 4 locks.  This means that there are 4 sets of\n  invariants that can be established independently of each other in\n  this class.  To put it another way, when you call a function on this\n  object, it should work on a subset of the state, or it should hold\n  all 4 locks.  This suggests that either the class is a composite of\n  multiple objects, and should be broken up, or the number of locks\n  should be reduced.\n- We cannot compose multiple critical sections which all take a lock\n  into a large critical section.  After we have released locks, all\n  checks that we have done are invalidated.  Most of CWallet is just\n  plain wrong and based on this false assumption.  Locking is done in\n  CCryptoKeyStore instead of in CWallet.  See above \"Locks should be\n  textually close to the fields\" for a reason why people confuse\n  themselves.\n- There is a lot of convoluted code like this:\n      bool result;\n      {\n          LOCK(cs_KeyStore);\n          result = (mapKeys.count(address) > 0);\n      }\n      return result;\n  \n  which is equivalent to this:\n  \n  ```\n  LOCK(cs_KeyStore);\n  return (mapKeys.count(address) > 0);\n  ```\n  \n  The destructor is guaranteed to run after the expression is\n  evaluated.  There is no need to over-engineer.\n  \n  Similarly, there is a lot of code like this:\n  \n  void SomeFunction(...)\n  {\n      something();\n      {\n          LOCK(cs_something);\n          ...\n      }\n  }\n  \n  or this:\n  void SomeFunction(...)\n  {\n      {\n          LOCK(cs_something);\n          .. rest of function ...\n      }\n      return false;\n  }\n  \n  There is no point in all the excessive blocks.  What are they for?\n",
          "user": {
            "login": "alexanderkjeldaas",
            "id": 339369,
            "node_id": "MDQ6VXNlcjMzOTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/339369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexanderkjeldaas",
            "html_url": "https://github.com/alexanderkjeldaas",
            "followers_url": "https://api.github.com/users/alexanderkjeldaas/followers",
            "following_url": "https://api.github.com/users/alexanderkjeldaas/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/alexanderkjeldaas/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/alexanderkjeldaas/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/alexanderkjeldaas/subscriptions",
            "organizations_url": "https://api.github.com/users/alexanderkjeldaas/orgs",
            "repos_url": "https://api.github.com/users/alexanderkjeldaas/repos",
            "events_url": "https://api.github.com/users/alexanderkjeldaas/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/alexanderkjeldaas/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1995",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/1995",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/1995.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/1995.patch"
          },
          "closed_at": "2012-11-11T03:36:41Z",
          "created_at": "2012-11-09T18:37:41Z",
          "updated_at": "2021-09-08T10:17:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 27201164,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjAxMTY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27201164",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T10:29:41Z",
      "updated_at": "2013-10-28T10:29:41Z",
      "author_association": "NONE",
      "body": "@laanwj @sipa Is this still one of our problems? I know there were some changes recently.\n",
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/1801#issuecomment-27201164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1801"
    },
    {
      "event": "mentioned",
      "id": 72563931,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NzI1NjM5MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/72563931",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T10:29:41Z"
    },
    {
      "event": "subscribed",
      "id": 72563932,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDcyNTYzOTMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/72563932",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T10:29:41Z"
    },
    {
      "event": "mentioned",
      "id": 72563933,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NzI1NjM5MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/72563933",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T10:29:41Z"
    },
    {
      "event": "subscribed",
      "id": 72563934,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDcyNTYzOTM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/72563934",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T10:29:41Z"
    },
    {
      "event": "closed",
      "id": 85466423,
      "node_id": "MDExOkNsb3NlZEV2ZW50ODU0NjY0MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/85466423",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-10T15:21:10Z"
    },
    {
      "event": "referenced",
      "id": 4076009494,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNzYwMDk0OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4076009494",
      "actor": {
        "login": "KolbyML",
        "id": 31669092,
        "node_id": "MDQ6VXNlcjMxNjY5MDky",
        "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KolbyML",
        "html_url": "https://github.com/KolbyML",
        "followers_url": "https://api.github.com/users/KolbyML/followers",
        "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
        "organizations_url": "https://api.github.com/users/KolbyML/orgs",
        "repos_url": "https://api.github.com/users/KolbyML/repos",
        "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KolbyML/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9c06e5d7cec512d0659f027ec15b3b4aa566d34d",
      "commit_url": "https://api.github.com/repos/KolbyML/bitcoin/commits/9c06e5d7cec512d0659f027ec15b3b4aa566d34d",
      "created_at": "2020-12-05T20:50:43Z"
    },
    {
      "event": "referenced",
      "id": 4076009542,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNzYwMDk1NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4076009542",
      "actor": {
        "login": "KolbyML",
        "id": 31669092,
        "node_id": "MDQ6VXNlcjMxNjY5MDky",
        "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KolbyML",
        "html_url": "https://github.com/KolbyML",
        "followers_url": "https://api.github.com/users/KolbyML/followers",
        "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
        "organizations_url": "https://api.github.com/users/KolbyML/orgs",
        "repos_url": "https://api.github.com/users/KolbyML/repos",
        "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KolbyML/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ad15bce2f538b106717bbfffb34d734b24b96d52",
      "commit_url": "https://api.github.com/repos/KolbyML/bitcoin/commits/ad15bce2f538b106717bbfffb34d734b24b96d52",
      "created_at": "2020-12-05T20:50:44Z"
    },
    {
      "event": "locked",
      "id": 5272002282,
      "node_id": "LOE_lADOABII584AZrOYzwAAAAE6PF7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272002282",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:32:34Z",
      "lock_reason": "resolved"
    }
  ]
}