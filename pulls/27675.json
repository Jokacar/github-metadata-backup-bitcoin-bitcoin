{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
    "id": 1352544483,
    "node_id": "PR_kwDOABII585QnjDj",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27675",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27675.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27675.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
    "number": 27675,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "p2p: Drop m_recently_announced_invs bloom filter",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR replaces the `m_recently_announced_invs` bloom filter with a simple sequence number tracking the mempool state when we last considered sending an INV message to a node. This saves 33kB per peer (or more if we raise the rate at which we relay transactions over the network, in which case we would need to increase the size of the bloom filter proportionally).\r\n\r\nThe philosophy here (compare with #18861 and #19109) is that we consider the rate limiting on INV messages to only be about saving bandwidth and not protecting privacy, and therefore after you receive an INV message, it's immediately fair game to request any transaction that was in the mempool at the time the INV message was sent. We likewise consider the BIP 133 feefilter and BIP 37 bloom filters to be bandwidth optimisations here, and treat transactions as requestable if they would have been announced without those filters. Given that philosophy, tracking the timestamp of the last INV message and comparing that against the mempool entry time allows removal of each of `m_recently_announced_invs`, `m_last_mempool_req` and `UNCONDITIONAL_RELAY_DELAY` and associated logic.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-05-16T13:45:18Z",
    "updated_at": "2023-08-17T11:09:46Z",
    "closed_at": "2023-08-17T09:52:21Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-08-17T09:52:21Z",
    "merge_commit_sha": "a62f5ee86c3959d5e3dd6e2d4a5ac1535b8a0109",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "ajtowns:202305-droprecentinvbloom",
      "ref": "202305-droprecentinvbloom",
      "sha": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 266570,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-17T08:05:21Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "be443328037162f265cc85d05b1a7665b5f104d2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35548,
        "stargazers_count": 70959,
        "watchers_count": 70959,
        "size": 236531,
        "default_branch": "master",
        "open_issues_count": 676,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-17T11:55:34Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-17T11:00:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 151,
    "deletions": 91,
    "changed_files": 15,
    "commits": 7,
    "review_comments": 71,
    "comments": 29
  },
  "events": [
    {
      "event": "commented",
      "id": 1549705895,
      "node_id": "IC_kwDOABII585cXqKn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549705895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T13:45:21Z",
      "updated_at": "2023-08-16T19:27:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1555948320), [naumenkogs](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1680269540), [glozow](https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1581283327) |\n| Concept ACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1553249207), [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592610995), [sipa](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1638845486) |\n| Stale ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1517398008) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28107](https://github.com/bitcoin/bitcoin/pull/28107) (util: Type-safe transaction identifiers by dergoegge)\n* [#27630](https://github.com/bitcoin/bitcoin/pull/27630) (p2p: Increase tx relay rate by sdaftuar)\n* [#26283](https://github.com/bitcoin/bitcoin/pull/26283) (p2p: Fill reconciliation sets and request reconciliation (Erlay) by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549705895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1549711784,
      "node_id": "IC_kwDOABII585cXrmo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549711784",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T13:48:51Z",
      "updated_at": "2023-05-16T13:48:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "As justification for ignoring the privacy benefits of rate limiting INV messages, consider the following approach: an attacker makes multiple inbound connections to our peer, and upon receiving an INV of txs a,b,c,d,... via one connection immediately announces the same txs on each of its other connections. In that case the next INV we send on some other connection to the attacker will skip those transactions, providing a new unique set. With this approach, the attacker should be able to receive tx announcements from us at many times the 7tx/s limit we originally set.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9258459281,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIn2OCR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9258459281",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T13:52:17Z"
    },
    {
      "event": "labeled",
      "id": 9258460292,
      "node_id": "LE_lADOABII585mDASbzwAAAAIn2OSE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9258460292",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T13:52:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9259062619,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIn4hVb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9259062619",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T14:42:59Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T15:12:46Z",
      "updated_at": "2023-05-16T15:12:46Z",
      "source": {
        "issue": {
          "id": 1706209817,
          "node_id": "PR_kwDOABII585QUDRq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27630",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27630/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27630/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27630/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27630",
          "number": 27630,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Increase tx relay rate",
          "body": "In the presence of smaller transactions on the network, blocks can sustain a higher relay rate than 7tx/second. In this event, the per-peer inventory queues can grow too large.\r\n\r\nUsing 11 tx/second as an estimate for the max network throughput, this commit bumps the rate up to 22 tx/s (for inbound peers), providing a factor of 2 safety margin.\r\n\r\nOutbound peers continue to receive relayed transactions at 2.5x the rate of inbound peers, for a rate of 55tx/second.\r\n\r\nNote that this triples the per-peer memory needed for the rolling bloom filter `m_recently_announced_invs`.",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27630",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27630",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27630.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27630.patch"
          },
          "created_at": "2023-05-11T16:58:49Z",
          "updated_at": "2023-08-17T11:44:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T15:26:52Z",
      "updated_at": "2023-05-16T15:26:52Z",
      "source": {
        "issue": {
          "id": 1700962801,
          "node_id": "PR_kwDOABII585QCcFx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27602",
          "number": 27602,
          "state": "open",
          "state_reason": null,
          "title": "net processing: avoid serving non-announced txs as a result of a MEMPOOL message",
          "body": "Currently, non-announced transactions can be served after a BIP35 MEMPOOl message has been received from a peer. By following this pattern, we are potentially allowing peers to fingerprint transactions that may have originated in our node and to perform timing analysis on the propagation of transactions that enter our mempool.\r\n\r\nThis simply removes the relay bypass so only announced transactions are served to peers.",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27602",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27602",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27602.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27602.patch"
          },
          "created_at": "2023-05-08T21:23:38Z",
          "updated_at": "2023-08-17T10:59:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9259747923,
      "node_id": "CTDE_lADOABII585mDASbzwAAAAIn7IpT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9259747923",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T15:42:53Z"
    },
    {
      "event": "reviewed",
      "id": 1428669748,
      "node_id": "PRR_kwDOABII585VJ8U0",
      "url": null,
      "actor": null,
      "commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1428669748",
      "submitted_at": "2023-05-16T15:44:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T16:19:19Z",
      "updated_at": "2023-05-16T16:19:19Z",
      "source": {
        "issue": {
          "id": 1678541218,
          "node_id": "PR_kwDOABII585O3QRm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
          "number": 27509,
          "state": "open",
          "state_reason": null,
          "title": "Relay own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 54,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch"
          },
          "created_at": "2023-04-21T13:39:19Z",
          "updated_at": "2023-08-06T17:47:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T19:13:50Z",
      "updated_at": "2023-05-16T19:13:50Z",
      "source": {
        "issue": {
          "id": 1500046485,
          "node_id": "PR_kwDOABII585FocrT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
          "number": 26711,
          "state": "open",
          "state_reason": null,
          "title": "validate package transactions with their in-package ancestor sets",
          "body": "This contains everything to make mempool/validation logic ready for package relay (see #27463).\r\n\r\nThe hope here is to end up with the incentive-compatible transactions in our mempool. Prior to this commit, if parents within the package relied on each other, we could end up (1) accepting a low-feerate child or (2) rejecting high-feerate parents. See the \"interdependent parents\" test case for a specific example.\r\n\r\nA description of the package validation logic: https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1647523520",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26711.patch"
          },
          "created_at": "2022-12-16T11:27:00Z",
          "updated_at": "2023-08-15T11:22:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T21:51:41Z",
      "updated_at": "2023-05-16T21:51:41Z",
      "source": {
        "issue": {
          "id": 1092704681,
          "node_id": "PR_kwDOABII584weiJt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23962",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23962/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23962/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23962/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23962",
          "number": 23962,
          "state": "closed",
          "state_reason": null,
          "title": "Use `int32_t` type for most transaction size/weight values",
          "body": "From bitcoin/bitcoin#23957 which has been incorporated into this PR:\r\n> A file-wide suppression is problematic because it will wave through future violations, potentially bugs.\r\n> \r\n> Fix that by using per-statement casts.\r\n> \r\n> This refactor doesn't change behavior because the now explicit casts were previously done implicitly.\r\n> \r\n> Similar to commit 8b5a4de904b414fb3a818732cd0a2c90b91bc275",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 35,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23962",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23962",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23962.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23962.patch"
          },
          "closed_at": "2023-06-13T14:37:47Z",
          "created_at": "2022-01-03T17:58:00Z",
          "updated_at": "2023-07-20T13:29:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9264163399,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIoL-pH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9264163399",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T03:09:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9275622590,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIo3sS-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9275622590",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T04:54:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9275667491,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIo33Qj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9275667491",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T05:04:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9275820577,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIo4coh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9275820577",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T05:37:11Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T07:43:27Z",
      "updated_at": "2023-05-18T07:43:27Z",
      "source": {
        "issue": {
          "id": 1705857961,
          "node_id": "PR_kwDOABII585QS3Wx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27625/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27625/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27625/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27625",
          "number": 27625,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Stop relaying non-mempool txs",
          "body": "`mapRelay` (used to relay announced transactions that are no longer in the mempool) has issues:\r\n\r\n* It doesn't have an absolute memory limit, only an implicit one based on the rate of transaction announcements\r\n* <strike>It doesn't have a use-case</strike> EDIT: see below\r\n\r\nFix all issues by removing `mapRelay`.\r\n\r\nFor more context, on why a transaction may have been removed from the mempool, see https://github.com/bitcoin/bitcoin/blob/c2f2abd0a4f4bd18bfca41b632d21d803479f3f4/src/txmempool.h#L228-L238\r\n\r\nFor my rationale on why it is fine to not relay them:\r\n\r\nReason | | Rationale\r\n-- | -- | --\r\n`EXPIRY` | Expired from mempool | Mempool expiry is by default 2 weeks and can not be less than 1 hour, so a transaction can not be in `mapRelay` while expiring, unless a re-broadcast happened. This should be fine, because the transaction will be re-added to the mempool and potentially announced/relayed on the next re-broadcast.\r\n`SIZELIMIT` | Removed in size limiting | A low fee transaction, which will be relayed by a different peer after `GETDATA_TX_INTERVAL` or after we sent a `notfound` message. Assuming it ever made it to another peer, otherwise it will happen on re-broadcast (same as with `EXPIRY` above).\r\n`REORG` | Removed for reorganization | Block races are rare, so reorgs should be rarer. Also, the transaction is likely to be re-accepted via the `disconnectpool` later on. If not, it seems fine to let the originating wallet deal with rebroadcast in this case.\r\n`BLOCK` | Removed for block | EDIT: Needed for compact block relay, see https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544047433\r\n`CONFLICT` | Removed for conflict with in-block transaction | The peer won't be able to add the tx to the mempool anyway, unless it is on a different block, in which case it seems fine to let the originating wallet take care of the rebroadcast (if needed).\r\n`REPLACED` | Removed for replacement | EDIT: Also needed for compact block relay, see https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544171255 ?",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27625",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27625",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27625.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27625.patch"
          },
          "closed_at": "2023-06-12T09:50:56Z",
          "created_at": "2023-05-11T13:53:17Z",
          "updated_at": "2023-06-15T08:18:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:00:58Z",
      "updated_at": "2023-05-18T14:00:58Z",
      "source": {
        "issue": {
          "id": 1557277951,
          "node_id": "PR_kwDOABII585Ii9ko",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26969",
          "number": 26969,
          "state": "closed",
          "state_reason": null,
          "title": "net, refactor: net_processing, add `ProcessCompactBlockTxns`",
          "body": "When processing `CMPCTBLOCK` message, at some moments we can need to process compact block txns / `BLOCKTXN`, since all messages are handled by `ProcessMessage`, so we call `ProcessMessage` all over again. \r\nhttps://github.com/bitcoin/bitcoin/blob/ab98673f058853e00c310afad57925f54c1ecfae/src/net_processing.cpp#L4331-L4348\r\n\r\n\r\nThis PR creates a function called `ProcessCompactBlockTxns` to process it to avoid calling `ProcessMessage` for it - this function is also called when processing `BLOCKTXN` msg.",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26969",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26969",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26969.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26969.patch"
          },
          "closed_at": "2023-06-23T22:18:52Z",
          "created_at": "2023-01-25T21:11:30Z",
          "updated_at": "2023-06-23T22:18:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1432933993,
      "node_id": "PRR_kwDOABII585VaNZp",
      "url": null,
      "actor": null,
      "commit_id": "023d0503ffdd91d408f10b34905b58f68edcc056",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1432933993",
      "submitted_at": "2023-05-18T15:31:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1553249207,
      "node_id": "IC_kwDOABII585clLO3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553249207",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T15:41:00Z",
      "updated_at": "2023-05-18T15:41:00Z",
      "author_association": "MEMBER",
      "body": "Concept ACK on getting rid of the recently announced filter.  I think we'd need to use a steady clock to avoid random failures for no good reason, is that easy to do?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1553249207",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9314483993,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIrL78Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9314483993",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T10:39:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9314638071,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIrMhj3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9314638071",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T10:54:13Z"
    },
    {
      "event": "reviewed",
      "id": 1439563203,
      "node_id": "PRR_kwDOABII585Vzf3D",
      "url": null,
      "actor": null,
      "commit_id": "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1439563203",
      "submitted_at": "2023-05-23T12:20:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1559935656,
      "node_id": "IC_kwDOABII585c-rqo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1559935656",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T18:22:04Z",
      "updated_at": "2023-05-23T18:22:04Z",
      "author_association": "NONE",
      "body": "What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1559935656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T22:33:59Z",
      "updated_at": "2023-05-24T22:33:59Z",
      "source": {
        "issue": {
          "id": 1724281348,
          "node_id": "PR_kwDOABII585RQ35P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
          "number": 27742,
          "state": "open",
          "state_reason": null,
          "title": "[NO MERGE] BIP331 Ancestor Package Relay",
          "body": "**WORK IN PROGRESS.** Please do not run it for any use other than testing.\r\n  \r\nThis PR is not meant for merge. This branch exists to help reviewers see what package relay would look like all together. I will open separate PRs for these components and expect to add more tests, docs, and polish along the way. This PR contains all of the functionality built in a linear manner. However, since there are pieces in various areas of the codebase and they can make progress in parallel, commits don't necessarily need to be merged in this order.\r\n\r\n**See #27463 for what PR(s) are open for review right now.**\r\n\r\n## Note to Reviewers\r\n\r\nThe major purpose of this PR is to solicit \"approach\" review.\r\n\r\nThis is a large project, and the first few p2p commits essentially define the interface. I'd like to get rough consensus on approach before we start looking at code details and merging PRs, because I believe it will help us \"get useful stuff in\" faster and avoid premature optimizations.\r\n\r\nHere are some questions I hope are answered before we try to merge anything (originally https://github.com/bitcoin/bitcoin/pull/27742#issuecomment-1572205313):\r\n\r\n1. Does the proposed protocol look sound?\r\n2. Are these 3 milestones appropriate?\r\n3. Is there important functionality that is in the \"todo improvements\" section but should be included in one of the 3 milestones? Alternatively, is there not-that-important stuff in the milestones that we should defer until later?\r\n4. Does it make sense to have this PeerManager <-> TxPackageTracker <-> TxOrphanage relationship?\r\n\r\n\r\nComments about naming, typos, code details, etc. are also appreciated but please note I may wait until their respective PRs are open to incorporate your comments. Thank you for your patience.\r\n\r\n## Project Structure\r\n\r\n### 3 Major Milestones\r\n\r\nThis project is split into 3 milestones, each of which gives us something useful.\r\n\r\n1. Modularize and improve orphan-handling (also some refactoring).\r\n\t- Introduce a `TxPackageTracker` class, responsible for orphan handling. It starts out as a wrapper for the `TxOrphanage`.\r\n\t- Use all announcers as potential candidates for resolving an orphan. Add a `TxRequestTracker` Orphan Request Tracker which helps track orphans we need to resolve. Preferentially request orphan resolution from outbounds, preferred relay, etc., over inbounds.\r\n\r\n2. When package relay peers are available, use `ancpkginfo` instead of missing parents when handling orphans.\r\n\t- Add `sendpackages` negotiation logic.\r\n\t- Add a separate rejections filter for transactions that are eligible for reconsideration when validated together as a package, so that children of low-feerate transactions are still considered.\r\n\t- Send `getdata(MSG_ANCPKGINFO)` to package relay peers for orphan resolution. Use `ancpkginfo` to request missing ancestors through normal individual transaction relay.\r\n\r\n3. Download and validate ancestor packages using `getpkgtxns` and `pkgtxns`.\r\n\t- Add support for `getpkgtxns` and `pkgtxns`. Send a `pkgtxns` using the list of missing transactions from `ancpkginfo`.\r\n\t- Ensure we can process \"normal\" orphans even if a peer is trying to overwhelm/churn our orphanage. Do this by \"opportunistically\" protecting orphans from random eviction if they were sent by package relay peers, and redownloading orphans if we cannot afford to protect them. Each peer is allocated a certain amount of orphans they can protect at a time (\"token bucket\" style but the number of tokens is static for now). Outbound peers get more than inbounds.\r\n\t- If a transaction's parent(s) are below the fee filter, don't announce it (save the bandwidth of legacy nodes).\r\n\r\n###  Todo improvements \r\nThese could be added to the milestones or deferred until basic functionality is deployed.\r\n- Store orphans serialized instead of as CTransactionRefs to significantly reduce their memory usage.\r\n- Perhaps try to keep orphans in disk and/or process them asynchronously, given the incredibly DoSable nature of orphan handling.\r\n- Dynamically allocate tokens for orphan protection. For example, if a long-standing inbound peer continuously provides good packages for orphans, they should have more tokens. If a peer is obviously serving us garbage, reduce their tokens.\r\n- Detect when we have received all the transactions for a package, regardless of how (individual or block or other), and return `PackageToValidate`  in `GetTxToReconsider`.\r\n- New format for mempool.dat, packages instead of transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27742.patch"
          },
          "created_at": "2023-05-24T15:38:55Z",
          "updated_at": "2023-07-25T21:43:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-28T20:45:35Z",
      "updated_at": "2023-05-28T20:45:35Z",
      "source": {
        "issue": {
          "id": 1729419085,
          "node_id": "PR_kwDOABII585RiRvk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27772",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27772/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27772/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27772/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27772",
          "number": 27772,
          "state": "closed",
          "state_reason": null,
          "title": "Make non-standard tx acceptance a peer option.",
          "body": "Make `-acceptnonstdtxn` apply to peers only and always allow local rpc calls to submit non-standard transactions to the mempool.\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/27768",
          "user": {
            "login": "joostjager",
            "id": 4638168,
            "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joostjager",
            "html_url": "https://github.com/joostjager",
            "followers_url": "https://api.github.com/users/joostjager/followers",
            "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
            "organizations_url": "https://api.github.com/users/joostjager/orgs",
            "repos_url": "https://api.github.com/users/joostjager/repos",
            "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/joostjager/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27772",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27772",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27772.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27772.patch"
          },
          "closed_at": "2023-05-29T13:50:44Z",
          "created_at": "2023-05-28T11:55:15Z",
          "updated_at": "2023-06-24T01:25:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1570662645,
      "node_id": "IC_kwDOABII585dnmj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1570662645",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T17:52:53Z",
      "updated_at": "2023-05-31T17:52:53Z",
      "author_association": "NONE",
      "body": "So just to be clear, my concern here relates to the fact that the current codebase only allows a peer to request a transaction as long as we have announced that to them (with the exception of data requested after a `MEMPOOL` message if we happen run signaling bip37).\r\n\r\nAfter this patch, the logic above won't hold true anymore. If for whatever reason we have more than `INV_BROADCAST_MAX` transactions to send to a given peer at a given time, and we send an INV message to it, it will immediately be able to request any of those new transactions (even if they were never offered). Whether this is in itself a meaningful privacy leak is unclear to me. Under regular loads (<`INV_BROADCAST_MAX` pending transactions to be announced), this behaves exactly like the current codebase.\r\n\r\nI guess it all boils down to whether potentially allowing a peer to know when a transaction enters our mempool is something we should guard about or not.\r\n\r\n",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1570662645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1573150818,
      "node_id": "IC_kwDOABII585dxGBi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1573150818",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T05:04:50Z",
      "updated_at": "2023-06-02T05:04:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).\r\n\r\nThis isn't trading off privacy -- that's the point of [this comment](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784). It does mean that someone trying to find out whether a recent transaction entered your mempool in the last window doesn't need multiple inbound connections, but that's a good thing: having many inbound connections is easy for an attacker, so avoiding the need to make many inbound connections just means those inbound slots become available for honest peers.\r\n\r\n> So just to be clear, my concern here relates to the fact that the current codebase only allows a peer to request a transaction as long as we have announced that to them (with the exception of data requested after a `MEMPOOL` message if we happen run signaling bip37).\r\n\r\nThat's already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n\r\n> After this patch, the logic above won't hold true anymore. If for whatever reason we have more than `INV_BROADCAST_MAX` transactions to send to a given peer at a given time, and we send an INV message to it, it will immediately be able to request any of those new transactions (even if they were never offered). Whether this is in itself a meaningful privacy leak is unclear to me. Under regular loads (<`INV_BROADCAST_MAX` pending transactions to be announced), this behaves exactly like the current codebase.\r\n> \r\n> I guess it all boils down to whether potentially allowing a peer to know when a transaction enters our mempool is something we should guard about or not.\r\n\r\nThe point of the random INV intervals is that we limit the knowledge of when a transaction entered our mempool to a specific window -- if we send an INV at t=0s, t=1.1s, t=6.1s, t=6.4s, eg, then our peer can tell the difference between a tx that entered at t=0.5s and t=3s, but can't tell the difference between t=3s and t=4s or t=5s, because they're all in the same window. We then use the same window boundaries for all inbound peers so that adding extra inbound peers doesn't give you more precise knowledge.\r\n\r\nIf the attacker only has a single inbound connection, then when the number of txs in a window exceeds `INV_BROADCAST_MAX` they'll get less information; however as the comment above attempted to explain, adding additional inbound connections and manually announcing some txs on some of the connections will allow an attacker to get the full set of txs included in each window. So I don't think it makes sense to consider the `INV_BROADCAST_MAX` limit to have a privacy benefit. (And if we eventually add erlay support, I think that limit goes away entirely for connections doing announcements over erlay rather than INV anyway)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1573150818",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1574166059,
      "node_id": "IC_kwDOABII585d094r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574166059",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T18:46:13Z",
      "updated_at": "2023-06-02T18:46:13Z",
      "author_association": "NONE",
      "body": "> > What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).\r\n> \r\n> This isn't trading off privacy -- that's the point of [this comment](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784). It does mean that someone trying to find out whether a recent transaction entered your mempool in the last window doesn't need multiple inbound connections, but that's a good thing: having many inbound connections is easy for an attacker, so avoiding the need to make many inbound connections just means those inbound slots become available for honest peers.\r\n\r\nRight, I don't think I originally fully understood what you meant by that. So the case is:\r\n\r\n- An attacker has `n` inbound connections to node `B` (namely `A0, ..., An-1`)\r\n- `B` sends an `INV` message containing `a, b, c, d` through link `Ai`\r\n    - *During the same message processing loop* for `B`, `A` sends `a, b, c, d` through link `Aj`\r\n    - Now `Aj` will receive an `INV` with a disjoint set for `a, b, c, d` when `B` picks it in this round\r\n\r\nProvided `A` has enough links with `B`, it should be able to get all pending connections in `B`'s mempool in a single round. Is that it? If so, I think this renders all my other comments irrelevant.\r\n\r\n> That's already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n\r\nI don't think I follow here though. Would you mind elaborating?",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1574166059",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9419181421,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIxbU1t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9419181421",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-03T01:11:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9419352277,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIxb-jV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9419352277",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-03T02:05:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9437695006,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAIyh8we",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9437695006",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T19:54:47Z"
    },
    {
      "event": "labeled",
      "id": 9500796890,
      "node_id": "LE_lADOABII585mDASbzwAAAAI2Sqfa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9500796890",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T10:42:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9501275339,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAI2UfTL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9501275339",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:26:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9501516089,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAI2VaE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9501516089",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:46:16Z"
    },
    {
      "event": "ready_for_review",
      "id": 9501533579,
      "node_id": "RFRE_lADOABII585mDASbzwAAAAI2VeWL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9501533579",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:47:47Z"
    },
    {
      "event": "commented",
      "id": 1587182546,
      "node_id": "IC_kwDOABII585emnvS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587182546",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:56:10Z",
      "updated_at": "2023-06-12T11:56:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n> > [it is trivial for every connection to probe data on the node's mempool] already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n> \r\n> I don't think I follow here though. Would you mind elaborating?\r\n\r\nThe easy way to probe for the presence of transaction X in the mempool is to propose a fake transaction Z that spends an unspent output of X, and a fake transaction Y, with fake signatures for both, and see how its orphan handling behaves. If you receive a request for X and Y, then the victim didn't have X in its mempool; if you receive a request for just Y, then it did have X in the mempool; if you don't receive a request for either, then X was not in the mempool and was in its reject filter.\r\n\r\nIf you want to fingerprint a node, for example to see that an ipv4 address and a tor address are both pointing to the same node, then you need to set things up so that each node in the network has a different set of txs in their mempools, then query them to see if the node behind the ipv4 address and the node behind the tor address have the same set of txs. One way to do that is to propose a bunch of double-spends at the same feerate: a1/a2, b1/b2, c1/c2, etc and fire them off at various nodes on the network, then use the previous technique to see which txs actually ended up in the interesting nodes' mempools.\r\n\r\nNone of that requires careful timing -- you just need to set the feerates so they won't either be mined immediately, nor be evicted from the mempool too quickly.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1587182546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "renamed",
      "id": 9502203376,
      "node_id": "RTE_lADOABII585mDASbzwAAAAI2YB3w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9502203376",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T12:41:32Z",
      "rename": {
        "from": "net_processing: Drop m_recently_announced_invs bloom filter",
        "to": "p2p: Drop m_recently_announced_invs bloom filter"
      }
    },
    {
      "event": "unlabeled",
      "id": 9502316587,
      "node_id": "UNLE_lADOABII585mDASbzwAAAAI2Ydgr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9502316587",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T12:52:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9505112910,
      "node_id": "UNLE_lADOABII585mDASbzwAAAAI2jINO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9505112910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T16:52:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9505113274,
      "node_id": "LE_lADOABII585mDASbzwAAAAI2jIS6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9505113274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T16:52:59Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 9522653246,
      "node_id": "LE_lADOABII585mDASbzwAAAAI3mCg-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9522653246",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T02:04:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T02:23:21Z",
      "updated_at": "2023-06-14T02:23:21Z",
      "source": {
        "issue": {
          "id": 1755921621,
          "node_id": "I_kwDOABII585oqTzV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27879",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27879/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27879/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27879/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27879",
          "number": 27879,
          "state": "closed",
          "state_reason": "completed",
          "title": "arm64 CI failure",
          "body": "arm64 CI is failing with:\r\n\r\n```\r\nFAIL: minisketch/test\r\n=====================\r\n\r\n../build-aux/test-driver: line 109: ./minisketch/test: cannot execute binary file: Exec format error\r\nFAIL minisketch/test (exit status: 126)\r\n\r\nFAIL: univalue/test/object\r\n==========================\r\n\r\n../build-aux/test-driver: line 109: ./univalue/test/object: cannot execute binary file: Exec format error\r\nFAIL univalue/test/object (exit status: 126)\r\n\r\nFAIL: univalue/test/unitester\r\n=============================\r\n\r\n../build-aux/test-driver: line 109: ./univalue/test/unitester: cannot execute binary file: Exec format error\r\nFAIL univalue/test/unitester (exit status: 126)\r\n\r\nFAIL: qt/test/test_bitcoin-qt\r\n=============================\r\n\r\n../build-aux/test-driver: line 109: ./qt/test/test_bitcoin-qt: cannot execute binary file: Exec format error\r\nFAIL qt/test/test_bitcoin-qt (exit status: 126)\r\n```\r\n\r\nSee eg https://github.com/bitcoin/bitcoin/pull/27647/checks?check_run_id=14232303009 or https://github.com/bitcoin/bitcoin/pull/27746/checks?check_run_id=14231876127\r\n\r\nI tried re-running the arm64 task for #27675 which had succeeded yesterday, and it now fails too ([before](https://cirrus-ci.com/task/6152515125772288) vs [after](https://cirrus-ci.com/task/6688015473442816)), which suggests either that the bug was introduced after commit fbe48f97dfec3138b06b5f00b75655da0c985008 up to commit 427853ab49f610e971b73ea4cc1d5366747e52b1 (nothing seemed likely to break minisketch/test there) or is an infrastructure issue (bad cache or bad hardware?).",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "closed_at": "2023-06-14T13:36:10Z",
          "created_at": "2023-06-14T02:23:20Z",
          "updated_at": "2023-06-14T13:36:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1592610995,
      "node_id": "IC_kwDOABII585e7VCz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592610995",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T08:36:05Z",
      "updated_at": "2023-06-15T08:36:05Z",
      "author_association": "MEMBER",
      "body": "I don't think the multiple inbound connections argument is convincing, unless I am missing something. In practise, the inbound connections are scheduled randomly, so the attacker wouldn't know which inbound is the next one to announce the known invs on. And once they were scheduled by the victim (or the first inv message was sent by the attacker), it is too late to send another inv message, because only one inv message is processed per scheduling round. I haven't done any math, but the cost-vs-payoff should only be linear up to two inbound attacking connections, and quickly fade after?\r\n\r\nThough, the other arguments seem more convincing, so Concept ACK.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592610995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "reviewed",
      "id": 1481014085,
      "node_id": "PRR_kwDOABII585YRntF",
      "url": null,
      "actor": null,
      "commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1481014085",
      "submitted_at": "2023-06-15T08:39:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1592675495,
      "node_id": "IC_kwDOABII585e7kyn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592675495",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T09:13:39Z",
      "updated_at": "2023-06-15T09:13:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't think the multiple inbound connections argument is convincing, unless I am missing something. In practise, the inbound connections are scheduled randomly, so the attacker wouldn't know which inbound is the next one to announce the known invs on. And once they were scheduled by the victim (or the first inv message was sent by the attacker), it is too late to send another inv message, because only one inv message is processed per scheduling round.\r\n\r\nI think that's incorrect: if you have three inbound peers, A, B and C, the timing may look something like:\r\n\r\n * t=0, `next_inv_to_inbounds = 4.8s`\r\n * t=1, `SendMessages`, `peerB->m_next_inv_send_time = next_inv_to_inbounds`\r\n * t=1.001, `SendMessages`, `peerA->m_next_inv_send_time = next_inv_to_inbounds`\r\n * t=1.002, `SendMessages`, `peerC->m_next_inv_send_time = next_inv_to_inbounds`\r\n * t=2, `RelayTransaction(tx1)`\r\n * t=3, `RelayTransaction(tx2)`\r\n * t=4, `RelayTransaction(tx3)`\r\n * t=5, `SendMessages`, `peerC->m_next_inv_send_time = next_inv_to_inbounds = 10s`, INV tx1, tx2, tx3 to C\r\n * t=5.001, `SendMessages`, `peerB->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx1, tx2, tx3 to B\r\n * t=5.002, `SendMessages`, `peerA->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx1, tx2, tx3 to A\r\n\r\nNote that `NextInvToInbounds` only gets a new time if `next_inv_to_inbounds < now`, which leaves plenty of time for all the inbound peers to be cycled through before a new time is picked.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592675495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1592741852,
      "node_id": "IC_kwDOABII585e70_c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592741852",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T09:59:38Z",
      "updated_at": "2023-06-15T09:59:38Z",
      "author_association": "MEMBER",
      "body": "> the timing may look something like:\r\n> \r\n> \r\n>     * t=5, `SendMessages`, `peerC->m_next_inv_send_time = next_inv_to_inbounds = 10s`, INV tx1, tx2, tx3 to C\r\n> \r\n>     * t=5.001, `SendMessages`, `peerB->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx1, tx2, tx3 to B\r\n> \r\n>     * t=5.002, `SendMessages`, `peerA->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx1, tx2, tx3 to A\r\n\r\nIt looks like all inbound peers receive the same INVs, which doesn't look like an attack, but normal operation? Let's assume `INVENTORY_BROADCAST_MAX` is `1`, so as an attacker you'd get:\r\n\r\n* t=5, `SendMessages`, `peerC->m_next_inv_send_time = next_inv_to_inbounds = 10s`, INV tx1 to C\r\n* Attacker fans out `INV tx1` on all connections, because it doesn't know which connection is scheduled/shuffled next\r\n* t=5.0001 `ProcessMessages`, `peerB`, INV tx1 from B\r\n* t=5.001, `SendMessages`, `peerB->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx2 to B\r\n* t=5.0011 `ProcessMessages`, `peerC`, INV tx1 from A\r\n* t=5.002, `SendMessages`, `peerA->m_next_inv_send_Time = next_inv_to_inbounds`, INV tx2 to A\r\n\r\nThus, an attacker can only trivially double the information it can get (tx1+tx2) vs just (tx1). But getting tx3 with three inbound connections only seems possible with probability less than 1 in a single try.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592741852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1592878515,
      "node_id": "IC_kwDOABII585e8WWz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592878515",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T11:37:58Z",
      "updated_at": "2023-06-15T11:37:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It looks like all inbound peers receive the same INVs, which doesn't look like an attack, but normal operation? \r\n\r\nYes, that's ordinary operation, where everyone finds out all the txids you received in an interval automatically. If you'd instead received more than 35 txids in the interval (tx1 .. tx100, say, with tx1 being highest feerate (`compareInvMempoolOrder`)) then everyone would receive `INV tx1..tx35`. For an attacker who wants to know the timing information for all 100 txs, they could make 3 inbound connections, `peerA1` through `peerA3`, as follows:\r\n\r\n * t=4.5, `peerA1` sends INV tx1..tx66 to us\r\n * t=4.51, `peerA2` sends INV tx34..tx100 to us\r\n * t=4.52, `peer A3` sends INV tx1..tx33, tx67..tx100 to us\r\n\r\nand our response would then be to remove the INVed txs from each peer's queue, so when we hit `next_inv_to_inbounds` we'd do:\r\n\r\n * t=5, `SendMessages`, `peerC->m_next_inv_send_time = next_inv_to_inbounds = 10s`, INV tx1..tx35 to C \r\n * t=5.001, `SendMessages`, `peerA1->m_next_inv_send_time = next_inv_to_inbounds`, INV tx67..tx100 to A1\r\n * t=5.002, `SendMessages`, `peerA3->m_next_inv_send_time = next_inv_to_inbounds`, INV tx34..tx66 to A3\r\n * t=5.003, `SendMessages`, `peerA2->m_next_inv_send_time = next_inv_to_inbounds`, INV tx1..tx33 to A2\r\n * t=5.004, `SendMessages`, `peerB->m_next_inv_send_time = next_inv_to_inbounds`, INV tx1..tx35 to B\r\n\r\nand between A1..A3 you receive announcements for all of tx1..tx100 that were accepted into the victim's mempool between the `next_inv_to_inbounds` timestamps of t=0 and t=4.8.\r\n\r\nie, basically if the network's processing up to 7X tx/second, you make X connections to the victim peer, divide the txs you receive into X groups, and announce all txids except for the K'th group to the victim via connection K. (If they request the tx from you, then just quickly reply notfound to avoid biasing the data). Few things to be careful of if you want to actually make that work, but should be find in principle.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592878515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1592892773,
      "node_id": "IC_kwDOABII585e8Z1l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592892773",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T11:48:23Z",
      "updated_at": "2023-06-15T11:48:37Z",
      "author_association": "MEMBER",
      "body": "> announce all txids except for the K'th group to the victim\r\n\r\nOk, looks like you are assuming that the attacker already knows all transactions (or txids), and I assumed this is what the attacker wants to find out.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592892773",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1592903782,
      "node_id": "IC_kwDOABII585e8chm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592903782",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T11:57:35Z",
      "updated_at": "2023-06-15T11:57:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Ok, looks like you are assuming that the attacker already knows all transactions (or txids), and I assumed this is what the attacker wants to find out.\r\n\r\nYou find out txids more quickly just by running a public listening node; the extra information that active probing gets you is information about when a tx was first received by different nodes in the network, from which you can then infer some idea about how the network is connected (\"which nodes should I disrupt in order to partition the network?\") or which node was the source of a given transaction (to remove pseudonymity). This PR means that instead of actively probing via the above method, you could also actively probe by sending \"GETDATA\" messages for txids you haven't yet received an \"INV\" for.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592903782",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1592976212,
      "node_id": "IC_kwDOABII585e8uNU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592976212",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T12:45:03Z",
      "updated_at": "2023-06-15T12:45:03Z",
      "author_association": "MEMBER",
      "body": "> This PR means that instead of actively probing via the above method, you could also actively probe by sending \"GETDATA\" messages for txids you haven't yet received an \"INV\" for.\r\n\r\nThanks. My comments are unrelated and can be discarded, because this pull's goal isn't to change the externally visible inv sending logic, only the getdata receiving logic.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1592976212",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1593665054,
      "node_id": "IC_kwDOABII585e_WYe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1593665054",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T20:09:51Z",
      "updated_at": "2023-06-15T20:11:27Z",
      "author_association": "NONE",
      "body": "> The easy way to probe for the presence of transaction X in the mempool is to propose a fake transaction Z that spends an unspent output of X, and a fake transaction Y, with fake signatures for both, and see how its orphan handling behaves. If you receive a request for X and Y, then the victim didn't have X in its mempool; if you receive a request for just Y, then it did have X in the mempool; if you don't receive a request for either, then X was not in the mempool and was in its reject filter.\r\n\r\nThis feels pretty similar to what [TxProbe](https://arxiv.org/abs/1812.00942) used to do to infer links between nodes, and ultimately relates to how orphans are treated differently from mempool transactions both when handed and requested. \r\n\r\nThis is pretty tangential to this PR, but I'm wondering whether it may make sense to change that behavior to always request all the unannounced parents on a given link when an orphan is received through it. In the same way, orphans could be requested, even if known, when offered through a link they haven't been received from. Validation for this type of transaction may even be simplified, given they are already known, so as long as the same data is received nothing else needs to be checked. At a glance, this looks cheap while it will prevent leaking information related to orphans.\r\n\r\n",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1593665054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1611189572,
      "node_id": "IC_kwDOABII585gCM1E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1611189572",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T10:54:39Z",
      "updated_at": "2023-06-28T10:54:39Z",
      "author_association": "MEMBER",
      "body": "Could rebase for CI?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1611189572",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "reviewed",
      "id": 1504151388,
      "node_id": "PRR_kwDOABII585Zp4dc",
      "url": null,
      "actor": null,
      "commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Initial concept/approach ACK 500e31e87b33418a0747a0f3118db9ceb23896be",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1504151388",
      "submitted_at": "2023-06-28T21:55:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9691455716,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJBp-Dk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9691455716",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T19:59:09Z"
    },
    {
      "event": "commented",
      "id": 1615138376,
      "node_id": "IC_kwDOABII585gRQ5I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615138376",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T20:01:46Z",
      "updated_at": "2023-06-30T20:01:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and switched to using the mempool sequence instead of `SteadyClock`",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1615138376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1615199522,
      "node_id": "IC_kwDOABII585gRf0i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615199522",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T21:11:31Z",
      "updated_at": "2023-06-30T21:11:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Seeing this thread safety warning locally with the fuzz build only (ARM64 clang 16).\r\n\r\n```\r\nnet_processing.cpp:5769:63: warning: calling function 'GetSequence' requires holding mutex 'm_mempool.cs' exclusively [-Wthread-safety-analysis]\r\n                    tx_relay->m_last_inv_sequence = m_mempool.GetSequence();\r\n                                                              ^\r\n1 warning generated.\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1615199522",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9698561782,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJCFE72",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9698561782",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-02T03:33:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9699348327,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJCIE9n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9699348327",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-02T09:41:26Z"
    },
    {
      "event": "reviewed",
      "id": 1515038131,
      "node_id": "PRR_kwDOABII585aTaWz",
      "url": null,
      "actor": null,
      "commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK with some questions and feedback.\r\n\r\nThe last push changed from storing the entry time to using the sequence number in `mempool#GetSequence` per https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230714110.\r\n\r\nThe `CTxMemPool::m_sequence_number` documentation could use updating in this case regarding its expanded role\r\n\r\n```cpp\r\n    // In-memory counter for external mempool tracking purposes.\r\n    // This number is incremented once every time a transaction\r\n    // is added or removed from the mempool for any reason.\r\n    mutable uint64_t m_sequence_number GUARDED_BY(cs){1};\r\n```\r\n\r\nand this part of the PR description updated: `tracking the timestamp of the last INV message and comparing that against the mempool entry time`.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1515038131",
      "submitted_at": "2023-07-05T20:38:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9737484531,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJEZjjz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9737484531",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T23:22:52Z"
    },
    {
      "event": "commented",
      "id": 1622681555,
      "node_id": "IC_kwDOABII585guCfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622681555",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T23:30:35Z",
      "updated_at": "2023-07-05T23:30:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated for jonatack's review -- removes unneeded code changes, updates comments.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1622681555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "unlabeled",
      "id": 9745705385,
      "node_id": "UNLE_lADOABII585mDASbzwAAAAJE46mp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9745705385",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T16:15:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1517398008,
      "node_id": "PRR_kwDOABII585acaf4",
      "url": null,
      "actor": null,
      "commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 172fa815e08b54c61b24d552f065df15046aef3c\r\n\r\nWith this simplification, test coverage for the new logic might be feasible?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1517398008",
      "submitted_at": "2023-07-06T23:07:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "reviewed",
      "id": 1518419562,
      "node_id": "PRR_kwDOABII585agT5q",
      "url": null,
      "actor": null,
      "commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1518419562",
      "submitted_at": "2023-07-07T10:44:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1632462419,
      "node_id": "IC_kwDOABII585hTWZT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632462419",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T12:43:14Z",
      "updated_at": "2023-07-12T12:43:14Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\n----------------\r\n\r\nI was curious whether bumping a sequence number (RBF, then RBF back the target tx) is anything interesting. I think it's ok:\r\n- it doesn't provide any advantage for relay-delay over the regular RBF\r\n- it doesn't look different either (NOTFOUND as opposed to ignoring the GETDATA or whatnot) — might be worth mentioning somewhere that they should look equal?",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1632462419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9830023095,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJJ6j-3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9830023095",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-15T22:09:28Z"
    },
    {
      "event": "reviewed",
      "id": 1532439769,
      "node_id": "PRR_kwDOABII585bVyzZ",
      "url": null,
      "actor": null,
      "commit_id": "fec00d787b5530bbe892bef575fbb3cdc9d586ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1532439769",
      "submitted_at": "2023-07-17T10:18:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1637899668,
      "node_id": "IC_kwDOABII585hoF2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1637899668",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T11:01:45Z",
      "updated_at": "2023-07-17T11:01:45Z",
      "author_association": "MEMBER",
      "body": "ACK 0753120b6cb270914753d30a2626272f896a8545 modulo [this (probably lost?) comment](https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1265162383)\r\n\r\nMy favorite achievement of this PR is dropping the complication of associated logic :)\r\n",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1637899668",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "review_requested",
      "id": 9836242319,
      "node_id": "RRE_lADOABII585mDASbzwAAAAJKSSWP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9836242319",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T11:01:50Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1638845486,
      "node_id": "IC_kwDOABII585hrswu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638845486",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T20:42:05Z",
      "updated_at": "2023-07-17T20:42:05Z",
      "author_association": "MEMBER",
      "body": "Concept/approach ACK.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1638845486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9860276305,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJLt-BR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9860276305",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T09:30:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T00:51:50Z",
      "updated_at": "2023-07-20T00:51:50Z",
      "source": {
        "issue": {
          "id": 1812043969,
          "node_id": "PR_kwDOABII585V5cL9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28107",
          "number": 28107,
          "state": "open",
          "state_reason": null,
          "title": "util: Type-safe transaction identifiers",
          "body": "We currently have two different identifiers for transactions: `txid` (refering to the hash of a transaction without witness data) and `wtxid` (referring to the hash of a transaction including witness data). Both are typed as `uint256` which could lead to type-safety bugs in which one transaction identifier type is passed where the other would be expected.\r\n\r\nThis PR introduces explicit `Txid` and `Wtxid` types that (if used) would cause compilation errors for such type confusion bugs.\r\n\r\n(Only the orphanage is converted to use these types in this PR)",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28107",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28107.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28107.patch"
          },
          "created_at": "2023-07-19T14:10:55Z",
          "updated_at": "2023-08-17T10:39:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1649481055,
      "node_id": "IC_kwDOABII585iURVf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649481055",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T09:41:31Z",
      "updated_at": "2023-07-25T09:41:31Z",
      "author_association": "MEMBER",
      "body": "ACK f5d17e1a3f2856483ad3a6abcf3ea415f2d05fde",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1649481055",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9930716890,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJP6rba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9930716890",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T02:52:28Z"
    },
    {
      "event": "commented",
      "id": 1652836631,
      "node_id": "IC_kwDOABII585ihEkX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1652836631",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T02:53:54Z",
      "updated_at": "2023-07-27T02:53:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated to remove some unnecessary constructor changes and misleading comments associated with them.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1652836631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "commented",
      "id": 1653253819,
      "node_id": "IC_kwDOABII585iiqa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1653253819",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T09:34:09Z",
      "updated_at": "2023-07-27T09:34:09Z",
      "author_association": "MEMBER",
      "body": "ACK 7efb30b",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1653253819",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "review_requested",
      "id": 9933635089,
      "node_id": "RRE_lADOABII585mDASbzwAAAAJQFz4R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9933635089",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T09:40:41Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9933636087,
      "node_id": "RRE_lADOABII585mDASbzwAAAAJQF0H3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9933636087",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T09:40:48Z",
      "requested_reviewer": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T09:09:23Z",
      "updated_at": "2023-08-01T09:09:23Z",
      "source": {
        "issue": {
          "id": 1805228255,
          "node_id": "PR_kwDOABII585VieNH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
          "number": 28078,
          "state": "open",
          "state_reason": null,
          "title": "net, refactor: remove unneeded exports, use helpers over low-level code, use optional",
          "body": "and other improvements noticed while reviewing #27411.\r\n\r\nAddresses https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263969104 and https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263967598.\r\n\r\nSee commit messages for details.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28078",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28078.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28078.patch"
          },
          "created_at": "2023-07-14T17:27:45Z",
          "updated_at": "2023-08-15T22:28:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1556437447,
      "node_id": "PRR_kwDOABII585cxVnH",
      "url": null,
      "actor": null,
      "commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK, mempool sequence seems suitable for this.\r\n\r\nI think we should add a functional test, perhaps [something like this](https://github.com/glozow/bitcoin/commit/258b1c8ced55b528d1afc585c23a3d98fa30394b)",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1556437447",
      "submitted_at": "2023-08-01T12:37:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlOTY4NGYzOWZiYTkwOWIzNTAxZTk0MDJkNWI2MWY0YmY3NDRmZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e9684f39fba909b3501e9402d5b61f4bf744ff2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9684f39fba909b3501e9402d5b61f4bf744ff2",
      "tree": {
        "sha": "7524d67ec7719984df88b260ea1b00215e9fbe42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7524d67ec7719984df88b260ea1b00215e9fbe42"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54ba330f7984cebc2164fa4ad449d0164a765108",
          "sha": "54ba330f7984cebc2164fa4ad449d0164a765108",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54ba330f7984cebc2164fa4ad449d0164a765108"
        }
      ],
      "message": "mempool_entry: add mempool entry sequence number",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T03:42:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-06-04T23:15:31Z"
      },
      "sha": "1e9684f39fba909b3501e9402d5b61f4bf744ff2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3MGJlYWZkYjIyNTY0MDQzZGMyNGZjOTgxMzNmZGFkYmFmNzdkOGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a70beafdb22564043dc24fc98133fdadbaf77d8a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a70beafdb22564043dc24fc98133fdadbaf77d8a",
      "tree": {
        "sha": "787f763689d64aa42b21468671f0c0165552e062",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/787f763689d64aa42b21468671f0c0165552e062"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e9684f39fba909b3501e9402d5b61f4bf744ff2",
          "sha": "1e9684f39fba909b3501e9402d5b61f4bf744ff2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9684f39fba909b3501e9402d5b61f4bf744ff2"
        }
      ],
      "message": "validation: when adding txs due to a block reorg, allow immediate relay",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T03:42:46Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-07-15T11:46:19Z"
      },
      "sha": "a70beafdb22564043dc24fc98133fdadbaf77d8a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlYzE4MDlkMzNiZmM0MmI4MGNiNmYzNTYyNWRjY2Q1NmJlOGQ1MDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ec1809d33bfc42b80cb6f35625dccd56be8d507",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ec1809d33bfc42b80cb6f35625dccd56be8d507",
      "tree": {
        "sha": "998b2936e86e414a081a42b3997825a2e4bef3cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/998b2936e86e414a081a42b3997825a2e4bef3cb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a70beafdb22564043dc24fc98133fdadbaf77d8a",
          "sha": "a70beafdb22564043dc24fc98133fdadbaf77d8a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a70beafdb22564043dc24fc98133fdadbaf77d8a"
        }
      ],
      "message": "net_processing: drop m_recently_announced_invs bloom filter\n\nRather than using a bloom filter to track announced invs, simply allow\na peer to request any tx that entered the mempool prior to the last INV\nmessage we sent them. This also obsoletes the UNCONDITIONAL_RELAY_DELAY.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T10:56:41Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-05-13T02:49:49Z"
      },
      "sha": "6ec1809d33bfc42b80cb6f35625dccd56be8d507"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU0ZmZhYmJmZmFjYzRiODkwZDM5M2FhZmNjODI4NjkxNmVmODg3ZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4ffabbffacc4b890d393aafcc8286916ef887d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e4ffabbffacc4b890d393aafcc8286916ef887d8",
      "tree": {
        "sha": "04e8d34495f5bc92515963f10862ae2ffbe57aed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04e8d34495f5bc92515963f10862ae2ffbe57aed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ec1809d33bfc42b80cb6f35625dccd56be8d507",
          "sha": "6ec1809d33bfc42b80cb6f35625dccd56be8d507",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ec1809d33bfc42b80cb6f35625dccd56be8d507"
        }
      ],
      "message": "net_processing: don't add txids to m_tx_inventory_known_filter\n\nWe no longer have m_recently_announced_invs, so there is no need to add\ntxids to m_tx_inventory_known_filter to dedupe that filter.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T10:56:41Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-07-15T11:22:52Z"
      },
      "sha": "e4ffabbffacc4b890d393aafcc8286916ef887d8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9997899762,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJT69fy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9997899762",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:29:08Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZmYTQ5OTM3ZTQ4OGQwOTI0MDQ0Nzg2Yzc2YjQyMzI0YjY1OWYzNTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fa49937e488d0924044786c76b42324b659f351",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6fa49937e488d0924044786c76b42324b659f351",
      "tree": {
        "sha": "cff35ad89a2ddb5de035b80efb57fb4931ae386b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cff35ad89a2ddb5de035b80efb57fb4931ae386b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4ffabbffacc4b890d393aafcc8286916ef887d8",
          "sha": "e4ffabbffacc4b890d393aafcc8286916ef887d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e4ffabbffacc4b890d393aafcc8286916ef887d8"
        }
      ],
      "message": "test: Check tx from disconnected block is immediately requestable\n\nCheck that peers can immediately request txs from blocks that have been\nreorged out and are now in our mempool.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T11:33:22Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-08-01T10:56:55Z"
      },
      "sha": "6fa49937e488d0924044786c76b42324b659f351"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhMTE4MDYyZmJjNGVjOGY2NDVmNGVjNDI5OGQ4NjlhODY5YzMzNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "tree": {
        "sha": "9238fed53d5b3244b0f7a573d7bfe3bfcea0ef47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9238fed53d5b3244b0f7a573d7bfe3bfcea0ef47"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fa49937e488d0924044786c76b42324b659f351",
          "sha": "6fa49937e488d0924044786c76b42324b659f351",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6fa49937e488d0924044786c76b42324b659f351"
        }
      ],
      "message": "net_processing: Clean up INVENTORY_BROADCAST_MAX constants",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-03T11:33:22Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-05-16T09:34:09Z"
      },
      "sha": "1a118062fbc4ec8f645f4ec4298d869a869c3344"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9997938235,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJT7G47",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9997938235",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:33:34Z"
    },
    {
      "event": "labeled",
      "id": 9997939067,
      "node_id": "LE_lADOABII585mDASbzwAAAAJT7HF7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9997939067",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:33:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1663824558,
      "node_id": "IC_kwDOABII585jK_Ku",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1663824558",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:36:42Z",
      "updated_at": "2023-08-03T11:36:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Update for glozow's review; fixes off-by-one error and adds some glozow's test coverage of reorg behaviour",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1663824558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "unlabeled",
      "id": 9999057554,
      "node_id": "UNLE_lADOABII585mDASbzwAAAAJT_YKS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9999057554",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T13:25:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1562445761,
      "node_id": "PRR_kwDOABII585dIQfB",
      "url": null,
      "actor": null,
      "commit_id": "1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 1e9684f39fba909b3501e9402d5b61f4bf744ff2",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1562445761",
      "submitted_at": "2023-08-04T08:51:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "reviewed",
      "id": 1563072550,
      "node_id": "PRR_kwDOABII585dKpgm",
      "url": null,
      "actor": null,
      "commit_id": "1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1563072550",
      "submitted_at": "2023-08-04T15:08:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "review_requested",
      "id": 10010510804,
      "node_id": "RRE_lADOABII585mDASbzwAAAAJUrEXU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10010510804",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T15:08:34Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1564808157,
      "node_id": "PRR_kwDOABII585dRRPd",
      "url": null,
      "actor": null,
      "commit_id": "1a118062fbc4ec8f645f4ec4298d869a869c3344",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "My understanding is that there is a bit of a trade-off with respect to memory (correct me if the byte counting is off!):\r\nWhile it saves 33kB per peer (so ~4MB with 125 peers; ~250kB for non-listening nodes with 8 peers), it also adds at least 8 bytes per mempool entry for `uint64_t entry_sequence`.\r\n(for me, `sizeof(CTxMemPoolEntry)` even grows from 264 to 280 bytes - packing effects?).\r\nThis seems a bit unsatisfactory because the `entry_sequence` data won't be needed after a few seconds (i.e. after we've sent an inv to each peer).\r\n\r\nAssuming a full mempool with `~150k` mempool entries, that is between 1.2 and 2.4MB.\r\nBecause this is included in the maxmempool limit, it's effectively a decrease in mempool capacity instead of additional memory when the mempool is full.\r\n\r\nI wonder if there would be a more memory-efficient way to achieve the same behavior - did you consider something like a global list of all recent transactions with timestamp, from which entries could get removed regularly (i.e., after we have sent an inv to each tx-relay peer). \r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1564808157",
      "submitted_at": "2023-08-07T08:22:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "commented",
      "id": 1667596577,
      "node_id": "IC_kwDOABII585jZYEh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667596577",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T10:23:57Z",
      "updated_at": "2023-08-07T10:23:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> (for me, `sizeof(CTxMemPoolEntry)` even grows from 264 to 280 bytes - packing effects?)\r\n\r\nAdded a commit to fix this.\r\n\r\n> My understanding is that there is a bit of a trade-off with respect to memory (correct me if the byte counting is off!): While it saves 33kB per peer (so ~4MB with 125 peers; ~250kB for non-listening nodes with 8 peers), it also adds at least 8 bytes per mempool entry for `uint64_t entry_sequence`. [..] This seems a bit unsatisfactory because the `entry_sequence` data won't be needed after a few seconds (i.e. after we've sent an inv to each peer).\r\n>\r\n> Assuming a full mempool with `~150k` mempool entries, that is between 1.2 and 2.4MB. Because this is included in the maxmempool limit, it's effectively a decrease in mempool capacity instead of additional memory when the mempool is full.\r\n\r\nEffectively, that's a 0.4% increase in memory usage per tx (2000B per tx for 150k txs in 300MB becomes 2008B per tx for 149.4k txs in 300MB).\r\n\r\nThe main point here though is that with this change is for the case where we need to increase the number of (tx relay) peers or the tx acceptance rate -- the former meaning we'd need to allocate more bloom filters, and the latter meaning we'd need each bloom filter to be significantly bigger (cf #27630).\r\n\r\n> I wonder if there would be a more memory-efficient way to achieve the same behavior - did you consider something like a global list of all recent transactions with timestamp, from which entries could get removed regularly (i.e., after we have sent an inv to each tx-relay peer).\r\n\r\nI did think about that, but it seemed significantly more complicated -- you'd need to either have a map of txid-to-sequence, or a map of txiter-to-sequence; the former would be wasting 24B per entry duplicating the txid, but the latter would need a lot of care to make sure there aren't dangling references to txiters that have been removed from the mempool (and may be reallocated). You'd also need to regularly remove things from this map based on something like `min(peer.last_inv)` over each peer, which seems slightly awkward -- the information in the mempool starts depending on p2p state, rather than just the txs that are in the mempool. \r\n\r\nI do think those approaches would both result in measurable memory savings (1.2MB down to perhaps 100kB at 22tx/sec over 60 seconds?), but to me it just doesn't seem worth the complexity overall.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1667596577",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiMDJiYTNjNWY1YmNkOTZiNWUzNjIyZWYwMDFiOGU1N2NlNjNmYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "tree": {
        "sha": "a22918b8620865586150061c817663c1165d0f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a22918b8620865586150061c817663c1165d0f11"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a118062fbc4ec8f645f4ec4298d869a869c3344",
          "sha": "1a118062fbc4ec8f645f4ec4298d869a869c3344",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a118062fbc4ec8f645f4ec4298d869a869c3344"
        }
      ],
      "message": "mempool_entry: improve struct packing",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-07T10:24:33Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-08-07T09:46:10Z"
      },
      "sha": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10022284849,
      "node_id": "HRFPE_lADOABII585mDASbzwAAAAJVX-4x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10022284849",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T10:24:49Z"
    },
    {
      "event": "labeled",
      "id": 10022285685,
      "node_id": "LE_lADOABII585mDASbzwAAAAJVX_F1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10022285685",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T10:24:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10025242144,
      "node_id": "UNLE_lADOABII585mDASbzwAAAAJVjQ4g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10025242144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T14:54:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1555948320,
      "node_id": "PRR_kwDOABII585cveMg",
      "url": null,
      "actor": null,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "review ACK fb02ba3c5f5\r\n\r\nit's been a while since I've hung out with mempool transaction code, so in addition to reading through the code I spent a good chunk of energy refreshing contextual behaviors. some context behind the ack: \r\n- thinking through if there is a meaningful shift in privacy model: I find these changes acceptable\r\n- understanding the memory tradeoff: this approach makes sense to me, esp with #27630 in the pipeline\r\n- re-familiarizing myself with how transactions enter the mempool\r\n- understanding how the mempool sequence number is handled \r\n- thinking through edge cases & understanding the ones flagged in prior review of this PR\r\n\r\ntangential to this PR, but sharing since I noticed- `m_sequence_number` could be private and non `mutable` by removing the `const` from `GetAndIncrementSequence` (which doesn't conceptually make sense anyway) ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1555948320",
      "submitted_at": "2023-08-09T23:28:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "review_requested",
      "id": 10053134051,
      "node_id": "RRE_lADOABII585mDASbzwAAAAJXNqbj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10053134051",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T23:28:28Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1680269540,
      "node_id": "IC_kwDOABII585kJuDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1680269540",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T09:28:11Z",
      "updated_at": "2023-08-16T09:28:11Z",
      "author_association": "MEMBER",
      "body": "ACK fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1680269540",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675"
    },
    {
      "event": "review_request_removed",
      "id": 10106144298,
      "node_id": "RRRE_lADOABII585mDASbzwAAAAJaX4Yq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10106144298",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T09:28:15Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1581283327,
      "node_id": "PRR_kwDOABII585eQHf_",
      "url": null,
      "actor": null,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1581283327",
      "submitted_at": "2023-08-16T19:27:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T22:16:18Z",
      "updated_at": "2023-08-16T22:16:18Z",
      "source": {
        "issue": {
          "id": 1401856133,
          "node_id": "PR_kwDOABII585AbffS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
          "number": 26283,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Fill reconciliation sets and request reconciliation (Erlay)",
          "body": "This is a part of the Erlay project:\r\n- [parent PR](https://github.com/bitcoin/bitcoin/pull/21515)\r\n- [associated BIP-330](https://github.com/bitcoin/bips/pull/1376). **Note this is not what's in the bitcoin/bips repo, but an updated version.**\r\n- [previous PR](https://github.com/bitcoin/bitcoin/pull/23443)\r\n\r\n-------\r\n\r\nFirst, this PR enables keeping track of per-peer reconciliation sets, containing those transactions which we intend to exchange efficiently. The remaining transactions are announced via flooding, as usual. \r\nSecond, this PR enables periodically initiating a reconciliation round via a new p2p message.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26283",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26283.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26283.patch"
          },
          "created_at": "2022-10-08T07:29:52Z",
          "updated_at": "2023-08-17T11:43:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T01:52:34Z",
      "updated_at": "2023-08-17T01:52:34Z",
      "source": {
        "issue": {
          "id": 1677018572,
          "node_id": "I_kwDOABII585j9UXM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27502",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27502",
          "number": 27502,
          "state": "open",
          "state_reason": null,
          "title": "meta: Isolated fuzzing of net processing",
          "body": "Efficient isolated fuzzing of our message processing code (net processing) would be very valuable. However, to make that deterministic, fast and fuzzer friendly it appears that extensive refactoring is required. There are three main blockers: module separation (net/net processing/validation split), determinism, performance.\r\n\r\nI am gonna use this issue to track and motivate the work that needs to be done. It would be great if we can achieve the same outcome with less refactoring but I don't see how at the moment. Open to suggestions and feedback.\r\n\r\n### Module separation\r\n\r\nOnce we have a clean separation between our net, net processing and validation modules, we can fuzz/test them in isolation to maximize the bug yield (🐛, 🪲, 🪳). By design, most fuzzing engines are not great at finding bugs when the scope of the targets is too large (e.g. fuzzing net, net processing and validation all at once).\r\n\r\n* net / net processing split (https://github.com/bitcoin/bitcoin/pull/28252)\r\n  * Move application layer data from net to net processing ([#19398](https://github.com/bitcoin/bitcoin/issues/19398))\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/26621\r\n  * Define a clean interface between net processing <-> net \r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/25268\r\n      - [x] https://github.com/bitcoin/bitcoin/pull/25500\r\n      - [ ] https://github.com/bitcoin/bitcoin/pull/25572\r\n    - [x] https://github.com/bitcoin/bitcoin/pull/27257\r\n* net processing / validation split (lots of overlap with kernel)\r\n  * Reduce `cs_main` usage in net processing\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/26151\r\n    - [x] https://github.com/bitcoin/bitcoin/pull/26140\r\n    - [ ] Kill CNodeState\r\n  * Define a clean interface between net processing <-> validation\r\n\r\n### Determinism\r\n\r\nNon-deterministic fuzz targets are less efficient at finding bugs and debugging non-reproducible bugs is annoying/costly.\r\n\r\n* All required components should be newly setup for each target execution\r\n  * Can be done currently using our testing setup suite but that's waaaay too slow for fuzzing.\r\n* Avoid  `GetRand()` (mock it?)\r\n* Avoid globals (are there any globals left in net processing?)\r\n\r\n### Performance\r\n\r\nFuzzing is a search, the faster the search - the better.\r\n\r\n* LevelDB (is in memory but still slow?)\r\n  * Probably solved by mocking out validation?\r\n* PeerManager construction is expensive because it requires multi megabyte allocations each time (mostly due to large bloom filters)\r\n* Disk usage\r\n  * Block storage\r\n    - [x] https://github.com/bitcoin/bitcoin/pull/27125\r\n    - [ ] Create a mock of BlockManager for in memory block storage?\r\n  * BanMan (banlist is written to disk)\r\n\r\n### Misc\r\n\r\n* Decouple net processing from ArgsMan (args setup is slow)\r\n  * Allows to fuzz the peerman options without depending on the global args man \r\n  - [x] https://github.com/bitcoin/bitcoin/pull/27499\r\n\r\n---\r\n\r\nPlease let me know if you think there are PRs that aren't listed here but should be.\r\n",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "created_at": "2023-04-20T16:06:11Z",
          "updated_at": "2023-08-17T01:52:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "merged",
      "id": 10117416011,
      "node_id": "ME_lADOABII585mDASbzwAAAAJbC4RL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10117416011",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a62f5ee86c3959d5e3dd6e2d4a5ac1535b8a0109",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a62f5ee86c3959d5e3dd6e2d4a5ac1535b8a0109",
      "created_at": "2023-08-17T09:52:21Z"
    },
    {
      "event": "closed",
      "id": 10117416034,
      "node_id": "CE_lADOABII585mDASbzwAAAAJbC4Ri",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10117416034",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T09:52:21Z"
    },
    {
      "event": "reviewed",
      "id": 1582115745,
      "node_id": "PRR_kwDOABII585eTSuh",
      "url": null,
      "actor": null,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm, one doc nit.\r\n\r\n\r\nApproach ACK fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0, though I have not closely reviewed e4ffabbffacc4b890d393aafcc8286916ef887d8 🏁\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: Approach ACK fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0, though I have not closely reviewed e4ffabbffacc4b890d393aafcc8286916ef887d8 🏁\r\nwZjhZp82DT5gvd1V2EbD+Lsejn1GZvm9++6dmmXGfe1v+61gbP3gMtecA9Vz94YNZ3KT8EyzjbMr83Tiw/rEBg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#pullrequestreview-1582115745",
      "submitted_at": "2023-08-17T10:57:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195220741",
      "pull_request_review_id": 1428669748,
      "id": 1195220741,
      "node_id": "PRRC_kwDOABII585HPZ8F",
      "diff_hunk": "@@ -2261,26 +2253,17 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_send_time);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);\n     }\n \n-    // Otherwise, the transaction must have been announced recently.\n-    if (tx_relay.m_recently_announced_invs.contains(gtxid.GetHash())) {\n-        // If it was, it can be relayed from either the mempool...\n-        if (txinfo.tx) return std::move(txinfo.tx);\n-        // ... or the relay pool.\n-        auto mi = mapRelay.find(gtxid.GetHash());\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n+    // Otherwise, the transaction must have been announced recently or removed from the mempool.\n+    // If the latter, maybe it's in mapRelay!",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Looks like this will make inbound peers be treated identical to outbound ones for the purposes of getdata, as long as mapRelay is still around. For in-mempool txs it may be possible to fix by moving the time check outside of `info_for_relay` into this function and returning a nullptr early if the tx is known to not be announced. For non-mempool txs, I don't know.",
      "created_at": "2023-05-16T14:04:22Z",
      "updated_at": "2023-05-16T15:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195220741",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195220741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195225774",
      "pull_request_review_id": 1428669748,
      "id": 1195225774,
      "node_id": "PRRC_kwDOABII585HPbKu",
      "diff_hunk": "@@ -126,7 +126,7 @@ class CTxMemPoolEntry\n         return GetVirtualTransactionSize(nTxWeight, sigOpCost, ::nBytesPerSigOp);\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n-    std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    NodeClock::time_point GetNodeTime() const { return nTime; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: My recommendation would be to not rename the method, or if you want, to pick `GetEntryTime()` over `GetNodeTime()`, because the function doesn't return the current node time but the time of transaction entry.",
      "created_at": "2023-05-16T14:07:57Z",
      "updated_at": "2023-05-16T15:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195225774",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195225774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195879972",
      "pull_request_review_id": 1429722989,
      "id": 1195879972,
      "node_id": "PRRC_kwDOABII585HR64k",
      "diff_hunk": "@@ -126,7 +126,7 @@ class CTxMemPoolEntry\n         return GetVirtualTransactionSize(nTxWeight, sigOpCost, ::nBytesPerSigOp);\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n-    std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    NodeClock::time_point GetNodeTime() const { return nTime; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": 1195225774,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I mostly renamed it to make sure there'd be compiler errors anywhere that it didn't get updated, just in case some type conversion happened automatically.",
      "created_at": "2023-05-17T03:09:33Z",
      "updated_at": "2023-05-17T03:09:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195879972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195879972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195881028",
      "pull_request_review_id": 1429724356,
      "id": 1195881028,
      "node_id": "PRRC_kwDOABII585HR7JE",
      "diff_hunk": "@@ -2261,26 +2253,17 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_send_time);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);\n     }\n \n-    // Otherwise, the transaction must have been announced recently.\n-    if (tx_relay.m_recently_announced_invs.contains(gtxid.GetHash())) {\n-        // If it was, it can be relayed from either the mempool...\n-        if (txinfo.tx) return std::move(txinfo.tx);\n-        // ... or the relay pool.\n-        auto mi = mapRelay.find(gtxid.GetHash());\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n+    // Otherwise, the transaction must have been announced recently or removed from the mempool.\n+    // If the latter, maybe it's in mapRelay!",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": 1195220741,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, this is broken as-is. My original idea was to add a timestamp to the `mapRelay` entries too, then it was to drop `mapRelay` and add `vExtraTxnForCompact`-relay, then I compromised by just doing it wrong...",
      "created_at": "2023-05-17T03:11:57Z",
      "updated_at": "2023-05-17T03:11:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195881028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195881028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197968591",
      "pull_request_review_id": 1432933993,
      "id": 1197968591,
      "node_id": "PRRC_kwDOABII585HZ4zP",
      "diff_hunk": "@@ -2299,7 +2299,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n-    const auto now{GetTime<std::chrono::seconds>()};\n+    const NodeClock::time_point now = NodeClock::now();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "023d0503ffdd91d408f10b34905b58f68edcc056",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `NodeClock::now()` time can go backwards, right?  If so I think that could pose some issues if we're primarily relying on system time in order to determine whether transactions should be available for relay. Can we use a steady clock instead?",
      "created_at": "2023-05-18T15:31:02Z",
      "updated_at": "2023-05-18T15:31:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1197968591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197968591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202129704",
      "pull_request_review_id": 1439442345,
      "id": 1202129704,
      "node_id": "PRRC_kwDOABII585Hpwso",
      "diff_hunk": "@@ -2299,7 +2299,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n-    const auto now{GetTime<std::chrono::seconds>()};\n+    const NodeClock::time_point now = NodeClock::now();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "023d0503ffdd91d408f10b34905b58f68edcc056",
      "in_reply_to_id": 1197968591,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could; it'd mean adding an extra field to the mempool, and using both mockable time and steady time for dealing with next invs (mockable time so we can skip over delays in sending invs; steady time for this purpose).",
      "created_at": "2023-05-23T11:29:51Z",
      "updated_at": "2023-05-23T11:29:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202129704",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202129704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202222611",
      "pull_request_review_id": 1439563203,
      "id": 1202222611,
      "node_id": "PRRC_kwDOABII585HqHYT",
      "diff_hunk": "@@ -78,7 +78,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n             }\n             if (nTime > TicksSinceEpoch<std::chrono::seconds>(now - pool.m_expiry)) {\n                 LOCK(cs_main);\n-                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, nTime, /*bypass_limits=*/false, /*test_accept=*/false);\n+                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, NodeClock::time_point{std::chrono::seconds{nTime}}, /*bypass_limits=*/false, /*test_accept=*/false);",
      "path": "src/kernel/mempool_persist.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might have to use `LossyChronoFormatter` to avoid the fuzz crash?",
      "created_at": "2023-05-23T12:20:03Z",
      "updated_at": "2023-05-23T12:20:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202222611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202222611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1215190508",
      "pull_request_review_id": 1458871012,
      "id": 1215190508,
      "node_id": "PRRC_kwDOABII585IblXs",
      "diff_hunk": "@@ -78,7 +78,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n             }\n             if (nTime > TicksSinceEpoch<std::chrono::seconds>(now - pool.m_expiry)) {\n                 LOCK(cs_main);\n-                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, nTime, /*bypass_limits=*/false, /*test_accept=*/false);\n+                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, NodeClock::time_point{std::chrono::seconds{nTime}}, /*bypass_limits=*/false, /*test_accept=*/false);",
      "path": "src/kernel/mempool_persist.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "in_reply_to_id": 1202222611,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the answer is just to add a new tx entry field for the steady clock time and use that at natural precision.",
      "created_at": "2023-06-03T04:14:08Z",
      "updated_at": "2023-06-03T04:14:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1215190508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1215190508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218613588",
      "pull_request_review_id": 1463499764,
      "id": 1218613588,
      "node_id": "PRRC_kwDOABII585IopFU",
      "diff_hunk": "@@ -2261,26 +2253,17 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_send_time);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);\n     }\n \n-    // Otherwise, the transaction must have been announced recently.\n-    if (tx_relay.m_recently_announced_invs.contains(gtxid.GetHash())) {\n-        // If it was, it can be relayed from either the mempool...\n-        if (txinfo.tx) return std::move(txinfo.tx);\n-        // ... or the relay pool.\n-        auto mi = mapRelay.find(gtxid.GetHash());\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n+    // Otherwise, the transaction must have been announced recently or removed from the mempool.\n+    // If the latter, maybe it's in mapRelay!",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": 1195220741,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This includes commits to drop `mapRelay` now (cf #27625) so shouldn't be broken anymore.",
      "created_at": "2023-06-05T21:26:43Z",
      "updated_at": "2023-06-05T21:26:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1218613588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218613588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218614297",
      "pull_request_review_id": 1463501749,
      "id": 1218614297,
      "node_id": "PRRC_kwDOABII585IopQZ",
      "diff_hunk": "@@ -126,7 +126,7 @@ class CTxMemPoolEntry\n         return GetVirtualTransactionSize(nTxWeight, sigOpCost, ::nBytesPerSigOp);\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n-    std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    NodeClock::time_point GetNodeTime() const { return nTime; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "9607a5078dbb6a65913055cf36a14c6e07229309",
      "in_reply_to_id": 1195225774,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't renamed anymore, instead `GetEntryTime()` is added for the steady clock time tracking mempool entry. (Happy to rename it to something better if someone has a suggestion)",
      "created_at": "2023-06-05T21:27:40Z",
      "updated_at": "2023-06-05T21:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1218614297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218614297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218614612",
      "pull_request_review_id": 1463502605,
      "id": 1218614612,
      "node_id": "PRRC_kwDOABII585IopVU",
      "diff_hunk": "@@ -2299,7 +2299,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n-    const auto now{GetTime<std::chrono::seconds>()};\n+    const NodeClock::time_point now = NodeClock::now();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "023d0503ffdd91d408f10b34905b58f68edcc056",
      "in_reply_to_id": 1197968591,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switched to steady clock.",
      "created_at": "2023-06-05T21:28:03Z",
      "updated_at": "2023-06-05T21:28:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1218614612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218614612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218615193",
      "pull_request_review_id": 1463504124,
      "id": 1218615193,
      "node_id": "PRRC_kwDOABII585IopeZ",
      "diff_hunk": "@@ -78,7 +78,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n             }\n             if (nTime > TicksSinceEpoch<std::chrono::seconds>(now - pool.m_expiry)) {\n                 LOCK(cs_main);\n-                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, nTime, /*bypass_limits=*/false, /*test_accept=*/false);\n+                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, NodeClock::time_point{std::chrono::seconds{nTime}}, /*bypass_limits=*/false, /*test_accept=*/false);",
      "path": "src/kernel/mempool_persist.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "in_reply_to_id": 1202222611,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Entry time is no longer saved or loaded, so this is no longer relevant.",
      "created_at": "2023-06-05T21:28:44Z",
      "updated_at": "2023-06-05T21:28:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1218615193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218615193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230650892",
      "pull_request_review_id": 1481014085,
      "id": 1230650892,
      "node_id": "PRRC_kwDOABII585JWj4M",
      "diff_hunk": "@@ -83,6 +84,7 @@ class CTxMemPoolEntry\n     const int64_t sigOpCost;        //!< Total sigop cost\n     CAmount m_modified_fee;         //!< Used for determining the priority of the transaction for mining in a block\n     LockPoints lockPoints;          //!< Track the height and time at which tx was final\n+    const SteadyClock::time_point m_entry_time; //!< High-precision time when entering the mempool",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 12,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: may be better to put this right after the `nTime` field to group related stuff?",
      "created_at": "2023-06-15T08:37:15Z",
      "updated_at": "2023-06-15T08:39:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230650892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230650892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230651860",
      "pull_request_review_id": 1481014085,
      "id": 1230651860,
      "node_id": "PRRC_kwDOABII585JWkHU",
      "diff_hunk": "@@ -127,6 +130,7 @@ class CTxMemPoolEntry\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    SteadyClock::time_point GetEntryTime() const { return m_entry_time; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 28,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "May be good to explain and document what time point to use when or why there are two different ones?",
      "created_at": "2023-06-15T08:37:45Z",
      "updated_at": "2023-06-15T08:39:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230651860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230651860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230653996",
      "pull_request_review_id": 1481014085,
      "id": 1230653996,
      "node_id": "PRRC_kwDOABII585JWkos",
      "diff_hunk": "@@ -127,6 +130,7 @@ class CTxMemPoolEntry\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    SteadyClock::time_point GetEntryTime() const { return m_entry_time; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 28,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230651860,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this one is only to be used internally for relay and the other one is to be used for everything else?",
      "created_at": "2023-06-15T08:39:21Z",
      "updated_at": "2023-06-15T08:39:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230653996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230653996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230714110",
      "pull_request_review_id": 1481109700,
      "id": 1230714110,
      "node_id": "PRRC_kwDOABII585JWzT-",
      "diff_hunk": "@@ -127,6 +130,7 @@ class CTxMemPoolEntry\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    SteadyClock::time_point GetEntryTime() const { return m_entry_time; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 28,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230651860,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Looks like this one is only to be used internally for relay and the other one is to be used for everything else?\r\n\r\nYeah - `SteadyClock` times aren't comparable between runs (particularly if there was a reboot inbetween), so these timestamps are only useful \"internally\" in general.\r\n\r\nCould alternatively store the value of `mempool->GetSequence()` instead of the `SteadyClock` time for a similar result.",
      "created_at": "2023-06-15T09:21:09Z",
      "updated_at": "2023-06-15T09:21:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230714110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230714110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230935886",
      "pull_request_review_id": 1481452497,
      "id": 1230935886,
      "node_id": "PRRC_kwDOABII585JXpdO",
      "diff_hunk": "@@ -127,6 +130,7 @@ class CTxMemPoolEntry\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    SteadyClock::time_point GetEntryTime() const { return m_entry_time; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 28,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230651860,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like the mempool sequence was added in e76fc2b84d065c9d06010d0a10b316f1f9d36fb9 and is exposed publicly. So I guess it won't be going away any time soon and using it over `SteadyClock` allows to drop the static_assert about the precision (or just having to think about precision at all), as well as avoiding confusion about having two time points?",
      "created_at": "2023-06-15T12:29:21Z",
      "updated_at": "2023-06-15T12:29:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1230935886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1230935886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245801404",
      "pull_request_review_id": 1504151388,
      "id": 1245801404,
      "node_id": "PRRC_kwDOABII585KQWu8",
      "diff_hunk": "@@ -408,6 +408,8 @@ class CTxMemPool\n     using txiter = indexed_transaction_set::nth_index<0>::type::const_iterator;\n     std::vector<std::pair<uint256, txiter>> vTxHashes GUARDED_BY(cs); //!< All tx witness hashes/entries in mapTx, in random order\n \n+    TxMempoolInfo info_for_relay(const GenTxid& gtxid, SteadyClock::time_point last_inv) const;",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In e16fb7d212bf1dbb5086ed8f452e8e80acbe8325 consider adding the `info_for_relay()` getter declaration next to `info()` and `infoAll()`\r\n\r\n<details><summary>diff</summary><p>\r\n\r\n```diff\r\n--- a/src/txmempool.h\r\n+++ b/src/txmempool.h\r\n@@ -411,8 +411,6 @@ public:\r\n     using txiter = indexed_transaction_set::nth_index<0>::type::const_iterator;\r\n     std::vector<std::pair<uint256, txiter>> vTxHashes GUARDED_BY(cs); //!< All tx witness hashes/entries in mapTx, in random order\r\n \r\n-    TxMempoolInfo info_for_relay(const GenTxid& gtxid, SteadyClock::time_point last_inv) const;\r\n-\r\n     typedef std::set<txiter, CompareIteratorByHash> setEntries;\r\n \r\n     using Limits = kernel::MemPoolLimits;\r\n@@ -710,6 +708,7 @@ public:\r\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\r\n     }\r\n     TxMempoolInfo info(const GenTxid& gtxid) const;\r\n+    TxMempoolInfo info_for_relay(const GenTxid& gtxid, SteadyClock::time_point last_inv) const;\r\n     std::vector<TxMempoolInfo> infoAll() const;\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-06-28T21:44:44Z",
      "updated_at": "2023-06-28T21:55:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1245801404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245801404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245804422",
      "pull_request_review_id": 1504151388,
      "id": 1245804422,
      "node_id": "PRRC_kwDOABII585KQXeG",
      "diff_hunk": "@@ -83,6 +84,7 @@ class CTxMemPoolEntry\n     const int64_t sigOpCost;        //!< Total sigop cost\n     CAmount m_modified_fee;         //!< Used for determining the priority of the transaction for mining in a block\n     LockPoints lockPoints;          //!< Track the height and time at which tx was final\n+    const SteadyClock::time_point m_entry_time; //!< High-precision time when entering the mempool",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 12,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230650892,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 930b1c7323be84ad7fb8371ee744f201325f18bb agree with @MarcoFalke to put this next to `nTime`, and it may be nice to document how each is used and why the need for both",
      "created_at": "2023-06-28T21:49:07Z",
      "updated_at": "2023-06-28T21:55:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1245804422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245804422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248242406",
      "pull_request_review_id": 1507821901,
      "id": 1248242406,
      "node_id": "PRRC_kwDOABII585KZqrm",
      "diff_hunk": "@@ -83,6 +84,7 @@ class CTxMemPoolEntry\n     const int64_t sigOpCost;        //!< Total sigop cost\n     CAmount m_modified_fee;         //!< Used for determining the priority of the transaction for mining in a block\n     LockPoints lockPoints;          //!< Track the height and time at which tx was final\n+    const SteadyClock::time_point m_entry_time; //!< High-precision time when entering the mempool",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 12,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230650892,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No longer relevant",
      "created_at": "2023-06-30T20:00:27Z",
      "updated_at": "2023-06-30T20:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1248242406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248242406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248242732",
      "pull_request_review_id": 1507822403,
      "id": 1248242732,
      "node_id": "PRRC_kwDOABII585KZqws",
      "diff_hunk": "@@ -127,6 +130,7 @@ class CTxMemPoolEntry\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    SteadyClock::time_point GetEntryTime() const { return m_entry_time; }",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 28,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "500e31e87b33418a0747a0f3118db9ceb23896be",
      "in_reply_to_id": 1230651860,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated to use the mempool sequence number rather than `SteadyClock`",
      "created_at": "2023-06-30T20:00:58Z",
      "updated_at": "2023-06-30T20:00:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1248242732",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248242732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253438163",
      "pull_request_review_id": 1515038131,
      "id": 1253438163,
      "node_id": "PRRC_kwDOABII585KtfLT",
      "diff_hunk": "@@ -120,6 +123,13 @@ class CTxMemPoolEntry\n           nModFeesWithAncestors{nFee},\n           nSigOpCostWithAncestors{sigOpCost} {}\n \n+    CTxMemPoolEntry(const CTxMemPoolEntry&) = default;\n+    CTxMemPoolEntry& operator=(const CTxMemPoolEntry&) = delete;\n+\n+    // can't be moved\n+    CTxMemPoolEntry(CTxMemPoolEntry&&) = default;\n+    CTxMemPoolEntry& operator=(CTxMemPoolEntry&&) = delete;",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 40,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "eb4dc54 Are these special member functions [needed](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-zero), and if yes, [declare them all?](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c21-if-you-define-or-delete-any-copy-move-or-destructor-function-define-or-delete-them-all) A comment in the commit explaining why they are added would be helpful.\r\n```diff\r\n+    CTxMemPoolEntry() = delete;\r\n+    ~CTxMemPoolEntry() = default;\r\n     CTxMemPoolEntry(const CTxMemPoolEntry&) = default;\r\n-    CTxMemPoolEntry& operator=(const CTxMemPoolEntry&) = delete;\r\n-\r\n-    // can't be moved\r\n+    CTxMemPoolEntry& operator=(const CTxMemPoolEntry&) = delete; // disallow copy assignment\r\n     CTxMemPoolEntry(CTxMemPoolEntry&&) = default;\r\n-    CTxMemPoolEntry& operator=(CTxMemPoolEntry&&) = delete;\r\n+    CTxMemPoolEntry& operator=(CTxMemPoolEntry&&) = delete;  // disallow move assignment\r\n```\r\n",
      "created_at": "2023-07-05T17:44:27Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253438163",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253438163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253457842",
      "pull_request_review_id": 1515038131,
      "id": 1253457842,
      "node_id": "PRRC_kwDOABII585Ktj-y",
      "diff_hunk": "@@ -54,12 +54,12 @@ class LOCKABLE Epoch\n \n         // only allow modification via Epoch member functions\n         friend class Epoch;\n-        Marker& operator=(const Marker&) = delete;\n \n     public:\n         Marker() = default;\n         Marker(const Marker&) = default;\n-        Marker(Marker&&) = delete;\n+        Marker(Marker&&) = default;\n+        Marker& operator=(const Marker&) = delete;",
      "path": "src/util/epochguard.h",
      "position": null,
      "original_position": 11,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "eb4dc54 These changes seem needed due to the special member functions added to `CTxMemPoolEntry` in the same commit? If they are changed, a comment in the commit explaining why would be helpful.",
      "created_at": "2023-07-05T18:06:00Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253457842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253457842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253479064",
      "pull_request_review_id": 1515038131,
      "id": 1253479064,
      "node_id": "PRRC_kwDOABII585KtpKY",
      "diff_hunk": "@@ -676,7 +676,7 @@ class ChainImpl : public Chain\n     {\n         if (!m_node.mempool) return true;\n         LockPoints lp;\n-        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, 0, false, 0, lp);",
      "path": "src/node/interfaces.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unrelated to this pull, but seems odd that `entry_height` is set to 0 here when 1 is the usual initial value.",
      "created_at": "2023-07-05T18:26:48Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253479064",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253479064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 679,
      "original_line": 679,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253501078",
      "pull_request_review_id": 1515038131,
      "id": 1253501078,
      "node_id": "PRRC_kwDOABII585KtuiW",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ca6379eb While touching this, with guaranteed copy elision it's now almost always a pessimization to return `std::move(local)` (and the other remaining return values in this function are `return it->second;` and `{}`).\r\n\r\n```suggestion\r\n        return txinfo.tx;\r\n```\r\n",
      "created_at": "2023-07-05T18:49:55Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253501078",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253501078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253541014",
      "pull_request_review_id": 1515038131,
      "id": 1253541014,
      "node_id": "PRRC_kwDOABII585Kt4SW",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/ca6379eba56ca8f669fea6c91877e9ecbb31451b why is `peer->m_wtxid_relay` added in this conditional? (in which case the comment just below would need updating)",
      "created_at": "2023-07-05T19:31:02Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253541014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253541014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253548429",
      "pull_request_review_id": 1515038131,
      "id": 1253548429,
      "node_id": "PRRC_kwDOABII585Kt6GN",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {\n                             // Insert txid into m_tx_inventory_known_filter, even for\n                             // wtxidrelay peers. This prevents re-adding of\n                             // unconfirmed parents to the recently_announced\n                             // filter, when a child tx is requested. See\n                             // ProcessGetData().\n-                            tx_relay->m_tx_inventory_known_filter.insert(txid);\n+                            tx_relay->m_tx_inventory_known_filter.insert(txinfo.tx->GetHash());\n                         }\n                     }\n+\n+                    // We don't hold cs_main or mempool.cs prior to setting current_time,\n+                    // so it's possible a tx could have been added to the mempool and included\n+                    // in m_tx_inventory_to_send and INVed above with a mempool nTime after\n+                    // current_time. As such, only get the current time after sending all the invs.\n+                    LOCK(m_mempool.cs);\n+                    tx_relay->m_last_inv_sequence = m_mempool.GetSequence();",
      "path": "src/net_processing.cpp",
      "position": 224,
      "original_position": 215,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/ca6379eba56ca8f669fea6c91877e9ecbb31451b It looks like the documentation above needs updating, i.e. `s/current_time/current sequence/`, now that `tx_relay->m_last_inv_send_time = SteadyClock::now();` in this commit was changed to `tx_relay->m_last_inv_sequence = m_mempool.GetSequence();`",
      "created_at": "2023-07-05T19:35:17Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253548429",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253548429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5751,
      "original_line": 5751,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253614165",
      "pull_request_review_id": 1515038131,
      "id": 1253614165,
      "node_id": "PRRC_kwDOABII585KuKJV",
      "diff_hunk": "@@ -708,6 +708,7 @@ class CTxMemPool\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\n     }\n     TxMempoolInfo info(const GenTxid& gtxid) const;\n+    TxMempoolInfo info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const;",
      "path": "src/txmempool.h",
      "position": 6,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/eb4dc54b3c9b9edad9b469b07cbac0573bbf1a37 A Doxygen doc explaining the `for_relay` aspect and `last_sequence` logic would be handy.",
      "created_at": "2023-07-05T20:30:29Z",
      "updated_at": "2023-07-05T20:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253614165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253614165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 713,
      "original_line": 713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253703097",
      "pull_request_review_id": 1515444023,
      "id": 1253703097,
      "node_id": "PRRC_kwDOABII585Kuf25",
      "diff_hunk": "@@ -120,6 +123,13 @@ class CTxMemPoolEntry\n           nModFeesWithAncestors{nFee},\n           nSigOpCostWithAncestors{sigOpCost} {}\n \n+    CTxMemPoolEntry(const CTxMemPoolEntry&) = default;\n+    CTxMemPoolEntry& operator=(const CTxMemPoolEntry&) = delete;\n+\n+    // can't be moved\n+    CTxMemPoolEntry(CTxMemPoolEntry&&) = default;\n+    CTxMemPoolEntry& operator=(CTxMemPoolEntry&&) = delete;",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 40,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253438163,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, yuck; that's a bad rebase. :(",
      "created_at": "2023-07-05T22:07:24Z",
      "updated_at": "2023-07-05T22:07:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253703097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253703097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253707986",
      "pull_request_review_id": 1515450372,
      "id": 1253707986,
      "node_id": "PRRC_kwDOABII585KuhDS",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253501078,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's moving a member of a local struct/object, not a simple local, so it can't have been constructed in place and copy/move elision isn't possible, though?",
      "created_at": "2023-07-05T22:14:34Z",
      "updated_at": "2023-07-05T22:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253707986",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253707986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253709698",
      "pull_request_review_id": 1515452719,
      "id": 1253709698,
      "node_id": "PRRC_kwDOABII585KuheC",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253501078,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, you may be right.\r\n\r\nhttps://shaharmike.com/cpp/rvo/#returning-member\r\n",
      "created_at": "2023-07-05T22:17:38Z",
      "updated_at": "2023-07-05T23:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253709698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253709698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253739563",
      "pull_request_review_id": 1515493315,
      "id": 1253739563,
      "node_id": "PRRC_kwDOABII585Kuowr",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253501078,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "<details><summary>If this test is valid (arm64 clang 16), returning the struct member without std::move may be better</summary><p>\r\n\r\n```cpp\r\n// rvo.cpp\r\n\r\n#include <iostream>\r\n\r\nstruct Snitch {   // Note: All methods have side effects\r\n    Snitch() { std::cout << \"ctor\" << std::endl; }\r\n    ~Snitch() { std::cout << \"dtor\" << std::endl; }\r\n\r\n    Snitch(const Snitch&) { std::cout << \"copy ctor\" << std::endl; }\r\n    Snitch(Snitch&&) { std::cout << \"move ctor\" << std::endl; }\r\n\r\n    Snitch& operator=(const Snitch&) {\r\n        std::cout << \"copy assignment\" << std::endl;\r\n        return *this;\r\n    }\r\n\r\n    Snitch& operator=(Snitch&&) {\r\n        std::cout << \"move assignment\" << std::endl;\r\n        return *this;\r\n    }\r\n};\r\n\r\nstruct Wrapper {\r\n    Snitch snitch;\r\n    int i;\r\n};\r\n\r\nSnitch foo() {\r\n    auto s = Wrapper().snitch;\r\n    return s;\r\n}\r\n\r\nSnitch foo_move() {\r\n    auto s = Wrapper().snitch;\r\n    return std::move(s);\r\n}\r\n\r\n\r\nint main() {\r\n    std::cout << \"\\nfoo_move...\" << std::endl;\r\n    Snitch t = foo_move();\r\n\r\n    std::cout << \"\\nfoo...\" << std::endl;\r\n    Snitch s = foo();\r\n\r\n    std::cout << \"\\ndone...\" << std::endl;\r\n    return 0;\r\n}\r\n\r\n// $ clang++ -std=c++17 -stdlib=libc++ rvo.cpp && ./a.out\r\n//\r\n// foo_move...\r\n// ctor\r\n// move ctor\r\n// dtor\r\n// move ctor\r\n// dtor\r\n//\r\n// foo...\r\n// ctor\r\n// move ctor\r\n// dtor\r\n//\r\n// done...\r\n// dtor\r\n// dtor\r\n```\r\n\r\n</p></details>\r\n\r\nNot necessarily for this pull, but was curious to find out.",
      "created_at": "2023-07-05T23:05:59Z",
      "updated_at": "2023-07-05T23:08:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253739563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253739563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253743213",
      "pull_request_review_id": 1515498106,
      "id": 1253743213,
      "node_id": "PRRC_kwDOABII585Kuppt",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For wtxid relay peers the prior `.insert(hash)` line adds the wtxid to the filter; for non-wtxid relay peers, it adds the txid to the filter. We only need to do a second insert to add the txid for wtxid relay peers, and then only when the wtxid is actually different to the txid. The extra check is just because testing a bool is easier than comparing two uint256s.",
      "created_at": "2023-07-05T23:11:30Z",
      "updated_at": "2023-07-05T23:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253743213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253743213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253748543",
      "pull_request_review_id": 1515505296,
      "id": 1253748543,
      "node_id": "PRRC_kwDOABII585Kuq8_",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {\n                             // Insert txid into m_tx_inventory_known_filter, even for\n                             // wtxidrelay peers. This prevents re-adding of\n                             // unconfirmed parents to the recently_announced\n                             // filter, when a child tx is requested. See\n                             // ProcessGetData().\n-                            tx_relay->m_tx_inventory_known_filter.insert(txid);\n+                            tx_relay->m_tx_inventory_known_filter.insert(txinfo.tx->GetHash());\n                         }\n                     }\n+\n+                    // We don't hold cs_main or mempool.cs prior to setting current_time,\n+                    // so it's possible a tx could have been added to the mempool and included\n+                    // in m_tx_inventory_to_send and INVed above with a mempool nTime after\n+                    // current_time. As such, only get the current time after sending all the invs.\n+                    LOCK(m_mempool.cs);\n+                    tx_relay->m_last_inv_sequence = m_mempool.GetSequence();",
      "path": "src/net_processing.cpp",
      "position": 224,
      "original_position": 215,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253548429,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated",
      "created_at": "2023-07-05T23:23:05Z",
      "updated_at": "2023-07-05T23:23:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253748543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253748543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5751,
      "original_line": 5751,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253751283",
      "pull_request_review_id": 1515508793,
      "id": 1253751283,
      "node_id": "PRRC_kwDOABII585Kurnz",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253501078,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the test you want is `auto s = Wrapper(); return std::move(s.snitch);`",
      "created_at": "2023-07-05T23:27:16Z",
      "updated_at": "2023-07-05T23:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253751283",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253751283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253753580",
      "pull_request_review_id": 1515511850,
      "id": 1253753580,
      "node_id": "PRRC_kwDOABII585KusLs",
      "diff_hunk": "@@ -2290,22 +2282,14 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    // If a tx was in the mempool prior to the last INV for this peer, permit the request.\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_sequence);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 80,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253501078,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, thanks.\r\n\r\n```\r\nfoo_move...\r\nctor\r\nmove ctor\r\ndtor\r\n\r\nfoo...\r\nctor\r\ncopy ctor\r\ndtor\r\n```\r\n",
      "created_at": "2023-07-05T23:29:53Z",
      "updated_at": "2023-07-05T23:29:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253753580",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253753580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2291,
      "original_line": 2291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254974082",
      "pull_request_review_id": 1517393245,
      "id": 1254974082,
      "node_id": "PRRC_kwDOABII585KzWKC",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, makes sense, and I see that your change makes the conditional here the same as in `ProcessMessage::TX` followed by the same comment; that `m_wtxid_relay` check and both comments were added in ac88e2eb6198.\r\n\r\n```cpp\r\n        if (peer->m_wtxid_relay && txid != wtxid) {\r\n            // Insert txid into m_tx_inventory_known_filter, even for\r\n            // wtxidrelay peers. This prevents re-adding of\r\n            // unconfirmed parents to the recently_announced\r\n            // filter, when a child tx is requested. See\r\n            // ProcessGetData().\r\n            AddKnownTx(*peer, txid);\r\n        }\r\n```",
      "created_at": "2023-07-06T22:09:22Z",
      "updated_at": "2023-07-07T01:09:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1254974082",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254974082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254977700",
      "pull_request_review_id": 1517398008,
      "id": 1254977700,
      "node_id": "PRRC_kwDOABII585KzXCk",
      "diff_hunk": "@@ -334,6 +334,9 @@ class CTxMemPool\n     // In-memory counter for external mempool tracking purposes.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 1,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "caf32d2 mentioning `m_sequence_number`'s new responsibility for p2p tx relay might be helpful (or alternatively, drop \"external\")\r\n\r\n```suggestion\r\n    // In-memory counter for internal (p2p tx relay) and external (zmq) mempool tracking purposes.\r\n```",
      "created_at": "2023-07-06T22:15:24Z",
      "updated_at": "2023-07-06T23:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1254977700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254977700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254980474",
      "pull_request_review_id": 1517398008,
      "id": 1254980474,
      "node_id": "PRRC_kwDOABII585KzXt6",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "caf32d2 nit if you retouch, could be `[[nodiscard]]`",
      "created_at": "2023-07-06T22:20:18Z",
      "updated_at": "2023-07-06T23:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1254980474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254980474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255524853",
      "pull_request_review_id": 1518419562,
      "id": 1255524853,
      "node_id": "PRRC_kwDOABII585K1cn1",
      "diff_hunk": "@@ -334,6 +334,9 @@ class CTxMemPool\n     // In-memory counter for external mempool tracking purposes.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 1,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254977700,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this just refers to external to the *mempool*.",
      "created_at": "2023-07-07T09:19:38Z",
      "updated_at": "2023-07-07T10:44:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1255524853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255524853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255585328",
      "pull_request_review_id": 1518419562,
      "id": 1255585328,
      "node_id": "PRRC_kwDOABII585K1rYw",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is adding the txid still necessary though?\r\n\r\nIIUC, the purpose of adding this transaction's txid to `inventory_known_filter` is to save a step if this transaction has an unconfirmed child (if it already existed in this filter, then we wouldn't add it to the `recently_announced` filter). The PR is deleting those lines from `ProcessGetData`, and that's fine since an unconfirmed parent's sequence number should before that of its child.\r\nBut I'm not able to see another reason why we should add the txid to the `inventory_known_filter`, so why not delete this whole block?\r\n\r\nIf it's still needed, it probably makes sense to update the 2 comments since they mention recently_announced filter.",
      "created_at": "2023-07-07T10:04:45Z",
      "updated_at": "2023-07-07T10:44:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1255585328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255585328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255631372",
      "pull_request_review_id": 1518419562,
      "id": 1255631372,
      "node_id": "PRRC_kwDOABII585K12oM",
      "diff_hunk": "@@ -147,8 +147,12 @@ static constexpr auto OUTBOUND_INVENTORY_BROADCAST_INTERVAL{2s};\n /** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Target number of inventory items to send per transmission. */",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n/** Target number of transaction inventory items to send per transmission. */\r\n```",
      "created_at": "2023-07-07T10:43:48Z",
      "updated_at": "2023-07-07T10:44:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1255631372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255631372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255997178",
      "pull_request_review_id": 1519154270,
      "id": 1255997178,
      "node_id": "PRRC_kwDOABII585K3P76",
      "diff_hunk": "@@ -334,6 +334,9 @@ class CTxMemPool\n     // In-memory counter for external mempool tracking purposes.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 1,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254977700,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There's also the RPC, so maybe (or something equivalent)\r\n\r\n`// In-memory counter used for P2P tx relay, RPC, and ZMQ mempool tracking purposes.`",
      "created_at": "2023-07-07T15:20:45Z",
      "updated_at": "2023-07-07T15:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1255997178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1255997178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257388744",
      "pull_request_review_id": 1520826091,
      "id": 1257388744,
      "node_id": "PRRC_kwDOABII585K8jrI",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> since an unconfirmed parent's sequence number should before that of its child.\r\n\r\nWhat if a reorg happens, which adds a formerly-confirmed parent of an unconfirmed transaction back to the mempool?\r\n\r\nI don't think this example is particularly relevant in this situation (in such circumstances suboptimal relay is to be expected anyway), but perhaps it's enough to make a blanket assumption that parent.entry_sequence < child.entry_sequence.",
      "created_at": "2023-07-09T00:06:16Z",
      "updated_at": "2023-07-09T00:06:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1257388744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257388744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261909269",
      "pull_request_review_id": 1527477257,
      "id": 1261909269,
      "node_id": "PRRC_kwDOABII585LNzUV",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe we could recover that as an invariant by having txs added in `MaybeUpdateMempoolForReorg` set the sequence number as 0? The idea being that if they've made it into a block then we've probably announced the headers already so it's no secret that we knew about the tx anyway...",
      "created_at": "2023-07-13T02:34:26Z",
      "updated_at": "2023-07-13T02:34:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1261909269",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261909269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264388335",
      "pull_request_review_id": 1531344114,
      "id": 1264388335,
      "node_id": "PRRC_kwDOABII585LXQjv",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But I'm not able to see another reason why we should add the txid to the `inventory_known_filter`, so why not delete this whole block?\r\n\r\nThat seems correct to me.",
      "created_at": "2023-07-15T11:26:43Z",
      "updated_at": "2023-07-15T11:26:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1264388335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264388335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264391225",
      "pull_request_review_id": 1531347103,
      "id": 1264391225,
      "node_id": "PRRC_kwDOABII585LXRQ5",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254980474,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's okay to discard it though -- you just might as well not have called the function in the first place if you don't care about the return value? (And given it's inline, presumably the compiler will treat it as if it wasn't called anyway).",
      "created_at": "2023-07-15T11:48:52Z",
      "updated_at": "2023-07-15T11:48:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1264391225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264391225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264440771",
      "pull_request_review_id": 1531436313,
      "id": 1264440771,
      "node_id": "PRRC_kwDOABII585LXdXD",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254980474,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, nodiscard is \"use it or lose it\" (remove it) -- applicable to getter/pure functions and any interfaces where the return value must be checked.  Unlike the latter, if the result of a getter is not used it would not be incorrect, but in that case the call is useless and should be removed; nodiscard just enforces it.\r\n",
      "created_at": "2023-07-15T14:27:32Z",
      "updated_at": "2023-07-15T14:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1264440771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264440771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264577309",
      "pull_request_review_id": 1531633907,
      "id": 1264577309,
      "node_id": "PRRC_kwDOABII585LX-sd",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254980474,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can see the point of adding `nodiscard` in that case for confusing APIs (eg, where someone not familiar with the API might write `foo.empty()` when they meant `foo.clear()`) but for a `foo.GetBar()` function, it just seems like busy work, that I don't think makes sense to do.",
      "created_at": "2023-07-15T22:13:06Z",
      "updated_at": "2023-07-15T22:13:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1264577309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264577309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264577392",
      "pull_request_review_id": 1531634026,
      "id": 1264577392,
      "node_id": "PRRC_kwDOABII585LX-tw",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated to not add txids to the known filter for wtxid peers, and to set the entry sequence to 0 when adding txs that were in a block that was reorged out.",
      "created_at": "2023-07-15T22:14:16Z",
      "updated_at": "2023-07-15T22:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1264577392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264577392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265149164",
      "pull_request_review_id": 1532439769,
      "id": 1265149164,
      "node_id": "PRRC_kwDOABII585LaKTs",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(), m_pool.GetSequence(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = args.m_bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "fec00d787b5530bbe892bef575fbb3cdc9d586ca",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fec00d787b5530bbe892bef575fbb3cdc9d586ca\r\n\r\nnit: you may drop the `args.` part and it will work because `bypass_limits` var is initialized above.",
      "created_at": "2023-07-17T10:18:09Z",
      "updated_at": "2023-07-17T10:18:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1265149164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265149164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265162383",
      "pull_request_review_id": 1532459976,
      "id": 1265162383,
      "node_id": "PRRC_kwDOABII585LaNiP",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {\n                             // Insert txid into m_tx_inventory_known_filter, even for\n                             // wtxidrelay peers. This prevents re-adding of\n                             // unconfirmed parents to the recently_announced\n                             // filter, when a child tx is requested. See\n                             // ProcessGetData().\n-                            tx_relay->m_tx_inventory_known_filter.insert(txid);\n+                            tx_relay->m_tx_inventory_known_filter.insert(txinfo.tx->GetHash());\n                         }\n                     }\n+\n+                    // We don't hold cs_main or mempool.cs prior to setting current_time,\n+                    // so it's possible a tx could have been added to the mempool and included\n+                    // in m_tx_inventory_to_send and INVed above with a mempool nTime after\n+                    // current_time. As such, only get the current time after sending all the invs.\n+                    LOCK(m_mempool.cs);\n+                    tx_relay->m_last_inv_sequence = m_mempool.GetSequence();",
      "path": "src/net_processing.cpp",
      "position": 224,
      "original_position": 215,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253548429,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "34eab37b08bb9f23459aad179685a505a46759d7\r\nSeems to be still talking about `current_time`?",
      "created_at": "2023-07-17T10:32:10Z",
      "updated_at": "2023-07-17T10:32:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1265162383",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265162383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5751,
      "original_line": 5751,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265171521",
      "pull_request_review_id": 1532474060,
      "id": 1265171521,
      "node_id": "PRRC_kwDOABII585LaPxB",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253541014,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is done in the following commit [c88deec](https://github.com/bitcoin/bitcoin/pull/27675/commits/c88deec99d53f55ff76fedaa30c318be6b72d085)",
      "created_at": "2023-07-17T10:42:12Z",
      "updated_at": "2023-07-17T10:42:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1265171521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265171521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267822413",
      "pull_request_review_id": 1536697145,
      "id": 1267822413,
      "node_id": "PRRC_kwDOABII585LkW9N",
      "diff_hunk": "@@ -5781,30 +5739,35 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        auto txid = txinfo.tx->GetHash();\n                         // Peer told you to not send transactions at that feerate? Don't bother sending it.\n                         if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (tx_relay->m_bloom_filter && !tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n-                        tx_relay->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(inv);\n                         nRelayedTransactions++;\n                         if (vInv.size() == MAX_INV_SZ) {\n                             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                             vInv.clear();\n                         }\n                         tx_relay->m_tx_inventory_known_filter.insert(hash);\n-                        if (hash != txid) {\n+                        if (peer->m_wtxid_relay && hash != txinfo.tx->GetHash()) {\n                             // Insert txid into m_tx_inventory_known_filter, even for\n                             // wtxidrelay peers. This prevents re-adding of\n                             // unconfirmed parents to the recently_announced\n                             // filter, when a child tx is requested. See\n                             // ProcessGetData().\n-                            tx_relay->m_tx_inventory_known_filter.insert(txid);\n+                            tx_relay->m_tx_inventory_known_filter.insert(txinfo.tx->GetHash());\n                         }\n                     }\n+\n+                    // We don't hold cs_main or mempool.cs prior to setting current_time,\n+                    // so it's possible a tx could have been added to the mempool and included\n+                    // in m_tx_inventory_to_send and INVed above with a mempool nTime after\n+                    // current_time. As such, only get the current time after sending all the invs.\n+                    LOCK(m_mempool.cs);\n+                    tx_relay->m_last_inv_sequence = m_mempool.GetSequence();",
      "path": "src/net_processing.cpp",
      "position": 224,
      "original_position": 215,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "284516f8e4303150628286636a629ff5a6f4a84a",
      "in_reply_to_id": 1253548429,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I messed this up in the [bad rebase](https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1253703097) :( Should be fixed now.",
      "created_at": "2023-07-19T09:33:05Z",
      "updated_at": "2023-07-19T09:33:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1267822413",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267822413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5751,
      "original_line": 5751,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267822689",
      "pull_request_review_id": 1536697570,
      "id": 1267822689,
      "node_id": "PRRC_kwDOABII585LkXBh",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(), m_pool.GetSequence(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = args.m_bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "fec00d787b5530bbe892bef575fbb3cdc9d586ca",
      "in_reply_to_id": 1265149164,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropped",
      "created_at": "2023-07-19T09:33:19Z",
      "updated_at": "2023-07-19T09:33:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1267822689",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267822689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274946418",
      "pull_request_review_id": 1547716506,
      "id": 1274946418,
      "node_id": "PRRC_kwDOABII585L_iNy",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254980474,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree as well.\r\n\r\nI think it is fine to only add `[[nodiscard]]` to functions where it is *harmful* to drop the result. Otherwise one ends up adding the attribute to *every* function that isn't `void`, which seems bloaty and unreadable?\r\n\r\nIf that was the goal, it could be easier achieved with a clang-tidy plugin, without touching or bloating any code at all.",
      "created_at": "2023-07-26T13:18:52Z",
      "updated_at": "2023-07-26T13:18:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1274946418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274946418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275250233",
      "pull_request_review_id": 1548205982,
      "id": 1275250233,
      "node_id": "PRRC_kwDOABII585MAsY5",
      "diff_hunk": "@@ -130,6 +132,7 @@ class CTxMemPoolEntry\n     int32_t GetTxWeight() const { return nTxWeight; }\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n+    uint64_t GetSequence() const { return entry_sequence; }",
      "path": "src/kernel/mempool_entry.h",
      "position": 29,
      "original_position": 29,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "172fa815e08b54c61b24d552f065df15046aef3c",
      "in_reply_to_id": 1254980474,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Right, nodiscard is \"use it or lose it\" (remove it) -- applicable to getter/pure functions and any interfaces where the return value must be checked. Unlike the latter, if the result of a getter is not used it would not be incorrect, but in that case the call is useless and should be removed; nodiscard just enforces it.\r\n\r\nI use nodiscard for these two cases I describe, where it can simplify review and find issues for me. For instance, when adding it to a declaration I was touching in a pull, it revealed that a relevant unit test was not using the results and thereby highlighted that assertions were missing, which I added. When reviewing a pull having a pure function with many callers or one that is incorrect if not checked, I might add nodiscard and rebuild, and it saves me time if it is already present when initially building the commit.",
      "created_at": "2023-07-26T16:57:46Z",
      "updated_at": "2023-07-26T17:01:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1275250233",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275250233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279974340",
      "pull_request_review_id": 1555948320,
      "id": 1279974340,
      "node_id": "PRRC_kwDOABII585MStvE",
      "diff_hunk": "@@ -30,6 +31,7 @@ struct TestMemPoolEntryHelper {\n     TestMemPoolEntryHelper& Fee(CAmount _fee) { nFee = _fee; return *this; }\n     TestMemPoolEntryHelper& Time(NodeSeconds tp) { time = tp; return *this; }\n     TestMemPoolEntryHelper& Height(unsigned int _height) { nHeight = _height; return *this; }\n+    TestMemPoolEntryHelper& Sequence(uint64_t _seq) { m_sequence = _seq; return *this; }",
      "path": "src/test/util/txmempool.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "18f9f3059e5a5334aa4f59136fbf3360a34e9280",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this used anywhere? ",
      "created_at": "2023-07-31T23:25:52Z",
      "updated_at": "2023-08-09T23:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1279974340",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279974340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280016445",
      "pull_request_review_id": 1555948320,
      "id": 1280016445,
      "node_id": "PRRC_kwDOABII585MS4A9",
      "diff_hunk": "@@ -708,6 +708,7 @@ class CTxMemPool\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\n     }\n     TxMempoolInfo info(const GenTxid& gtxid) const;\n+    TxMempoolInfo info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const;",
      "path": "src/txmempool.h",
      "position": 6,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "a03e235cf6c897c04ab4b0eb37d3e4aa2b6c60df",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "out of curiosity, why did you opt to make a separate function instead of having `last_sequence` be an optional field on `info`? is it to make it more apparent to future callers (aka devs implementing new call sites) that `last_sequence` must be passed in when retrieving a `TxMempoolInfo` with intent to relay? ",
      "created_at": "2023-08-01T01:07:43Z",
      "updated_at": "2023-08-09T23:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280016445",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280016445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 713,
      "original_line": 713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280281473",
      "pull_request_review_id": 1556437447,
      "id": 1280281473,
      "node_id": "PRRC_kwDOABII585MT4uB",
      "diff_hunk": "@@ -79,6 +79,7 @@ class CTxMemPoolEntry\n     const size_t nUsageSize;        //!< ... and total memory usage\n     const int64_t nTime;            //!< Local time when entering the mempool\n     const unsigned int entryHeight; //!< Chain height when entering the mempool\n+    const uint64_t entry_sequence;  //!< Sequence number when entering the mempool",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this comment could be misleading after ffa081b007300f28fd9cffe6f4795c1125e2f373\r\n```suggestion\r\n    const uint64_t entry_sequence;  //!< Sequence number used to determine whether this transaction is too recent for relay.\r\n```",
      "created_at": "2023-08-01T08:28:51Z",
      "updated_at": "2023-08-01T12:37:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280281473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280281473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280487599",
      "pull_request_review_id": 1556437447,
      "id": 1280487599,
      "node_id": "PRRC_kwDOABII585MUrCv",
      "diff_hunk": "@@ -708,6 +708,7 @@ class CTxMemPool\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\n     }\n     TxMempoolInfo info(const GenTxid& gtxid) const;\n+    TxMempoolInfo info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const;",
      "path": "src/txmempool.h",
      "position": 6,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A comment might be helpful\r\n```suggestion\r\n    /** Returns info for a transaction if its entry_sequence <= last_sequence. */\r\n    TxMempoolInfo info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const;\r\n```",
      "created_at": "2023-08-01T11:25:14Z",
      "updated_at": "2023-08-01T12:37:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280487599",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280487599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 713,
      "original_line": 713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280498101",
      "pull_request_review_id": 1556437447,
      "id": 1280498101,
      "node_id": "PRRC_kwDOABII585MUtm1",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there may be an off-by-one here? The sequence number isn't incremented until `TransactionAddedToMempool()` fires later. Which means we could have:\r\nt=0: mempool sequence is 1\r\nt=1: tx A is submitted, `CTxMemPoolEntry` is constructed with `entry_sequence = m_pool.GetSequence() = 1`\r\nt=2: main signals fires `TransactionAddedToMempool(A, m_pool.GetAndIncrementSequence())` with sequence 2\r\nt=3: p2p announces A, `m_last_inv_sequence = m_mempool.GetSequence() = 2`\r\nt=4: new tx B is submitted, `CTxMemPoolEntry` is constructed with `entry_sequence = m_pool.GetSequence() = 2`\r\nt=5: main signals fires `TransactionAddedToMempool(B, m_pool.GetAndIncrementSequence())` with sequence 3\r\nt=6: spy node requests A and B. `FindTxForGetData()` calls `info_for_relay(last_sequence=2)`. A's sequence is 1 and B's sequence is 2. They are both requestable.\r\n\r\nI don't think it's problematic that the `TransactionAddedToMempool` sequence and `entry_sequence` are not the same, but we shouldn't relay B in this situation.\r\n\r\nPerhaps it makes sense to use `m_pool.GetSequence() + 1` here?\r\n\r\nTested in https://github.com/glozow/bitcoin/commit/258b1c8ced55b528d1afc585c23a3d98fa30394b#diff-ad4f4d79f7e644c4ec85670cece6e14ded4302c45016b085bb9bdea5a1075d9cR105-R111",
      "created_at": "2023-08-01T11:35:32Z",
      "updated_at": "2023-08-01T12:53:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280498101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280498101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280500977",
      "pull_request_review_id": 1556437447,
      "id": 1280500977,
      "node_id": "PRRC_kwDOABII585MUuTx",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: the commit message for ffa081b007300f28fd9cffe6f4795c1125e2f373 is \"validation: when adding txs due to a block reorg, allow immediate relay\" but the immediate relay behavior isn't until the subsequent commit when the bloom filter is removed",
      "created_at": "2023-08-01T11:38:41Z",
      "updated_at": "2023-08-01T12:37:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280500977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280500977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280656421",
      "pull_request_review_id": 1557023185,
      "id": 1280656421,
      "node_id": "PRRC_kwDOABII585MVUQl",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The sequence number isn't incremented until TransactionAddedToMempool() fires later.\r\n\r\nDoesn't that mean there are races? (There is no guarantee that `TransactionAddedToMempool()` will always run in the near future)?\r\n\r\nBasically, I am wondering what happens if you reorder `t=2` and `t=3` in your example.",
      "created_at": "2023-08-01T13:34:29Z",
      "updated_at": "2023-08-01T13:34:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280656421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280656421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280715228",
      "pull_request_review_id": 1557122291,
      "id": 1280715228,
      "node_id": "PRRC_kwDOABII585MVinc",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Doesn't that mean there are races? (There is no guarantee that `TransactionAddedToMempool()` will always run in the near future)?\r\n\r\nThe mempool value is incremented when TrAddedTMP is queued, not when it's eventually run -- the increment happens first, then the result of the increment is passed through and queued up. So I don't think there's any racy here.\r\n\r\n> Perhaps it makes sense to use `m_pool.GetSequence() + 1` here?\r\n\r\nI think it would make more sense to change `info_for_relay`?\r\n\r\n```c++\r\nTxMempoolInfo CTxMemPool::info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const\r\n{\r\n    LOCK(cs);\r\n    indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\r\n//  if (i == mapTx.end() || last_sequence < i->GetSequence()) {\r\n    if (i == mapTx.end() || last_sequence <= i->GetSequence()) {\r\n        return TxMempoolInfo();\r\n    } else {\r\n        return GetInfo(i);\r\n    }\r\n}\r\n```",
      "created_at": "2023-08-01T14:16:46Z",
      "updated_at": "2023-08-01T14:16:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280715228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280715228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280759603",
      "pull_request_review_id": 1557193640,
      "id": 1280759603,
      "node_id": "PRRC_kwDOABII585MVtcz",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Doesn't that mean there are races? (There is no guarantee that TransactionAddedToMempool() will always run in the near future)?\r\n\r\nI meant `TransactionAddedToMempool` event happening, not the validation interface clients' callbacks. IIUC the event firing on main signals (which calls `GetAndIncrementSequence()`) happens in validation before `ProcessTransaction` returns:\r\nhttps://github.com/bitcoin/bitcoin/blob/e5a9f2fb62dc4db6cad21b2997d96a881ea64125/src/validation.cpp#L1234\r\n\r\nThe queued callbacks are scheduled and may not have necessarily happened yet, but PeerManager doesn't implement `TransactionAddedToMempool`. It is only interested in the current `GetSequence()` and what is recorded in `mempool_sequence`.\r\n\r\n> Basically, I am wondering what happens if you reorder t=2 and t=3 in your example.\r\n\r\nMy understanding is that `GetSequence()` returns 2 when `ProcessTransaction` is done, even if t=2 and t=3 are swapped.",
      "created_at": "2023-08-01T14:48:28Z",
      "updated_at": "2023-08-01T14:48:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280759603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280759603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280780213",
      "pull_request_review_id": 1557225764,
      "id": 1280780213,
      "node_id": "PRRC_kwDOABII585MVye1",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah I didn't see the last message.\r\n\r\n> I think it would make more sense to change info_for_relay?\r\n\r\nsounds good to me",
      "created_at": "2023-08-01T15:03:12Z",
      "updated_at": "2023-08-01T15:03:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1280780213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280780213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283068149",
      "pull_request_review_id": 1560889968,
      "id": 1283068149,
      "node_id": "PRRC_kwDOABII585MehD1",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "7efb30b87d7083bec32ca7208ad63103682be35f",
      "in_reply_to_id": 1280498101,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated. This also changes the initial value for `m_last_inv_sequence` to `1` instead of `0`. (Note that I reversed the order of the `if .. else` in `info_for_relay` so `GetSeq() < last` becomes `! (GetSeq() <= last)` which is `last < GetSeq()`)",
      "created_at": "2023-08-03T11:32:37Z",
      "updated_at": "2023-08-03T11:32:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1283068149",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283068149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284155363",
      "pull_request_review_id": 1562445761,
      "id": 1284155363,
      "node_id": "PRRC_kwDOABII585Miqfj",
      "diff_hunk": "@@ -79,6 +79,7 @@ class CTxMemPoolEntry\n     const size_t nUsageSize;        //!< ... and total memory usage\n     const int64_t nTime;            //!< Local time when entering the mempool\n     const unsigned int entryHeight; //!< Chain height when entering the mempool\n+    const uint64_t entry_sequence;  //!< Sequence number used to determine w hether this transaction is too recent for relay",
      "path": "src/kernel/mempool_entry.h",
      "position": null,
      "original_position": 4,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "1e9684f39fba909b3501e9402d5b61f4bf744ff2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1e9684f39fba909b3501e9402d5b61f4bf744ff2\r\n\"w hether\"",
      "created_at": "2023-08-04T08:43:39Z",
      "updated_at": "2023-08-04T08:51:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1284155363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284155363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289400462",
      "pull_request_review_id": 1570823357,
      "id": 1289400462,
      "node_id": "PRRC_kwDOABII585M2rCO",
      "diff_hunk": "@@ -30,6 +31,7 @@ struct TestMemPoolEntryHelper {\n     TestMemPoolEntryHelper& Fee(CAmount _fee) { nFee = _fee; return *this; }\n     TestMemPoolEntryHelper& Time(NodeSeconds tp) { time = tp; return *this; }\n     TestMemPoolEntryHelper& Height(unsigned int _height) { nHeight = _height; return *this; }\n+    TestMemPoolEntryHelper& Sequence(uint64_t _seq) { m_sequence = _seq; return *this; }",
      "path": "src/test/util/txmempool.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "18f9f3059e5a5334aa4f59136fbf3360a34e9280",
      "in_reply_to_id": 1279974340,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it's not",
      "created_at": "2023-08-10T00:47:45Z",
      "updated_at": "2023-08-10T00:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1289400462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289400462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297021567",
      "pull_request_review_id": 1582115745,
      "id": 1297021567,
      "node_id": "PRRC_kwDOABII585NTvp_",
      "diff_hunk": "@@ -834,7 +834,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         }\n     }\n \n-    entry.reset(new CTxMemPoolEntry(ptx, ws.m_base_fees, nAcceptTime, m_active_chainstate.m_chain.Height(), m_pool.GetSequence(),\n+    // Set entry_sequence to 0 when bypass_limits is used; this allows txs from a block\n+    // reorg to be marked earlier than any child txs that were already in the mempool.\n+    const uint64_t entry_sequence = bypass_limits ? 0 : m_pool.GetSequence();",
      "path": "src/validation.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "fb02ba3c5f5bcd96b5e3622ef001b8e57ce63fc0",
      "original_commit_id": "a70beafdb22564043dc24fc98133fdadbaf77d8a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a70beafdb22564043dc24fc98133fdadbaf77d8a: This seems fragile documentation-wise, because someone may assume the sequence number is both unique for any tx, and strictly monotonically increasing for any child tx. Both assumptions are violated here, and it could make sense to update the doxygen of `CTxMemPoolEntry.m_sequence` for that?\r\n\r\n\r\nAlso, may be better to drop the `entry_` prefix from the `CTxMemPoolEntry::entry_sequence` member, since the scope is already clear from the surrounding class. Also, could drop the `entry_` prefix from the constructor parameter name. Finally, could add the `m_` prefix for class members for new code?",
      "created_at": "2023-08-17T10:24:03Z",
      "updated_at": "2023-08-17T11:09:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1297021567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297021567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 839,
      "original_line": 839,
      "side": "RIGHT"
    }
  ]
}