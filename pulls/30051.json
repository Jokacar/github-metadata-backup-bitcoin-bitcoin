{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051",
    "id": 1855942055,
    "node_id": "PR_kwDOABII585un22n",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30051",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30051.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30051.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
    "number": 30051,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "crypto, refactor: add new KeyPair class",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Broken out from #28201 \r\n\r\n---\r\n\r\nThe wallet returns an untweaked internal key for taproot outputs. If the output commits to a tree of scripts, this key needs to be tweaked with the merkle root. Even if the output does not commit to a tree of scripts, BIP341/342 recommend commiting to a hash of the public key.\r\n\r\nPreviously, this logic for applying the taptweak was implemented in the `CKey::SignSchnorr` method.\r\n\r\nThis PR moves introduces a KeyPair class which wraps a `secp256k1_keypair` type and refactors SignSchnorr to use this new KeyPair. The KeyPair class is created with an optional merkle_root argument and the logic from BIP341 is applied depending on the state of the merkle_root argument.\r\n\r\nThe motivation for this refactor is to be able to use the tap tweak logic outside of signing, e.g. in silent payments when retrieving the private key (see #28201). \r\n\r\nOutside of silent payments, since we almost always convert a `CKey` to a `secp256k1_keypair` when doing anything with taproot keys, it seems generally useful to have a way to model this type in our code base.",
    "labels": [],
    "created_at": "2024-05-06T11:00:17Z",
    "updated_at": "2024-07-03T05:26:32Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4a32547ab743c8f0a424de6ec54b1cd370de5898",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "josibake:add-apply-taptweak-method",
      "ref": "add-apply-taptweak-method",
      "sha": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 344501009,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDQ1MDEwMDk=",
        "name": "bitcoin",
        "full_name": "josibake/bitcoin",
        "owner": {
          "login": "josibake",
          "id": 7444140,
          "node_id": "MDQ6VXNlcjc0NDQxNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josibake",
          "html_url": "https://github.com/josibake",
          "followers_url": "https://api.github.com/users/josibake/followers",
          "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
          "organizations_url": "https://api.github.com/users/josibake/orgs",
          "repos_url": "https://api.github.com/users/josibake/repos",
          "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/josibake/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/josibake/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/josibake/bitcoin",
        "archive_url": "https://api.github.com/repos/josibake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/josibake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/josibake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/josibake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/josibake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/josibake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/josibake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/josibake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/josibake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/josibake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/josibake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/josibake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/josibake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/josibake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/josibake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/josibake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/josibake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/josibake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/josibake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/josibake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/josibake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/josibake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/josibake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/josibake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/josibake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/josibake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/josibake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/josibake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/josibake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:josibake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/josibake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/josibake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/josibake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/josibake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/josibake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/josibake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/josibake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/josibake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/josibake/bitcoin/hooks",
        "svn_url": "https://github.com/josibake/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 248424,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-29T13:40:44Z",
        "created_at": "2021-03-04T14:24:20Z",
        "updated_at": "2024-06-05T14:22:09Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2cedb42a928fbf3a1e0e8715e918497cbe64af0d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35587,
        "stargazers_count": 77063,
        "watchers_count": 77063,
        "size": 262498,
        "default_branch": "master",
        "open_issues_count": 676,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-03T05:31:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-03T05:51:38Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 121,
    "deletions": 21,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 16,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 2095746172,
      "node_id": "IC_kwDOABII58586ox8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2095746172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T11:00:20Z",
      "updated_at": "2024-07-03T05:26:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30051).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29295](https://github.com/bitcoin/bitcoin/pull/29295) (CKey: add Serialize and Unserialize by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2095746172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "comment_deleted",
      "id": 12714942745,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714942745",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:13Z"
    },
    {
      "event": "comment_deleted",
      "id": 12714943883,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qWL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714943883",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:18Z"
    },
    {
      "event": "reviewed",
      "id": 2041367317,
      "node_id": "PRR_kwDOABII5855rMsV",
      "url": null,
      "actor": null,
      "commit_id": "e8d1b223e0c618bb08adbae0d51ff8c7151549b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n\r\nPerhaps this would make more sense as a static utility function that takes input/output keys?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2041367317",
      "submitted_at": "2024-05-06T17:59:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "subscribed",
      "id": 12722226786,
      "node_id": "SE_lADOABII586H706dzwAAAAL2TcZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12722226786",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T01:40:12Z"
    },
    {
      "event": "commented",
      "id": 2097902146,
      "node_id": "IC_kwDOABII5859C3JC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097902146",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T09:51:01Z",
      "updated_at": "2024-05-07T09:51:01Z",
      "author_association": "MEMBER",
      "body": "> This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n> \r\n> Perhaps this would make more sense as a static utility function that takes input/output keys?\r\n\r\nUtility function might make more sense here: could do a utility function with `secp256k1_keypairs` as in/out args:\r\n\r\n```\r\nint compute_taptweak(secp256k1_keypair in, unsigned char merkle_root, secp256k1_keypair out)\r\n```\r\n\r\nand use that inside `::SignSchnorr`. This means we still only creating one `secp256k1_keypair` when signing. For usage outside of signing, wrap that utility function in a function takes and returns `CKey`s as arguments:\r\n\r\n```\r\nCKey tweaked_key ComputeTapTweak(CKey& internal_key, uint256& merkle_root) {\r\n    // .. do stuff\r\n    compute_taptweak(..);\r\n    return tweaked_key;\r\n```\r\n\r\nWDYT?",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2097902146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2098527381,
      "node_id": "IC_kwDOABII5859FPyV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2098527381",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T14:21:27Z",
      "updated_at": "2024-05-07T14:21:27Z",
      "author_association": "MEMBER",
      "body": "`ComputeTapTweak` is more like what I had in mind, yes.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2098527381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12741509247,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL3dAB_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741509247",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:04:20Z"
    },
    {
      "event": "commented",
      "id": 2100225575,
      "node_id": "IC_kwDOABII5859LuYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2100225575",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:57Z",
      "updated_at": "2024-05-08T10:05:57Z",
      "author_association": "MEMBER",
      "body": "Updated to use a utility function (instead of a method on `CKey`) per the @theuni 's feedback",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2100225575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12741529173,
      "node_id": "MEE_lADOABII586H706dzwAAAAL3dE5V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529173",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "subscribed",
      "id": 12741529193,
      "node_id": "SE_lADOABII586H706dzwAAAAL3dE5p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529193",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "reviewed",
      "id": 2046154187,
      "node_id": "PRR_kwDOABII58559dXL",
      "url": null,
      "actor": null,
      "commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2046154187",
      "submitted_at": "2024-05-08T16:48:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768720758,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Ezd2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768720758",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T11:34:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768870122,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5FX7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768870122",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T11:51:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12769107313,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5GR1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769107313",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:17:49Z"
    },
    {
      "event": "commented",
      "id": 2104541750,
      "node_id": "IC_kwDOABII5859cMI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104541750",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:31Z",
      "updated_at": "2024-05-10T12:41:31Z",
      "author_association": "MEMBER",
      "body": "Updated to use the new `KeyPair` wrapper class (h/t @theuni).",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104541750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12769334399,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5HJR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334399",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "subscribed",
      "id": 12769334412,
      "node_id": "SE_lADOABII586H706dzwAAAAL5HJSM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334412",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12770336692,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5K9-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12770336692",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T14:12:59Z"
    },
    {
      "event": "reviewed",
      "id": 2050167463,
      "node_id": "PRR_kwDOABII5856MxKn",
      "url": null,
      "actor": null,
      "commit_id": "8d33daf93871c34c4fbe19f3c6ffa5d337eae144",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "It's weird to see this hooked up but unused. It could also use some simple test vectors.\r\n\r\nMind killing both birds by adding some tests, at least 1 for each `merkle_root` state?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050167463",
      "submitted_at": "2024-05-10T14:16:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12771898558,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Q7S-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771898558",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:43:53Z"
    },
    {
      "event": "commented",
      "id": 2104921312,
      "node_id": "IC_kwDOABII5859dozg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104921312",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:14Z",
      "updated_at": "2024-05-10T16:46:14Z",
      "author_association": "MEMBER",
      "body": "@theuni Updated with a comment and added `KeyPair` to the BIP340 test vectors. This does test all possible merkle_root states and ensures everything is 1-to-1 with `XOnlyPubKey::ComputeTapTweakHash` and `CKey::SignSchnorr`",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104921312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12771921724,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5RA88",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921724",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "subscribed",
      "id": 12771921735,
      "node_id": "SE_lADOABII586H706dzwAAAAL5RA9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921735",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772360638,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5SsG-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772360638",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:36:11Z"
    },
    {
      "event": "commented",
      "id": 2105011629,
      "node_id": "IC_kwDOABII5859d-2t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105011629",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:37Z",
      "updated_at": "2024-05-10T17:39:11Z",
      "author_association": "MEMBER",
      "body": "Updated to add a move constructor to the KeyPair class. I noticed this was missing while trying to use the new class in #28201 (i.e. creating a std::vector of KeyPairs). @theuni assuming this was just missed, but if not curious if you have any objections to adding a move constructor on KeyPair?\r\n\r\nEDIT: also rebased on master to fix conflicts",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105011629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772381477,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5SxMl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381477",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "subscribed",
      "id": 12772381487,
      "node_id": "SE_lADOABII586H706dzwAAAAL5SxMv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381487",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "reviewed",
      "id": 2050565640,
      "node_id": "PRR_kwDOABII5856OSYI",
      "url": null,
      "actor": null,
      "commit_id": "c2c5e72ea09f55d40013ce2363f2045affbc76fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Mind changing the dumb c-style casts to `reinterpret_cast` so it's clear that they can't be `static_cast`s ?  Sorry, I know that's my code.\r\n\r\nutACK after that.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050565640",
      "submitted_at": "2024-05-10T17:43:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "commented",
      "id": 2105023865,
      "node_id": "IC_kwDOABII5859eB15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105023865",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:48:02Z",
      "updated_at": "2024-05-10T17:48:02Z",
      "author_association": "MEMBER",
      "body": "PR description needs an update too :)",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105023865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0YjNjNzNlYzUwZDRjMzkwMjA0OWE2NmJjYTU2NDM4YmI0MDc4YmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "tree": {
        "sha": "64e5b2afe1560c51d3d0f6fdcd98c886bec0d0bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64e5b2afe1560c51d3d0f6fdcd98c886bec0d0bd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 64e5b2afe1560c51d3d0f6fdcd98c886bec0d0bd\nparent 2cedb42a928fbf3a1e0e8715e918497cbe64af0d\nauthor josibake <josibake@protonmail.com> 1690121692 +0200\ncommitter josibake <josibake@protonmail.com> 1715363550 +0200\n\ncrypto: Add a KeyPair wrapper class\n\nThe wallet returns an untweaked internal key for taproot outputs. If the\noutput commits to a tree of scripts, this key needs to be tweaked with\nthe merkle root. Even if the output does not commit to a tree of\nscripts, BIP341/342 recommend commiting to a hash of the public key.\n\nPreviously, this logic for applying the taptweak was implemented in the\n::SignSchnorr method.\n\nMove this tweaking and signing logic to a new class, KeyPair, and add\na method to CKey for computing a KeyPair, CKey::ComputeKeyPair. This\nclass is a wrapper for the `secp256k1_keypair` type.\n\nThe motivation is to be able to use the the tweaked internal key outside\nof signing, e.g. in silent payments when retreiving the private key before\nECDH. Having the KeyPair class is also a general improvement in that we\nalmost always convert to `secp256k1_keypair` objects when using taproot\nprivate keys with libsecp256k1.\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmY+XuQACgkQity1WMTz\nPWXE2BAAh6U7OH03ibKo6fsY1NX5oY7a14aaNdz4dGdXaqjTGHjK40W4cCgO4w6W\nYYFLOLmlo4xVtnRBZBFOz/a2c91a5+ASdSWLh17SgCMo3C9+LZGhi3KTqrpEVKMT\nYLXEE/Pev24YvHJV8vY6ofU01vHs01QCJT7WUZ0pMOQZLQeVMygNshvayo3HtXU9\n0QMZcDgU+NQUIay7ZejIPINhEDWm1rhGZ72qSQlRYeX4vi2ccdEQMNbxSHucO2Eb\njA7Fzj71L40bdIDpDG2m4xFz86rthKDioPk97OzF5tp80JZO03aE6pGj4Gxx73Zw\n1KGB3FIz39qHZAO/Ux1n77w/tStv6PCaseDCd6l4gTOwjwhE4ugi3CDwCHOeocZu\nVvalNSBSIKHHtVat4HzrWux5aHG9GX7l8XIoEnRQVG3QVzo+9m9dH81kP4z/bvnM\nlS5PS9f07kB3t6Jx8Myi9Ie8kcrSYWT+gLEXU+fW3jHpAoZiKeAHMz8G5Jn/MN04\nOJ9F2krLqNnQd4znsZBFfOERjgUbwIay6c8Rhy9Goa5y2ivmEVGssZinI0HirnmI\nuDVzyVul/ce5VpnN9k7PpS4ah/d/SqeluKUbQLBz5q97NSXMztnGrv6nUL4CLCFh\nCpQaOf+qeyTXhZPeK3dqcwp18TBWQXhWILgtw1WTow9JtPKRTSI=\n=G2AJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cedb42a928fbf3a1e0e8715e918497cbe64af0d",
          "sha": "2cedb42a928fbf3a1e0e8715e918497cbe64af0d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2cedb42a928fbf3a1e0e8715e918497cbe64af0d"
        }
      ],
      "message": "crypto: Add a KeyPair wrapper class\n\nThe wallet returns an untweaked internal key for taproot outputs. If the\noutput commits to a tree of scripts, this key needs to be tweaked with\nthe merkle root. Even if the output does not commit to a tree of\nscripts, BIP341/342 recommend commiting to a hash of the public key.\n\nPreviously, this logic for applying the taptweak was implemented in the\n::SignSchnorr method.\n\nMove this tweaking and signing logic to a new class, KeyPair, and add\na method to CKey for computing a KeyPair, CKey::ComputeKeyPair. This\nclass is a wrapper for the `secp256k1_keypair` type.\n\nThe motivation is to be able to use the the tweaked internal key outside\nof signing, e.g. in silent payments when retreiving the private key before\nECDH. Having the KeyPair class is also a general improvement in that we\nalmost always convert to `secp256k1_keypair` objects when using taproot\nprivate keys with libsecp256k1.\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-05-10T17:52:30Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-23T14:14:52Z"
      },
      "sha": "54b3c73ec50d4c3902049a66bca56438bb4078ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJkYzJhNjU2YzJkMmE2MWQyMjZmZGUxZDFmZDRlNzk2NjQxMDZlMTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "tree": {
        "sha": "144aee93423e99e8879587ec387eb49ed0531207",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/144aee93423e99e8879587ec387eb49ed0531207"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 144aee93423e99e8879587ec387eb49ed0531207\nparent 54b3c73ec50d4c3902049a66bca56438bb4078ba\nauthor josibake <josibake@protonmail.com> 1715356718 +0200\ncommitter josibake <josibake@protonmail.com> 1715363556 +0200\n\ntests: add test for KeyPair\n\nReuse existing bip340 test vectors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmY+XuQACgkQity1WMTz\nPWXMLg/+JxCyl1NoxeFtpDcVj/1LMZtD/buJp2YVfHZVDBXrHlDXJEI4c6HptTZx\niqDghTGgCudJ9qTNQPDDF7rQo/eXecBPKqQPs7rwjTs3QRqd4mwxG6iioz6I5PB+\nVk0xS6fZg1TIEip3p1ecwEV7n/O6J2Wf/jFKlTMN6yKMNZ/KwY9f1DsMVLXIq78g\nkZ+QwSltkIS4JyLbwT9ZBbwcW0clPGLwHLjNtXCu7O/H5ZQRbVpHVPh4ECr8UTsw\nR0jSNmBR5yhFUhtw6GuWsUqAstZeCU310XKce+PbuG0cHyxRHYjpKdNpUegDIhxu\nLvyF9bt+dcW9CrguzsMJZ6FyuBpepxwFvm2tEXuD4Wi0+FifZKEA3uJiIn/Zk05W\nBquLjx2zm48DB6ixQ5DLj0F/xQLMkaJiNPP4t3AjeHDbXZgbnh53yrXeT7lcxFUC\nVzg5+4e1kv1Jmi7eHl3Se5qjcNw5N5isb9zTeU8fHwXQX4iJGacBQZnjur2hwkkq\nTLCPk4dac8avkWqb8UJc5ZbzmJhMNZP0ayJzlEwhT15opxqbWvwJZdXWDQGRc895\nvT8I7DUMrU8766RL/7/rj1eg/zAoMfIzNxWH9xU/ATtbciv5GfBtZVeW9V6CAohU\n6QG62yzUh/tZHrOvQWBsxRRTXFGh0YZvf35d81TiEIS6Ncfptxk=\n=loo+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54b3c73ec50d4c3902049a66bca56438bb4078ba",
          "sha": "54b3c73ec50d4c3902049a66bca56438bb4078ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54b3c73ec50d4c3902049a66bca56438bb4078ba"
        }
      ],
      "message": "tests: add test for KeyPair\n\nReuse existing bip340 test vectors.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-05-10T17:52:36Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-05-10T15:58:38Z"
      },
      "sha": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772503226,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5TO66",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772503226",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:53:15Z"
    },
    {
      "event": "renamed",
      "id": 12772545930,
      "node_id": "RTE_lADOABII586H706dzwAAAAL5TZWK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772545930",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:58:28Z",
      "rename": {
        "from": "crypto, refactor: add method for applying the taptweak",
        "to": "crypto, refactor: add new KeyPair class"
      }
    },
    {
      "event": "commented",
      "id": 2105045459,
      "node_id": "IC_kwDOABII5859eHHT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105045459",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z",
      "updated_at": "2024-05-10T17:59:18Z",
      "author_association": "MEMBER",
      "body": "@theuni title, description, and dumb c-style casts updated!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105045459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772552396,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5Ta7M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552396",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z"
    },
    {
      "event": "subscribed",
      "id": 12772552417,
      "node_id": "SE_lADOABII586H706dzwAAAAL5Ta7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552417",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:19Z"
    },
    {
      "event": "reviewed",
      "id": 2050642049,
      "node_id": "PRR_kwDOABII5856OlCB",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049",
      "submitted_at": "2024-05-10T18:35:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2051346482,
      "node_id": "PRR_kwDOABII5856RRAy",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2051346482",
      "submitted_at": "2024-05-12T10:26:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841",
      "pull_request_review_id": 2046154187,
      "id": 1594325841,
      "node_id": "PRRC_kwDOABII585fB3tR",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will anything ever use this key directly? Or will it always just be turned back into a `secp256k1_keypair`? It seems the CKey output is just a wrapper that causes overhead here. I guess for the sake of not exposing `secp256k1_keypair` to the caller?",
      "created_at": "2024-05-08T16:44:21Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594325841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715",
      "pull_request_review_id": 2046154187,
      "id": 1594328715,
      "node_id": "PRRC_kwDOABII585fB4aL",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;\n+        if (!ComputeTapTweak(*this, *merkle_root, tweaked_key)) return false;\n+        ret = secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(tweaked_key.begin()));\n+        tweaked_key = CKey();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is going out of scope anyway, no need?",
      "created_at": "2024-05-08T16:46:56Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594328715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354",
      "pull_request_review_id": 2046365854,
      "id": 1594465354,
      "node_id": "PRRC_kwDOABII585fCZxK",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep! From the description:\r\n\r\n> The motivation is to be able to use the ::ApplyTapTweak logic outside of signing, e.g. in silent payments when retrieving the private key. Outside of silent payments, having this method would support any future use cases where the tweaked key is needed outside of signing.\r\n\r\nThis commit was broken out of the silent payments sending PR, because there we need the tweaked `CKey`. However, we do eventually turn it back into a `keypair` when passing it to libsecp, so maybe there is an argument for just returning the `keypair`? But passing around libsecp types seemed a bit weird..",
      "created_at": "2024-05-08T18:26:18Z",
      "updated_at": "2024-05-08T18:26:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594465354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600",
      "pull_request_review_id": 2046546616,
      "id": 1594569600,
      "node_id": "PRRC_kwDOABII585fCzOA",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, if what you need is a wrapped `keypair`, how about creating a wrapped `keypair`? :) https://github.com/theuni/bitcoin/commit/db1d199bf93eae046a62245db8f7782a94f25e9d\r\n\r\n^^ Completely untested. Maybe state via `ApplyTapTweak` is unnecessary as the ctor could just take a pointer to a merkle root instead?",
      "created_at": "2024-05-08T20:08:32Z",
      "updated_at": "2024-05-08T20:28:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594569600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731",
      "pull_request_review_id": 2047353278,
      "id": 1595092731,
      "node_id": "PRRC_kwDOABII585fEy77",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, thanks for the suggestion! This makes a ton more sense. I think it would be better to have the ctor take a pointer to the merkle root because `ApplyTapTweak` is something that you a) only want to do once over the lifetime of the object and b) will always be applied if a `merkle_root` is present (even if its `merkle_root.IsNull() == true`). I don't think this is actually a use case, but if for whatever reason you did need to do something with the key and then later apply a merkle root tweak, you could just use the `CKey` first and then create a `KeyPair(*this, merkle_root)` with the merkle root when needed. \r\n\r\nAlso, what do you think about something like `KeyPair CKey::ComputeKeyPair(*merkle_root);` method, instead of `KeyPair(CKey, merkle_root)`?\r\n\r\nWill pull this in and test it in #28122 and #28201.",
      "created_at": "2024-05-09T07:46:23Z",
      "updated_at": "2024-05-09T07:46:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595092731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078",
      "pull_request_review_id": 2047862139,
      "id": 1595390078,
      "node_id": "PRRC_kwDOABII585fF7h-",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please consider the above a doodle, change it however you'd like. I just wanted to sketch out the concept of a wrapped `keypair`.",
      "created_at": "2024-05-09T12:37:48Z",
      "updated_at": "2024-05-09T12:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595390078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180",
      "pull_request_review_id": 2047891999,
      "id": 1595408180,
      "node_id": "PRRC_kwDOABII585fF_80",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, for sure! But thanks, very helpful doodle. Not sure why I was so apprehensive about passing around a keypair, but seeing you write it out helped it click for me.",
      "created_at": "2024-05-09T12:54:23Z",
      "updated_at": "2024-05-09T12:54:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595408180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023",
      "pull_request_review_id": 2048562521,
      "id": 1595821023,
      "node_id": "PRRC_kwDOABII585fHkvf",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated as suggested here: https://github.com/theuni/bitcoin/commits/keypairtaptweak/",
      "created_at": "2024-05-09T18:22:39Z",
      "updated_at": "2024-05-09T18:22:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595821023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710",
      "pull_request_review_id": 2049982773,
      "id": 1596696710,
      "node_id": "PRRC_kwDOABII585fK6iG",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Awesome, thanks @theuni ! I pulled this commit in and also add a \"simple read only vector like interface\" to the `KeyPair` class (same as `CKey`). Needed for: https://github.com/josibake/bitcoin/blob/33868a74dc7b3403ff38343899c37feb4c88d0c6/src/common/bip352.cpp#L204\r\nI also rebased #28122 on this PR and confirmed everything works with the new `KeyPair` class.",
      "created_at": "2024-05-10T12:33:24Z",
      "updated_at": "2024-05-10T12:46:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596696710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833",
      "pull_request_review_id": 2050167463,
      "id": 1596806833,
      "node_id": "PRRC_kwDOABII585fLVax",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 26,
      "original_position": 14,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could use a comment.",
      "created_at": "2024-05-10T14:11:53Z",
      "updated_at": "2024-05-10T14:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596806833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 221,
      "original_line": 221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685",
      "pull_request_review_id": 2050182032,
      "id": 1596815685,
      "node_id": "PRRC_kwDOABII585fLXlF",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That looks much better, thanks. Exposing the vector-like interface is a shame, but I don't see any way around it for `secp256k1_silentpayments_sender_create_outputs`.",
      "created_at": "2024-05-10T14:19:26Z",
      "updated_at": "2024-05-10T14:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596815685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700",
      "pull_request_review_id": 2050461011,
      "id": 1596979700,
      "node_id": "PRRC_kwDOABII585fL_n0",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 26,
      "original_position": 14,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": 1596806833,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-05-10T16:44:18Z",
      "updated_at": "2024-05-10T16:44:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596979700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 221,
      "original_line": 221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164",
      "pull_request_review_id": 2051346482,
      "id": 1597605164,
      "node_id": "PRRC_kwDOABII585fOYUs",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: BOOST_CHECK_MESSAGE often produces more readable results, but it may be inconvenient to set it up properly. If you think it adds value, it may be helpful to add some debug info as a message in case of likely failures.",
      "created_at": "2024-05-12T10:16:07Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 333,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647",
      "pull_request_review_id": 2051346482,
      "id": 1597605647,
      "node_id": "PRRC_kwDOABII585fOYcP",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 65,
      "original_position": 65,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would it make sense to extract the `96` to a const?\r\n```C++\r\nconstexpr size_t SECP256K1_KEYPAIR_SIZE = 96;\r\nusing KeyType = std::array<unsigned char, SECP256K1_KEYPAIR_SIZE>;\r\n```",
      "created_at": "2024-05-12T10:18:42Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179",
      "pull_request_review_id": 2052091990,
      "id": 1598114179,
      "node_id": "PRRC_kwDOABII585fQUmD",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605164,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it adds much here? We are using BOOST_CHECK to to ensure the function call succeeds before proceeding, so getting a line number failure for BOOST_CHECK seems sufficient for debugging. Also, if dealing with valid keys, this function should never fail.",
      "created_at": "2024-05-13T08:55:21Z",
      "updated_at": "2024-05-13T08:55:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598114179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 333,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960",
      "pull_request_review_id": 2052101222,
      "id": 1598119960,
      "node_id": "PRRC_kwDOABII585fQWAY",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 65,
      "original_position": 65,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605647,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't really see a benefit. We shouldn't be exposing this value to anything outside the class, so defining a constexpr here seems unnecessarily verbose. ",
      "created_at": "2024-05-13T08:59:33Z",
      "updated_at": "2024-05-13T08:59:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598119960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    }
  ]
}