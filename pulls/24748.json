{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748",
    "id": 898370023,
    "node_id": "PR_kwDOABII5841jAnn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24748.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24748.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f479a99cc92c7966266804e8c33338cebbc44fbc",
    "number": 24748,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test/BIP324: functional tests for v2 P2P encryption",
    "user": {
      "login": "stratospher",
      "id": 44024636,
      "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stratospher",
      "html_url": "https://github.com/stratospher",
      "followers_url": "https://api.github.com/users/stratospher/followers",
      "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
      "organizations_url": "https://api.github.com/users/stratospher/orgs",
      "repos_url": "https://api.github.com/users/stratospher/repos",
      "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stratospher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR introduces support for v2 P2P encryption(BIP 324) in the existing functional test framework and adds functional tests for the same.\r\n\r\n### commits overview\r\n1. introduces a new class `EncryptedP2PState` to store the keys, functions for performing the initial v2 handshake and encryption/decryption.\r\n3. this class is used by `P2PConnection` in inbound/outbound connections to perform the initial v2 handshake before the v1 version handshake. Only after the initial v2 handshake is performed do application layer P2P messages(version, verack etc..) get exchanged. (in a v2 connection)\r\n    - `v2_state` is the object of class `EncryptedP2PState` in `P2PConnection` used to store its keys, session-id etc.\r\n    - a node [advertising](https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md#advertising-to-support-v2-p2p) support for  v2 P2P is different from a node actually [supporting v2 P2P](https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md#supporting-v2-p2p) (differ when false advertisement of services occur)\r\n        - introduce a boolean variable `supports_v2_p2p` in `P2PConnection` to denote if it supports v2 P2P.\r\n        - introduce a boolean variable `advertises_v2_p2p` to denote whether `P2PConnection` which mimics peer behaviour advertises V2 P2P support. Default option is `False`.\r\n    - In the test framework, you can create Inbound and Outbound connections to `TestNode`\r\n        1. During **Inbound Connections**, `P2PConnection` is the initiator [`TestNode` <--------- `P2PConnection`]\r\n            - Case 1:\r\n                - if the `TestNode` advertises/signals v2 P2P support (means `self.nodes[i]` set up with `\"-v2transport=1\"`), different behaviour will be exhibited based on whether:\r\n                    1. `P2PConnection` supports v2 P2P\r\n                    2. `P2PConnection` does not support v2 P2P\r\n               - In a real world scenario, the initiator node would intrinsically know if they support v2 P2P based on whatever code they choose to run. However, in the test scenario where we mimic peer behaviour, we have no way of knowing if `P2PConnection` should support v2 P2P or not. So `supports_v2_p2p` boolean variable is used as an option to enable support for v2 P2P in `P2PConnection`.\r\n              - Since the `TestNode` advertises v2 P2P support (using \"-v2transport=1\"), our initiator `P2PConnection` would send:\r\n                1. (if the `P2PConnection` supports v2 P2P) ellswift + garbage bytes to initiate the connection\r\n                2. (if the `P2PConnection` does not support v2 P2P) version message to initiate the connection\r\n           - Case 2:\r\n                - if the `TestNode` doesn't signal v2 P2P support; `P2PConnection` being the initiator would send version message to initiate a connection.\r\n       2. During **Outbound Connections** [TestNode --------> P2PConnection]\r\n           - initiator `TestNode` would send:\r\n                - (if the `P2PConnection` advertises v2 P2P) ellswift + garbage bytes to initiate the connection\r\n                - (if the `P2PConnection` advertises v2 P2P) version message to initiate the connection\r\n          - Suppose `P2PConnection` advertises v2 P2P support when it actually doesn't support v2 P2P (false advertisement scenario)\r\n               - `TestNode` sends ellswift + garbage bytes\r\n               - `P2PConnection` receives but can't process it and disconnects.\r\n               - `TestNode` then tries using v1 P2P and sends version message\r\n               - `P2PConnection` receives/processes this successfully and they communicate on v1 P2P\r\n\r\n4. the encrypted P2P messages follow a different format - 3 byte length + 1-13 byte message_type + payload + 16 byte MAC\r\n5. includes support for testing decoy messages and v2 connection downgrade(using false advertisement - when a v2 node makes an outbound connection to a node which doesn't support v2 but is advertised as v2 by some malicious\r\nintermediary)\r\n\r\n### run the tests\r\n* functional test - `test/functional/p2p_v2_encrypted.py` `test/functional/p2p_v2_earlykeyresponse.py`\r\n\r\nI'm also super grateful to @ dhruv for his really valuable feedback on this branch.\r\nAlso written a more elaborate explanation here - https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md",
    "labels": [],
    "created_at": "2022-04-03T20:14:51Z",
    "updated_at": "2023-12-12T00:59:24Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "85484893ef226978d67f55793475f72f2834cba9",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stratospher:p2p-encryption-test",
      "ref": "p2p-encryption-test",
      "sha": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 379929443,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNzk5Mjk0NDM=",
        "name": "bitcoin",
        "full_name": "stratospher/bitcoin",
        "owner": {
          "login": "stratospher",
          "id": 44024636,
          "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stratospher",
          "html_url": "https://github.com/stratospher",
          "followers_url": "https://api.github.com/users/stratospher/followers",
          "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
          "organizations_url": "https://api.github.com/users/stratospher/orgs",
          "repos_url": "https://api.github.com/users/stratospher/repos",
          "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stratospher/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stratospher/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stratospher/bitcoin",
        "archive_url": "https://api.github.com/repos/stratospher/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stratospher/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stratospher/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stratospher/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stratospher/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stratospher/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stratospher/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stratospher/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stratospher/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stratospher/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stratospher/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stratospher/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stratospher/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stratospher/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stratospher/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stratospher/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stratospher/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stratospher/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stratospher/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stratospher/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stratospher/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stratospher/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stratospher/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stratospher/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stratospher/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stratospher/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stratospher/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stratospher/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stratospher/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stratospher/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stratospher/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stratospher/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stratospher/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stratospher/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stratospher/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stratospher/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stratospher/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stratospher/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stratospher/bitcoin/hooks",
        "svn_url": "https://github.com/stratospher/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 236088,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-07T04:32:55Z",
        "created_at": "2021-06-24T13:12:06Z",
        "updated_at": "2022-01-06T18:58:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7bc8c5312bf51edd3d85e1599b5d6ae32c8fd7b5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36138,
        "stargazers_count": 72607,
        "watchers_count": 72607,
        "size": 246462,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-11T23:16:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-12-12T00:13:26Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 708,
    "deletions": 67,
    "changed_files": 15,
    "commits": 15,
    "review_comments": 89,
    "comments": 19
  },
  "events": [
    {
      "event": "labeled",
      "id": 6358791218,
      "node_id": "LE_lADOABII585G_btJzwAAAAF7A3Qy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6358791218",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T21:03:00Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 6358791219,
      "node_id": "LE_lADOABII585G_btJzwAAAAF7A3Qz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6358791219",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T21:03:00Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 6358791221,
      "node_id": "LE_lADOABII585G_btJzwAAAAF7A3Q1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6358791221",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T21:03:00Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 6358791222,
      "node_id": "LE_lADOABII585G_btJzwAAAAF7A3Q2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6358791222",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T21:03:00Z",
      "label": {
        "name": "Upstream",
        "color": "bfd4f2"
      }
    },
    {
      "event": "labeled",
      "id": 6358791223,
      "node_id": "LE_lADOABII585G_btJzwAAAAF7A3Q3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6358791223",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-03T21:03:00Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6363437415,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAF7Slln",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6363437415",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T14:10:25Z"
    },
    {
      "event": "commented",
      "id": 1088181500,
      "node_id": "IC_kwDOABII585A3FT8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088181500",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T01:31:07Z",
      "updated_at": "2023-12-12T00:59:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/24748).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1768762854) |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1091152739), [brunoerg](https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1092829016), [theStack](https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1730319269) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29054](https://github.com/bitcoin/bitcoin/pull/29054) (wallet: reenable sethdseed for descriptor wallets by achow101)\n* [#29016](https://github.com/bitcoin/bitcoin/pull/29016) (RPC: add new `listmempooltransactions` by niftynei)\n* [#28538](https://github.com/bitcoin/bitcoin/pull/28538) (p2p: attempt to fill full outbound connection slots with peers that support tx relay by mzumsande)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n* [#26728](https://github.com/bitcoin/bitcoin/pull/26728) (wallet: Have the wallet store the key for automatically generated descriptors by achow101)\n* [#25907](https://github.com/bitcoin/bitcoin/pull/25907) (wallet: rpc to add automatically generated descriptors by achow101)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add path to gethdkey by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1088181500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T07:25:25Z",
      "updated_at": "2022-04-05T07:25:25Z",
      "source": {
        "issue": {
          "id": 1167366626,
          "node_id": "PR_kwDOABII5840WLLa",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
          "number": 24545,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Enable v2 P2P encrypted transport",
          "body": "This PR brings together all other BIP324 PRs and enables v2 encrypted P2P transport.\r\n\r\nBuilds on top of PRs: #25361, #23233, #23561, #23432. It looks like there's a lot of commits, but **only the last 12 commits belong in this PR**. The rest will be merged with upstream PRs.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).\r\n\r\nBIP324 is [here](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki).\r\n\r\n### Running a v2 node\r\n#### Get the code\r\n```\r\ngit remote add bip324 git@github.com:dhruv/bitcoin.git\r\ngit fetch bip324\r\ngit checkout bip324/bip324-enable\r\n```\r\n\r\n#### Build for your OS\r\n\r\nFollow the appropriate instructions [here](https://github.com/bitcoin/bitcoin/blob/master/doc/README.md)\r\n\r\n#### Run the node\r\n\r\n```\r\nsrc/bitcoind -conf=CONFIG_FILE -v2transport=1\r\n```\r\n\r\n#### Connect with a friend's v2 node\r\n```\r\nsrc/bitcoin-cli -conf=CONFIG_FILE addnode \"FRIEND_IP:FRIEND_PORT\" \"add\" true\r\n```\r\nThe last parameter(`p2p_v2:true`) signals to your node that the peer is running a v2 supportive client and we should attempt to make an encrypted P2P connection (you're simulating the `NODE_P2P_V2` service flag advertisement manually). Should that fail however (say because the peer told you mistakenly, lied, etc.), this code will downgrade the connection to unencrypted v1 transport.\r\n\r\n### Things you are helpful to test\r\n\r\n* If your friend's node is a v2 node, you can see with wireshark that the bytes are pseudorandom (the easiest way to confirm this is that with a v1 connection, wireshark will tell you it has detected a Bitcoin connection and it'll even parse out the metadata like message type, etc; with v2, wireshark has no idea -- of course that _could_ be because wireshark does simply not know v2, but it is because the bytestream is pseudorandom)\r\n* Compare the v2 encrypted session id exposed via `getpeerinfo` as `v2_session_id` with your friend.\r\n* Add another peer that is actually v1, but try `addnode` still indicating v2 support. You should see with wireshark that after a failed attempt at a v2 handshake, the connection is downgraded to unencrypted v1 and wireshark can parse it.\r\n\r\nI've been told there are v2 nodes running at (happy to update the list as more people run persistent v2 nodes; message me and I'll add it here):\r\n```\r\nbe.anyone.eu.org\r\nrp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\r\njdcoysubtxazi7dketpyb5rnjorvxad4onftveohash2pdwkgw4bvnqd.onion:8333\r\nxci6cphki2pdb5qe7axzrcxcxabkbm24z4zlv2hn4ziy6grquqco2kyd.onion:8333\r\nslvtesfgg3mkksqqzh67al4sq6dx3rhlzqepa4ny7jonzuckg6msf3id.onion:8333\r\ngifm4fnj3vua664xhgeanx5fnpco3txkqy4amr4txbfsciiyrkxpf2qd.onion:8333\r\n300:5ecb:6b8a:d837::3:8333\r\n300:5ecb:6b8a:d837::a6d6:8333\r\n2001:470:1f1a:365::2:8333\r\n2001:470:1f1b:365:aa20:66ff:fe3f:1909:8333\r\n184.74.240.157:8533\r\n95.179.145.232:8333\r\n```",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24545.patch"
          },
          "closed_at": "2023-05-06T11:14:46Z",
          "created_at": "2022-03-12T18:43:06Z",
          "updated_at": "2023-09-15T02:47:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T08:45:28Z",
      "updated_at": "2022-04-05T08:45:28Z",
      "source": {
        "issue": {
          "id": 1159962846,
          "node_id": "PR_kwDOABII584z-LMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24474",
          "number": 24474,
          "state": "closed",
          "state_reason": null,
          "title": "Additional thread safety annotations for CNode/Peer members accessed via the message processing thread",
          "body": "Documents why the existing accesses of elements in net.h's CNode and net_processing.cpp's Peer objects is thread safe, generally by making it so that the compiler will complain if the non-safe accesses are added. Only leaves CNode's `m_permissionFlags` and `m_prefer_evict` unenforced by the compiler.\r\n\r\nAdds a global mutex `NetEventsInterface::g_mutex_msgproc_thread` which is used to document the contract between net_processing and net that ProcessMessages and SendMessages are only invoked from a single thread, and which replaces the per-peer `cs_sendProcessing` mutex.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24474",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24474",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24474.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24474.patch"
          },
          "closed_at": "2022-08-29T06:53:01Z",
          "created_at": "2022-03-04T19:14:43Z",
          "updated_at": "2023-09-07T12:10:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T12:19:12Z",
      "updated_at": "2022-04-05T12:19:12Z",
      "source": {
        "issue": {
          "id": 1137799624,
          "node_id": "PR_kwDOABII584yz-Il",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24341",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24341/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24341/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24341/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24341",
          "number": 24341,
          "state": "closed",
          "state_reason": null,
          "title": "build: remove some no-longer-needed var unexporting from configure",
          "body": "Includes a secp256k1 subtree update (this would be done separate) to pick up https://github.com/bitcoin-core/secp256k1/pull/1090.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24341",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24341",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24341.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24341.patch"
          },
          "closed_at": "2022-04-06T20:22:32Z",
          "created_at": "2022-02-14T20:23:15Z",
          "updated_at": "2023-10-06T12:26:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T16:10:45Z",
      "updated_at": "2022-04-05T16:10:45Z",
      "source": {
        "issue": {
          "id": 1114420180,
          "node_id": "PR_kwDOABII584xlgxJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24157",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24157/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24157/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24157/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24157",
          "number": 24157,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Replace RecursiveMutex `cs_totalBytesSent`  with Mutex and rename it",
          "body": "Related to #19303, this PR gets rid of the RecursiveMutex `cs_totalBytesSent` and also adds `AssertLockNotHeld` macros combined with `LOCKS_EXCLUDED` thread safety annotations to avoid recursive locking.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24157",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24157",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24157.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24157.patch"
          },
          "closed_at": "2022-04-26T08:22:08Z",
          "created_at": "2022-01-25T22:21:00Z",
          "updated_at": "2023-04-27T09:57:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "added_to_project",
      "id": 6372895382,
      "node_id": "ATPE_lADOABII585G_btJzwAAAAF72qqW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6372895382",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T16:34:12Z",
      "project_card": {
        "id": 80204308,
        "url": "https://api.github.com/projects/columns/cards/80204308",
        "project_id": 13452186,
        "project_url": "https://api.github.com/projects/13452186",
        "column_name": "Needs review"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T17:11:39Z",
      "updated_at": "2022-04-05T17:11:39Z",
      "source": {
        "issue": {
          "id": 1112912801,
          "node_id": "PR_kwDOABII584xgm5r",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24141",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24141/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24141/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24141/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24141",
          "number": 24141,
          "state": "closed",
          "state_reason": null,
          "title": "Rename message_command variables in src/net* and src/rpc/net.cpp",
          "body": "This PR is a follow-up to #24078.\r\n\r\n> a message is not a command, but simply a message of some type\r\n\r\nThe first commit covers the message_command variable name and comments not addressed in the original PR in `src/net*` files.\r\nThe second commit goes beyond the original `src/net*` limit of #24078 and does similar changes in the `src/rpc/net.cpp` file.\r\n",
          "user": {
            "login": "shaavan",
            "id": 85434418,
            "node_id": "MDQ6VXNlcjg1NDM0NDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/85434418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaavan",
            "html_url": "https://github.com/shaavan",
            "followers_url": "https://api.github.com/users/shaavan/followers",
            "following_url": "https://api.github.com/users/shaavan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/shaavan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/shaavan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/shaavan/subscriptions",
            "organizations_url": "https://api.github.com/users/shaavan/orgs",
            "repos_url": "https://api.github.com/users/shaavan/repos",
            "events_url": "https://api.github.com/users/shaavan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/shaavan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24141",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24141",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24141.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24141.patch"
          },
          "closed_at": "2022-05-05T06:40:18Z",
          "created_at": "2022-01-24T17:05:12Z",
          "updated_at": "2023-05-05T10:00:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T19:46:32Z",
      "updated_at": "2022-04-05T19:46:32Z",
      "source": {
        "issue": {
          "id": 1096473924,
          "node_id": "PR_kwDOABII584wqtsr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24005/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24005/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24005/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24005",
          "number": 24005,
          "state": "closed",
          "state_reason": null,
          "title": "test: add python implementation of Elligator swift",
          "body": "Built on top of https://github.com/bitcoin/bitcoin/pull/26222.\r\n\r\nThis PR introduces Elligator swift encoding and decoding in the functional test framework. It's used in #24748 for writing p2p encryption tests.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24005",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24005.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24005.patch"
          },
          "closed_at": "2023-06-30T18:31:03Z",
          "created_at": "2022-01-07T16:33:19Z",
          "updated_at": "2023-06-30T18:31:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T22:47:36Z",
      "updated_at": "2022-04-05T22:47:36Z",
      "source": {
        "issue": {
          "id": 1059245454,
          "node_id": "PR_kwDOABII584uzo7R",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
          "number": 23561,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Handshake prerequisites",
          "body": "Depends on #25361 for some constants, and on https://github.com/bitcoin-core/secp256k1/pull/1129 for ellswift integrated XDH but can be reviewed independently. Only the last 5 commits belong to this PR.\r\n\r\nThis PR adds xonly [ECDH](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#Initial_handshake) and [HKDF](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#keys-and-session-id-derivation) key derivation code for BIP324. Unit, bench and fuzz tests are included.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23561",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23561.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23561.patch"
          },
          "closed_at": "2023-04-18T08:50:23Z",
          "created_at": "2021-11-20T22:50:38Z",
          "updated_at": "2023-04-18T08:50:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T23:48:46Z",
      "updated_at": "2022-04-05T23:48:46Z",
      "source": {
        "issue": {
          "id": 1045818438,
          "node_id": "PR_kwDOABII584uJavG",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23443",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23443/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23443/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23443/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23443",
          "number": 23443,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Erlay support signaling",
          "body": "This is a part of the Erlay project:\r\n- [parent PR](https://github.com/bitcoin/bitcoin/pull/21515)\r\n- [associated BIP-330](https://github.com/bitcoin/bips/pull/1376).\r\n\r\n-------\r\n\r\nThis PR adds a new p2p message `sendtxrcncl` signaling for reconciliation support.\r\nBefore sending that message, a node is supposed to \"pre-register\" the peer by generating and storing an associated reconciliation salt component.\r\nOnce the salts are exchanged within this new message, nodes \"register\" each other for future reconciliations by computing and storing the aggregate salt, along with the reconciliation parameters based on the connection direction.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23443",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23443",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23443.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23443.patch"
          },
          "closed_at": "2022-10-17T17:11:41Z",
          "created_at": "2021-11-05T12:51:10Z",
          "updated_at": "2023-10-25T12:15:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T23:58:15Z",
      "updated_at": "2022-04-05T23:58:15Z",
      "source": {
        "issue": {
          "id": 1043863646,
          "node_id": "PR_kwDOABII584uDOCP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23432",
          "number": 23432,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: CKey encode/decode to elligator-swift",
          "body": "This PR adds the ability to encode `CPubKey` objects to their pseudorandom elligator-swift representation. Depends on https://github.com/bitcoin-core/secp256k1/pull/1129.\r\n\r\nThe first 2 commits enable the availability of that upstream code and will be removed once https://github.com/bitcoin-core/secp256k1/pull/1129 is merged. Only last 3 commits need review here.",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23432",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23432",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23432.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23432.patch"
          },
          "closed_at": "2023-04-18T00:39:36Z",
          "created_at": "2021-11-03T17:14:42Z",
          "updated_at": "2023-04-18T00:39:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T00:49:50Z",
      "updated_at": "2022-04-06T00:49:50Z",
      "source": {
        "issue": {
          "id": 1034936603,
          "node_id": "PR_kwDOABII584tnYg9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23352",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23352/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23352/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23352/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23352",
          "number": 23352,
          "state": "open",
          "state_reason": null,
          "title": "test: Extend stale_tip_peer_management test",
          "body": "Add coverage for the case where a peer is protected when it pretends to have a block.\r\n\r\nAlso, add some `ASSERT_DEBUG_LOG` to document the tests for the reader.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23352",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23352",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23352.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23352.patch"
          },
          "created_at": "2021-10-25T10:08:05Z",
          "updated_at": "2023-11-08T00:37:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T01:24:35Z",
      "updated_at": "2022-04-06T01:24:35Z",
      "source": {
        "issue": {
          "id": 1021384855,
          "node_id": "PR_kwDOABII584s9UYg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
          "number": 23233,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Add encrypted p2p transport {de}serializer",
          "body": "Revives #18242. Depends on #25361 (please review that first, the last 4 commits are to be reviewed here).\r\n\r\nThis PR adds a p2p message transport {de}serializer for encrypted packets leveraging the BIP324 specification.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23233.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23233.patch"
          },
          "closed_at": "2023-05-06T11:11:30Z",
          "created_at": "2021-10-08T19:01:33Z",
          "updated_at": "2023-05-06T11:11:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T02:58:38Z",
      "updated_at": "2022-04-06T02:58:38Z",
      "source": {
        "issue": {
          "id": 990058405,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzI4NzA0MjQx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22910",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22910/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22910/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22910/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22910",
          "number": 22910,
          "state": "closed",
          "state_reason": null,
          "title": "net: Encapsulate asmap in NetGroupManager",
          "body": "The asmap data is currently owned by addrman, but is used by both addrman and connman. #22791 made the data const and private (so that it can't be updated by other components), but it is still passed out of addrman as a reference to const, and used by `CNetAddress` to calculate the group and AS of the net address.\r\n\r\nThis RFC PR proposes to move all asmap data and logic into a new `NetGroupManager` component. This is initialized at startup, and the client components addrman and connman simply call `NetGroupManager::GetGroup(const CAddress&)` and `NetGroupManager::GetMappedAS(const CAddress&)` to get the net group and AS of an address.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22910",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22910",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22910.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22910.patch"
          },
          "closed_at": "2022-04-22T13:43:46Z",
          "created_at": "2021-09-07T14:39:58Z",
          "updated_at": "2023-04-24T14:45:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T03:25:10Z",
      "updated_at": "2022-04-06T03:25:10Z",
      "source": {
        "issue": {
          "id": 984638623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzI0MDQ3NTUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22851",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22851/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22851/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22851/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22851",
          "number": 22851,
          "state": "closed",
          "state_reason": null,
          "title": "[WIP] Add Python ChaCha20 and bindings for CPP ChaCha20",
          "body": "In reference to,\r\n>We'll need a python chacha implementation when BIP324 lands, and the functionality in chacha20_doubleround() could be part of that, but until BIP324 I think it's fine to have it in the same file as the muhash code.\r\n\r\n_Originally posted in_ https://github.com/bitcoin/bitcoin/pull/19105#issuecomment-643458042\r\n\r\nThis PR implements the following:\r\n - Adds Pyallowsthon ChaCha20 implementation with a 64-bit nonce. \r\n- Creates Python bindings for the CPP implementation [`chacha20.cpp`](https://github.com/bitcoin/bitcoin/blob/master/src/crypto/chacha20.cpp) using [pybind11](https://pybind11.readthedocs.io/en/latest/index.html).\r\n\r\nThis will allow us to test both the Python chacha20 and CPP chacha20 against the same test vectors. Hence, increasing the test coverage for chacha20.\r\n\r\nThe idea of using Pybind11 was suggested in https://github.com/bitcoin/bitcoin/pull/19841#issuecomment-687667841.  This PR is built on top of the [PR draft #21301](https://github.com/bitcoin/bitcoin/pull/21301) using the changes suggested [here](https://github.com/jesseposner/bitcoin/pull/1).\r\n\r\nTo test this PR, build Bitcoin Core with(out) the wallet and run:\r\n```bash\r\n$ test/functional/test_runner.py \r\n```",
          "user": {
            "login": "siv2r",
            "id": 56887198,
            "node_id": "MDQ6VXNlcjU2ODg3MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siv2r",
            "html_url": "https://github.com/siv2r",
            "followers_url": "https://api.github.com/users/siv2r/followers",
            "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
            "organizations_url": "https://api.github.com/users/siv2r/orgs",
            "repos_url": "https://api.github.com/users/siv2r/repos",
            "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/siv2r/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22851",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22851",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22851.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22851.patch"
          },
          "closed_at": "2022-04-14T08:01:30Z",
          "created_at": "2021-09-01T05:20:53Z",
          "updated_at": "2023-04-14T14:43:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T03:59:40Z",
      "updated_at": "2022-04-06T03:59:40Z",
      "source": {
        "issue": {
          "id": 976972751,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzE3Nzg0MTkw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22778",
          "number": 22778,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Reduce resource usage for inbound block-relay-only connections",
          "body": "block-relay-only connections are additional outbound connections that bitcoind makes since v0.19. They participate in block relay, but do not propagate transactions or addresses. They were introduced in #15759.\r\n\r\nWhen creating an outbound block-relay-only connection, since we know that we're never going to announce transactions over that connection, we can save on memory usage by not a `TxRelay` data structure for that connection. When receiving an inbound connection, we don't know whether the connection was opened by the peer as block-relay-only or not, and therefore we always construct a `TxRelay` data structure for inbound connections.\r\n\r\nHowever, it is possible to tell whether an inbound connection will ever request that we start announcing transactions to it. The `fRelay` field in the `version` message may be set to `0` to indicate that the peer does not wish to receive transaction announcements. The peer may later request that we start announcing transactions to it by sending a `filterload` or `filterclear` message, **but only if we have offered `NODE_BLOOM` services to that peer**. `NODE_BLOOM` services are disabled by default, and it has been recommended for some time that users not enable `NODE_BLOOM` services on public connections, for privacy and anti-DoS reasons.\r\n\r\nTherefore, if we have not offered `NODE_BLOOM` to the peer _and_ it has set `fRelay` to `0`, then we know that it will never request transaction announcements, and that we can save resources by not initializing the `TxRelay` data structure.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22778",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22778",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22778.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22778.patch"
          },
          "closed_at": "2022-05-19T08:27:39Z",
          "created_at": "2021-08-23T12:20:15Z",
          "updated_at": "2023-06-09T10:05:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T07:15:53Z",
      "updated_at": "2022-04-06T07:15:53Z",
      "source": {
        "issue": {
          "id": 840540283,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjAwNDEyMDM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21527",
          "number": 21527,
          "state": "closed",
          "state_reason": null,
          "title": "net_processing: lock clean up",
          "body": "`cs_sendProcessing` is replaced by a private mutex in net_processing, non-orphan-specific things are moved out from `g_cs_orphans` and `g_cs_orphans` is replaced by a private mutex in txorphanage.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21527",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21527.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21527.patch"
          },
          "closed_at": "2022-08-29T06:54:34Z",
          "created_at": "2021-03-25T04:16:30Z",
          "updated_at": "2023-08-29T12:09:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T09:10:49Z",
      "updated_at": "2022-04-06T09:10:49Z",
      "source": {
        "issue": {
          "id": 771452944,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyOTc3MTM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20726",
          "number": 20726,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Add DISABLETX message for negotiating block-relay-only connections",
          "body": "Implement BIP 338.\r\n\r\nWhen we initiate a block-relay-only connection today, our peer doesn't know that we won't send transactions ourselves, or even that we won't try to turn on transaction relay at some later point during the connection's lifetime.\r\n\r\nThis PR adds a new p2p message, DISABLETX, to be sent between VERSION and VERACK so that peers can signal to each other that they only want blocks/compactblocks/headers to be sent on the link, and not transaction-relay traffic (or addr messages, unless otherwise indicated).",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 55,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20726",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20726.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20726.patch"
          },
          "closed_at": "2022-05-19T12:47:00Z",
          "created_at": "2020-12-19T20:55:36Z",
          "updated_at": "2023-05-19T10:02:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T20:09:19Z",
      "updated_at": "2022-04-06T20:09:19Z",
      "source": {
        "issue": {
          "id": 1192931582,
          "node_id": "PR_kwDOABII5841pUKH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24770",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24770/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24770/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24770/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24770",
          "number": 24770,
          "state": "closed",
          "state_reason": null,
          "title": "Put lock logging behind DEBUG_LOCKCONTENTION preprocessor directive",
          "body": "This is a more minimal, no-frills version of #24734 for backport. The other fixes and improvements in that pull can be done after.\r\n\r\n*Copy of the PR 24734 description:*\r\n\r\nPRs #22736, #22904 and #23223 changed lock contention logging from a `DEBUG_LOCKCONTENTION` compile-time preprocessor directive to a runtime `lock` log category and improved the logging output. This changed the locking from using `lock()` to `try_lock()`:\r\n\r\n- `void Mutex::UniqueLock::lock()` acquires the mutex and blocks until it gains access to it\r\n\r\n- `bool Mutex::UniqueLock::try_lock()` doesn't block but instead immediately returns whether it acquired the mutex; it may be used by `lock()` internally as part of the deadlock-avoidance algorithm\r\n\r\nIn theory the cost of `try_lock` might be essentially the [same](https://www.erisian.com.au/bitcoin-core-dev/log-2022-03-31.html#l-697) relative to `lock`. The test-and-set logic of these calls is purported to be ~ constant time, optimised and light/quick if used carefully (i.e. no mutex convoying), compared to system calls, memory/cache coherency and fences, wait queues, and (particularly) lock contentions. See the discussion around https://github.com/bitcoin/bitcoin/pull/22736#issuecomment-902851054 and after with respect to performance/cost aspects.  However, there are reasonable concerns (see [here](https://github.com/bitcoin/bitcoin/pull/22736#discussion_r691277896) and [here](https://www.erisian.com.au/bitcoin-core-dev/log-2022-03-31.html#l-620)) that `Base::try_lock()` may be potentially [costly](https://www.erisian.com.au/bitcoin-core-dev/log-2022-03-31.html#l-700) or [risky](https://github.com/bitcoin/bitcoin/pull/22904#issuecomment-930484001) compared to `Base::lock()` in this very frequently called code.\r\n\r\nOne alternative to keep the run-time lock logging would be to gate the `try_lock` call behind the logging conditional, for example as proposed in https://github.com/bitcoin/bitcoin/commit/ccd73de1dd969097d34634c2be2fc32b03fbd09e and ACKed [here](https://github.com/bitcoin/bitcoin/pull/22736#issuecomment-901980815). However, this would add the [cost](https://github.com/bitcoin/bitcoin/pull/22736#issuecomment-910102353) of `if (LogAcceptCategory(BCLog::LOCK))` to the hotspot, instead of replacing `lock` with `try_lock`, for the most frequent happy path (non-contention).\r\n\r\nIt turns out we can keep the advantages of the runtime lock contention logging (the ability to turn it on/off at runtime) while out of prudence putting the `try_lock()` call and `lock` logging category behind a  `DEBUG_LOCKCONTENTION` compile-time preprocessor directive, and also still retain the lock logging enhancements of the mentioned PRs, as suggested in https://github.com/bitcoin/bitcoin/pull/24734#issuecomment-1085785480 by W. J. van der Laan, in https://github.com/bitcoin/bitcoin/pull/22736#discussion_r691280693, and in the linked IRC discussion.\r\n\r\nProposed here and for backport to v23.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/52",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52/labels",
            "id": 6179837,
            "node_id": "MDk6TWlsZXN0b25lNjE3OTgzNw==",
            "number": 52,
            "state": "closed",
            "title": "23.0",
            "description": "",
            "creator": {
              "login": "maflcko",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/maflcko",
              "html_url": "https://github.com/maflcko",
              "followers_url": "https://api.github.com/users/maflcko/followers",
              "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
              "organizations_url": "https://api.github.com/users/maflcko/orgs",
              "repos_url": "https://api.github.com/users/maflcko/repos",
              "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/maflcko/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 123,
            "created_at": "2020-12-04T08:54:20Z",
            "updated_at": "2022-04-25T20:51:00Z",
            "closed_at": "2022-04-22T18:08:30Z"
          },
          "locked": true,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24770",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24770",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24770.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24770.patch"
          },
          "closed_at": "2022-04-08T12:30:39Z",
          "created_at": "2022-04-05T10:18:23Z",
          "updated_at": "2023-04-08T14:42:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1091152739,
      "node_id": "IC_kwDOABII585BCatj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091152739",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T07:03:29Z",
      "updated_at": "2022-04-07T07:03:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1091152739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T08:13:04Z",
      "updated_at": "2022-04-08T08:13:04Z",
      "source": {
        "issue": {
          "id": 1195140483,
          "node_id": "PR_kwDOABII5841wxpc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24792",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24792/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24792/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24792/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24792",
          "number": 24792,
          "state": "closed",
          "state_reason": null,
          "title": "Update libsecp256k1 subtree to current master",
          "body": "The motivation for this bump is some small build cleanups, including [dropping the `--enable-experimental`](https://github.com/bitcoin-core/secp256k1/commit/80cf4eea5fa0162350614c08f2252a07f9d7804b) flag from the libsecp configure  invocation, as well as some [now-redundant](https://github.com/bitcoin-core/secp256k1/pull/1090) `pkg-config` variable exporting from our own configure. We also get the benefit of a slightly more efficient libsecp configure due to https://github.com/bitcoin-core/secp256k1/pull/1088.\r\n\r\nThis also includes a change in our code to migrate from using the [now deprecated](https://github.com/bitcoin-core/secp256k1/commit/99e6568fc6ea2768f5355eb4617283086f756931) `secp256k1_schnorrsig_sign` to `secp256k1_schnorrsig_sign32`.\r\n\r\nGuix Build (on x86_64):\r\n```bash\r\nb9f6ad90c75f7edd7c4444c6c3401d8b6ab29a8da22ae22ddaedd94688227b5d  guix-build-404c53062bb8/output/aarch64-linux-gnu/SHA256SUMS.part\r\n250d47ae299d8385d5590518fa2adaabde76e2566fd27e12bf36b62663d13e13  guix-build-404c53062bb8/output/aarch64-linux-gnu/bitcoin-404c53062bb8-aarch64-linux-gnu-debug.tar.gz\r\n48d610dc6f5169f925f782571dac2f082695f89008beadad4adef4c1b583a612  guix-build-404c53062bb8/output/aarch64-linux-gnu/bitcoin-404c53062bb8-aarch64-linux-gnu.tar.gz\r\n8f04ee26e4079719e3935bd0e4287cc11a2a16875bf01e2a63d67492a1fa5367  guix-build-404c53062bb8/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n7d7d7fcfb032bda92e53abd8d608257f0ef17b1e3e52a1414260b896786fb2dc  guix-build-404c53062bb8/output/arm-linux-gnueabihf/bitcoin-404c53062bb8-arm-linux-gnueabihf-debug.tar.gz\r\n30bae2ff3d044f4e39f992a68f6b296b7be2aea350bca4a0415c739a32c20bd9  guix-build-404c53062bb8/output/arm-linux-gnueabihf/bitcoin-404c53062bb8-arm-linux-gnueabihf.tar.gz\r\n5f550fb0b950250eeffce3480ec6403530b0880570a5860ef6c32a3e92eac92f  guix-build-404c53062bb8/output/arm64-apple-darwin/SHA256SUMS.part\r\nc10664d13aeec8c860bf72be833c738973ae18e4d28cdf08b2f9bee960ebff1d  guix-build-404c53062bb8/output/arm64-apple-darwin/bitcoin-404c53062bb8-arm64-apple-darwin-unsigned.dmg\r\nbecab75b11cf4ca6f559f8eef835f3574629f6eb932ac716ed4f8c044a85831f  guix-build-404c53062bb8/output/arm64-apple-darwin/bitcoin-404c53062bb8-arm64-apple-darwin-unsigned.tar.gz\r\nbc86433652fe3552f6a13088191364ae7514c9fe3a244da86a6db096bb4922fc  guix-build-404c53062bb8/output/arm64-apple-darwin/bitcoin-404c53062bb8-arm64-apple-darwin.tar.gz\r\n1f585cb9a1356343df4b2726ecfe2598c9903304afb047c047c2cef318555dd3  guix-build-404c53062bb8/output/dist-archive/bitcoin-404c53062bb8.tar.gz\r\n9ede534ba2c6cecb550473eead195627327e826ebb0118e23d60ab482d40e241  guix-build-404c53062bb8/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n77ddb7d7d639b1dd4508468a8ef27e45b35c8b2f8624584a70e6b64798a4ea7a  guix-build-404c53062bb8/output/powerpc64-linux-gnu/bitcoin-404c53062bb8-powerpc64-linux-gnu-debug.tar.gz\r\n36178c1f1c12942ff05275daa3570f8b45419ee8d9f391d750afb405219986f0  guix-build-404c53062bb8/output/powerpc64-linux-gnu/bitcoin-404c53062bb8-powerpc64-linux-gnu.tar.gz\r\n8a15a4da7a9a5e00c49d9aeedf3c6fc666c0d230be1369eac7caf4571d5905e0  guix-build-404c53062bb8/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n400c58113f2d07c87e03c8528b292c6aca808a2bccae4b041cad3a26a05b6aad  guix-build-404c53062bb8/output/powerpc64le-linux-gnu/bitcoin-404c53062bb8-powerpc64le-linux-gnu-debug.tar.gz\r\n3b9f9d8614ac3a27416e53354b2b0a64d364f91493e9d0f41583a6f492546824  guix-build-404c53062bb8/output/powerpc64le-linux-gnu/bitcoin-404c53062bb8-powerpc64le-linux-gnu.tar.gz\r\n98506b23ee08ad8af958f816da2e4518d661e88d5c6308de1f5e3b2fc787b86c  guix-build-404c53062bb8/output/riscv64-linux-gnu/SHA256SUMS.part\r\nc701a7b77cea4fdc2588b511f1b2c71b89c83bfba19fdb2ac113a5a4b14ac392  guix-build-404c53062bb8/output/riscv64-linux-gnu/bitcoin-404c53062bb8-riscv64-linux-gnu-debug.tar.gz\r\n34d58e6392cd58b3c76e30cd8600c0dbefba7e9c6d5df78c3ef23e81c4e4d26a  guix-build-404c53062bb8/output/riscv64-linux-gnu/bitcoin-404c53062bb8-riscv64-linux-gnu.tar.gz\r\n92fa30e9c6d81dd1e1514b65d3e1abe68ded897237cd99f66aa760d445109c04  guix-build-404c53062bb8/output/x86_64-apple-darwin/SHA256SUMS.part\r\nbee180b02f178ae9980ef159f65913a71cbd037c4aff5f2906af5f174a677da3  guix-build-404c53062bb8/output/x86_64-apple-darwin/bitcoin-404c53062bb8-x86_64-apple-darwin-unsigned.dmg\r\nad7d18d779ab7a7944817d1f368d0a6bdd174bf1211b0f90180c8ccf04ec4062  guix-build-404c53062bb8/output/x86_64-apple-darwin/bitcoin-404c53062bb8-x86_64-apple-darwin-unsigned.tar.gz\r\n7489d1d5d48ad95cf58bb11b5fdeccadac6fa758784fb498529fca2330abe069  guix-build-404c53062bb8/output/x86_64-apple-darwin/bitcoin-404c53062bb8-x86_64-apple-darwin.tar.gz\r\n74660fb0ebce2a08b03980a57bffcad62e078dc967a74d2395660ff51c019640  guix-build-404c53062bb8/output/x86_64-linux-gnu/SHA256SUMS.part\r\ncd377fa6b46276c2f8a32e199e6f9adf6aa67315688656709d6dc0744d54a837  guix-build-404c53062bb8/output/x86_64-linux-gnu/bitcoin-404c53062bb8-x86_64-linux-gnu-debug.tar.gz\r\n919c521950369d8ad46db2d15b00abb488abfb080d157a41b2db429122a428ed  guix-build-404c53062bb8/output/x86_64-linux-gnu/bitcoin-404c53062bb8-x86_64-linux-gnu.tar.gz\r\n2debca995d432965a8786b6ff74aed42e9e2f1cb0fecbe2d9fc5b850c192fcff  guix-build-404c53062bb8/output/x86_64-w64-mingw32/SHA256SUMS.part\r\ne33169f684fb031ec18ed39812617d3eb263257f6c7564b8f4c974ad05fe672c  guix-build-404c53062bb8/output/x86_64-w64-mingw32/bitcoin-404c53062bb8-win64-debug.zip\r\n029d0a4180cb908d517fcf689dcf46d42fbf383e11dc609711617066ae039ab0  guix-build-404c53062bb8/output/x86_64-w64-mingw32/bitcoin-404c53062bb8-win64-setup-unsigned.exe\r\n7e349c688cac66436562c4805f420b0536db5a3b3abf54d0e8c7752f59874a5c  guix-build-404c53062bb8/output/x86_64-w64-mingw32/bitcoin-404c53062bb8-win64-unsigned.tar.gz\r\n1bff98e82e95c93d6060227408502f5e2d8597d526b912cb6dc0a90ae3094a8f  guix-build-404c53062bb8/output/x86_64-w64-mingw32/bitcoin-404c53062bb8-win64.zip\r\n```",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24792",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24792",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24792.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24792.patch"
          },
          "closed_at": "2022-04-09T19:19:18Z",
          "created_at": "2022-04-06T20:22:12Z",
          "updated_at": "2023-04-10T14:42:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1092829016,
      "node_id": "IC_kwDOABII585BIz9Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092829016",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T12:54:02Z",
      "updated_at": "2022-04-08T12:54:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1092829016",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "labeled",
      "id": 6396929707,
      "node_id": "LE_lADOABII585G_btJzwAAAAF9SWar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6396929707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-08T14:33:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 7509322287,
      "node_id": "CTDE_lADOABII585G_btJzwAAAAG_lyov",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7509322287",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T17:17:03Z"
    },
    {
      "event": "commented",
      "id": 1265788740,
      "node_id": "IC_kwDOABII585LcmdE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265788740",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T17:24:02Z",
      "updated_at": "2022-10-03T17:24:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "converting this PR into a draft. I'll push the updated version which includes the new spec changes in BIP 324 soon.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1265788740",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8056726947,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAHgN-Wj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8056726947",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T13:37:12Z"
    },
    {
      "event": "unlabeled",
      "id": 8057195209,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAHgPwrJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8057195209",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:35:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 8057992291,
      "node_id": "RFRE_lADOABII585G_btJzwAAAAHgSzRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8057992291",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T16:09:16Z"
    },
    {
      "event": "commented",
      "id": 1355151959,
      "node_id": "IC_kwDOABII585QxfpX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1355151959",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T16:09:34Z",
      "updated_at": "2023-02-21T21:06:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've updated the PR to reflect the new spec changes in the BIP. It's built on top of #24545's 78c3ccc. Only the last 19 commits belong to this PR.\r\n\r\nUPDATE:\r\n- rebased on  #24545's f97a1a8\r\n- rebased on #24545's  a7fdbf6",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1355151959",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T08:47:11Z",
      "updated_at": "2022-12-17T08:47:11Z",
      "source": {
        "issue": {
          "id": 1493365643,
          "node_id": "PR_kwDOABII585FRc85",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26691",
          "number": 26691,
          "state": "closed",
          "state_reason": null,
          "title": "Update secp256k1 subtree to libsecp256k1 version 0.2.0",
          "body": "Now that libsecp256k1 has a release (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021271.html), update the subtree to match it.\r\n\r\nThe changes themselves are not very impactful for Bitcoin Core, but include:\r\n* It's no longer needed to specify whether contexts are for signing or verification or both (all contexts support everything), so make use of that in this PR.\r\n* Verification operations can use the static context now, removing the need for some infrastructure in pubkey.cpp to make sure a context exists.\r\n* Most modules are now enabled by default, so we can drop explicit enabling for them.\r\n* CI improvements (in particular, MSVC and more recent MacOS)\r\n* Introduction of an internal int128 type, which has no effect for GCC/Clang builds, but enables 128-bit multiplication in MSVC, giving a ~20% speedup there (but still slower than GCC/Clang).\r\n* Release process changes (process documentation, changelog, ...).\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/56",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56/labels",
            "id": 7733968,
            "node_id": "MI_kwDOABII584AdgLQ",
            "number": 56,
            "state": "closed",
            "title": "25.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 38,
            "created_at": "2022-03-03T18:51:29Z",
            "updated_at": "2023-05-25T13:24:42Z",
            "closed_at": "2023-05-25T13:24:42Z"
          },
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26691",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26691",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26691.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26691.patch"
          },
          "closed_at": "2023-01-13T09:41:23Z",
          "created_at": "2022-12-13T04:50:18Z",
          "updated_at": "2023-01-13T09:41:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T08:52:52Z",
      "updated_at": "2022-12-17T08:52:52Z",
      "source": {
        "issue": {
          "id": 1489292591,
          "node_id": "PR_kwDOABII585FDDwz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26684",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26684/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26684/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26684/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26684",
          "number": 26684,
          "state": "open",
          "state_reason": null,
          "title": "bench: add readblock benchmark",
          "body": "Requested in https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385962450.\r\nSee https://github.com/bitcoin/bitcoin/pull/26415 and https://github.com/bitcoin/bitcoin/pull/21319.\r\n\r\nBenchmarking shows a >50x increase in speed on both nvme and spinning disk.\r\n\r\nBenchmark results:\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        5,377,375.00 |              185.96 |    0.2% |   60,125,513.00 |   11,633,676.00 |  5.168 |   3,588,800.00 |    0.4% |      0.09 | `ReadBlockFromDiskTest`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|           89,945.58 |           11,117.83 |    0.7% |       12,743.90 |       64,530.33 |  0.197 |       2,595.20 |    0.2% |      0.01 | `ReadRawBlockFromDiskTest`",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26684",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26684",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26684.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26684.patch"
          },
          "created_at": "2022-12-11T02:22:23Z",
          "updated_at": "2023-11-27T13:53:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T09:07:00Z",
      "updated_at": "2022-12-17T09:07:00Z",
      "source": {
        "issue": {
          "id": 1483331058,
          "node_id": "PR_kwDOABII585Et4-s",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26656",
          "number": 26656,
          "state": "closed",
          "state_reason": null,
          "title": "tests: Improve runtime of some tests when `--enable-debug`",
          "body": "When configured with `--enable-debug`, many tests become dramatically slower. These slow downs are particularly noticed in tests that generate a lot of blocks in separate calls, make a lot of RPC calls, or send a lot of data from the test framework's P2P connection. This PR aims to improve the runtime of some of the slower tests and improve the overall runtime of the test runner. This has improved the runtime of the test runner from ~400s to ~140s on my computer.\r\n\r\nThe slowest test by far was `wallet_import_rescan.py`. This was taking ~320s. Most of that time was spent waiting for blocks to be mined and then synced to the other nodes. It was generating a new block for every new transaction it was creating in a setup loop. However it is not necessary to have one tx per block. By mining a block only every 10 txs, the runtime is improved to ~61s.\r\n\r\nThe second slowest test was `feature_fee_estimation.py`. This test spends most of its time waiting for RPCs to respond. I was able to improve its runtime by batching RPC requests. This has improved the runtime from ~201s to ~140s.\r\n\r\nIn `feature_taproot.py`, the test was constructing a Python `CScript` using a very large list of `OP_CHECKSIG`s. The constructor for the Python implementation of `CScript` was iterating this list in order to create a `bytes` from it even though a `bytes` could be created from it without iterating. By making the `bytes` before passing it into the constructor, we are able to improve this test's runtime from ~131s to ~106s.\r\n\r\nAlthough `interface_rpc.py` was not typically a slow test, I found that it would occasionally have a super long runtime. It typically takes ~7s, but I have observed it taking >400s to run on occasion. This longer runtime occurs more often when `--enable-debug`. This long runtime was caused by the \"exceeding work queue\" test which is really just trying to trigger a race condition. In this test, it would create a few threads and try an RPC in a loop in the hopes that eventually one of the RPCs would be added to the work queue while another was processing. It used `getrpcinfo` for this, but this function is fairly fast. I believe what was happening was that with `--enable-debug`, all of the code for receiving the RPC would often take longer to run than the RPC itself, so the majority of the requests would succeed, until we got lucky after 10's of thousands of requests. By changing this to use a slow RPC, the race condition can be triggered more reliably, and much sooner as well. I've used `waitfornewblock` with a 500ms timeout. This improves the runtime to ~3s consistently.\r\n\r\nThe last test I've changed was `rpc_packages.py`. This test was one of the higher runtime variability tests. The main source of this variation appears to be waiting for the test node to relay a transaction to the test framework's P2P connection. By whitelisting that peer, the variability is reduced to nearly 0.\r\n\r\nLastly, I've reordered the tests in `test_runner.py` to account for the slower runtimes when configured with `--enable-debug`. Some of the slow tests I've looked at were listed as being fast which was causing overall `test_runner.py` runtime to be extended. This change makes the test runner's runtime be bounded by the slowest test (currently `feature_fee_estimation.py` with my usual config (`-j 60`).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26656",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26656",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26656.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26656.patch"
          },
          "closed_at": "2022-12-19T09:16:38Z",
          "created_at": "2022-12-08T01:38:12Z",
          "updated_at": "2022-12-19T09:16:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T09:23:59Z",
      "updated_at": "2022-12-17T09:23:59Z",
      "source": {
        "issue": {
          "id": 1471685707,
          "node_id": "PR_kwDOABII585EFGFt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
          "number": 26621,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Continue moving application data from CNode to Peer",
          "body": "This PR picks up a subset of changes from #24970 and additionally moves `m_bip152_highbandwith{to,from}`, `nTimeOffset`, `nVersion`, `m_greates_common_version`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26621",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26621.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26621.patch"
          },
          "closed_at": "2023-09-28T20:06:13Z",
          "created_at": "2022-12-01T17:26:32Z",
          "updated_at": "2023-09-28T20:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T09:38:04Z",
      "updated_at": "2022-12-17T09:38:04Z",
      "source": {
        "issue": {
          "id": 1467073842,
          "node_id": "PR_kwDOABII585D1g33",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
          "number": 26593,
          "state": "open",
          "state_reason": null,
          "title": "tracing: Only prepare tracepoint arguments when actually tracing",
          "body": "Currently, if the tracepoints are compiled (e.g. in depends and release builds), we always prepare the tracepoint arguments regardless of the tracepoints being used or not. We made sure that the argument preparation is as cheap as possible, but we can almost completely eliminate any overhead for users not interested in the tracepoints (the vast majority), by gating the tracepoint argument preparation with an `if(something is attached to this tracepoint)`. To achieve this, we use the optional semaphore feature provided by SystemTap.\r\n\r\nThe first commit simplifies and deduplicates our tracepoint macros from 13 TRACEx macros to a single TRACEPOINT macro. This makes them easier to use and also avoids more duplicate macro definitions in the second commit.\r\n\r\nThe Linux tracing tools I'm aware of (bcc, bpftrace, libbpf, and systemtap) all support the semaphore gating feature. Thus, all existing tracepoints and their argument preparation is gated in the second commit. For details, please refer to the commit messages and the updated documentation in `doc/tracing.md`.\r\n\r\nAlso adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported). \r\n\r\nReviewers might want to check:\r\n- Do the tracepoints still work for you? Do the examples in `contrib/tracing/` run on your system (as bpftrace frequently breaks on every new version, please test master too if it should't work for you)? Do the CI interface tests still pass?\r\n- Is the new documentation clear? \r\n- The `TRACEPOINT_SEMAPHORE(event, context)` macros places global variables in our global namespace. Is this something we strictly want to avoid or maybe move to all `TRACEPOINT_SEMAPHORE`s to a separate .cpp file or even namespace? I like having the `TRACEPOINT_SEMAPHORE()` in same file as the `TRACEPOINT()`, but open for suggestion on alternative approaches. \r\n- Are newly added tracepoints in the unit tests visible when using `readelf -n /src/test/test_bitcoin`? You can run the new unit tests with `./src/test/test_bitcoin --run_test=util_trace_tests* --log_level=all`.\r\n<details><summary>Two of the added unit tests demonstrate that we are only processing the tracepoint arguments when attached by having a test-failure condition in the tracepoint argument preparation. The following bpftrace script can be used to demonstrate that the tests do indeed fail when attached to the tracepoints.</summary>\r\n\r\n`fail_tests.bt`:\r\n\r\n```c\r\n#!/usr/bin/env bpftrace\r\n\r\nusdt:./src/test/test_bitcoin:test:check_if_attached {\r\n  printf(\"the 'check_if_attached' test should have failed\\n\");\r\n}\r\n\r\nusdt:./src/test/test_bitcoin:test:expensive_section {\r\n  printf(\"the 'expensive_section' test should have failed\\n\");\r\n}\r\n```\r\n\r\nRun the unit tests with `./src/test/test_bitcoin` and start `bpftrace fail_tests.bt -p $(pidof test_bitcoin)` in a separate terminal. The unit tests should fail with:\r\n\r\n```\r\nRunning 594 test cases...\r\ntest/util_trace_tests.cpp(31): error: in \"util_trace_tests/test_tracepoint_check_if_attached\": check false has failed\r\ntest/util_trace_tests.cpp(51): error: in \"util_trace_tests/test_tracepoint_manual_tracepoint_active_check\": check false has failed\r\n\r\n*** 2 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n\r\n</details>\r\n\r\nThese links might provide more contextual information for reviewers:\r\n- [How SystemTap Userspace Probes Work by eklitzke](https://eklitzke.org/how-sytemtap-userspace-probes-work) (actually an example on Bitcoin Core; mentions that with semaphores \"the overhead for an untraced process is effectively zero.\")\r\n- [libbpf comment on USDT semaphore handling](https://github.com/libbpf/libbpf/blob/1596a09b5de2a50ab8d44218fc29b6d42f886305/src/usdt.c#L83-L92) (can recommend the whole comment for background on how the tracepoints and tracing tools work together)\r\n- https://sourceware.org/systemtap/wiki/UserSpaceProbeImplementation#Semaphore_Handling",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26593.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26593.patch"
          },
          "created_at": "2022-11-28T20:50:26Z",
          "updated_at": "2023-12-11T17:20:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T10:19:18Z",
      "updated_at": "2022-12-17T10:19:18Z",
      "source": {
        "issue": {
          "id": 1431883486,
          "node_id": "PR_kwDOABII585B_agw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26441",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26441/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26441/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26441/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26441",
          "number": 26441,
          "state": "open",
          "state_reason": null,
          "title": "rpc, p2p: add `addpermissionflags` RPC and allow whitelisting outbound",
          "body": "Built this PR on top of #17167 (that's been closed due to inactivity but had some Concept ACK). So, it allows whitelisting outbound peers.\r\n\r\nThis PR adds a new RPC `addpermissionflags` to be able to set up permission flags -`whitelist` thru RPC, so we don't need to restart our node if we want to add new flags.\r\n\r\nE.g.\r\n```sh\r\n$ ./src/bitcoin-cli addpermissionflags [\"noban\", \"mempool\", \"in\", \"out\"] \"127.0.0.1\"\r\n```",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26441",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26441",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26441.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26441.patch"
          },
          "created_at": "2022-11-01T18:26:06Z",
          "updated_at": "2023-11-19T01:17:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T10:29:10Z",
      "updated_at": "2022-12-17T10:29:10Z",
      "source": {
        "issue": {
          "id": 1418890812,
          "node_id": "PR_kwDOABII585BUMUG",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26366",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26366/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26366/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26366/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26366",
          "number": 26366,
          "state": "closed",
          "state_reason": null,
          "title": "rpc, test: `addnode` improv + add test coverage for invalid command",
          "body": "This PR:\r\n\r\n- Adds test coverage for an invalid `command` in `addnode`.\r\n- Rename `test_getaddednodeinfo` to `test_addnode_getaddednodeinfo` and its log since this function also tests `addnode` and it doesn't worth to split into 2 ones.\r\n- Makes it clear in docs that `node` in `addnode` refers to the node's address. It seemed a little weird for me \"The node (see getpeerinfo for nodes)\", it could mean a lot of things e.g. the node id.\r\n- Some small improv/clean-up: use `const` where possible, rename some vars, and remove the check for nullance for `command` since it's a non-optional field.",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26366",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26366",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26366.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26366.patch"
          },
          "closed_at": "2023-09-21T10:35:53Z",
          "created_at": "2022-10-21T21:46:47Z",
          "updated_at": "2023-09-21T12:41:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T10:54:36Z",
      "updated_at": "2022-12-17T10:54:36Z",
      "source": {
        "issue": {
          "id": 1401856133,
          "node_id": "PR_kwDOABII585AbffS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
          "number": 26283,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Fill reconciliation sets and request reconciliation (Erlay)",
          "body": "*See #28765*\r\n\r\nFirst, this PR enables keeping track of per-peer reconciliation sets, containing those transactions which we intend to exchange efficiently. The remaining transactions are announced via flooding, as usual.\r\n\r\nSecond, this PR enables periodically initiating a reconciliation round via a new p2p message.\r\n\r\nErlay Project Tracking: #28646",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26283",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26283.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26283.patch"
          },
          "closed_at": "2023-11-01T09:07:31Z",
          "created_at": "2022-10-08T07:29:52Z",
          "updated_at": "2023-11-01T20:41:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T10:57:26Z",
      "updated_at": "2022-12-17T10:57:26Z",
      "source": {
        "issue": {
          "id": 1398072802,
          "node_id": "PR_kwDOABII585AOrOs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26261",
          "number": 26261,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: cleanup `LookupIntern`, `Lookup` and `LookupHost`",
          "body": "Continuation of #26078.\r\n\r\nTo improve readability instead of returning a bool and passing stuff by reference, this PR changes:\r\n\r\n- `LookupHost` to return `std::vector<CNetAddr>`\r\n- `LookupHost` to return `std::optional<CNetAddr>`\r\n- `Lookup` to return `std::vector<CService>`\r\n- `Lookup` to return `std::optional<CService>`.\r\n- `LookupIntern` to return `std::vector<CNetAddr>`\r\n\r\nAs discussed in #26078, it would be better to avoid using `optional` in some cases, but for specific `Lookup` and `LookupHost` functions it's necessary to use `optional` to verify if they were able to catch some data from their overloaded function.\r\n\r\n\r\n\r\n\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26261.patch"
          },
          "closed_at": "2023-05-30T15:40:23Z",
          "created_at": "2022-10-05T16:35:08Z",
          "updated_at": "2023-05-30T15:40:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T11:00:17Z",
      "updated_at": "2022-12-17T11:00:17Z",
      "source": {
        "issue": {
          "id": 1393480581,
          "node_id": "PR_kwDOABII584__hei",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26222",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26222/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26222/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26222/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26222",
          "number": 26222,
          "state": "closed",
          "state_reason": null,
          "title": "Introduce secp256k1 module with field and group classes to test framework",
          "body": "This PR rewrites a portion of `test_framework/key.py`, in a compatible way, by introducing classes that encapsulate field element and group element logic, in an attempt to be more readable and reusable.\r\n\r\nTo maximize readability, the group element logic does not use Jacobian coordinates. Instead, group elements just store (affine) X and Y coordinates directly. To compensate for the performance loss this causes, field elements are represented as fractions. This undoes most, but not all, of the performance loss, and there is a few % slowdown (as measured in `feature_taproot.py`, which heavily uses this).\r\n\r\nThe upside is that the implementation for group laws (point doubling, addition, subtraction, ...) is very close to the mathematical description of elliptic curves, and this extends to potential future extensions (e.g. ElligatorSwift as needed by #27479).",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26222",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26222",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26222.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26222.patch"
          },
          "closed_at": "2023-06-28T20:28:17Z",
          "created_at": "2022-10-01T17:12:10Z",
          "updated_at": "2023-06-28T20:28:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T11:14:26Z",
      "updated_at": "2022-12-17T11:14:26Z",
      "source": {
        "issue": {
          "id": 1376468939,
          "node_id": "PR_kwDOABII584_IHa-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26114",
          "number": 26114,
          "state": "open",
          "state_reason": null,
          "title": "net: Make AddrFetch connections to fixed seeds",
          "body": "This proposes two things:\r\n\r\n1. Make AddrFetch connections to fixed seeds instead of just adding them to AddrMan (suggested in https://github.com/bitcoin/bitcoin/pull/25678#issuecomment-1210858925)\r\nWhen adding fixed seeds, we currently add them to AddrMan and then make regular full outbound connections to them. If many new nodes use the fixed seeds for this, it will result in them getting a lot of peers requiring IBD, which will create a lot of traffic for them. With an AddrFetch connection, we will only use them to get addresses from other peers and disconnect afterwards.\r\nThis PR proposes to attempt making AddrFetch connections to 10 peers for better diversity (some may be offline anyway). The fixed seeds will still be added to Addrman as before, but only after a delay of 2 minutes, after which they will hopefully no longer be the only entries in AddrMan.\r\n\r\n2. Move the logic of adding fixed seeds out of `ThreadOpenConnections` into `ThreadDNSAddressSeed` (which is being renamed to `ThreadAddressSeed`).\r\nI think this makes sense in general because adding the fixed seeds is in many ways analogous to querying the DNS seeds, and ThreadOpenConnections, which is there to actually open the connections is already quite complex.\r\nAlso, it makes the changes from 1) easier if we don't have to worry about interfering with the automatic connection making logic.\r\n\r\nOne way to test this is to start without `peers.dat` and run with `-nodnsseed -blocksonly -debug=net` and monitor the debug log and `bitcoin-cli -netinfo` behavior.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26114.patch"
          },
          "created_at": "2022-09-16T21:01:39Z",
          "updated_at": "2023-10-23T12:46:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:04:34Z",
      "updated_at": "2022-12-17T12:04:34Z",
      "source": {
        "issue": {
          "id": 1347108338,
          "node_id": "PR_kwDOABII5849mUDu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
          "number": 25907,
          "state": "open",
          "state_reason": null,
          "title": "wallet: rpc to add automatically generated descriptors",
          "body": "It is useful to have a RPC that can create and add the automatically generated descriptors (that are normally made during creation) to a wallet. This is especially useful when a new default descriptor has been implemented as it allows wallets created before that time to quickly and easily add that type of descriptor.\r\n\r\nIn particular, descriptor wallets created before Taproot was implemented can use the new `createwalletdescriptor` RPC in order to get a Taproot descriptor.\r\n\r\nFurthermore, to keep the newly generated descriptor in line with the existing descriptors, this PR uses #26728 as it exposes a \"wallet extended key\" for us (in addition to upgrading wallets implemented prior to have a wallet xpub). The newly generated descriptors will use the \"wallet extended key\" stored in `CWallet` that PR adds.\r\n\r\n`createwalletdescriptor` is generic and so it can also be used with the other address types. Of course, it given the same wallet extended key, address type, and internal-ness, it will create the same descriptor. So some refactoring has been done in order to detect that the same descriptor is about to be created, and to avoid overwriting any existing descriptors.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25907",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25907.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25907.patch"
          },
          "created_at": "2022-08-22T23:17:45Z",
          "updated_at": "2023-12-12T00:55:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:14:33Z",
      "updated_at": "2022-12-17T12:14:33Z",
      "source": {
        "issue": {
          "id": 1337499811,
          "node_id": "PR_kwDOABII5849G1u9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
          "number": 25832,
          "state": "open",
          "state_reason": null,
          "title": "tracing: network connection tracepoints",
          "body": "This adds five new tracepoints with documentation and tests for network connections:\r\n\r\n- established connections with `net:inbound_connection` and `net:outbound_connection`\r\n- closed connections (both closed by us or by the peer) with `net:closed_connnection`\r\n- inbound connections that we choose to evict with `net:evicted_inbound_connection`\r\n- connections that are misbehaving and punished with `net:misbehaving_connection`\r\n\r\nI've been using these tracepoints for a few months now to monitor connection lifetimes, re-connection frequency by IP and netgroup, misbehavior, peer discouragement, and eviction and more. Together with the two existing P2P message tracepoints they allow for a good overview of local P2P network activity. Also sort-of addresses https://github.com/bitcoin/bitcoin/pull/22006#discussion_r636775863. \r\n\r\nI've been back and forth on which arguments to include. For example, `net:evicted_connection` could also include some of the eviction metrics like e.g. `last_block_time`, `min_ping_time`, ... but I've left them out for now. If wanted, this can be added here or in a follow-up. I've tried to minimize a potential performance impact by measuring executed instructions with `gdb` where possible (method described [here](https://github.com/bitcoin/bitcoin/pull/23724#issuecomment-996919963)). I don't think a few hundred extra instructions are too crucial, as connection opens/closes aren't too frequent (compared to e.g. P2P messages).   Note: e.g. `CreateNodeFromAcceptedSocket()` usually executes between 80k and 90k instructions for each new inbound connection.\r\n\r\n| tracepoint                 \t| instructions                                           \t|\r\n|----------------------------\t|--------------------------------------------------------\t|\r\n| net:inbound_connection     \t| 390 ins                                                \t|\r\n| net:outbound_connection    \t| between 700 and 1000 ins                                     \t|\r\n| net:closed_connnection     \t| 473 ins                                                \t|\r\n| net:evicted_inbound_connection     \t| not measured; likely similar to net:closed_connnection \t|\r\n| net:misbehaving_connection | not measured                                           \t|\r\n\r\nAlso added a bpftrace (tested with v0.14.1) `log_p2p_connections.bt` example script that produces output similar to:\r\n```\r\nAttaching 6 probes...\r\nLogging opened, closed, misbehaving, and evicted P2P connections\r\nOUTBOUND conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, total_out=1\r\nINBOUND conn from 127.0.0.1:45324: id=1, type=inbound, network=0, total_in=1\r\nMISBEHAVING conn id=1, score_before=0, score_increase=20, message='getdata message size = 50001', threshold_exceeded=false\r\nCLOSED conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, established=1231006505\r\nEVICTED conn to 127.0.0.1:45324: id=1, type=inbound, network=0, established=1612312312\r\n```",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25832",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25832.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25832.patch"
          },
          "created_at": "2022-08-12T17:18:21Z",
          "updated_at": "2023-11-14T21:45:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:38:39Z",
      "updated_at": "2022-12-17T12:38:39Z",
      "source": {
        "issue": {
          "id": 1306008117,
          "node_id": "PR_kwDOABII5847eDJ6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25619",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25619/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25619/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25619/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25619",
          "number": 25619,
          "state": "closed",
          "state_reason": null,
          "title": "net: avoid overriding non-virtual ToString() in CService and use better naming",
          "body": "Before this PR we had the somewhat confusing combination of methods:\r\n\r\n`CNetAddr::ToStringIP()`\r\n`CNetAddr::ToString()` (duplicate of the above)\r\n`CService::ToStringIPPort()`\r\n`CService::ToString()` (duplicate of the above, overrides a non-virtual method from `CNetAddr`)\r\n`CService::ToStringPort()`\r\n\r\nAvoid [overriding non-virtual methods](https://github.com/bitcoin/bitcoin/pull/25349/#issuecomment-1185226396).\r\n\r\n\"IP\" stands for \"Internet Protocol\" and while sometimes \"IP addresses\" are called just \"IPs\", it is incorrect to call Tor or I2P addresses \"IPs\". Thus use \"Addr\" instead of \"IP\".\r\n\r\nChange the above to:\r\n\r\n`CNetAddr::ToStringAddr()`\r\n`CService::ToStringAddrPort()`\r\n\r\nThe changes touch a lot of files, but are mostly mechanical.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25619",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25619",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25619.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25619.patch"
          },
          "closed_at": "2023-02-17T18:34:58Z",
          "created_at": "2022-07-15T12:58:23Z",
          "updated_at": "2023-02-20T09:48:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:42:51Z",
      "updated_at": "2022-12-17T12:42:51Z",
      "source": {
        "issue": {
          "id": 1299238264,
          "node_id": "PR_kwDOABII5847Ho23",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
          "number": 25572,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager and use it for the inbound eviction logic",
          "body": "This PR splits off the next couple commits from #25268 that introduce the `EvictionManager` and use it for  the inbound eviction logic.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information (for inbound connections) to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectNodeToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25572",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25572.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25572.patch"
          },
          "closed_at": "2023-09-28T20:06:18Z",
          "created_at": "2022-07-08T16:39:49Z",
          "updated_at": "2023-09-28T20:06:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:47:11Z",
      "updated_at": "2022-12-17T12:47:11Z",
      "source": {
        "issue": {
          "id": 1290476607,
          "node_id": "PR_kwDOABII5846qNZf",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25515",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25515/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25515/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25515/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25515",
          "number": 25515,
          "state": "closed",
          "state_reason": null,
          "title": "net, test: Virtualise CConnman and add initial PeerManager unit tests",
          "body": "This PR creates an abstract `ConnectionsInterface` class that is used as an interface for interacting with the connection manager. The `PeerManager` is made to hold a reference to a `ConnectionsInterface` instead of `CConnman`, which makes it possible for us to mock the connection manager in the newly introduced `PeerManager` unit tests. Two initial unit tests are added for the version handshake and ping/pong logic.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25515",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25515",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25515.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25515.patch"
          },
          "closed_at": "2023-08-10T14:23:28Z",
          "created_at": "2022-06-30T18:04:58Z",
          "updated_at": "2023-08-10T14:23:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:49:59Z",
      "updated_at": "2022-12-17T12:49:59Z",
      "source": {
        "issue": {
          "id": 1283938285,
          "node_id": "PR_kwDOABII5846UrmL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25465",
          "number": 25465,
          "state": "closed",
          "state_reason": null,
          "title": "build: remove boost library detection",
          "body": "We no longer link against any Boost libraries, so don't need to detect them, or set any Boost related LDFLAGS. Removing this from the macro also allows cleaning up some code in our configure.\r\n\r\nGuix Build:\r\n```bash\r\ne1ca070d085115767415121f3be8d8fa29547c9df633f9782b168a00753e995a  guix-build-db648e8ccc69/output/aarch64-linux-gnu/SHA256SUMS.part\r\nfb4d229a71d64aef9de4a0301fad3d9ee5937025807a0e101f4cc0e20cf942b2  guix-build-db648e8ccc69/output/aarch64-linux-gnu/bitcoin-db648e8ccc69-aarch64-linux-gnu-debug.tar.gz\r\n5241bb543617df5e64584741b402117a3b9e7015a423507fd6c529ad397b13a5  guix-build-db648e8ccc69/output/aarch64-linux-gnu/bitcoin-db648e8ccc69-aarch64-linux-gnu.tar.gz\r\neb4ba0914e9a38b3804c062ffd47f4d49dc996ea249c5cdbf64a349f73f59555  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n497d1c0d03d52cc6469acf4c61f224e7567c2601b64df3fe5888374e3416d868  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/bitcoin-db648e8ccc69-arm-linux-gnueabihf-debug.tar.gz\r\n86daab76f41581b752a5a786c5be1b094c14b25cdc8f4090f323b914118884ff  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/bitcoin-db648e8ccc69-arm-linux-gnueabihf.tar.gz\r\ne8e2c58948a29b0286d17d7dfb89c81234ab28b98f44c2e1d70034da5ce9b8fc  guix-build-db648e8ccc69/output/arm64-apple-darwin/SHA256SUMS.part\r\nd8f0e791cce42db0741afbb7ec23e251a40ec30f8e1e7fef0d1afc364ce32e9b  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin-unsigned.dmg\r\nee85b5b7942dc3361a3b05a395e271d54215f76fb67fc3c30144b089da374cd7  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin-unsigned.tar.gz\r\n72efbe40e3d033165871a8e8b4719c73a085ffc17a3198bf1191e5d22dec8c3a  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin.tar.gz\r\n0d86d3a303669235b91b4edbd6a5248dff65e31af3f3830cc8bdc116a2637e64  guix-build-db648e8ccc69/output/dist-archive/bitcoin-db648e8ccc69.tar.gz\r\n0f2371e331d97df50c65714ada6918565d8698637a78c7c97ba254dd5b3cc4b3  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n1447777f7adababc6fddad3349ac435744abef35cd30b673c62621718441ca01  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/bitcoin-db648e8ccc69-powerpc64-linux-gnu-debug.tar.gz\r\n3bf1e90df4d7fab18159ffd039dd1fa7e5251b0bdca020afd851fb7cd189cfd2  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/bitcoin-db648e8ccc69-powerpc64-linux-gnu.tar.gz\r\n67ebc32843eb83a08468496c24750ab56bfdb259eb9004732be13427da5dbbc1  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n0da5fad78ab854f62db57a2f44b6ffecbf2b3e9de34b81681c66e28100a209ae  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/bitcoin-db648e8ccc69-powerpc64le-linux-gnu-debug.tar.gz\r\ne96a41287040d13da4738dde43dd7283356b8af10b535b15b212da702aa7f0af  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/bitcoin-db648e8ccc69-powerpc64le-linux-gnu.tar.gz\r\nb54a48e03e76672008445a174078e92a149dd9e4ce0c896b013162a6221b3abe  guix-build-db648e8ccc69/output/riscv64-linux-gnu/SHA256SUMS.part\r\nb7fea8fe4c1baecff28c45fa514ec34338a7f0e04a7f58b8cb5493932242c221  guix-build-db648e8ccc69/output/riscv64-linux-gnu/bitcoin-db648e8ccc69-riscv64-linux-gnu-debug.tar.gz\r\n775d406d4a2b1fa1750ae1924cf2f67de7d89dbf0044dc7ab08d3908812fff2e  guix-build-db648e8ccc69/output/riscv64-linux-gnu/bitcoin-db648e8ccc69-riscv64-linux-gnu.tar.gz\r\na1dcd8c95517e8b98d8584eed00b561582b74a68a1b3d06efd86d5322186b21e  guix-build-db648e8ccc69/output/x86_64-apple-darwin/SHA256SUMS.part\r\n952ea47428b9bcadb809fb02a56347a9f8b29f09eba4edf67a157f7cc4ec9a57  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin-unsigned.dmg\r\nadb226a702e24962d263edf2e95100508d6728b4dd93a5d6098c37a5721c2bcc  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin-unsigned.tar.gz\r\nfd389c11cce919c53e4aeccb0e5d1ee1d12b1d9f6987a3317c4b254c3ca03387  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin.tar.gz\r\nc76314a9194733790533bbfefa7e6a234307aaa252989c2b3fd19191ae286c57  guix-build-db648e8ccc69/output/x86_64-linux-gnu/SHA256SUMS.part\r\n5e2b023b62b77709f30d545705a61826e96ddcfea4c24cde83fe2b98010262e1  guix-build-db648e8ccc69/output/x86_64-linux-gnu/bitcoin-db648e8ccc69-x86_64-linux-gnu-debug.tar.gz\r\na3e9dcb58aa8554cdeb211461976087b724cd81157517a9f1e00b1a73d74ab9b  guix-build-db648e8ccc69/output/x86_64-linux-gnu/bitcoin-db648e8ccc69-x86_64-linux-gnu.tar.gz\r\nd6733313b8f262b214c28d44d8ee644a2435cb4da90555b30e20dbf3807b6660  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/SHA256SUMS.part\r\nbc4b269f5b89200537d7175492ae31ab87eb4a1da86c1ade968a7bbdc472c5bf  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-debug.zip\r\nccd83eb4c9ab0df288935ab655cd71b00525b57f82c8b9d7a4d1a08325d26aac  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-setup-unsigned.exe\r\n91ee20dfbaa923066379ea22f3e3a85a52f5b323877b44c19ccec6300d25cd41  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-unsigned.tar.gz\r\n595baf193e0955436c4f2e5047e6842434bb4273b03c9d74e5c90972dde812f4  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64.zip\r\n```",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25465",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25465",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25465.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25465.patch"
          },
          "closed_at": "2023-01-28T15:55:41Z",
          "created_at": "2022-06-24T16:20:16Z",
          "updated_at": "2023-01-28T15:56:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:52:59Z",
      "updated_at": "2022-12-17T12:52:59Z",
      "source": {
        "issue": {
          "id": 1273517561,
          "node_id": "PR_kwDOABII5845xiLt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25390",
          "number": 25390,
          "state": "open",
          "state_reason": null,
          "title": "sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es",
          "body": "Introduce a generic container that provides a thread-safe access to any object by using a mutex which is acquired every time the object accessed.\r\n\r\nFor example:\r\n\r\n```cpp\r\nSynced<std::unordered_map<int, int>> m{{3, 9}, {4, 16}};\r\n\r\n{\r\n    SYNCED_LOCK(m, m_locked);\r\n\r\n    // m_locked represents the internal object, i.e. std::unordered_map,\r\n    // while m_locked is in scope the internal mutex is locked.\r\n\r\n    auto it = m_locked->find(3);\r\n    if (it != m_locked->end()) {\r\n        std::cout << it->second << std::endl;\r\n    }\r\n\r\n    for (auto& [k, v] : *m_locked) {\r\n        std::cout << k << \", \" << v << std::endl;\r\n    }\r\n}\r\n\r\nWITH_SYNCED_LOCK(m, p, p->emplace(5, 25));\r\n```\r\n\r\nRemove the global mutexes `g_maplocalhost_mutex`, `g_deadline_timers_mutex`, `cs_dir_locks`, `g_loading_wallet_mutex`, `g_wallet_release_mutex` and use `Synced<T>` instead.\r\n\r\n## Benefits\r\n\r\n_copied from a [comment below](https://github.com/bitcoin/bitcoin/pull/25390#issuecomment-1169788319):_\r\n\r\nThe `Synced<T>` abstraction is similar to what is suggested in [this comment](https://github.com/bitcoin/bitcoin/pull/24931#discussion_r890636987) but it does so in a generic way to avoid code repetition. Its benefit is:\r\n\r\n1. It avoids code repetition at the implementation sites. See [PR#26151](https://github.com/bitcoin/bitcoin/pull/26151) for a live example. Namely this:\r\n\r\n<details>\r\n<summary>Lots of repetitions (92 lines)</summary>\r\n\r\n```cpp\r\nclass Foo\r\n{\r\npublic:\r\n    void PushBack(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.push_back(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Foo::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::vector<int> m_data;\r\n};\r\n\r\nclass Bar\r\n{\r\npublic:\r\n    void PushBack(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.push_back(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Bar::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::vector<std::string> m_data;\r\n};\r\n\r\nclass Baz\r\n{\r\npublic:\r\n    void Insert(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.insert(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Baz::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::set<std::string> m_data;\r\n};\r\n```\r\n</details>\r\n\r\nbecomes this:\r\n\r\n<details>\r\n<summary>Short (3 lines)</summary>\r\n\r\n```cpp\r\nSynced<std::vector<int>> Foo;\r\nSynced<std::vector<std::string>> Bar;\r\nSynced<std::set<std::string>> Baz;\r\n```\r\n</details>\r\n\r\n2. The mutex is properly encapsulated. With a global mutex and a global variable annotated with `GUARDED_BY()` it is indeed not possible to add new code that accesses the variable without protection (if using Clang and `-Wthread-safety-analysis` and `-Werror`), but it is possible to abuse the mutex and start using it to protect some more, possibly unrelated stuff (we already have this in the current code).\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25390",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25390",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25390.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25390.patch"
          },
          "created_at": "2022-06-16T12:46:53Z",
          "updated_at": "2023-10-25T22:09:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T12:54:24Z",
      "updated_at": "2022-12-17T12:54:24Z",
      "source": {
        "issue": {
          "id": 1273097730,
          "node_id": "PR_kwDOABII5845wIiV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25386",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25386/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25386/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25386/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25386",
          "number": 25386,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Extract MIB_BYTES constant for init.cpp",
          "body": "This is a common concept which is more communicative and explicit if articulated, IMO.\r\n\r\nThis could be applied elsewhere if there is a better place to reference it in common, but I don't see it. \r\n\r\nPulled from #25315 to ease review there.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25386",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25386",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25386.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25386.patch"
          },
          "closed_at": "2023-04-25T15:41:05Z",
          "created_at": "2022-06-16T06:09:20Z",
          "updated_at": "2023-04-25T15:41:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:01:36Z",
      "updated_at": "2022-12-17T13:01:36Z",
      "source": {
        "issue": {
          "id": 1267157159,
          "node_id": "PR_kwDOABII5845cksp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25325",
          "number": 25325,
          "state": "closed",
          "state_reason": null,
          "title": "Add pool based memory resource",
          "body": "A memory resource similar to `std::pmr::unsynchronized_pool_resource`, but optimized for node-based containers. The goal is to be able to cache more coins with the same memory usage, and allocate/deallocate faster.\r\n\r\nThis is a reimplementation of #22702. The goal was to implement it in a way that is simpler to review & test\r\n\r\n* There is now a generic `PoolResource` for allocating/deallocating memory. This has practically the same API as `std::pmr::memory_resource`. (Unfortunately I cannot use std::pmr because libc++ simply doesn't implement that API).\r\n* Thanks to sipa there is now a fuzzer for PoolResource! On a fast machine I ran it for ~770 million executions without finding any issue.\r\n\r\n* The estimation of the correct node size is now gone, PoolResource now has multiple pools and just needs to be created large enough to have space for the unordered_map nodes.\r\n\r\nI ran benchmarks with #22702, mergebase, and this PR. Frequency locked Intel i7-8700, clang++ 13.0.1 to reindex up to block 690000.\r\n\r\n```sh\r\nbitcoind -dbcache=5000 -assumevalid=00000000000000000002a23d6df20eecec15b21d32c75833cce28f113de888b7 -reindex-chainstate -printtoconsole=0 -stopatheight=690000\r\n```\r\n\r\nThe performance is practically identical with #22702, just 0.4% slower. It's ~21% faster than master:\r\n\r\n![Progress in Million Transactions over Time(2)](https://user-images.githubusercontent.com/14386/173288685-91952ade-f304-4825-8bfb-0725a71ca17b.png)\r\n\r\n![Size of Cache in MiB over Time](https://user-images.githubusercontent.com/14386/173291421-e6b410be-ac77-479b-ad24-5fafcebf81eb.png)\r\nNote that on cache drops mergebase's memory doesnt go so far down because it does not free the `CCoinsMap` bucket array.\r\n\r\n![Size of Cache in Million tx over Time(1)](https://user-images.githubusercontent.com/14386/173288703-a80c9c9e-93c8-4a16-9df8-610c89c61cc4.png)\r\n",
          "user": {
            "login": "martinus",
            "id": 14386,
            "node_id": "MDQ6VXNlcjE0Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinus",
            "html_url": "https://github.com/martinus",
            "followers_url": "https://api.github.com/users/martinus/followers",
            "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
            "organizations_url": "https://api.github.com/users/martinus/orgs",
            "repos_url": "https://api.github.com/users/martinus/repos",
            "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/martinus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 37,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25325",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25325",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25325.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25325.patch"
          },
          "closed_at": "2023-04-20T20:20:32Z",
          "created_at": "2022-06-10T07:16:06Z",
          "updated_at": "2023-12-04T12:15:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:07:23Z",
      "updated_at": "2022-12-17T13:07:23Z",
      "source": {
        "issue": {
          "id": 1261819358,
          "node_id": "PR_kwDOABII5845Km3S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
          "number": 25284,
          "state": "closed",
          "state_reason": null,
          "title": "net: Use serialization parameters for CAddress serialization",
          "body": "It seems confusing that picking a wrong value for `ADDRV2_FORMAT` could have effects on consensus. (See the docstring of `ADDRV2_FORMAT`).\r\n\r\nFix this by implementing https://github.com/bitcoin/bitcoin/issues/19477#issuecomment-1147421608 .\r\n\r\nThis may also help with libbitcoinkernel, see https://github.com/bitcoin/bitcoin/pull/28327",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25284",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25284.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25284.patch"
          },
          "closed_at": "2023-09-07T10:34:48Z",
          "created_at": "2022-06-06T13:04:43Z",
          "updated_at": "2023-09-13T14:27:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:30:36Z",
      "updated_at": "2022-12-17T13:30:36Z",
      "source": {
        "issue": {
          "id": 1206247497,
          "node_id": "PR_kwDOABII5842Uktn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24897",
          "number": 24897,
          "state": "closed",
          "state_reason": null,
          "title": "[Draft / POC] Silent Payments",
          "body": "This PR proposes an early version of [Silent Payment](https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8) (author:@RubenSomsen).\r\nIn this scheme, the recipient generates a public address, but the sender tweaks the address and the recipient detects the payment by verifying all transactions on the blockchain. An example use case would be private donations.\r\n\r\nThe purpose of this PR is not a final version, but to start the discussion and get benchmarks based on a real implementation.\r\n\r\nThis version is built on top of [#994](https://github.com/bitcoin-core/secp256k1/pull/994) (bitcoin-core/secp256k1) for x-only ECDH support and #23480 (bitcoin/bitcoin) for `rawtr()`. Each new silent transaction detected is stored in wallet as a `rawtr()` descriptor. \r\n\r\nIn this implementation, the sender can tweak the recipient address by passing the `silent_payment` option to send RPC. The transaction output will be different from the address entered.\r\n\r\nFor example `./src/bitcoin-cli -regtest -named send outputs=\"[{\\\"bcrt1pwlh5xuyrpgfunwyww8cfu78yfs2yqyevl7yturavahh5kgxwdd2q5hzgfu\\\": 1.1}]\" fee_rate=1 options=\"{ \\\"silent_payment\\\": true}\"`.\r\n\r\nwill generate `vout` with completely unrelated outputs:\r\n\r\n```\r\n\"vout\": [\r\n    {\r\n      \"value\": 1.10000000,\r\n      \"n\": 0,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(65b19890c5ca40edb816d26f5f48cd9f3ed51121613b1c2405adc1a6dbbc824a)#8myx9tcu\",\r\n        \"address\": \"bcrt1pvkce3yx9efqwmwqk6fh47jxdnuld2yfpvya3cfq94hq6dkausf9qrfjkgz\",\r\n\r\n      }\r\n    },\r\n    {\r\n      \"value\": 2.02499835,\r\n      \"n\": 1,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(c45cb3d500bbf8f0c8841e8e011b008781d826c16ee348edb822c0f97419bc4d)#26hcce63\",\r\n        \"address\": \"bcrt1pc3wt84gqh0u0pjyyr68qzxcqs7qasfkpdm353mdcytq0jaqeh3xsuvlykg\",\r\n      }\r\n    }\r\n  ]\r\n```\r\n\r\nAny wallet, as long as it has access to private keys, can send silent payments. Thus, this excludes watch-only wallets or wallets with external signers .\r\n\r\nBut the recipient's wallet needs a new flag called `SILENT_PAYMENT`. This flag allows an additional scan that verifies that the wallet keys match the silent payment scheme. When it detects a silent payment that belongs to the wallet, it is stored in a `rawtr()` descriptor.\r\n\r\n`./src/bitcoin-cli -regtest -named createwallet wallet_name=\"recipient\" silent_payment=true`\r\n\r\nTherefore, scanning each address for each transaction is potentially prohibitive overhead, so the node can be initialized with `keypool=1` or a descriptor with range [0,1] can be imported into a blank wallet. Until there is more benchmark data, it is the safest option. The proposal recommends one static address.\r\n\r\nI've been running some silent payments on signet using wallets with default keypool and default range, I haven't noticed any relevant performance drops on the signet node.\r\nApparently this implementation is working as expected but I can't guarantee that the scheme is implemented correctly or safely, so I'm opening this PR for reviews, modifications and improvements.\r\n\r\nThere is a new functional test (`test/functional/wallet_silentpayment.py`) that can help to better understand the implementation.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 86,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24897",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24897.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24897.patch"
          },
          "closed_at": "2023-06-05T13:18:14Z",
          "created_at": "2022-04-17T00:37:23Z",
          "updated_at": "2023-06-27T11:03:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:35:00Z",
      "updated_at": "2022-12-17T13:35:00Z",
      "source": {
        "issue": {
          "id": 1190718755,
          "node_id": "PR_kwDOABII5841iE9Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24742",
          "number": 24742,
          "state": "closed",
          "state_reason": null,
          "title": "build: prune Boost headers in depends",
          "body": "The Boost 1.81.0 tarball is ~`118`mb, and expands to much larger than that, however we end up with ~`150`mb of headers copied into the `/include/boost` dir in depends. This is a lot by itself, and even more when it's `170`mb * 9 (HOSTS for a guix build).\r\n\r\nWith the changes in this PR, we end up with ~`50`mb of Boost headers in depends, which with some creative patching/pruning, could be trimmed even further. i.e sometimes you end up pulling in an entire boost module, because of a single include in another header we use, but in code that we don't actually need. In other cases there are deprecated headers which are still being used, which could be removed if the modules we care about stopped using them. I will open some PRs upstream to try and improve that situation, ie: https://github.com/boostorg/multi_index/pull/57.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24742.patch"
          },
          "closed_at": "2023-08-14T14:08:56Z",
          "created_at": "2022-04-02T19:24:22Z",
          "updated_at": "2023-11-06T10:29:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:48:21Z",
      "updated_at": "2022-12-17T13:48:21Z",
      "source": {
        "issue": {
          "id": 1115473885,
          "node_id": "PR_kwDOABII584xo1eC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24170",
          "number": 24170,
          "state": "closed",
          "state_reason": null,
          "title": "p2p, rpc: Manual block-relay-only connections with addnode",
          "body": "This implements the suggestion from #23763 to introduce an option to establish block-relay-connections manually with the `-addnode` RPC.\r\nAdding these can make sense for a node operator that wants to be connected to a anonymity networks like Tor or I2P, but also wants to have additional protection against eclipse attacks: Following the best chain can be more of an issue on anonymity networks because these are smaller and it can be easier to create a lot of sybil nodes there.\r\n\r\nIn that situation, manual block-relay-only connections to peers on clearnet networks can help us staying connected to the best chain, but in contrast to normal manual connections, transactions and addresses aren't transmitted on these links - in particular not our own address or transaction from our wallet. This increases privacy and will also make it harder to perform fingerprinting attacks (connecting our identities over different networks).\r\n\r\nManual Block-Relay connections:\r\n- can be specified with `-addnode` RPC, both with the `add` and `onetry` command\r\n- can be specified with the `-addnode` bitcoind arg (or in bitcoin.conf) with `<IP>=manual-block-relay`\r\n- don't participate in transaction and address relay\r\n- don't get discouraged / punished for misbehavior (but will still get disconnected for sending TX/tx-INV as automatic block-relay-only peers do)\r\n- are not subject to outbound eviction logic (unlike automatic block-relay-only-peers)\r\n",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24170",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24170",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24170.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24170.patch"
          },
          "closed_at": "2023-06-04T19:11:17Z",
          "created_at": "2022-01-26T20:32:07Z",
          "updated_at": "2023-06-04T19:11:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T14:31:42Z",
      "updated_at": "2022-12-17T14:31:42Z",
      "source": {
        "issue": {
          "id": 1014768234,
          "node_id": "PR_kwDOABII584snrfN",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23169",
          "number": 23169,
          "state": "closed",
          "state_reason": null,
          "title": "fix initialization in FastRandomContext: removes undefined behavior & uninitialized read",
          "body": "When building #23152 with g++ 11.1 a few `-Wmaybe-uninitialized` warnings are shown. The warning in `FastRandomContext` seems legit, and this PR fixes that.\r\n\r\nNote that there are more warnings in leveldb code which I did not investigate. There are warnings in fuzz/float.cpp and fuzz/string.cpp which are also left untouched (see https://github.com/bitcoin/bitcoin/pull/23169#discussion_r721084621)",
          "user": {
            "login": "martinus",
            "id": 14386,
            "node_id": "MDQ6VXNlcjE0Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinus",
            "html_url": "https://github.com/martinus",
            "followers_url": "https://api.github.com/users/martinus/followers",
            "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
            "organizations_url": "https://api.github.com/users/martinus/orgs",
            "repos_url": "https://api.github.com/users/martinus/repos",
            "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/martinus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23169",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23169",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23169.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23169.patch"
          },
          "closed_at": "2023-03-26T18:25:46Z",
          "created_at": "2021-10-04T06:05:34Z",
          "updated_at": "2023-03-27T13:43:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T15:17:25Z",
      "updated_at": "2022-12-17T15:17:25Z",
      "source": {
        "issue": {
          "id": 541055269,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1NzgwNTc3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17783",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17783/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17783/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17783/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17783",
          "number": 17783,
          "state": "open",
          "state_reason": null,
          "title": "util: Fix -norpcwhitelist, -norpcallowip, and similar corner case behavior",
          "body": "**This is based on #16545 + #17580.** The non-base commits are:\r\n\r\n- [`a746ae052004` Fix nonsensical -norpcwhitelist, -norpcallowip and related behavior](https://github.com/bitcoin/bitcoin/pull/17783/commits/a746ae0520048f6290fb06347d4d303df4c1ccde)\r\n- [`f59bfafcc8f3` Fix nonsensical bitcoin-cli -norpcwallet behavior](https://github.com/bitcoin/bitcoin/pull/17783/commits/f59bfafcc8f3bf73d9e5c70669fff354f29b261b)\r\n\r\n---\r\n\r\nMake negating list options act the same as not specifying list options for `-norpcallowip`, `-norpcbind`, `-nobind`, `-nowhitebind`, `-noconnect`, `-noexternalip`, `-noonlynet`, `-nosignetchallenge`, `-nosignetseednode`, `-norpcwallet`. Instead of using `IsArgSet()` use `!GetArgs().empty()` so negation does not produce unexpected side effects, which are detailed in commit messages.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17783",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17783",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17783.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17783.patch"
          },
          "created_at": "2019-12-20T15:36:53Z",
          "updated_at": "2023-11-06T02:55:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T15:18:53Z",
      "updated_at": "2022-12-17T15:18:53Z",
      "source": {
        "issue": {
          "id": 527748980,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0OTQzMDU4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17580",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17580/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17580/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17580/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17580",
          "number": 17580,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags",
          "body": "**This is based on #16545.** The non-base commits are:\r\n\r\n- [`76d30ef52501` scripted-diff: Add ALLOW_LIST flag to arguments retrieved with GetArgs](https://github.com/bitcoin/bitcoin/pull/17580/commits/76d30ef525015e2f842e35f2b2061839440dc5e2)\r\n- [`49e25e1fa76f` refactor: Fix more ALLOW_LIST arguments](https://github.com/bitcoin/bitcoin/pull/17580/commits/49e25e1fa76f430a38abaab59211c220cae434f0)\r\n- [`870160359e7c` Always reject empty -rpcauth=\"\" arguments](https://github.com/bitcoin/bitcoin/pull/17580/commits/870160359e7cec9f66c7c26f01f4e65b40f35e1b)\r\n- [`d97b30d33cea` Always reject empty -blockfilterindex=\"\" arguments](https://github.com/bitcoin/bitcoin/pull/17580/commits/d97b30d33ceaabab805de4784ba1626cb0d2306d)\r\n- [`7e70f985eac4` refactor: Always enforce ALLOW_LIST in CheckArgFlags](https://github.com/bitcoin/bitcoin/pull/17580/commits/7e70f985eac4f07dcb74499161961bb75e61866d)\r\n\r\n---\r\n\r\nExcept for two `rpcauth` and `blockfilterindex` fixes, this PR does not change any behavior outside of tests. It is just supposed to enforce internal consistency and prevent bugs by ensuring that list arguments are always retrieved with GetArgs() and non-list arguments are always retrieved with GetArg(). Followup PRs could use the ALLOW_LIST flags for better documentation and error checking in the future. For example, #17493 builds on this to disallow conflicting config values. \r\n\r\nThis change was originally made as part of #17493",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17580",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17580",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17580.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17580.patch"
          },
          "created_at": "2019-11-24T20:05:39Z",
          "updated_at": "2023-11-06T09:17:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T15:20:20Z",
      "updated_at": "2022-12-17T15:20:20Z",
      "source": {
        "issue": {
          "id": 523714389,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNjYxNjA3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17493",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17493/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17493/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17493/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17493",
          "number": 17493,
          "state": "open",
          "state_reason": null,
          "title": "util: Forbid ambiguous multiple assignments in config file",
          "body": "**This is based on #16545 + #17580.** The non-base commits are:\r\n\r\n- [`1c3d5be2ad34` util: Forbid ambiguous multiple assignments in config file](https://github.com/bitcoin/bitcoin/pull/17493/commits/1c3d5be2ad340349559d1bb5524c919e85da3ce8)\r\n- [`c65e3b3b7d1e` test: Extend util_ArgsMerge test to check for \"Multiple values specified\" errors](https://github.com/bitcoin/bitcoin/pull/17493/commits/c65e3b3b7d1e9dc33ecf5f0029430ef90f765cf8)\r\n\r\n---\r\n\r\nEnable error \"Multiple values specified for -setting in same section of config file.\", for ALLOW_ANY settings that don't specify ALLOW_LIST.\r\n\r\nInstead of silently ignoring settings, this change makes it an error to provide an ambiguous config file that provides assigns multiple values to a single-value setting. Change includes release notes.\r\n\r\nPart of the motivation for this change is to improve usability and prevent settings that look valid from being silently ignored. Another motivation is to be able to remove confusing \"reverse precedence\" logic in #17581",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17493",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17493",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17493.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17493.patch"
          },
          "created_at": "2019-11-15T22:11:44Z",
          "updated_at": "2023-11-05T01:27:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8067569084,
      "node_id": "LE_lADOABII585G_btJzwAAAAHg3VW8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8067569084",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-19T09:35:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8449690575,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAH3pAvP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8449690575",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-06T17:00:49Z"
    },
    {
      "event": "unlabeled",
      "id": 8450456396,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAH3r7tM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8450456396",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-06T18:17:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T05:33:42Z",
      "updated_at": "2023-02-07T05:33:42Z",
      "source": {
        "issue": {
          "id": 1522925178,
          "node_id": "PR_kwDOABII585G1ozs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26837",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26837/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26837/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26837/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26837",
          "number": 26837,
          "state": "closed",
          "state_reason": null,
          "title": "I2P network optimizations",
          "body": "* Reuse an I2P transient session instead of discarding it if we failed to connect to the desired peer. This means we never used the generated address (destination), whose creation is not cheap. This does not mean that we will use the same address for more than one peer.\r\n* Lower the number of tunnels for transient sessions.\r\n* Explicitly specify the number of tunnels for persistent sessions instead of relying on the defaults which differ between I2P routers. This way we get consistent behavior with all routers.\r\n\r\nAlleviates: https://github.com/bitcoin/bitcoin/issues/26754\r\n\r\n(I have not tested this with i2pd, yet)",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26837",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26837",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26837.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26837.patch"
          },
          "closed_at": "2023-02-22T17:58:53Z",
          "created_at": "2023-01-06T17:43:48Z",
          "updated_at": "2023-02-27T14:10:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T05:39:43Z",
      "updated_at": "2023-02-07T05:39:43Z",
      "source": {
        "issue": {
          "id": 1520614195,
          "node_id": "PR_kwDOABII585GttDq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26817",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26817/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26817/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26817/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26817",
          "number": 26817,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Bump copyright years to present (headers only)",
          "body": "The copyright years have many issues:\r\n\r\n* They may be wrong. For example, this can happen when code is moved from one file to a different one without taking over the copyright years. Or it may happen when the wrong years are inserted by a script or developer.\r\n* They are redundant. `git` already tracks the author date for every line of code in every commit.\r\n* They are not needed to establish \"copyright\", see https://www.linuxfoundation.org/blog/copyright-notices-in-open-source-software-projects/, or https://reuse.software/faq/#years-copyright. Also, anyone who needs them for legal reasons would need to discover the ground truth themselves anyway. For example, with `git blame`, or `git log ...`, or by other means.\r\n* They cause pointless churn. See for example commit 306ccd4927a2efe325c8d84be1bdb79edeb29b04, or drive-by contributions bumping them.\r\n* Many modern open source software projects never added them in the first place, or already removed them, see section below.\r\n\r\nIn theory they can be removed completely. While this should be legally fine, some contributors raised legal uncertainty. So instead, bump each year range one final time  to `-present` and leave the initial year untouched.\r\n\r\nMoreover, a URL redirect is resolved in the second commit.\r\n\r\nFinally, the `_COPYRIGHT_YEAR` build constant is kept untouched, and still expected to be bumped every year, see for example commit 06dd571534c8ecdf7ade77546fcf3a56b3651f68. In theory it could be bumped to `-present` as well, but this change would cause user-visible changes, so discussion should be done in a separate thread.\r\n\r\nExamples of removed years in other projects:\r\n\r\n* https://github.com/facebook/react/commit/b87aabdfe1b7461e7331abb3601d9e6bb27544bc (Done before accepting external contributions?)\r\n* https://github.com/curl/curl/commit/2bc1d775f510196154283374284f98d3eae03544 (Not legally reviewed?)\r\n* ...\r\n\r\nExamples of no years in other projects:\r\n\r\n* https://github.com/microsoft/terminal/blame/2d66dc44f5abef975bed86af12cb5facb6729a1a/src/renderer/base/FontInfoBase.cpp#L1\r\n* https://github.com/angular/angular/blob/33f35b04ef0f32f25624a6be59f8635675e3e131/packages/compiler/src/chars.ts#L3\r\n* https://github.com/llvm/llvm-project/blame/27b8f54f5174aa4d8ea254a7efefd7110b247c17/clang/lib/Basic/Targets/X86.cpp#L4-L5\r\n* ...",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26817",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26817",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26817.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26817.patch"
          },
          "closed_at": "2023-02-20T15:22:09Z",
          "created_at": "2023-01-05T11:49:55Z",
          "updated_at": "2023-02-20T15:22:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T06:00:53Z",
      "updated_at": "2023-02-07T06:00:53Z",
      "source": {
        "issue": {
          "id": 1503703234,
          "node_id": "PR_kwDOABII585F0rVt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
          "number": 26728,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Have the wallet store the key for automatically generated descriptors",
          "body": "The wallet currently does not know the master key that was used to generate the automatically generated descriptors. This makes it difficult to add new automatically generated descriptors when new ones are introduced. So instead of losing this information after the descriptors are created, have `CWallet` store it. The xpub will be stored in a new `activehdkey` field. The private key must be one of the keys that is used by the descriptors, and will be extracted upon loading.\r\n\r\nAs this is a new field, wallets will be automatically upgraded upon loading. This loading is backwards compatible and uses a new non-required flag `WALLET_FLAG_GLOBAL_HD_KEY` to signal that the upgrade completed. The upgrade will search for an xpub that is shared by `pkh()`, `wpkh()`, and `sh(wpkh()` descriptors with the derivation pattern that we use. For new wallets, the xpub will be set during descriptor creation rather than trying to reverse engineer it. The flag will be set for all wallets, regardless of whether such an xpub was found or can even exist, in order to indicate that the upgrade will not need to be run in the future.\r\n\r\nThis allows us to have a `gethdkey` command which is useful for those who need a simple way to get an xpub from a wallet. `gethdkey` can also take a boolean parameter to indicate whether it should also output the corresponding xprv.\r\n\r\nSupercedes #23417",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 49,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26728.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26728.patch"
          },
          "created_at": "2022-12-19T22:31:05Z",
          "updated_at": "2023-12-12T00:33:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T07:56:10Z",
      "updated_at": "2023-02-07T07:56:10Z",
      "source": {
        "issue": {
          "id": 1381623925,
          "node_id": "PR_kwDOABII584_YzZB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26153",
          "number": 26153,
          "state": "closed",
          "state_reason": null,
          "title": "Reduce wasted pseudorandom bytes in ChaCha20 + various improvements",
          "body": "This is an alternative to #25354 (by my benchmarking, somewhat faster), subsumes #25712, and adds additional test vectors.\r\n\r\nIt separates the multiple-of-64-bytes-only \"core\" logic (which becomes simpler) from a layer around which performs caching/slicing to support arbitrary byte amounts. Both have their uses (in particular, the MuHash3072 code can benefit from multiple-of-64-bytes assumptions), plus the separation results in more readable code. Also, since FastRandomContext effectively had its own (more naive) caching on top of ChaCha20, that can be dropped in favor of ChaCha20's new built-in caching.\r\n\r\nI thought about rebasing #25712 on top of this, but the changes before are fairly extensive, so redid it instead.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26153",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26153",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26153.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26153.patch"
          },
          "closed_at": "2023-02-15T14:59:06Z",
          "created_at": "2022-09-21T23:22:32Z",
          "updated_at": "2023-07-18T18:37:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T09:28:55Z",
      "updated_at": "2023-02-07T09:28:55Z",
      "source": {
        "issue": {
          "id": 1269628212,
          "node_id": "PR_kwDOABII5845knyj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25361",
          "number": 25361,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Cipher suite",
          "body": "This PR supersedes #20962 and introduces a two-layered cipher suite used in the latest draft of [BIP324](https://github.com/bitcoin/bips/pull/1378).\r\n\r\n* Inner layer uses [RFC8439](https://datatracker.ietf.org/doc/html/rfc8439) which comes with a formal [security analysis](https://eprint.iacr.org/2014/613.pdf) so any novelty introduced by our cipher suite still offers a baseline confidence in confidentiality and authenticity. The RFC8439 instance is re-keyed every 256 messages for forward secrecy.\r\n* Outer layer uses a forward secure version of ChaCha20, `FSChaCha20` which re-keys itself every 256 messages for forward secrecy. It is used to encrypt the message length resulting in a pseudorandom byte stream.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25361",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25361",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25361.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25361.patch"
          },
          "closed_at": "2023-05-06T11:11:09Z",
          "created_at": "2022-06-13T15:40:56Z",
          "updated_at": "2023-05-06T11:11:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T09:40:02Z",
      "updated_at": "2023-02-07T09:40:02Z",
      "source": {
        "issue": {
          "id": 1258121997,
          "node_id": "PR_kwDOABII5844-S2D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
          "number": 25268,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager",
          "body": "At the moment, the eviction logic is mangled across two different components (`CConnman`, `PeerManager`), so we can't really test it in isolation. This is not completely true for the inbound eviction logic as it exists as static functions in `net.{h.cpp}` for which tests already exist. However, the outbound eviction logic is not covered by any fuzz tests and is only testable by spinning up both a connman and peerman.\r\n\r\nThis PR splits out the eviction logic into its own component `EvictionManager`. In addition to isolating the eviction logic, we get rid of several layer violations (e.g. `CConnman::ForEachNode/ForNode` calls, `CNode::m_last_block_time`, etc.) between `net` and `net processing`.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectInboundNodeToEvict` and `EvictionManager::SelectOutboundNodesToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25268.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25268.patch"
          },
          "closed_at": "2023-09-28T20:06:22Z",
          "created_at": "2022-06-02T12:34:15Z",
          "updated_at": "2023-09-28T20:06:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T11:06:47Z",
      "updated_at": "2023-02-07T11:06:47Z",
      "source": {
        "issue": {
          "id": 930266556,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3OTg5MzM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
          "number": 22341,
          "state": "open",
          "state_reason": null,
          "title": "rpc: add path to gethdkey",
          "body": "Depends on #26728.\r\n\r\nThis PR expands the wallet RPC `gethdkey` introduced in #26728. It takes a BIP32 path as argument and returns the xpub, along with the master key fingerprint.\r\n\r\nTo test this PR:\r\n\r\n* create a regular descriptor wallet\r\n* call `getxpub m/86h/0h/0h`\r\n* call `listdescriptors`, compare the xpub in the `tr()` descriptor with the previous step\r\n\r\n## Bigger picture\r\n\r\nThis paves the way for using Bitcoin Core as one signer in a multisig setup. It simplifies the proposed flow in #22067.\r\n\r\nThe eventual flow would be:\r\n1. Create a blank wallet with a seed (either with no descriptors, or where its single key descriptors are not `active`, so they don't get used when calling `getnewaddress`). \r\n2. Call `getxpub m/87h/0h/0h` (as suggested in [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki))\r\n3. (Manually, with Specter or with a simple Python utility - TBD): craft a multisig descriptor containing this xpub\r\n4. Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\r\n5. The usual flow with `getnewaddress`, `send` and `walletprocesspsbt` (and their GUI equivalents)\r\n\r\nThis PR makes step (2) possible.\r\n\r\nStep (1) would require a followup, because blank wallets currently can't have a seed. Step 4 would also require a followup,  so that `importdescriptors` treats an `xpub` as if it was an `xpriv`, after checking that it can derive the xpub from the seed (that matches the fingerprint)\r\n\r\nOn the GUI side a wizard could perform the above steps and guide the user, where they either:\r\n* export their own xpub and then import a descriptor from somewhere else (performing some sanity checks); or\r\n* import xpub(s) from other wallets, compose a multisig and get the descriptors for export; or\r\n* get xpub(s) from connected hardware devices and configure a multisig (with or without a key on their machine)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22341",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22341.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22341.patch"
          },
          "created_at": "2021-06-25T15:12:03Z",
          "updated_at": "2023-12-09T07:16:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T11:30:55Z",
      "updated_at": "2023-02-07T11:30:55Z",
      "source": {
        "issue": {
          "id": 590224813,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTk3MTM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18470",
          "number": 18470,
          "state": "closed",
          "state_reason": null,
          "title": "test: Extend stale tip test",
          "body": "* Extend test with ASSERT_DEBUG_LOG\r\n* Extend test with case where a block is in flight from a node that is\r\n  about to be evicted",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18470",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18470",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18470.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18470.patch"
          },
          "closed_at": "2023-09-23T16:44:26Z",
          "created_at": "2020-03-30T11:45:59Z",
          "updated_at": "2023-09-23T16:44:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T11:41:15Z",
      "updated_at": "2023-02-07T11:41:15Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28921 and #28929.** The non-base commits are:\r\n\r\n- [`2b78825ccb1d` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/2b78825ccb1d36af3b7c2b15d7c215297d05f3fb)\r\n- [`bafef6240334` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/bafef6240334d0683252b904324fb8e1eb021efe)\r\n- [`254dabc9afd8` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/254dabc9afd8156eeb3d25ff22b30af278a58ec7)\r\n- [`2a944e563dfb` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/2a944e563dfb98adf39118a62c9ac326f1729732)\r\n- [`66e1c11a1d07` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/66e1c11a1d0772fc1ade7beeba0cca6051601903)\r\n- [`32aaf0b0d7b2` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/32aaf0b0d7b2fc37166d143b6169addc28551a58)\r\n- [`4fe9b3c02690` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/4fe9b3c02690c4e963ef0a0dad9526a62d238909)\r\n- [`ce94dd1a81ad` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/ce94dd1a81add6d4588762e3c1fa9197d8c466da)\r\n- [`e87d88034ce9` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/e87d88034ce9fd40f09843f7a3a645bc62423e2a)\r\n- [`0c78e61e2674` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/0c78e61e26741083fa711107a1e6e5a2689472f5)\r\n- [`518f41fb1571` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/518f41fb1571bd934e83c060121204118b4198a7)\r\n- [`425be09ccd16` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/425be09ccd16506b4fabd8db110f19881f470849)\r\n- [`35d23171708f` Add ParamsStream empty() method](https://github.com/bitcoin/bitcoin/pull/10102/commits/35d23171708fb582a34b8cc396e57628e0bab8fa)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-11-30T18:00:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-11T03:03:14Z",
      "updated_at": "2023-02-11T03:03:14Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2023-10-24T18:43:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-11T14:12:18Z",
      "updated_at": "2023-02-11T14:12:18Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2023-10-24T18:44:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8527558983,
      "node_id": "LE_lADOABII585G_btJzwAAAAH8SDlH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8527558983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-15T15:50:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-15T20:37:53Z",
      "updated_at": "2023-02-15T20:37:53Z",
      "source": {
        "issue": {
          "id": 527750404,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0OTQ0MTEz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17581",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17581/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17581/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17581/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17581",
          "number": 17581,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Remove settings merge reverse precedence code",
          "body": "**This is based on #16545 + #17580 + #17493.** The non-base commits are:\r\n\r\n- [`55b31d8a921e` refactor: Remove settings merge reverse precedence code](https://github.com/bitcoin/bitcoin/pull/17581/commits/55b31d8a921e45cba9884a7da08b3aea6a88598b)\r\n\r\n---\r\n\r\nThis has no effect on behavior because as of https://github.com/bitcoin/bitcoin/pull/17493 it's not possible to specify multiple values for single value settings in the config file.\r\n\r\nThis change implements one of the settings simplifications listed in #17508",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17581",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17581",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17581.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17581.patch"
          },
          "created_at": "2019-11-24T20:17:13Z",
          "updated_at": "2023-11-05T01:27:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1433257883,
      "node_id": "IC_kwDOABII585Vbceb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433257883",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T15:22:46Z",
      "updated_at": "2023-02-16T15:22:46Z",
      "author_association": "MEMBER",
      "body": "Moved to draft given it's based on multiple other PRs.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1433257883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "convert_to_draft",
      "id": 8538137665,
      "node_id": "CTDE_lADOABII585G_btJzwAAAAH86aRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538137665",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T15:22:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8574947780,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAH_G1HE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8574947780",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-21T21:04:59Z"
    },
    {
      "event": "unlabeled",
      "id": 8575191074,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAH_Hwgi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8575191074",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-21T21:40:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T00:11:53Z",
      "updated_at": "2023-02-22T00:11:53Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Allow whitelisting outgoing connections",
          "body": "Revives #17167. It allows whitelisting outgoing connections.\r\n\r\nI previously revived it with #26441, however, some reviewers told me it's better to keep them splitted to facilitate reviews and probably having this one merged first since we need it to improve functional tests. \r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2023-12-06T19:45:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8584300887,
      "node_id": "LE_lADOABII585G_btJzwAAAAH_qglX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8584300887",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T18:47:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8831535659,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAIOZoor",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8831535659",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-23T19:26:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8848157660,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAIPZCvc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8848157660",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-26T21:26:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T07:28:03Z",
      "updated_at": "2023-05-12T07:28:03Z",
      "source": {
        "issue": {
          "id": 1707054771,
          "node_id": "I_kwDOABII585lv5az",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27634",
          "number": 27634,
          "state": "open",
          "state_reason": null,
          "title": "BIP324 tracking issue",
          "body": "This issue will be updated to reflect the current state of [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) integration.\r\n\r\nPRs ready for review:\r\n* #28374 \r\n\r\nOverall plan:\r\n* ElligatorSwift integration in Bitcoin Core (formerly 23432, 23561)\r\n  * [x] Dependency: Jacobi symbol support in libsecp256k1: bitcoin-core/secp256k1#979\r\n  * [x] Dependency: ElligatorSwift support in libsecp256k1: bitcoin-core/secp256k1#1129\r\n  * [x] Dependency: update libsecp256k1 subtree: currently part of 27479.\r\n  * [x] Main feature: #27479\r\n* Cipher suite implementation (formerly 25361):\r\n  * [x] Dependency: support for not wasting ChaCha20 stream bytes: #26153\r\n  * [x] Dependency: support for RFC8439 variant of ChaCha20: #27985\r\n  * [x] Dependency: support for incremental Poly1305 computation: #27993\r\n  * [x] Main feature: #28008\r\n  * [x] Follow-up: #28267\r\n  * [ ] Follow-up: #28263\r\n* P2P v2 connection support (formerly 25361, 23233, 24545):\r\n  * [x] Dependency: P2P transport abstraction: #28165\r\n  * [x] Main feature: #28196\r\n  * [x] Follow up: #28433\r\n  * [x] Bugfix: #28489\r\n  * [x] Follow up: BIP change: #28525\r\n  * [x] Follow up: BIP change: #28577 \r\n  * [ ] Potential follow-up: decide how to report handshake/decoy bytes in per-message stats: https://github.com/bitcoin/bitcoin/pull/28331#issuecomment-1731202211\r\n* P2P v2 signalling/integration (formerly 24545):\r\n  * [x] Main feature: #28331 \r\n  * [x] Follow up test: #28588\r\n  * [x] Follow up: make all functional tests compatible with v2: #28805\r\n  * [x] Potential follow-up: integrated connect/add/reconnect logic: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1335820022\r\n  * [x] Potential follow-up: reuse `CNode` objects on reconnect: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1335876277\r\n  * [x] Potential follow-up: use `V2Transport` for everything, dropping abstract class: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1336030845\r\n* BIP324 functional tests: \r\n   * [x] Dependency: ElligatorSwift support in functional tests: #24005\r\n   * [x] Dependency: Field element support in functional tests: #26222\r\n   * [x] Dependency: Python cryptography #28374\r\n   * [ ] Main feature: #24748\r\n* P2P_V2 service flag support in DNS seeder:\r\n  * [x] Main feature: sipa/bitcoin-seeder#102\r\n\r\n<details><summary>Older stuff:</summary>\r\n\r\n* Prehistory:\r\n  * [x] CKey negation (no longer needed): #14047\r\n  * [x] ChaCha20 encryption: #15512\r\n  * [x] Poly1305 authentication: #15519 \r\n  * [x] Old ChaCha20Poly1305@Bitcoin cipher: #15649\r\n  * Preparing for multiple transport layers:\r\n    * [x] #16202\r\n    * [x] #16562\r\n  * Fuzz tests for various components:\r\n    * [x] #17771\r\n    * [x] #19296\r\n    * [x] #22029\r\n    * [x] #22704\r\n    * [x] #23806\r\n  * Miscellaneous fixes:\r\n    * [x]  #22331\r\n    * [x] #23271\r\n  * [x] ChaCha20 performance: #24946 \r\n\r\n* Superseded:\r\n  * #14032\r\n  * #14046\r\n  * #14049 \r\n  * #14050 \r\n  * #18242\r\n  * #20962\r\n  * #23233 \r\n  * #23322\r\n  * #23432\r\n  * #23441\r\n  * #23900\r\n  * #23561\r\n  * #24545\r\n  * #25361\r\n \r\n</details>",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "created_at": "2023-05-12T07:00:54Z",
          "updated_at": "2023-12-07T18:29:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 9690732740,
      "node_id": "REFE_lADOABII585G_btJzwAAAAJBnNjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9690732740",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "61d59fed74108f31eb4e9a2faa3f36422a37000e",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61d59fed74108f31eb4e9a2faa3f36422a37000e",
      "created_at": "2023-06-30T18:30:58Z"
    },
    {
      "event": "referenced",
      "id": 9692896427,
      "node_id": "REFE_lADOABII585G_btJzwAAAAJBvdyr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9692896427",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "421153c7ada2e7658f5c5b9efa93330f7669e228",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/421153c7ada2e7658f5c5b9efa93330f7669e228",
      "created_at": "2023-07-01T02:08:29Z"
    },
    {
      "event": "unsubscribed",
      "id": 9699322835,
      "node_id": "UE_lADOABII585G_btJzwAAAAJCH-vT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9699322835",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-02T09:28:18Z"
    },
    {
      "event": "commented",
      "id": 1660838322,
      "node_id": "IC_kwDOABII585i_mGy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660838322",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:07:49Z",
      "updated_at": "2023-08-29T21:12:05Z",
      "author_association": "MEMBER",
      "body": "@stratospher Rebasing on #28331 would let you revive this.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1660838322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "mentioned",
      "id": 9979684893,
      "node_id": "MEE_lADOABII585G_btJzwAAAAJS1egd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979684893",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:07:50Z"
    },
    {
      "event": "subscribed",
      "id": 9979684944,
      "node_id": "SE_lADOABII585G_btJzwAAAAJS1ehQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979684944",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:07:50Z"
    },
    {
      "event": "unlabeled",
      "id": 9979720640,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJS1nPA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979720640",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:12:18Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 9979720644,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJS1nPE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979720644",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:12:18Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9979720652,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJS1nPM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979720652",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:12:18Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "unlabeled",
      "id": 9979720655,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJS1nPP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979720655",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:12:18Z",
      "label": {
        "name": "Upstream",
        "color": "bfd4f2"
      }
    },
    {
      "event": "unlabeled",
      "id": 9979720657,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJS1nPR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979720657",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:12:18Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T10:14:07Z",
      "updated_at": "2023-08-31T10:14:07Z",
      "source": {
        "issue": {
          "id": 1875219172,
          "node_id": "PR_kwDOABII585ZONLb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28374",
          "number": 28374,
          "state": "closed",
          "state_reason": null,
          "title": "test: python cryptography required for BIP 324 functional tests",
          "body": "split off from #24748 to keep commits related to cryptography and functional test framework changes separate.\r\n\r\nThis PR adds python implementation and unit tests for HKDF, ChaCha20, Poly1305, ChaCha20Poly1305 AEAD, FSChaCha20 and FSChaCha20Poly1305 AEAD.\r\n\r\nThey're based on https://github.com/bitcoin/bips/blob/cc177ab7bc5abcdcdf9c956ee88afd1052053328/bip-0324/reference.py for easy review.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28374",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28374.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28374.patch"
          },
          "closed_at": "2023-11-07T21:49:10Z",
          "created_at": "2023-08-31T10:14:05Z",
          "updated_at": "2023-11-07T21:49:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T20:37:40Z",
      "updated_at": "2023-09-07T20:37:40Z",
      "source": {
        "issue": {
          "id": 1831769418,
          "node_id": "PR_kwDOABII585W74nW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28196",
          "number": 28196,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324 connection support",
          "body": "This is part of #27634.\r\n\r\nThis implements the BIP324 v2 transport (which implements all of what the BIP calls transport layer *and* application layer), though in a non-exposed way. It is tested through an extensive fuzz test, which verifies that v2 transports can talk to v2 transports, and v1 transports can talk to v2 transports, and a unit test that exercises a number of unusual scenarios. The transport is functionally complete, including:\r\n* Autodetection of incoming V1 connections.\r\n* Garbage, both sending and receiving.\r\n* Short message type IDs, both sending and receiving.\r\n* Ignore packets (receiving only, but tested in a unit test).\r\n* Session IDs are visible in `getpeerinfo` output (for manual comparison).\r\n\r\nThings that are not included, left for future PRs, are:\r\n* Actually using the v2 transport for connections.\r\n* Support for the `NODE_P2P_V2` service flag.\r\n* Retrying downgrade to V1 when attempted outbound V2 connections immediately fail.\r\n* P2P functional and unit tests\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28196",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28196",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28196.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28196.patch"
          },
          "closed_at": "2023-09-08T09:24:15Z",
          "created_at": "2023-08-01T17:56:58Z",
          "updated_at": "2023-09-13T07:57:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10325620668,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJndHe8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10325620668",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T05:52:26Z"
    },
    {
      "event": "commented",
      "id": 1712724420,
      "node_id": "IC_kwDOABII585mFhnE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1712724420",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:04:02Z",
      "updated_at": "2023-09-10T06:04:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on #28331. 2 things which affected the tests when rebasing were:\r\n1. `TestNode` can send garbage now\r\n2. since v1 reconnections are now attempted in a queue instead of immediately, there was a latency issue introduced in the tests in `add_outbound_p2p_connection()`",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1712724420",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "reviewed",
      "id": 1618745079,
      "node_id": "PRR_kwDOABII585gfBb3",
      "url": null,
      "actor": null,
      "commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1618745079",
      "submitted_at": "2023-09-10T06:13:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:23:20Z",
      "updated_at": "2023-09-10T06:23:20Z",
      "source": {
        "issue": {
          "id": 1888205861,
          "node_id": "PR_kwDOABII585Z59Ka",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28433",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28433/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28433/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28433/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28433",
          "number": 28433,
          "state": "closed",
          "state_reason": null,
          "title": "Follow-up to BIP324 connection support",
          "body": "This addresses a few remaining comments on #28196:\r\n\r\n* Deduplicate the `V2Transport` constructors (https://github.com/bitcoin/bitcoin/pull/28196#discussion_r1318573111)\r\n* Do not use the send buffer to store garbage (https://github.com/bitcoin/bitcoin/pull/28196#discussion_r1319134141)\r\n* Fix typo (https://github.com/bitcoin/bitcoin/pull/28196#discussion_r1315179378)\r\n\r\nIn addition, also fix an incorrect description in `V2Transport::SendState` (it claimed garbage was sent in the `READY` state, but it's in the `AWAITING_KEY` state).",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28433",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28433",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28433.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28433.patch"
          },
          "closed_at": "2023-09-11T08:44:54Z",
          "created_at": "2023-09-08T19:25:57Z",
          "updated_at": "2023-09-11T08:44:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 10325667100,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJndS0c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10325667100",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:24:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:26:06Z",
      "updated_at": "2023-09-10T06:26:06Z",
      "source": {
        "issue": {
          "id": 1884665382,
          "node_id": "PR_kwDOABII585Zt8Rw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28423",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28423/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28423/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28423/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28423",
          "number": 28423,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove protocol.h/netaddress.h/compat.h from kernel headers",
          "body": "This removes the non-consensus critical `protocol.h` and `netaddress.h` headers from the kernel headers. With this patch, they are no longer required to include in order to use the libbitcoinkernel library. This also allows for the removal of the `compat.h` header from the kernel headers.\r\n\r\nAs an added future benefit it also reduces the number of of kernel headers that include the platform specific `bitcoin-config.h`.\r\n\r\nFor those interested, the currently required kernel headers can be inspected visually with the [sourcetrail](https://github.com/CoatiSoftware/Sourcetrail) tool by looking at the required includes of `bitcoin-chainstate.cpp`.\r\n\r\n---\r\n\r\nThis is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587), namely its stage 1 step 3: Decouple most non-consensus headers from libbitcoinkernel.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28423",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28423",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28423.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28423.patch"
          },
          "closed_at": "2023-09-14T10:12:08Z",
          "created_at": "2023-09-06T19:58:47Z",
          "updated_at": "2023-09-14T19:56:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:41:42Z",
      "updated_at": "2023-09-10T06:41:42Z",
      "source": {
        "issue": {
          "id": 1864182144,
          "node_id": "PR_kwDOABII585YpKGv",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28331",
          "number": 28331,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324 integration",
          "body": "Part of #27634.\r\n\r\nThis makes BIP324 support feature complete, through a (default off) `-v2transport` option for enabling V2 connections. If it is enabled:\r\n* The `NODE_P2P_V2` service flag (*1 << 11*) is advertized.\r\n* Inbound connections can use V1 or V2 (automatically detected based on the protocol used by the peer)\r\n* V2 connections are used on outbound when the `NODE_P2P_V2` service is available (or the new `use_v2` parameter is set on the `addnode` RPC).\r\n* V2 outbound connections that instantly fail get retried as V1.\r\n\r\nThere are two new RPC fields, `\"transport_protocol_type\"` and `\"session_id\"`, in `getpeerinfo`.\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28331",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28331",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28331.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28331.patch"
          },
          "closed_at": "2023-10-03T09:13:13Z",
          "created_at": "2023-08-24T00:25:16Z",
          "updated_at": "2023-12-07T13:22:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T06:49:35Z",
      "updated_at": "2023-09-10T06:49:35Z",
      "source": {
        "issue": {
          "id": 1843988210,
          "node_id": "PR_kwDOABII585Xk2ms",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28248",
          "number": 28248,
          "state": "open",
          "state_reason": null,
          "title": "p2p: peer connection bug fixes",
          "body": "This pull fixes several peer connection bugs in our p2p code, along with the logging that uncovered them:\r\n\r\n1. Fix detection of inbound peer connections in `GetAddedNodeInfo`.\r\n\r\n2. Fix addnode CJDNS peers not detected in `GetAddedNodeInfo`, causing `ThreadOpenAddedConnections` to continually retry to connect to them and RPC `getaddednodeinfo` incorrectly showing them as not connected.\r\n\r\n3. Fix `ThreadOpenConnections` not detecting inbound CJDNS connections and making automatic outbound connections to them.\r\n\r\n4. Fix detection of already connected peers in `AlreadyConnectedToAddress()`.\r\n\r\n5. Fix detection of already connected peers when making outbound connections in `ConnectNode`.\r\n\r\n6. Do not accept inbound connections in `CreateNodeFromAcceptedSocket` from I2P peers we're already connected to, as building I2P tunnels is expensive.\r\n\r\n7. Fix making automatic outbound connections in `ThreadOpenConnections` to addnode peers, in order not to allocate our limited outbound slots to them and to ensure addnode connections benefit from their intended protections. Our addnode logic usually connects the addnode peers before the automatic outbound logic does, but not always, as a connection race can occur (see the commit message for further details and mainnet examples). When an addnode peer is connected as an automatic outbound peer and is the only connection we have to a network, it can be protected by our new outbound network-specific eviction logic and persist in the \"wrong role\". Fix these issues by checking if the selected address is an addnode peer in our automatic outbound connection logic.\r\n\r\nUpdate the p2p logging with the improvements that allowed seeing/understanding/debugging the current behavior. Please see the commit messages for details.\r\n\r\nSimplify `MaybePickPreferredNetwork` to return `std::optional`, make it a const class method, and add Clang thread-safety analysis annotation and related assertions.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28248",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28248",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28248.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28248.patch"
          },
          "created_at": "2023-08-09T20:46:20Z",
          "updated_at": "2023-11-15T19:25:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1618752060,
      "node_id": "PRR_kwDOABII585gfDI8",
      "url": null,
      "actor": null,
      "commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "Brock124590",
        "id": 141978268,
        "node_id": "U_kgDOCHZqnA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141978268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Brock124590",
        "html_url": "https://github.com/Brock124590",
        "followers_url": "https://api.github.com/users/Brock124590/followers",
        "following_url": "https://api.github.com/users/Brock124590/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Brock124590/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Brock124590/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Brock124590/subscriptions",
        "organizations_url": "https://api.github.com/users/Brock124590/orgs",
        "repos_url": "https://api.github.com/users/Brock124590/repos",
        "events_url": "https://api.github.com/users/Brock124590/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Brock124590/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1618752060",
      "submitted_at": "2023-09-10T06:56:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T07:05:39Z",
      "updated_at": "2023-09-10T07:05:39Z",
      "source": {
        "issue": {
          "id": 1821123378,
          "node_id": "PR_kwDOABII585WYCBk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28155",
          "number": 28155,
          "state": "closed",
          "state_reason": null,
          "title": "net: improves addnode / m_added_nodes logic",
          "body": "## Rationale\r\n\r\nCurrently, `addnode` has a couple of corner cases that allow it to either connect to the same peer more than once, hence wasting outbound connection slots, or add redundant information to `m_added_nodes`, hence making Bitcoin iterate through useless data on a regular basis.\r\n\r\n### Connecting to the same node more than once\r\n\r\nIn general, connecting to the same node more than once is something we should try to prevent. Currently, this is possible via `addnode` in two different ways:\r\n\r\n1. Calling `addnode` more than once in a short time period, using two equivalent but distinct addresses\r\n2. Calling `addnode add` using an IP, and `addnode onetry` after with an address that resolved to the same IP\r\n\r\nFor the former, the issue boils down to `CConnman::ThreadOpenAddedConnections` calling `CConnman::GetAddedNodeInfo` once, and iterating over the result to open connections (`CConman::OpenNetworkConnection`) on the same loop for all addresses.`CConnman::ConnectNode` only checks a single address, at random, when resolving from a hostname, and uses it to check whether we are already connected to it.\r\n\r\nAn example to test this would be calling:\r\n\r\n```\r\nbitcoin-cli addnode \"127.0.0.1:port\" add\r\nbitcoin-cli addnode \"localhost:port\" add\r\n```\r\n\r\nAnd check how it allows us to perform both connections some times, and some times it fails.\r\n\r\nThe latter boils down to the same issue, but takes advantage of `onetry` bypassing the `CConnman::ThreadOpenAddedConnections` logic and calling `CConnman::OpenNetworkConnection` straightaway. A way to test this would be:\r\n\r\n```\r\nbitcoin-cli addnode \"127.0.0.1:port\" add\r\nbitcoin-cli addnode \"localhost:port\" onetry\r\n```\r\n\r\n### Adding the same peer with two different, yet equivalent, addresses\r\n\r\nThe current implementation of `addnode` is pretty naive when checking what data is added to `m_added_nodes`. Given the collection stores strings, the checks at `CConnman::AddNode()` basically check wether the exact provided string is already in the collection. If so, the data is rejected, otherwise, it is accepted. However, ips can be formatted in several ways that would bypass those checks. \r\n\r\nTwo examples would be `127.0.0.1` being equal to `127.1` and `[::1]` being equal to `[0:0:0:0:0:0:0:1]`. Adding any pair of these will be allowed by the rpc command, and both will be reported as connected by `getaddednodeinfo`, given they map to the same `CService`. \r\n\r\nThis is less severe than the previous issue, since even tough both nodes are reported as connected by `getaddednodeinfo`, there is only a single connection to them (as properly reported by `getpeerinfo`). However, this adds redundant data to `m_added_nodes`, which is undesirable.\r\n\r\n\r\n### Parametrize `CConnman::GetAddedNodeInfo`\r\nFinally, this PR also parametrizes `CConnman::GetAddedNodeInfo` so it returns either all added nodes info, or only info about the nodes we are **not** connected to. This method is used both for `rpc`, in `getaddednodeinfo`, in which we are reporting all data to the user, so the former applies, and to check what nodes we are not connected to, in `CConnman::ThreadOpenAddedConnections`, in which we are currently returning more data than needed and then actively filtering using `CService.fConnected()`\r\n",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28155",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28155",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28155.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28155.patch"
          },
          "closed_at": "2023-11-08T11:31:59Z",
          "created_at": "2023-07-25T20:47:02Z",
          "updated_at": "2023-11-15T10:07:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T07:13:34Z",
      "updated_at": "2023-09-10T07:13:34Z",
      "source": {
        "issue": {
          "id": 1805228255,
          "node_id": "PR_kwDOABII585VieNH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
          "number": 28078,
          "state": "closed",
          "state_reason": null,
          "title": "net, refactor: remove unneeded exports, use helpers over low-level code, use optional",
          "body": "and other improvements noticed while reviewing #27411.\r\n\r\nAddresses https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263969104 and https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263967598.\r\n\r\nSee commit messages for details.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28078",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28078.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28078.patch"
          },
          "closed_at": "2023-09-21T15:26:38Z",
          "created_at": "2023-07-14T17:27:45Z",
          "updated_at": "2023-09-21T19:16:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T07:43:16Z",
      "updated_at": "2023-09-10T07:43:16Z",
      "source": {
        "issue": {
          "id": 1697522226,
          "node_id": "PR_kwDOABII585P27uk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27581",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27581/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27581/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27581/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27581",
          "number": 27581,
          "state": "closed",
          "state_reason": null,
          "title": "net: Continuous ASMap health check",
          "body": "There are certain statistics we can collect by running all our known clearnet addresses against the ASMap file. This could show issues with a maliciously manipulated file or with an old file that has decayed with time.\r\n\r\nThis is just a proof of concept for now. My idea currently is to run the analysis once per day and print the results to logs if an ASMap file is used.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27581",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27581",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27581.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27581.patch"
          },
          "closed_at": "2023-12-06T16:22:57Z",
          "created_at": "2023-05-05T12:16:53Z",
          "updated_at": "2023-12-06T16:23:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10327013267,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJnibeT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10327013267",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T18:04:08Z"
    },
    {
      "event": "labeled",
      "id": 10327013399,
      "node_id": "LE_lADOABII585G_btJzwAAAAJnibgX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10327013399",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-10T18:04:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10331635131,
      "node_id": "LE_lADOABII585G_btJzwAAAAJn0D27",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10331635131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T09:31:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10400366214,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJr6P6G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10400366214",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T16:30:16Z"
    },
    {
      "event": "unlabeled",
      "id": 10400633708,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJr7RNs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10400633708",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T16:52:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T21:26:48Z",
      "updated_at": "2023-09-18T21:26:48Z",
      "source": {
        "issue": {
          "id": 1893223976,
          "node_id": "PR_kwDOABII585aKu0D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28463",
          "number": 28463,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Increase inbound capacity for block-relay only connections",
          "body": "This is joint work with amitiuttarwar.\r\n\r\nSee issue #28462 for a broader discussion on increasing the number of block-relay-only connections independent of this particular implementation proposal.\r\n\r\nWe suggest to increase the number of inbound slots allocated to block-relay-only peers by increasing the default maximum connections from 125 to 200, with 60% of inbound slots accessible for tx-relaying peers.\r\nThis is a prerequisite for being able to increase the default number of outgoing block-relay-only peers later, because the current inbound capacity of the network is not sufficient.\r\nIn order to account for incoming tx-relaying peers separately from incoming block-relay peers, changes to the inbound eviction logic are necessary.\r\n\r\nSee the next post in this thread for a more detailed explanation and motivation of the changes.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28463",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28463",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28463.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28463.patch"
          },
          "created_at": "2023-09-12T20:36:39Z",
          "updated_at": "2023-12-06T18:26:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T21:30:42Z",
      "updated_at": "2023-09-18T21:30:42Z",
      "source": {
        "issue": {
          "id": 1890832581,
          "node_id": "PR_kwDOABII585aClSK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
          "number": 28451,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove unused SER_DISK, SER_NETWORK, CDataStream",
          "body": "Seems odd to have code that is completely dead.\r\n\r\nFix this by removing all of it.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28451",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28451.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28451.patch"
          },
          "closed_at": "2023-11-30T16:12:03Z",
          "created_at": "2023-09-11T16:07:31Z",
          "updated_at": "2023-11-30T17:18:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10416306505,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJs3DlJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10416306505",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T00:02:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T07:22:57Z",
      "updated_at": "2023-09-20T07:22:57Z",
      "source": {
        "issue": {
          "id": 1573080079,
          "node_id": "PR_kwDOABII585JXcpb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27052",
          "number": 27052,
          "state": "open",
          "state_reason": null,
          "title": "test: rpc: add last block announcement time to getpeerinfo result",
          "body": "This PR adds `last_block_announcement` to the per-peer `getpeerinfo` RPC result. This is the most recent time that this peer was the first to notify our node of a new block (one that we didn't already know about), or zero if this peer has never been the first to notify us of a new block. This timestamp already exists internally and is used for stale-tip eviction logic; this PR exposes it at the RPC layer.\r\n\r\nThis PR started out as a suggestion for additional test coverage, see https://github.com/bitcoin/bitcoin/pull/26172#issuecomment-1259678260. It turned out that the easiest way to test (already-merged) #26172 is to add this field to `getpeerinfo` and have a functional test verify its value. But it may also be useful to have this result in its own right, similar to that RPC's existing `last_block` field -- it indicates something about the quality of our peers. It allows one to predict which peer will be evicted when the stale tip logic activates. (I'm not sure if that would be useful, but it may be.)\r\n\r\nThe functional test added here fails without #26172, which is the main goal.\r\n\r\nThis PR does not test the actual stale-tip eviction logic; that's difficult to do with a functional test. But it does test the correctness of the timestamp that the eviction logic depends on. #23352 is an attempt to test the eviction logic using a unit test, it's not ready to be merged yet. I think having both kinds of tests would be beneficial.",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27052",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27052",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27052.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27052.patch"
          },
          "created_at": "2023-02-06T18:32:56Z",
          "updated_at": "2023-11-30T22:19:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T07:30:00Z",
      "updated_at": "2023-09-20T07:30:00Z",
      "source": {
        "issue": {
          "id": 1527389210,
          "node_id": "PR_kwDOABII585HEiGw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26863",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26863/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26863/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26863/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26863",
          "number": 26863,
          "state": "open",
          "state_reason": null,
          "title": "test: merge banning test from p2p_disconnect_ban to rpc_setban",
          "body": "There are tests related to banning in both `p2p_disconnect_ban` and `rpc_setban`, some of them are testing same scenarios. So, this PR moves all banning test stuff to `rpc_setban` and leaves `p2p_disconnect_ban` only for disconnecting stuff. Since `p2p_disconnect_ban` doesn't have any banning stuff, this PR also renames that to `p2p_disconnect`.",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26863",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26863",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26863.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26863.patch"
          },
          "created_at": "2023-01-10T13:25:40Z",
          "updated_at": "2023-10-29T18:04:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T08:18:43Z",
      "updated_at": "2023-09-20T08:18:43Z",
      "source": {
        "issue": {
          "id": 782505298,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTUyMDQ5MjI1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20892",
          "number": 20892,
          "state": "closed",
          "state_reason": null,
          "title": "tests: Run both descriptor and legacy tests within a single test invocation",
          "body": "Instead of having the tests only do one type or the other, depending on command line arguments, these tests should be running with both types of wallets. Any test that calls `add_wallet_options` will be run for each wallet type that it specifies a wallet option for if none are give in the command line. If a particular wallet is specified with `--legacy-wallet` or `--descriptors`, the options are still respected.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20892",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20892",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20892.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20892.patch"
          },
          "closed_at": "2023-10-05T19:56:01Z",
          "created_at": "2021-01-09T03:50:55Z",
          "updated_at": "2023-10-05T19:56:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10433718790,
      "node_id": "LE_lADOABII585G_btJzwAAAAJt5eoG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10433718790",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T10:57:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:55:48Z",
      "updated_at": "2023-09-28T14:55:48Z",
      "source": {
        "issue": {
          "id": 1910240070,
          "node_id": "PR_kwDOABII585bDvp1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28525",
          "number": 28525,
          "state": "closed",
          "state_reason": null,
          "title": "net: Drop v2 garbage authentication packet",
          "body": "Note that this is a breaking change, see also https://github.com/bitcoin/bips/pull/1498\r\n\r\nThe benefit is a simpler implementation:\r\n - The protocol state machine does not need separate states for garbage authentication and version phases.\r\n - The special case of \"ignoring the ignore bit\" is removed.\r\n - The freedom to choose the contents of the garbage authentication packet is removed. This simplifies testing.",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28525",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28525.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28525.patch"
          },
          "closed_at": "2023-09-29T13:50:14Z",
          "created_at": "2023-09-24T13:46:50Z",
          "updated_at": "2023-09-29T13:50:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10571553394,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJ2HRpy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10571553394",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T07:11:50Z"
    },
    {
      "event": "unlabeled",
      "id": 10572114390,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJ2JanW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10572114390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T08:14:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T10:24:57Z",
      "updated_at": "2023-10-06T10:24:57Z",
      "source": {
        "issue": {
          "id": 1914146493,
          "node_id": "PR_kwDOABII585bQ_YW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28538",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28538/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28538/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28538/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28538",
          "number": 28538,
          "state": "open",
          "state_reason": null,
          "title": "p2p: attempt to fill full outbound connection slots with peers that support tx relay",
          "body": "As described in the issues #16418 and #28371, it's a possibility that we could end up having an insufficient number of outbound peers relaying our transactions. Having fewer outbound peers support tx-relay could also have implications on [privacy](https://github.com/bitcoin/bitcoin/issues/16418#issuecomment-514328042) and fee estimation.\r\n\r\nWhile #28488 is suggesting meaures based on comparing fee filters / mempool sizes, there is also the simpler issue of peers that tell us they don't want transactions, which is determined by the `fRelay` field in the `version` msg. If such a peer runs bitcoin core, that usually means that it's running in `-blocksonly` mode and accepting inbound connections. The status quo is that we will not avoid these peers and just not send them any transactions.\r\n\r\nThis PR proposes not to waste any of our 8 full-relay outbound slots on these peers (unless we are in `-blocksonly` mode ourselves). Using them as outbound peers for block-relay-only connections is fine though and not impacted.\r\n\r\nAs was suggested by ajtowns below, we don't disconnect during version processing, but later during the regularly scheduled `EvictExtraOutboundPeers()` task, and only if we are at the maximum of full-outbound peers.\r\n\r\nIf reviewers think that this proposal is too aggressive, an alternative solution (with a little more complexity) would be to restrict the maximum number of outbound connections to `-blocksonly` peers to 1 or 2. Although I currently think that it's ok to be selective with outbound connections, so I didn't implement that right away.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28538",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28538",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28538.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28538.patch"
          },
          "created_at": "2023-09-26T19:13:54Z",
          "updated_at": "2023-12-12T00:02:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T10:27:02Z",
      "updated_at": "2023-10-06T10:27:02Z",
      "source": {
        "issue": {
          "id": 1910622235,
          "node_id": "PR_kwDOABII585bE94H",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
          "number": 28528,
          "state": "open",
          "state_reason": null,
          "title": "test: Use test framework utils in functional tests",
          "body": "Replaces bare asserts with test framework utils across both the functional tests and the test framework itself.\r\n\r\nAlso adds the `assert_not_equal`, `assert_less_than`, and `assert_less_than_or_equal` util functions for greater readability.\r\n\r\nFixes #23119.\r\n",
          "user": {
            "login": "osagie98",
            "id": 23225617,
            "node_id": "MDQ6VXNlcjIzMjI1NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/23225617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/osagie98",
            "html_url": "https://github.com/osagie98",
            "followers_url": "https://api.github.com/users/osagie98/followers",
            "following_url": "https://api.github.com/users/osagie98/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/osagie98/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/osagie98/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/osagie98/subscriptions",
            "organizations_url": "https://api.github.com/users/osagie98/orgs",
            "repos_url": "https://api.github.com/users/osagie98/repos",
            "events_url": "https://api.github.com/users/osagie98/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/osagie98/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28528",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28528.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28528.patch"
          },
          "created_at": "2023-09-25T04:14:06Z",
          "updated_at": "2023-12-11T22:54:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1663063154,
      "node_id": "PRR_kwDOABII585jIFRy",
      "url": null,
      "actor": null,
      "commit_id": "9ccce82c330af6e5ec5ea4cf118cb94d27047627",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "cacrowley",
        "id": 80238672,
        "node_id": "MDQ6VXNlcjgwMjM4Njcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/80238672?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cacrowley",
        "html_url": "https://github.com/cacrowley",
        "followers_url": "https://api.github.com/users/cacrowley/followers",
        "following_url": "https://api.github.com/users/cacrowley/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cacrowley/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cacrowley/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cacrowley/subscriptions",
        "organizations_url": "https://api.github.com/users/cacrowley/orgs",
        "repos_url": "https://api.github.com/users/cacrowley/repos",
        "events_url": "https://api.github.com/users/cacrowley/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cacrowley/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1663063154",
      "submitted_at": "2023-10-07T14:44:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10582265497,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJ2wI6Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10582265497",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-07T16:40:27Z"
    },
    {
      "event": "reviewed",
      "id": 1663408774,
      "node_id": "PRR_kwDOABII585jJZqG",
      "url": null,
      "actor": null,
      "commit_id": "c3c61020c07465495b564b05a087220cc3cb1b3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\njust started reviewing, some initial comments",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1663408774",
      "submitted_at": "2023-10-09T04:10:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10591835180,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJ3UpQs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10591835180",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-09T14:09:29Z"
    },
    {
      "event": "unlabeled",
      "id": 10598820952,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAJ3vSxY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10598820952",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-10T04:57:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-10T20:04:29Z",
      "updated_at": "2023-10-10T20:04:29Z",
      "source": {
        "issue": {
          "id": 1936121785,
          "node_id": "PR_kwDOABII585cbP0s",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28634",
          "number": 28634,
          "state": "closed",
          "state_reason": null,
          "title": "test: BIP324: add check for detection of missing garbage terminator",
          "body": "This PR adds test coverage for the \"missing garbage terminator\" detection on incoming v2 transport (BIP324) connections:\r\nhttps://github.com/bitcoin/bitcoin/blob/04265ba9378efbd4c35b33390b1e5cf246d420a9/src/net.cpp#L1205-L1209\r\n\r\nNote that this always happens at the same exact amount of bytes sent in (after 64 + 4095 + 16 = 4175 bytes), if at no point, the last 16 bytes of potential authentication data match the garbage, i.e. all the previous bytes after the ellswift pubkey. To keep it simple, we just send in zero-value bytes here and verify that the detection hits exactly after the last bytes is sent.\r\n\r\nAFAICT, with this PR all the v2 transport errors that can be triggered in this simple way of \"just open a socket and send in a fixed byte-string\" are covered. For more advanced test, we need BIP324 cryptography in the test framework in order to perform a v2 handshake etc. (PRs #28374, #24748).",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28634",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28634",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28634.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28634.patch"
          },
          "closed_at": "2023-10-12T07:35:13Z",
          "created_at": "2023-10-10T20:04:29Z",
          "updated_at": "2023-10-12T08:37:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1665480038,
      "node_id": "PRR_kwDOABII585jRTVm",
      "url": null,
      "actor": null,
      "commit_id": "e996ea537af9b651a7470e352dcd4f6037ba5c9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "halfway through with the review, these are my comments so far.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1665480038",
      "submitted_at": "2023-10-10T22:27:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-10T23:15:56Z",
      "updated_at": "2023-10-10T23:15:56Z",
      "source": {
        "issue": {
          "id": 1935847404,
          "node_id": "PR_kwDOABII585caTLd",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28632",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28632/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28632/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28632/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28632",
          "number": 28632,
          "state": "closed",
          "state_reason": null,
          "title": "test: make python p2p not send getaddr on incoming connections",
          "body": "`bitcoind` nodes send `getaddr` messages only to outbound nodes (and ignore `getaddr` received by outgoing connections).\r\nThe python p2p node should mirror this behavior by not sending a `getaddr` message when it is not the initiator of the connection.\r\nThis is currently causing several unnecessary messages being sent and then ignored (`Ignoring \"getaddr\" from outbound-full-relay connection.`) in tests like `p2p_add_connections.py`.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28632",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28632",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28632.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28632.patch"
          },
          "closed_at": "2023-11-01T10:39:57Z",
          "created_at": "2023-10-10T17:09:24Z",
          "updated_at": "2023-11-01T10:39:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1671747731,
      "node_id": "PRR_kwDOABII585jpNiT",
      "url": null,
      "actor": null,
      "commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1671747731",
      "submitted_at": "2023-10-11T16:03:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "referenced",
      "id": 10627958806,
      "node_id": "REFE_lADOABII585G_btJzwAAAAJ5ecgW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10627958806",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a5aae9330780c3740e27cc511f7cba1fab745b9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a5aae9330780c3740e27cc511f7cba1fab745b9",
      "created_at": "2023-10-12T07:35:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10629188602,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAJ5jIv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10629188602",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T09:25:55Z"
    },
    {
      "event": "labeled",
      "id": 10630593736,
      "node_id": "LE_lADOABII585G_btJzwAAAAJ5ofzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10630593736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T11:49:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 10646525637,
      "node_id": "REFE_lADOABII585G_btJzwAAAAJ6lRbF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10646525637",
      "actor": {
        "login": "Frank-GER",
        "id": 87550788,
        "node_id": "MDQ6VXNlcjg3NTUwNzg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/87550788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frank-GER",
        "html_url": "https://github.com/Frank-GER",
        "followers_url": "https://api.github.com/users/Frank-GER/followers",
        "following_url": "https://api.github.com/users/Frank-GER/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Frank-GER/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Frank-GER/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Frank-GER/subscriptions",
        "organizations_url": "https://api.github.com/users/Frank-GER/orgs",
        "repos_url": "https://api.github.com/users/Frank-GER/repos",
        "events_url": "https://api.github.com/users/Frank-GER/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Frank-GER/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a38a7b9bc765088d3900a4bf1d517a7dea13983",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0a38a7b9bc765088d3900a4bf1d517a7dea13983",
      "created_at": "2023-10-13T17:03:42Z"
    },
    {
      "event": "labeled",
      "id": 10831538465,
      "node_id": "LE_lADOABII585G_btJzwAAAAKFnCkh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10831538465",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-01T11:56:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10853997889,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKG8t1B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10853997889",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-03T10:29:27Z"
    },
    {
      "event": "commented",
      "id": 1792201473,
      "node_id": "IC_kwDOABII585q0tMB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1792201473",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-03T10:32:33Z",
      "updated_at": "2023-11-03T10:32:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1792201473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "unlabeled",
      "id": 10854651497,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKG_NZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10854651497",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-03T11:27:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10855017004,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKHAmos",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10855017004",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-03T12:03:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-03T15:23:52Z",
      "updated_at": "2023-11-03T15:23:52Z",
      "source": {
        "issue": {
          "id": 1976096672,
          "node_id": "PR_kwDOABII585eiCc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28782",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28782/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28782/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28782/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28782",
          "number": 28782,
          "state": "closed",
          "state_reason": null,
          "title": "test: Add missing sync on send_version in peer_connect",
          "body": "Without the sync, the logic will be racy. For example, `p2p_sendtxrcncl.py` is failing locally (and on CI occasionally), because non-version messages will be sent before the version message:\r\n\r\n\r\n```py\r\n        self.log.info('SENDTXRCNCL with version=0 triggers a disconnect')\r\n        sendtxrcncl_low_version = create_sendtxrcncl_msg()\r\n        sendtxrcncl_low_version.version = 0\r\n        peer = self.nodes[0].add_p2p_connection(PeerNoVerack(), send_version=True, wait_for_verack=False)\r\n        with self.nodes[0].assert_debug_log([\"txreconciliation protocol violation\"]):\r\n            peer.send_message(sendtxrcncl_low_version)\r\n            peer.wait_for_disconnect()\r\n```\r\n\r\n```\r\n test  2023-11-02T08:15:19.620000Z TestFramework (INFO): SENDTXRCNCL with version=0 triggers a disconnect \r\n test  2023-11-02T08:15:19.621000Z TestFramework.p2p (DEBUG): Connecting to Bitcoin Node: 127.0.0.1:11312 \r\n test  2023-11-02T08:15:19.624000Z TestFramework.p2p (DEBUG): Connected & Listening: 127.0.0.1:11312 \r\n test  2023-11-02T08:15:19.798000Z TestFramework.p2p (DEBUG): Send message to 127.0.0.1:11312: msg_sendtxrcncl(version=0, salt=2) \r\n test  2023-11-02T08:15:19.799000Z TestFramework.p2p (DEBUG): Send message to 127.0.0.1:11312: msg_version(nVersion=70016 nServices=9 nTime=Thu Nov  2 08:15:19 2023 addrTo=CAddress(nServices=1 net=IPv4 addr=127.0.0.1 port=11312) addrFrom=CAddress(nServices=1 net=IPv4 addr=0.0.0.0 port=0) nNonce=0x369AC031CDA96022 strSubVer=/python-p2p-tester:0.0.3/ nStartingHeight=-1 relay=1) \r\n node0 2023-11-02T08:15:19.804409Z [net] [net.cpp:3676] [CNode] [net] Added connection peer=0 \r\n node0 2023-11-02T08:15:19.805256Z [net] [net.cpp:1825] [CreateNodeFromAcceptedSocket] [net] connection from 127.0.0.1:55964 accepted \r\n node0 2023-11-02T08:15:19.809861Z [msghand] [net_processing.cpp:3356] [ProcessMessage] [net] received: sendtxrcncl (12 bytes) peer=0 \r\n node0 2023-11-02T08:15:19.810297Z [msghand] [net_processing.cpp:3582] [ProcessMessage] [net] non-version message before version handshake. Message \"sendtxrcncl\" from peer=0 \r\n node0 2023-11-02T08:15:19.810928Z [msghand] [net_processing.cpp:3356] [ProcessMessage] [net] received: version (111 bytes) peer=0 \r\n...\r\n test  2023-11-02T09:35:20.166000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: '''' \r\n                                           def test_function():\r\n                                               if check_connected:\r\n                                                   assert self.is_connected\r\n                                               return test_function_in()\r\n                                   '''\r\n test  2023-11-02T09:35:20.187000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-s390x-linux-gnu/test/functional/test_framework/test_framework.py\", line 132, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-s390x-linux-gnu/test/functional/p2p_sendtxrcncl.py\", line 188, in run_test\r\n                                       peer.wait_for_disconnect()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-s390x-linux-gnu/test/functional/test_framework/p2p.py\", line 478, in wait_for_disconnect\r\n                                       self.wait_until(test_function, timeout=timeout, check_connected=False)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-s390x-linux-gnu/test/functional/test_framework/p2p.py\", line 470, in wait_until\r\n                                       wait_until_helper_internal(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-s390x-linux-gnu/test/functional/test_framework/util.py\", line 275, in wait_until_helper_internal\r\n                                       raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\n                                   AssertionError: Predicate ''''\r\n                                           def test_function():\r\n                                               if check_connected:\r\n                                                   assert self.is_connected\r\n                                               return test_function_in()\r\n                                   ''' not true after 4800.0 seconds\r\n",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28782",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28782",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28782.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28782.patch"
          },
          "closed_at": "2023-11-08T09:56:03Z",
          "created_at": "2023-11-03T12:30:25Z",
          "updated_at": "2023-11-08T10:20:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10862710838,
      "node_id": "LE_lADOABII585G_btJzwAAAAKHd9A2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10862710838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T13:03:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10862772587,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKHeMFr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10862772587",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T13:29:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-06T22:06:04Z",
      "updated_at": "2023-11-06T22:06:04Z",
      "source": {
        "issue": {
          "id": 1980150868,
          "node_id": "PR_kwDOABII585evhgd",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28805",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28805/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28805/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28805/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28805",
          "number": 28805,
          "state": "closed",
          "state_reason": null,
          "title": "test: Make existing functional tests compatible with --v2transport",
          "body": "This makes the functional test suite compatible with BIP324, so that \r\n`python3 test_runner.py --v2transport`\r\nshould succeed (currently, 12 tests fail for me on master).\r\nIncludes two commits by TheStack I found in an old discussion https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1326714164\r\n\r\nNote that even though all tests should pass, the python `p2p.py` module will do v2 connections only after the merge of #24748, so that for now only connections between two full nodes will actually run v2.\r\nSome of the fixed tests were added with `--v2transport` to the test runner. Though after #24748 we might also want to consider running the entire suite with `--v2transport` in some CI.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28805",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28805",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28805.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28805.patch"
          },
          "closed_at": "2023-11-28T19:17:43Z",
          "created_at": "2023-11-06T22:06:03Z",
          "updated_at": "2023-11-28T22:28:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T06:16:25Z",
      "updated_at": "2023-11-07T06:16:25Z",
      "source": {
        "issue": {
          "id": 1980629276,
          "node_id": "I_kwDOId2vBM52DgEc",
          "url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/46",
          "repository_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club",
          "labels_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/46/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/46/comments",
          "events_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/46/events",
          "html_url": "https://github.com/Bitshala/BitcoinCore-PR-Review-Club/issues/46",
          "number": 46,
          "state": "closed",
          "state_reason": "completed",
          "title": "[Part 1/2: Introduction] Functional tests for v2 P2P encryption #24748",
          "body": "# Session Details\r\n- Date: 16-11-2023\r\n- Time: IST 20:00 (UTC 14:30)\r\n- PR: https://github.com/bitcoin/bitcoin/pull/24748\r\n- Context: `p2p` `test`\r\n- Difficulty: intermediate\r\n- Language: `python`\r\n\r\n# Learning\r\nThis is the introductory session for a 2-part review club. The review club will focus on how the functional test framework works on current master and will not cover the changes in [PR #24748](https://github.com/bitcoin/bitcoin/pull/24748). If this is your first exposure to the test framework, it is recommended to understand the basics discussed in this review club. It's a definite prerequisite to understanding [PR #24748](https://github.com/bitcoin/bitcoin/pull/24748).\r\n \r\n - Functional test framework\r\n - P2P network\r\n\r\n > Note: Drop your PR and review related suggestions/thoughts/questions below\r\n\r\n# Summary\r\n- Bitcoin's functional test framework is a cool tool to spin up nodes and simulate your own network scenario in the regtest.\r\n- Each node would be an actual bitcoind instance and managed by the [python class `TestNode`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_node.py#L56).\r\n- However we can't customise behaviour of bitcoind. Developers often want to be able to send their own custom response, introduce malicious behaviour and check if error messages were reported, pause and examine bitcoind process etc. The [`P2PInterface` class ](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/p2p.py#L322) serves this purpose and mocks the behaviour of a peer. It can be easily customised.\r\n- You can connect 2 bitcoind nodes(`TestNode <--> TestNode`) using [`connect_nodes` ](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_framework.py#L590)which invokes the `addnode` RPC.\r\n- `P2PInterface` allows custom interaction. You can create inbound/outbound connections to the `TestNode` from your mockable peer.\r\n\t1. Inbound connections to the `TestNode` are made using [`add_p2p_connection()`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_node.py#L637)\r\n\t    - `TestNode <---------- P2PInterface`\r\n\t    - Here, `P2PInterface` is the initiator of the connection\r\n\t2. Outbound connections from the `TestNode` are made using [`add_outbound_p2p_connection()`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_node.py#L677)\r\n\t    - `TestNode ----------> P2PInterface`\r\n\t    - Here, `TestNode` is the initiator of the connection\r\n\r\n# Questions\r\n1. What does this PR do at a high level? Why do we need this PR?\r\n2. Can you trace the functions through which an inbound connection is established in the test framework?\r\n    - hint: see how [`TestNode::add_p2p_connection` ](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_node.py#L637) makes a call to [`peer_connect`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/p2p.py#L183)\r\n4. Why is the mechanism to establish an outbound connection in the test framework different? Can you trace the functions through which an outbound connection is established in the test framework?\r\n    - hint: see how [`TestNode::add_outbound_p2p_connection` ](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/test_node.py#L677) makes a call to [`peer_accept_connection`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/p2p.py#L191)\r\n6. How are P2P messages read? How are P2P messages sent?\r\n    - hint: see [`data_received()`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/p2p.py#L225) and [`send_message()`](https://github.com/bitcoin/bitcoin/blob/eca2e430acf50f11da2220f56d13e20073a57c9b/test/functional/test_framework/p2p.py#L273)\r\n8. What is a version handshake? What tools can you use to observe different messages that are exchanged.\r\n9. Briefly explain initial v2 handshake in BIP 324 and when it would need to be done so that P2P messages exchanged are encrypted. \r\n\r\n# Extra reading\r\n1. [Amiti's onboarding exercise on version handshake](https://github.com/amitiuttarwar/bitcoin-notes/blob/main/onboarding-exercises/version-handshake.md)\r\n2. [Detailed writeup about working of the functional test framework](https://github.com/chaincodelabs/bitcoin-core-onboarding/blob/main/functional_test_framework.asciidoc)",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": true,
          "comments": 1,
          "closed_at": "2023-11-18T17:34:22Z",
          "created_at": "2023-11-07T06:16:25Z",
          "updated_at": "2023-11-18T17:34:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 10892653322,
      "node_id": "REFE_lADOABII585G_btJzwAAAAKJQLMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10892653322",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "962ea5c525028391bb4c6546db0c2c3dec9cb4a0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/962ea5c525028391bb4c6546db0c2c3dec9cb4a0",
      "created_at": "2023-11-07T21:49:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10895435658,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKJayeK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10895435658",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T04:32:34Z"
    },
    {
      "event": "commented",
      "id": 1801073913,
      "node_id": "IC_kwDOABII585rWjT5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1801073913",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T04:39:10Z",
      "updated_at": "2023-11-08T04:39:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated since #28374 is merged.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1801073913",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "ready_for_review",
      "id": 10895480216,
      "node_id": "RFRE_lADOABII585G_btJzwAAAAKJa9WY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10895480216",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T04:39:27Z"
    },
    {
      "event": "labeled",
      "id": 10897053792,
      "node_id": "LE_lADOABII585G_btJzwAAAAKJg9hg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10897053792",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T08:08:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1801417208,
      "node_id": "IC_kwDOABII585rX3H4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1801417208",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T09:35:27Z",
      "updated_at": "2023-11-08T09:35:27Z",
      "author_association": "MEMBER",
      "body": "CI:\r\n\r\n```\r\n�[0m�[0;31mp2p_v2_earlykeyresponse.py                             | ✖ Failed  | 1 s",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1801417208",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "labeled",
      "id": 10899304212,
      "node_id": "LE_lADOABII585G_btJzwAAAAKJpi8U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10899304212",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T11:15:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1723019604,
      "node_id": "PRR_kwDOABII585mszFU",
      "url": null,
      "actor": null,
      "commit_id": "aa275a6a4d9d4a1340b0be9ec0b65512a8164779",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nDid only a rough first review round so far, left some comments on the way, mostly nits. \r\n\r\nIt seems like the newly introduced functional test `p2p_v2_encrypted.py` could be merged with the already existing `p2p_v2_transport.py` (here or in a follow-up), or is it fundamentally different? ",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1723019604",
      "submitted_at": "2023-11-09T17:39:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10931513032,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKLkabI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931513032",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T05:57:46Z"
    },
    {
      "event": "unlabeled",
      "id": 10931517549,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKLkbht",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931517549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T05:59:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1806715075,
      "node_id": "IC_kwDOABII585rsEjD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806715075",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:40Z",
      "updated_at": "2023-11-11T06:34:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@theStack, @mzumsande thank you for the reviews! I've rebased and addressed your comments.\r\n\r\n> It seems like the newly introduced functional test p2p_v2_encrypted.py could be merged with the already existing p2p_v2_transport.py (here or in a follow-up), or is it fundamentally different?\r\n\r\nyes! can be done in a follow up. only difference is `p2p_v2_encrypted.py` tests `TestNode` <--> `P2PInterface` behaviour and `p2p_v2_transport.py` tests `TestNode` <--> `TestNode` behaviour. So maybe in separate functions within `p2p_v2_transport.py`?\r\n\r\n@maflcko, I still need to address the CI failure. https://api.cirrus-ci.com/v1/task/6171895557521408/logs/ci.log",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1806715075",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "mentioned",
      "id": 10931596926,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKLku5-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596926",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:40Z"
    },
    {
      "event": "subscribed",
      "id": 10931596928,
      "node_id": "SE_lADOABII585G_btJzwAAAAKLku6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596928",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:40Z"
    },
    {
      "event": "mentioned",
      "id": 10931596931,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKLku6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596931",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:40Z"
    },
    {
      "event": "subscribed",
      "id": 10931596936,
      "node_id": "SE_lADOABII585G_btJzwAAAAKLku6I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596936",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:40Z"
    },
    {
      "event": "mentioned",
      "id": 10931596941,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKLku6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596941",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:41Z"
    },
    {
      "event": "subscribed",
      "id": 10931596947,
      "node_id": "SE_lADOABII585G_btJzwAAAAKLku6T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931596947",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T06:32:41Z"
    },
    {
      "event": "reviewed",
      "id": 1730319269,
      "node_id": "PRR_kwDOABII585nIpOl",
      "url": null,
      "actor": null,
      "commit_id": "50a30f6394335b7c8ed32ade1c86a69502857012",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I've noticed that the test `p2p_v2_encrypted.py` fails if the node under test sends a small amount of garbage (in the range of 0-19 bytes). Can be reproduced by applying the following simple patch:\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 2682035912..09af15a9b7 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -951,7 +951,7 @@ std::vector<uint8_t> GenerateRandomGarbage() noexcept\r\n {\r\n     std::vector<uint8_t> ret;\r\n     FastRandomContext rng;\r\n-    ret.resize(rng.randrange(V2Transport::MAX_GARBAGE_LEN + 1));\r\n+    ret.resize(19); // fails in range 0-19, works with 20+\r\n     rng.fillrand(MakeWritableByteSpan(ret));\r\n     return ret;\r\n }\r\n```\r\nApparently the expected VERACK is not received from the node. Didn't dig deeper yet. For finding the cause, I think some `logger.debug(...)` messages in `v2_p2p.py` might be helpful.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1730319269",
      "submitted_at": "2023-11-14T17:29:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10964139490,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKNg33i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10964139490",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:03:09Z"
    },
    {
      "event": "commented",
      "id": 1811980868,
      "node_id": "IC_kwDOABII585sAKJE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811980868",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:07:58Z",
      "updated_at": "2023-11-15T08:07:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I've noticed that the test p2p_v2_encrypted.py fails if the node under test sends a small amount of garbage (in the range of 0-19 bytes).\r\n\r\nthanks for catching that @theStack! before the drop garbage authentication packet change in #28525, `recvbuf` needed 16+20+20 bytes to authenticate the handshake. now it only needs 16+20 bytes. i've fixed it now.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1811980868",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "mentioned",
      "id": 10964183855,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKNhCsv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10964183855",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:07:59Z"
    },
    {
      "event": "subscribed",
      "id": 10964183874,
      "node_id": "SE_lADOABII585G_btJzwAAAAKNhCtC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10964183874",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:07:59Z"
    },
    {
      "event": "commented",
      "id": 1812003580,
      "node_id": "IC_kwDOABII585sAPr8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1812003580",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:26:19Z",
      "updated_at": "2023-11-15T08:26:50Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  https://api.cirrus-ci.com/v1/task/6171895557521408/logs/ci.log\r\n\r\ni wasn't able to reproduce this error - tried it locally on the docker container, setting randomseed and running it in loop. also confused how it could have happened.\r\n\r\nthis is what happens inside `p2p_v2_earlykeyresponse.py` test\r\n- we start an inbound connection to the TestNode (`TestNode` <---- `P2PInterface`). \r\n- v2 connection starts by sending 64 bytes ellswift (`TestNode` <--64 bytes-- `P2PInterface`). this is sent in 2 parts:\r\n\t- `TestNode` <--4 bytes magic bytes-- `P2PInterface` - `TestNode` doesn't send us a response\r\n\t- `TestNode` <--remaining 60 bytes-- `P2PInterface` - `TestNode` responds back since there's a mismatch from V1_PREFIX. \r\n\r\nWhat usually happens:\r\n1. During inbound connection creation, `TestNode::add_p2p_connection()` calls `P2PConnection::peer_connect()` where an object of `EncryptedP2PState` class is created - this object `v2_state` contains the function `EncryptedP2PState::initiate_v2_handshake()` to send ellswift bytes\r\n2. then the asyncio code to create a connection happens and `connection_made()` is called when the connection is opened\r\n\t- inside `connection_made()`, 64 bytes ellswift is sent using `EncryptedP2PState::initiate_v2_handshake()`\r\n3. When the `TestNode` sends a response, `P2PConnection::data_received()` callback will detect it\r\n\r\n\r\nWhat happens in test:\r\n- there are 2 variables:\r\n1. `send_net_magic` - initially true. after we send magic bytes, `send_net_magic_bytes` is set to false (basically just a switch to send 64 bytes in 2 parts)\r\n2. `can_data_be_received` - initally false - data can't be received until mismatch from V1_PREFIX occurs. after we send remaining mismatched 60 bytes, `can_data_be_received` is set to true.\r\n- since response will be detected on `TestNode`, we add an assertion to make sure `send_net_magic` = false (meaning magic bytes already sent) and `can_data_be_received` = true (meaning mismatched 60 bytes also sent). `TestNode` wouldn't send a response in the intermediate states.\r\n- so the possible states are:\r\n1. initially\r\n\t`send_net_magic` = true, `can_data_be_received` = false (Assertion would fail in `data_received()` but shouldn't happen)\r\n2. after `connection_made()`'s `custom EncryptedP2PState::initiate_v2_handshake()` (TestNode <--4 bytes magic bytes-- P2PInterface)\r\n\t`send_net_magic` = false, `can_data_be_received` = false (Assertion would fail in `data_received()` but shouldn't happen)\r\n3. after `p2p_v2_earlykeyresponse.py` test when we call `custom EncryptedP2PState::initiate_v2_handshake()` explicitly (TestNode <--remaining 60 bytes-- P2PInterface)\r\n\t`send_net_magic` = false, `can_data_be_received` = true (Assertion passes in `data_received()`)",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1812003580",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "unlabeled",
      "id": 10964641008,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKNiyTw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10964641008",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T08:55:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1733127844,
      "node_id": "PRR_kwDOABII585nTW6k",
      "url": null,
      "actor": null,
      "commit_id": "b3c0a54085703932e57369f5b1315b516c172dc4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I had a look at `p2p_v2_earlykeyresponse.py` and it would fail the handshake rarely (but the test still passes because the error is thrown in the p2p thread!).\r\nI could reproduce it by changing `GenerateRandomGarbage()` similar to TheStack above, but this time to large values:\r\n`ret.resize(V2Transport::MAX_GARBAGE_LEN-19);` or larger. I haven't analyzed any further so far.\r\n\r\n[Edit]: Well, it is expected that the handshake fails, because we manipulated our key we'll never find the expected garbage terminator. But it seems confusing to fail with a stack trace / uncaught exception in this case (\"`Fatal error: protocol.data_received() call failed.`\") when this is actually expected to happen.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1733127844",
      "submitted_at": "2023-11-15T23:38:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "commented",
      "id": 1813782523,
      "node_id": "IC_kwDOABII585sHB_7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1813782523",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-16T04:44:56Z",
      "updated_at": "2023-11-16T04:44:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ah, I think if we have an unhandled exception like in my previous post, running the test directly (`python3 p2p_v2_earlykeyresponse.py`) will show success, but if we use the test_runner (`python3 test_runner.py p2p_v2_earlykeyresponse.py`) it will show failure, probably because things were written to stderr. So we need to do something about the case I mentioned above.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1813782523",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11006259238,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKQBjAm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11006259238",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T04:25:37Z"
    },
    {
      "event": "commented",
      "id": 1818210163,
      "node_id": "IC_kwDOABII585sX69z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1818210163",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T04:29:22Z",
      "updated_at": "2023-11-20T04:29:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> But it seems confusing to fail with a stack trace / uncaught exception in this case (\"Fatal error: protocol.data_received() call failed.\") when this is actually expected to happen.\r\n\r\n\r\n<details>\r\n<summary> is this the test log you observed? </summary>\r\n<br>\r\n\r\n```\r\n2023-11-18T13:52:32.976000Z TestFramework (INFO): PRNG seed is: 8699047777059301467\r\n2023-11-18T13:52:32.977000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_70zlmcgr\r\n2023-11-18T13:52:33.535000Z TestFramework (INFO): Sending ellswift bytes in parts to ensure that response from responder is received only when\r\n2023-11-18T13:52:33.536000Z TestFramework (INFO): ellswift bytes have a mismatch from the 16 bytes(network magic followed by \"version\\x00\\x00\\x00\\x00\\x00\")\r\n2023-11-18T13:52:33.536000Z TestFramework (INFO): Sending first 4 bytes of ellswift which match network magic\r\n2023-11-18T13:52:33.536000Z TestFramework (INFO): If a response is received, assertion failure would happen in our custom data_received() function\r\n2023-11-18T13:52:33.587000Z TestFramework (INFO): Sending remaining ellswift and garbage which are different from V1_PREFIX. Since a response is\r\n2023-11-18T13:52:33.587000Z TestFramework (INFO): expected now, our custom data_received() function wouldn't result in assertion failure\r\nFatal error: protocol.data_received() call failed.\r\nprotocol: <__main__.PeerEarlyKey object at 0x7f0d6f6c1060>\r\ntransport: <_SelectorSocketTransport fd=10 read=polling write=<idle, bufsize=0>>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.10/asyncio/selector_events.py\", line 876, in _read_ready__data_received\r\n    self._protocol.data_received(data)\r\n  File \"/home/stratospher/code/bitcoin/test/functional/p2p_v2_earlykeyresponse.py\", line 60, in data_received\r\n    super(PeerEarlyKey, self).data_received(t)\r\n  File \"/home/stratospher/code/bitcoin/test/functional/test_framework/p2p.py\", line 297, in data_received\r\n    self.v2_handshake()\r\n  File \"/home/stratospher/code/bitcoin/test/functional/test_framework/p2p.py\", line 284, in v2_handshake\r\n    raise ValueError(\"invalid v2 mac tag in handshake authentication\")\r\nValueError: invalid v2 mac tag in handshake authentication\r\n2023-11-18T13:52:33.673000Z TestFramework.p2p (WARNING): Connection lost to 127.0.0.1:13882 due to invalid v2 mac tag in handshake authentication\r\n2023-11-18T13:52:33.693000Z TestFramework (INFO): successful disconnection when MITM happens in the key exchange phase\r\n2023-11-18T13:52:33.744000Z TestFramework (INFO): Stopping nodes\r\n2023-11-18T13:52:33.948000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_70zlmcgr on exit\r\n2023-11-18T13:52:33.948000Z TestFramework (INFO): Tests successful\r\n```\r\n</details>\r\n\r\n\r\nthis happened because of the mac tag mismatch in the v2 handshake's authentication. it only got displayed sometimes because the test would finish before the v2 handshake authentication happened.  since we don't need to do v2 handshake authentication/v2 handshake for this test, and just be able to detect when data is received, i've removed the `P2PInterface::data_received()` call which performs the handshake. whenever data is received, `PeerEarlyKey::data_received()` would detect it and do nothing with the received bytes.\r\n\r\n\r\n> I could reproduce it by changing GenerateRandomGarbage() similar to TheStack above, but this time to large values:\r\nret.resize(V2Transport::MAX_GARBAGE_LEN-19); or larger.\r\n\r\noh! i'm not able to reproduce this by changing to large values. Could this be related to the above test log?",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1818210163",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "commented",
      "id": 1819618919,
      "node_id": "IC_kwDOABII585sdS5n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819618919",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T18:46:45Z",
      "updated_at": "2023-11-20T18:46:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> is this the test log you observed?\r\n\r\nYes. Only in ~1% of runs with the previous version, but after changing the garbage size in `net.cpp` to the max I would get it consistently.\r\nI think the reason is that usually bitcoind would terminate the connection (because the python side would wait for more bytes that wouldn't come), but when the garbage was close to the max, the python side would terminate it and throwing the exception.\r\n\r\n> i've removed the P2PInterface::data_received() call which performs the handshake\r\n\r\nThanks, that should fix this issue.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1819618919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "reviewed",
      "id": 1740854829,
      "node_id": "PRR_kwDOABII585nw1Yt",
      "url": null,
      "actor": null,
      "commit_id": "3cfdced3e9ce66de59557972da98e5a2cae809ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1740854829",
      "submitted_at": "2023-11-20T23:17:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11058887465,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKTKTsp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11058887465",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T19:03:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T08:43:35Z",
      "updated_at": "2023-11-27T08:43:35Z",
      "source": {
        "issue": {
          "id": 2011779560,
          "node_id": "I_kwDOId2vBM536VHo",
          "url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/48",
          "repository_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club",
          "labels_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/48/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/48/comments",
          "events_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/48/events",
          "html_url": "https://github.com/Bitshala/BitcoinCore-PR-Review-Club/issues/48",
          "number": 48,
          "state": "open",
          "state_reason": null,
          "title": "[Part 2/2] Functional tests for v2 P2P encryption #24748",
          "body": "# Session details\r\n- Date: 07-12-2023\r\n- Time: IST 20:00 (UTC 14:30)\r\n- PR: [test/BIP324: functional tests for v2 P2P encryption bitcoin/bitcoin#24748](https://github.com/bitcoin/bitcoin/pull/24748)\r\n- Context: `p2p` `test`\r\n- Difficulty: intermediate\r\n- Language: python\r\n\r\n# Learning\r\nThis is the 2nd part for a 2-part review club. The review club will focus on how [PR #24748](https://github.com/bitcoin/bitcoin/pull/24748) modifies the functional test framework in order to make v2 transport protocol work for the python implementation of a node's peer.\r\n\r\n- Functional test framework\r\n- P2P network\r\n> Note: Drop your PR and review related suggestions/thoughts/questions below\r\n\r\n# Summary\r\n-  Developers often want to be able to send their own custom response, introduce malicious behaviour and check if error messages were reported, pause and examine bitcoind process etc. The `P2PInterface` class serves this purpose and mocks the behaviour of a peer. It's written in python and can be easily customised.\r\n- bitcoind instance has support for encrypted transport protocol since [#28331](https://github.com/bitcoin/bitcoin/pull/28331). In order for the `P2PInterface` class to communicate with bitcoind instance using encrypted transport protocol, we need to add support for encrypted transport protocol in `P2PInterface` class. This means introducing:\r\n\t1. [Initial v2 handshake](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki#shared-secret-computation)\r\n\t\t- Currently nodes establish connection with the other node by sending a version message and waiting for a version message and a verack message back from the other node. It then sends a verack back to the peer to establish the connection. This is called a version handshake.\r\n\t\t- With encrypted transport protocol, we even want the version message to be encrypted. So before the version handshake, an advanced form of Diffie-Hellman handshake (called initial v2 handshake) happens so that both nodes have same keystream to encrypt/decrypt P2P messages.\r\n\t2. New P2P message format for encrypting/decrypting P2P messages\r\n\t    - v1 P2P message format\r\n![v1](https://github.com/Bitshala/BitcoinCore-PR-Review-Club/assets/44024636/65cb05a1-8148-4697-966e-ea988f41ef9f)\r\n\t    - v2 P2P message format\r\n![v2](https://github.com/Bitshala/BitcoinCore-PR-Review-Club/assets/44024636/100ce36c-9f98-439a-8b44-dfe02fdf27c1)\r\n\r\n# Questions\r\n1. Describe how the initial v2 handshake works.\r\n\t- see how [`v2_handshake()`](https://github.com/bitcoin/bitcoin/blob/9a6b684becbffd02f24a686b965ada257fa7bfd9/test/functional/test_framework/p2p.py#L235-L283) calls [`initiate_v2_handshake()`](https://github.com/bitcoin/bitcoin/blob/9a6b684becbffd02f24a686b965ada257fa7bfd9/test/functional/test_framework/v2_p2p.py#L110-L112), [`respond_v2_handshake()`](https://github.com/bitcoin/bitcoin/blob/9a6b684becbffd02f24a686b965ada257fa7bfd9/test/functional/test_framework/v2_p2p.py#L114-L127), [`complete_v2_handshake()`](https://github.com/bitcoin/bitcoin/blob/9a6b684becbffd02f24a686b965ada257fa7bfd9/test/functional/test_framework/v2_p2p.py#L129-L146), [`authenticate_v2_handshake()`](https://github.com/bitcoin/bitcoin/blob/9a6b684becbffd02f24a686b965ada257fa7bfd9/test/functional/test_framework/v2_p2p.py#L148-L184)\r\n\t- Why are there 4 different functions?\r\n2. How are inbound connections modified to support v2?\r\n\t- see where version msg get sent.\r\n\t- we need to call the v2 handshake functions before that.\r\n4. How are outbound connections modified to support v2?\r\n\t- see where version msg get sent.\r\n\t- we need to call the v2 handshake functions before that.\r\n5. Has the P2P message size reduced/increased in v2? Does order of sending P2P messages matter in v1/v2 P2P?\r\n6. Why does false advertisement of services which a node can support happen? What happens if we start doing initial v2 handshake with a node which doesn't support encrypted transport protocol? How is backward compatibility maintained?",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 1,
          "created_at": "2023-11-27T08:43:34Z",
          "updated_at": "2023-12-07T05:35:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 11087755977,
      "node_id": "REFE_lADOABII585G_btJzwAAAAKU4brJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11087755977",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "30a055782908702c012bdd5f6a6d41458bf22dfa",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30a055782908702c012bdd5f6a6d41458bf22dfa",
      "created_at": "2023-11-28T19:17:42Z"
    },
    {
      "event": "reviewed",
      "id": 1753471883,
      "node_id": "PRR_kwDOABII585og9uL",
      "url": null,
      "actor": null,
      "commit_id": "b0965e4d1f1b1f7f585a2a2bf78f116f241d5735",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Another round of review - looking good!",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1753471883",
      "submitted_at": "2023-11-28T21:18:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5NTAzODZlYWFmNDFlYzA5NjYwNmRlODFhM2E2MGIyNzhiMTU2ZjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c950386eaaf41ec096606de81a3a60b278b156f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c950386eaaf41ec096606de81a3a60b278b156f0",
      "tree": {
        "sha": "7812d2062adeb6adfaef8f163642a62a1e7b0086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7812d2062adeb6adfaef8f163642a62a1e7b0086"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16b5b4b674414c41f34b0d37e15a16521fb08013",
          "sha": "16b5b4b674414c41f34b0d37e15a16521fb08013",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16b5b4b674414c41f34b0d37e15a16521fb08013"
        }
      ],
      "message": "[rpc/net] Allow v2 p2p support in addconnection\n\nThis test-only RPC is required when a TestNode initiates\nan outbound v2 p2p connection. Add a new arg `v2transport`\nso that the node can attempt v2 connections.",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-29T06:31:19Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-02-04T05:35:23Z"
      },
      "sha": "c950386eaaf41ec096606de81a3a60b278b156f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3ZmIwMjBlNzQ2NTlkZDUyZDY2NDA2MjAwZjY0ODhiMGNlZmExYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67fb020e74659dd52d66406200f6488b0cefa1b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/67fb020e74659dd52d66406200f6488b0cefa1b9",
      "tree": {
        "sha": "29db3c34ff88aa1e18ab0b20a8e43ad5ba434368",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29db3c34ff88aa1e18ab0b20a8e43ad5ba434368"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c950386eaaf41ec096606de81a3a60b278b156f0",
          "sha": "c950386eaaf41ec096606de81a3a60b278b156f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c950386eaaf41ec096606de81a3a60b278b156f0"
        }
      ],
      "message": "[test/crypto] Add ECDH\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-29T06:31:19Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T16:41:46Z"
      },
      "sha": "67fb020e74659dd52d66406200f6488b0cefa1b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRhOTBmMGI0ZWIzZDJkMGMzOTBiMTc1N2M2Yjk4N2MxZTczN2U0OTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da90f0b4eb3d2d0c390b1757c6b987c1e737e498",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/da90f0b4eb3d2d0c390b1757c6b987c1e737e498",
      "tree": {
        "sha": "f66eae5b344189ca2d5cc49a91a0aa03766eba63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f66eae5b344189ca2d5cc49a91a0aa03766eba63"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67fb020e74659dd52d66406200f6488b0cefa1b9",
          "sha": "67fb020e74659dd52d66406200f6488b0cefa1b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/67fb020e74659dd52d66406200f6488b0cefa1b9"
        }
      ],
      "message": "[test] Move MAGIC_BYTES to messages.py\n\nThis avoids circular dependency happening when importing MAGIC_BYTES.\nBefore,\n\tp2p.py <--import for EncryptedP2PState-- v2_p2p.py\n\t  |\t\t\t\t\t    ^\n\t  |\t\t\t\t            |\n\t  └---------import for MAGIC_BYTES----------┘\nNow, MAGIC_BYTES are kept separately in messages.py\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-29T06:31:19Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-15T05:08:40Z"
      },
      "sha": "da90f0b4eb3d2d0c390b1757c6b987c1e737e498"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11098627968,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKVh5-A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11098627968",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:16:44Z"
    },
    {
      "event": "commented",
      "id": 1832239855,
      "node_id": "IC_kwDOABII585tNcLv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832239855",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:20:40Z",
      "updated_at": "2023-11-29T16:20:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "thanks @mzumsande for the really great feedback! I’ve rebased on master since #28805 is merged and updated the PR to address your comments.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1832239855",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "mentioned",
      "id": 11098678934,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKViGaW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11098678934",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:20:40Z"
    },
    {
      "event": "subscribed",
      "id": 11098678979,
      "node_id": "SE_lADOABII585G_btJzwAAAAKViGbD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11098678979",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:20:40Z"
    },
    {
      "event": "labeled",
      "id": 11099615923,
      "node_id": "LE_lADOABII585G_btJzwAAAAKVlrKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11099615923",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T17:42:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1755780494,
      "node_id": "PRR_kwDOABII585opxWO",
      "url": null,
      "actor": null,
      "commit_id": "70830539d17ba7ab5c17489597ba1bf9fadff6ac",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Left some comments below from the latest review round, mostly nits. I think another small check to add in the newly introduced functional test could be to verify that a `P2PConnection`'s session id matches the one from the node, as returned via `getpeerinfo()`.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1755780494",
      "submitted_at": "2023-11-29T18:22:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "reviewed",
      "id": 1755965923,
      "node_id": "PRR_kwDOABII585oqenj",
      "url": null,
      "actor": null,
      "commit_id": "47e72daf656ea6dc6766f71e5c8bda5717dc5362",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1755965923",
      "submitted_at": "2023-11-29T18:37:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11104246665,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKV3VuJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11104246665",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T05:06:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11104257891,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKV3Ydj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11104257891",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T05:08:21Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlMDcwNTg3MTQ1YTMwNzQ3NzMyOGJkMzEzYjJlZWJmNzJkM2EyMDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e070587145a307477328bd313b2eebf72d3a208",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e070587145a307477328bd313b2eebf72d3a208",
      "tree": {
        "sha": "fd5b3ffbc6fc912fa239c562e83bf0dff0c8836e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd5b3ffbc6fc912fa239c562e83bf0dff0c8836e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da90f0b4eb3d2d0c390b1757c6b987c1e737e498",
          "sha": "da90f0b4eb3d2d0c390b1757c6b987c1e737e498",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/da90f0b4eb3d2d0c390b1757c6b987c1e737e498"
        }
      ],
      "message": "[test] Construct class to handle v2 P2P protocol functions\n\nThe class `EncryptedP2PState` stores the 4 32-byte keys, session id,\ngarbage terminators, whether it's an initiator/responder, whether the\ninitial handshake has been completed etc.. It also contains functions\nto perform the v2 handshake and to encrypt/decrypt p2p v2 messages.\n\n- In an inbound connection to TestNode, P2PConnection is the initiator\nand `initiate_v2_handshake()`, `complete_handshake()`, `authenticate_handshake()`\nare called on it. [ TestNode <----------------- P2PConnection ]\n\n- In an outbound connection from TestNode, P2PConnection is the responder\nand `respond_v2_handshake()`, `complete_handshake()`, `authenticate_handshake()`\nare called on it. [ TestNode -----------------> P2PConnection ]",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:58Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-11T13:38:47Z"
      },
      "sha": "1e070587145a307477328bd313b2eebf72d3a208"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUzNzhkOGFmMTRlMzAyZmIzNDkwMGM0MDNkNjk4NDQ1YWRlNWY1ODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e378d8af14e302fb34900c403d698445ade5f582",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e378d8af14e302fb34900c403d698445ade5f582",
      "tree": {
        "sha": "5bcfd6ce091e587b93095a07bc246bce33a64fc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5bcfd6ce091e587b93095a07bc246bce33a64fc7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e070587145a307477328bd313b2eebf72d3a208",
          "sha": "1e070587145a307477328bd313b2eebf72d3a208",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e070587145a307477328bd313b2eebf72d3a208"
        }
      ],
      "message": "[test] Introduce EncryptedP2PState object in P2PConnection\n\nInstantiate this object when the connection supports v2 P2P transport\nprotocol.\n\n- When a P2PConnection is opened, perform initiate_v2_handshake() if the\nconnection is an initiator. application layer messages are only sent after\nthe initial v2 handshake is over (for both initiator and responder).",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-02-05T16:41:02Z"
      },
      "sha": "e378d8af14e302fb34900c403d698445ade5f582"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGExNGVlMzVkNzdlZTQ5ODAzOTUyNmZiZmQyYTZjNDg1Njk0ZjAwZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a14ee35d77ee498039526fbfd2a6c485694f00fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a14ee35d77ee498039526fbfd2a6c485694f00fa",
      "tree": {
        "sha": "d92fc7a63646e08b5b34731a33d598afe2c02041",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d92fc7a63646e08b5b34731a33d598afe2c02041"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e378d8af14e302fb34900c403d698445ade5f582",
          "sha": "e378d8af14e302fb34900c403d698445ade5f582",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e378d8af14e302fb34900c403d698445ade5f582"
        }
      ],
      "message": "[test] Perform initial v2 handshake",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-02-05T17:38:49Z"
      },
      "sha": "a14ee35d77ee498039526fbfd2a6c485694f00fa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0MTg3YWZlYTE5Mjg0ZjFjY2Y1NzYzMjFhNTdmZjE4YjZlMmIxZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74187afea19284f1ccf576321a57ff18b6e2b1d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/74187afea19284f1ccf576321a57ff18b6e2b1d0",
      "tree": {
        "sha": "e7c28d55b4f1d5e8f02f9f945bca64a585485363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7c28d55b4f1d5e8f02f9f945bca64a585485363"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a14ee35d77ee498039526fbfd2a6c485694f00fa",
          "sha": "a14ee35d77ee498039526fbfd2a6c485694f00fa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a14ee35d77ee498039526fbfd2a6c485694f00fa"
        }
      ],
      "message": "[test] Read v2 P2P messages",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-12-10T18:52:20Z"
      },
      "sha": "74187afea19284f1ccf576321a57ff18b6e2b1d0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjMjZhODYyYjA2MjU3Y2U5MjJiNTg2YWM1YTc3NTFlNjFlNDVlNGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc26a862b06257ce922b586ac5a7751e61e45e4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc26a862b06257ce922b586ac5a7751e61e45e4b",
      "tree": {
        "sha": "345ed68bf138c840b1ce3fced67e90c0a753a5a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/345ed68bf138c840b1ce3fced67e90c0a753a5a8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74187afea19284f1ccf576321a57ff18b6e2b1d0",
          "sha": "74187afea19284f1ccf576321a57ff18b6e2b1d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/74187afea19284f1ccf576321a57ff18b6e2b1d0"
        }
      ],
      "message": "[test] Use lock for sending P2P messages in test framework\n\nMessages are built, encrypted and sent over the socket in v2\nconnections. If a race condition happens between python's main\nthread and p2p thread with both of them trying to send a message,\nit's possible that the messages get encrypted with wrong keystream.\n\nMessages are built and sent over the socket in v1 connections.\nSo there's no problem if messages are sent in the wrong order.\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\nCo-authored-by: theStack <sebastian.falbesoner@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-24T18:25:44Z"
      },
      "sha": "bc26a862b06257ce922b586ac5a7751e61e45e4b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyYzg0ODA2ZGIwZjVjOGRmYWRhOGM0NTg2ODAyMTdjMTEwNDUyZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82c84806db0f5c8dfada8c458680217c110452ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82c84806db0f5c8dfada8c458680217c110452ec",
      "tree": {
        "sha": "0e0fbf23ca9c8a083ec7deda59311ebcfd9018c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e0fbf23ca9c8a083ec7deda59311ebcfd9018c1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc26a862b06257ce922b586ac5a7751e61e45e4b",
          "sha": "bc26a862b06257ce922b586ac5a7751e61e45e4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc26a862b06257ce922b586ac5a7751e61e45e4b"
        }
      ],
      "message": "[test] Build v2 P2P messages",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:36:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-02-05T17:58:02Z"
      },
      "sha": "82c84806db0f5c8dfada8c458680217c110452ec"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhMzFjOWJkZWMyMjU0NGI1YTA3Mzg3NzU3Yzc2OGU5ODFlYjg0ZjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a31c9bdec22544b5a07387757c768e981eb84f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a31c9bdec22544b5a07387757c768e981eb84f0",
      "tree": {
        "sha": "67207da7aa7732fe25d5e3bfa692014b3db615ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67207da7aa7732fe25d5e3bfa692014b3db615ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82c84806db0f5c8dfada8c458680217c110452ec",
          "sha": "82c84806db0f5c8dfada8c458680217c110452ec",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82c84806db0f5c8dfada8c458680217c110452ec"
        }
      ],
      "message": " [test] Reconnect using v1 P2P when v2 P2P terminates due to magic byte mismatch\n\n- When a v2 TestNode makes an outbound connection to a P2PInterface node\nwhich doesn't support v2 but is advertised as v2 by some malicious\nintermediary, the TestNode sends 64 bytes ellswift. The v1 node doesn't\nunderstand this and disconnects. Then the v2 TestNode reconnects by\nsending a v1/version message.",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-12-10T06:42:37Z"
      },
      "sha": "4a31c9bdec22544b5a07387757c768e981eb84f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmNDA2ZmRlY2MxZDhlZDRlMjA0OWJiMjU2ZTMwNjRkNTAwYmU5OGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff406fdecc1d8ed4e2049bb256e3064d500be98d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff406fdecc1d8ed4e2049bb256e3064d500be98d",
      "tree": {
        "sha": "ebf62034b9a86492feca732a996b1f89e6bf9936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebf62034b9a86492feca732a996b1f89e6bf9936"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a31c9bdec22544b5a07387757c768e981eb84f0",
          "sha": "4a31c9bdec22544b5a07387757c768e981eb84f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a31c9bdec22544b5a07387757c768e981eb84f0"
        }
      ],
      "message": "[test] Allow inbound and outbound connections supporting v2 P2P protocol\n\n- Add an optional `supports_v2_p2p` parameter to specify if the inbound\nand outbound connections support v2 P2P protocol.\n- In the `addconnection_callback` which gets called when creating\noutbound connections, call the `addconnection` RPC with v2 P2P protocol\nsupport enabled.",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-02-05T18:19:47Z"
      },
      "sha": "ff406fdecc1d8ed4e2049bb256e3064d500be98d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGExNjliNGJlYjU3ZjdlOTgyZmVhNDY2YzFlNjU5NjRhZDc2Mjc2OWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a169b4beb57f7e982fea466c1e65964ad762769f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a169b4beb57f7e982fea466c1e65964ad762769f",
      "tree": {
        "sha": "58f354e22bbad016f5612aeee69accf60693fc0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58f354e22bbad016f5612aeee69accf60693fc0c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff406fdecc1d8ed4e2049bb256e3064d500be98d",
          "sha": "ff406fdecc1d8ed4e2049bb256e3064d500be98d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff406fdecc1d8ed4e2049bb256e3064d500be98d"
        }
      ],
      "message": "[test] Ignore BIP324 decoy messages\n\nAlso allow P2PConnection::send_message() to send decoy messages for\nwriting tests.",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-12-10T14:42:51Z"
      },
      "sha": "a169b4beb57f7e982fea466c1e65964ad762769f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVmZGZiMjA1YjZhYjc2YjI4MDhmZjc5YTc3ODg4OTU0ZDUxOTc3ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fdfb205b6ab76b2808ff79a77888954d51977dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5fdfb205b6ab76b2808ff79a77888954d51977dd",
      "tree": {
        "sha": "69e46ecfd738834af0745e999b3ba8f052e21512",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69e46ecfd738834af0745e999b3ba8f052e21512"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a169b4beb57f7e982fea466c1e65964ad762769f",
          "sha": "a169b4beb57f7e982fea466c1e65964ad762769f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a169b4beb57f7e982fea466c1e65964ad762769f"
        }
      ],
      "message": "[test] Add functional tests to test v2 P2P behaviour",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-12-10T05:07:51Z"
      },
      "sha": "5fdfb205b6ab76b2808ff79a77888954d51977dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1NDk5ZmNiMWMzODdiZjZlMDhlMDcwM2VmYjBiYzRmZTM5MGY1ZmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05499fcb1c387bf6e08e0703efb0bc4fe390f5ff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/05499fcb1c387bf6e08e0703efb0bc4fe390f5ff",
      "tree": {
        "sha": "bcd1f6a0aa0e49ec1f1670d6a16e401d65540566",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcd1f6a0aa0e49ec1f1670d6a16e401d65540566"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fdfb205b6ab76b2808ff79a77888954d51977dd",
          "sha": "5fdfb205b6ab76b2808ff79a77888954d51977dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5fdfb205b6ab76b2808ff79a77888954d51977dd"
        }
      ],
      "message": "[test] Check whether v2 TestNode performs downgrading",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-08T13:44:22Z"
      },
      "sha": "05499fcb1c387bf6e08e0703efb0bc4fe390f5ff"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0NzlhOTljYzkyYzc5NjYyNjY4MDRlOGMzMzMzOGNlYmJjNDRmYmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f479a99cc92c7966266804e8c33338cebbc44fbc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f479a99cc92c7966266804e8c33338cebbc44fbc",
      "tree": {
        "sha": "16f667078e83f8d92c77734e51aad56d6b90f214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16f667078e83f8d92c77734e51aad56d6b90f214"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05499fcb1c387bf6e08e0703efb0bc4fe390f5ff",
          "sha": "05499fcb1c387bf6e08e0703efb0bc4fe390f5ff",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/05499fcb1c387bf6e08e0703efb0bc4fe390f5ff"
        }
      ],
      "message": "[test] Add functional test to test early key response behaviour in BIP 324\n\n- A node initiates a v2 connection by sending 64 bytes ellswift\n- In BIP 324 \"The responder waits until one byte is received which does not match the\n  V1_PREFIX (16 bytes consisting of the network magic followed by \"version\\x00\\x00\\x00\\x00\\x00\".)\"\n- It's possible that the 64 bytes ellswift sent by an initiator starts with a prefix of V1_PREFIX\n- Example form of 64 bytes ellswift could be:\n\t4 bytes network magic + 60 bytes which aren't prefixed with remaining V1_PREFIX\n- We test this behaviour:\n\t- when responder receives 4 byte network magic -> no response received by initiator\n\t- when first mismatch happens -> response received by initiator",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-11-30T05:37:00Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-12-10T05:08:31Z"
      },
      "sha": "f479a99cc92c7966266804e8c33338cebbc44fbc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11104413857,
      "node_id": "HRFPE_lADOABII585G_btJzwAAAAKV3-ih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11104413857",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T05:37:15Z"
    },
    {
      "event": "unlabeled",
      "id": 11104653890,
      "node_id": "UNLE_lADOABII585G_btJzwAAAAKV45JC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11104653890",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T06:16:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1833222343,
      "node_id": "IC_kwDOABII585tRMDH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1833222343",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T07:11:24Z",
      "updated_at": "2023-11-30T07:11:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "thanks @theStack, @mzumsande! I've updated the PR to address your comments.\r\nAlso made this change to `MSGTYPE_TO_SHORTID` construction because of `lint-python.py` failure in the CI\r\n\r\n```diff\r\ndiff --git a/test/functional/test_framework/v2_p2p.py b/test/functional/test_framework/v2_p2p.py\r\nindex fe44351a13..b4efd1ac58 100644\r\n--- a/test/functional/test_framework/v2_p2p.py\r\n+++ b/test/functional/test_framework/v2_p2p.py\r\n@@ -55,7 +55,7 @@ SHORTID = {\r\n }\r\n \r\n # Dictionary which contains short message type ID for the P2P message\r\n-MSGTYPE_TO_SHORTID = dict(map(reversed, SHORTID.items()))\r\n+MSGTYPE_TO_SHORTID = {msgtype: shortid for shortid, msgtype in SHORTID.items()}\r\n \r\n \r\n class EncryptedP2PState:\r\n```",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#issuecomment-1833222343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748"
    },
    {
      "event": "mentioned",
      "id": 11105027120,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKV6UQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11105027120",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T07:11:24Z"
    },
    {
      "event": "subscribed",
      "id": 11105027139,
      "node_id": "SE_lADOABII585G_btJzwAAAAKV6URD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11105027139",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T07:11:25Z"
    },
    {
      "event": "mentioned",
      "id": 11105027156,
      "node_id": "MEE_lADOABII585G_btJzwAAAAKV6URU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11105027156",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T07:11:25Z"
    },
    {
      "event": "subscribed",
      "id": 11105027170,
      "node_id": "SE_lADOABII585G_btJzwAAAAKV6URi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11105027170",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T07:11:25Z"
    },
    {
      "event": "reviewed",
      "id": 1768762854,
      "node_id": "PRR_kwDOABII585pbS3m",
      "url": null,
      "actor": null,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f479a99cc92c7966266804e8c33338cebbc44fbc\r\n\r\nI have reviewed the code. I did some testing / gained more confidence that it works well by having a [branch](https://github.com/mzumsande/bitcoin/tree/tmp_bip324_fixalltests) where, with some adjustments, the python v2 p2p module is used for the entire functional test suite.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1768762854",
      "submitted_at": "2023-12-06T22:47:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "review_requested",
      "id": 11174464196,
      "node_id": "RRE_lADOABII585G_btJzwAAAAKaDMrE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11174464196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T22:47:56Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11174464388,
      "node_id": "RRE_lADOABII585G_btJzwAAAAKaDMuE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11174464388",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T22:47:56Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11174464566,
      "node_id": "RRE_lADOABII585G_btJzwAAAAKaDMw2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11174464566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T22:47:57Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T23:12:38Z",
      "updated_at": "2023-12-06T23:12:38Z",
      "source": {
        "issue": {
          "id": 2029503846,
          "node_id": "PR_kwDOABII585hWxlj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29016",
          "number": 29016,
          "state": "open",
          "state_reason": null,
          "title": "RPC: add new `listmempooltransactions`",
          "body": "## Proposed Update\r\n\r\nAdd a new RPC endpoint, `listmempooltransactions`. Takes as args a `start_sequence` and `verbose`.\r\n\r\nReturns: \r\n- if verbose false, list of txids + their `entry_sequence` where each entry's `entry_sequence` >= the provided `start_sequence.\r\n- if verbose true, raw tx output info including each entry's `entry_sequence`.\r\n\r\n\r\nBuilds on work done in #19572.\r\n\r\n## Rationale\r\nThe current mempool RPCs are lacking an ability to scan for updates in a more efficient manner. You can subscribe for updates via the ZMQ pipeline, but even this is inefficient to recover from if your consumer app falls offline.\r\n\r\nZMQ also is a push protocol, and doesn't provide a rate-limiting mechanism.\r\n\r\nIn the case of core-lightning, we don't assume access to bitcoin-core/ZMQ, so we're unable to do efficient mempool querying. There have been some recent CVEs come to light where having optional access to mempool updates may prove useful.\r\n\r\nPaging, filtering by last seen, and the addition of full tx data in the call makes mempool data more readily available to any client app. This is good for self-sovereignty as it reduces the need for additional dependencies and app data sources to efficiently query and parse mempool data. \r\n\r\n\r\n## Other Things I Considered\r\nMy initial attempt at this modified `getrawmempool` to \r\n- take a `start_sequence` to allow for filtering, and\r\n- adding the txdata (inputs outpoints + outputs (amount + scriptPubKeys)). \r\n\r\nThat was pretty ugly however, given that the current data model for `getrawmempool` is around a concept of \"mempool entry\" data. This returns transaction data (and does not report on information about other mempool dependencies etc; for that you should still call `getrawmempool` or `getmempoolentry`). \r\n\r\nYou could add a `start_sequence` to the existing `getrawmempool` to help with entry data paging/querying but that's secondary to my goals for fetching relevant txdata from the mempool.\r\n\r\n## Additions/Changes\r\n\r\nThis PR could be further improved by\r\n- Add a `page_size` argument which allows a calling application to limit the number of results returned.\r\n\r\n\r\n## Future Work\r\nThe current RPC only supports finding *added* mempool transactions. It'd be interesting to experiment with keeping track of evicted/not mined transactions and adding them to the results.\r\n\r\nThis would require:\r\n- An additional memory buffer (perhaps a configurable memory limited ring buffer?) for evicted tx data and the mempool sequence of the eviction.\r\n- Adding a `sequence_action` field for results, which indicates whether the sequence is for the tx's `addition` or `eviction`.\r\n\r\nYou could also keep track of tx movements into blocks, but this seems less useful/urgent in general.\r\n\r\n## Usage\r\nYou can see an example of this implemented and used in CLN for finding paid onchain invoices in this branch: https://github.com/ElementsProject/lightning/compare/master...niftynei:lightning:nifty/mempool-scan\r\n\r\nNote that the CLN implementation doesn't currently keep the mempool_sequence in disk, so it'll reload/rescan the mempool at start. This *may* be desirable?\r\n\r\nHere's how a caller would use this\r\n\r\n```\r\n1) start node\r\n2) listmempooltransactions 0 to get backlog\r\n3) call listmempooltransactions again with `start_sequence` set to `mempool_sequence` result from last call\r\n```\r\n\r\nNote that this works well with ZMQ as the `mempool_sequence` number is identical.",
          "user": {
            "login": "niftynei",
            "id": 1097769,
            "node_id": "MDQ6VXNlcjEwOTc3Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niftynei",
            "html_url": "https://github.com/niftynei",
            "followers_url": "https://api.github.com/users/niftynei/followers",
            "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
            "organizations_url": "https://api.github.com/users/niftynei/orgs",
            "repos_url": "https://api.github.com/users/niftynei/repos",
            "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/niftynei/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29016",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29016.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29016.patch"
          },
          "created_at": "2023-12-06T22:32:25Z",
          "updated_at": "2023-12-11T21:36:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1770812972,
      "node_id": "PRR_kwDOABII585pjHYs",
      "url": null,
      "actor": null,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Halfway through.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1770812972",
      "submitted_at": "2023-12-07T19:37:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "reviewed",
      "id": 1771245412,
      "node_id": "PRR_kwDOABII585pkw9k",
      "url": null,
      "actor": null,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#pullrequestreview-1771245412",
      "submitted_at": "2023-12-08T00:01:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
    },
    {
      "event": "review_requested",
      "id": 11188086065,
      "node_id": "RRE_lADOABII585G_btJzwAAAAKa3KUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11188086065",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T00:01:32Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T21:22:53Z",
      "updated_at": "2023-12-11T21:22:53Z",
      "source": {
        "issue": {
          "id": 2036429651,
          "node_id": "PR_kwDOABII585huQZ6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
          "number": 29054,
          "state": "open",
          "state_reason": null,
          "title": "wallet: reenable sethdseed for descriptor wallets",
          "body": "Enable `sethdseed` for descriptor wallets. To be able to use `createwalletdescriptor` with the other address types, we need a way to change the wallet extended key, and so `sethdseed` has been updated and enabled for descriptor wallets. As with legacy wallets, when called without parameters, it will generate a new random master key for the wallet. It can also take a xprv and set that as the master key. It still takes a BIP 32 seed as WIF or as hex as we do for legacy wallets. The seed will be transformed into and stored as a BIP 32 extended key. The latter is to give us greater compatibility with other wallets which often produce non-WIF HD seeds.\r\n\r\nSplit from #25907",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29054",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29054.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29054.patch"
          },
          "created_at": "2023-12-11T20:00:27Z",
          "updated_at": "2023-12-11T22:37:27Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320700971",
      "pull_request_review_id": 1618745079,
      "id": 1320700971,
      "node_id": "PRRC_kwDOABII585OuEwr",
      "diff_hunk": "@@ -598,6 +598,11 @@ def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n         self.wait_until(test_function, timeout=timeout, check_connected=False)\n \n+    def wait_for_reconnect(self, timeout=60):",
      "path": "test/functional/test_framework/p2p.py",
      "position": 325,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e18b22d: in an outbound connection, `TestNode` -----> `P2PConnection` where `P2PConnection` doesn't actually support v2 P2P but is advertised to support v2 P2P (false advertisement), we need to wait for the `TestNode` to reconnect using v1 P2P.\r\n\r\nThis `wait_for_reconnect()` function won't work always since race conditions are possible. Anyone has a better idea on how this can be done? ",
      "created_at": "2023-09-10T06:13:21Z",
      "updated_at": "2023-09-10T06:13:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1320700971",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320700971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320788959",
      "pull_request_review_id": 1618844751,
      "id": 1320788959,
      "node_id": "PRRC_kwDOABII585OuaPf",
      "diff_hunk": "@@ -598,6 +598,11 @@ def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n         self.wait_until(test_function, timeout=timeout, check_connected=False)\n \n+    def wait_for_reconnect(self, timeout=60):",
      "path": "test/functional/test_framework/p2p.py",
      "position": 325,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "in_reply_to_id": 1320700971,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the race condition? I expect you should always still observe a v2 connection, a v2 disconnect, and a v1 connect.\r\n\r\nFWIW, the reason why the reconnect is done asynchronously is to avoid making a P2P connection (which can take seconds, or up to a minute) inside the normal network thread (as that'd prevent us from receiving anything from any other peer at the same time).",
      "created_at": "2023-09-10T15:26:39Z",
      "updated_at": "2023-09-10T15:26:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1320788959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320788959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320795432",
      "pull_request_review_id": 1618850256,
      "id": 1320795432,
      "node_id": "PRRC_kwDOABII585Oub0o",
      "diff_hunk": "@@ -598,6 +598,11 @@ def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n         self.wait_until(test_function, timeout=timeout, check_connected=False)\n \n+    def wait_for_reconnect(self, timeout=60):",
      "path": "test/functional/test_framework/p2p.py",
      "position": 325,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "in_reply_to_id": 1320700971,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ideally, first `wait_for_connect` waits on v2 connection and the `wait_for_connect` a few lines below waits for v1 connection.\r\n\r\nit's possible that the v2 reconnection happens quickly and the first `wait_for_connect` detects a v2 connection directly. Then we'd be stuck waiting for disconnect and connect (in the lines below) to happen (even though it has already happened).",
      "created_at": "2023-09-10T16:13:14Z",
      "updated_at": "2023-09-10T16:13:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1320795432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320795432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349750146",
      "pull_request_review_id": 1663408774,
      "id": 1349750146,
      "node_id": "PRRC_kwDOABII585Qc42C",
      "diff_hunk": "@@ -1913,7 +1913,11 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\n     CSemaphoreGrant grant(*semOutbound, true);\n     if (!grant) return false;\n \n-    OpenNetworkConnection(CAddress(), false, std::move(grant), address.c_str(), conn_type, /*use_v2transport=*/false);\n+    CAddress addr(CService(), NODE_NONE);\n+    if (use_v2transport) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "4084fe0c4c95aa4385e91512291ea756cec73c71",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updating the address is no longer necessary with the latest `net` code, just passing the bool should be enough.",
      "created_at": "2023-10-08T17:29:06Z",
      "updated_at": "2023-10-09T04:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1349750146",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349750146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349828896",
      "pull_request_review_id": 1663408774,
      "id": 1349828896,
      "node_id": "PRRC_kwDOABII585QdMEg",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 96,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a7478eab51c156519885673aff9efeaa95504bd3",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here, and in `respond_v2_handshake`: This should probably be something like\r\n\r\n```\r\ndef initiate_v2_handshake(self, garbage_len=None):\r\n    if garbage_len is None:\r\n        garbage_len = random.randrange(4096)\r\n```\r\nBecause default args are determined when the function is defined (and not when it's called), otherwise \r\n1) the provided `--randomseed` isn't used, making runs non-deterministic.\r\n2) multiple calls to `initiate_v2_handshake` within one program run will all use the same `garbage_len`.",
      "created_at": "2023-10-09T02:50:41Z",
      "updated_at": "2023-10-09T04:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1349828896",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349828896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349847429",
      "pull_request_review_id": 1663408774,
      "id": 1349847429,
      "node_id": "PRRC_kwDOABII585QdQmF",
      "diff_hunk": "@@ -598,6 +598,11 @@ def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n         self.wait_until(test_function, timeout=timeout, check_connected=False)\n \n+    def wait_for_reconnect(self, timeout=60):",
      "path": "test/functional/test_framework/p2p.py",
      "position": 325,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "in_reply_to_id": 1320700971,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe it would work just not checking for the racy intermediate states, but instead waiting until we have received the \"version\" message via v1? Something like\r\n\r\n ```\r\ndef test_function():\r\n     if not (self.is_connected and self.last_message.get('version') and self.v2_state is None):\r\n         return False\r\n     return True\r\nself.wait_until(test_function, timeout=timeout, check_connected=False  )\r\n```",
      "created_at": "2023-10-09T04:05:43Z",
      "updated_at": "2023-10-09T04:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1349847429",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349847429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350368094",
      "pull_request_review_id": 1664551055,
      "id": 1350368094,
      "node_id": "PRRC_kwDOABII585QfPte",
      "diff_hunk": "@@ -1913,7 +1913,11 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\n     CSemaphoreGrant grant(*semOutbound, true);\n     if (!grant) return false;\n \n-    OpenNetworkConnection(CAddress(), false, std::move(grant), address.c_str(), conn_type, /*use_v2transport=*/false);\n+    CAddress addr(CService(), NODE_NONE);\n+    if (use_v2transport) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "4084fe0c4c95aa4385e91512291ea756cec73c71",
      "in_reply_to_id": 1349750146,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks! done.",
      "created_at": "2023-10-09T14:15:20Z",
      "updated_at": "2023-10-09T14:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1350368094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350368094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350368582",
      "pull_request_review_id": 1664551886,
      "id": 1350368582,
      "node_id": "PRRC_kwDOABII585QfP1G",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 96,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a7478eab51c156519885673aff9efeaa95504bd3",
      "in_reply_to_id": 1349828896,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "interesting, done. i've removed `garbage_len` from the function parameter list since the call sites wouldn't need to set `garbage_len` value.",
      "created_at": "2023-10-09T14:15:46Z",
      "updated_at": "2023-10-09T14:15:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1350368582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350368582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350370031",
      "pull_request_review_id": 1664554329,
      "id": 1350370031,
      "node_id": "PRRC_kwDOABII585QfQLv",
      "diff_hunk": "@@ -598,6 +598,11 @@ def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n         self.wait_until(test_function, timeout=timeout, check_connected=False)\n \n+    def wait_for_reconnect(self, timeout=60):",
      "path": "test/functional/test_framework/p2p.py",
      "position": 325,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e18b22d34e5b2c56c2ca7717ce15158b3d519a41",
      "in_reply_to_id": 1320700971,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good idea! that should work.",
      "created_at": "2023-10-09T14:17:00Z",
      "updated_at": "2023-10-09T14:17:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1350370031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350370031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350924659",
      "pull_request_review_id": 1665480038,
      "id": 1350924659,
      "node_id": "PRRC_kwDOABII585QhXlz",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 133,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that all the decoy packets should pass `ignore=True` as an arg to `v2_enc_packet`.",
      "created_at": "2023-10-09T22:40:31Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1350924659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350924659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353141062",
      "pull_request_review_id": 1665480038,
      "id": 1353141062,
      "node_id": "PRRC_kwDOABII585Qp0tG",
      "diff_hunk": "@@ -1209,13 +1209,14 @@ class CConnman\n      * @param[in]   address     Address of node to try connecting to\n      * @param[in]   conn_type   ConnectionType::OUTBOUND, ConnectionType::BLOCK_RELAY,\n      *                          ConnectionType::ADDR_FETCH or ConnectionType::FEELER\n+     * @param[in]   use_v2transport  Set to true if node supports BIP324 v2 transport protocol",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd prefer to explain what it actually does - (attempt to) connect using the v2 transport protocol.",
      "created_at": "2023-10-10T18:46:50Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353141062",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353141062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353143252",
      "pull_request_review_id": 1665480038,
      "id": 1353143252,
      "node_id": "PRRC_kwDOABII585Qp1PU",
      "diff_hunk": "@@ -357,6 +357,7 @@ static RPCHelpMan addconnection()\n         {\n             {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n             {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open (\\\"outbound-full-relay\\\", \\\"block-relay-only\\\", \\\"addr-fetch\\\" or \\\"feeler\\\").\"},\n+            {\"v2transport\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Node supports BIP324 v2 transport protocol\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same here: connect with v2 transport protocol; we might choose to not pass `v2transport=True` with this rpc even if the node supports v2 transport.",
      "created_at": "2023-10-10T18:47:26Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353143252",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353143252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353156113",
      "pull_request_review_id": 1665480038,
      "id": 1353156113,
      "node_id": "PRRC_kwDOABII585Qp4YR",
      "diff_hunk": "@@ -388,11 +389,12 @@ static RPCHelpMan addconnection()\n     } else {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, self.ToString());\n     }\n+    bool use_v2transport = !request.params[2].isNull() && request.params[2].get_bool();",
      "path": "src/rpc/net.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could return an error if `-v2transport` for the node is not enabled but `use_v2transport` is chosen (similar to the way it's done in `addnode`).",
      "created_at": "2023-10-10T18:50:31Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353156113",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353156113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353183494",
      "pull_request_review_id": 1665480038,
      "id": 1353183494,
      "node_id": "PRRC_kwDOABII585Qp_EG",
      "diff_hunk": "@@ -1880,7 +1880,7 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\n     RandAddEvent((uint32_t)id);\n }\n \n-bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n+bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type, bool use_v2transport = false)",
      "path": "src/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9810e96c74380a3087b2b576508581380019872f:\r\nCommit message needs an update (remove the service bit flags part)",
      "created_at": "2023-10-10T18:59:49Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353183494",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353183494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1836,
      "original_line": 1836,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353263820",
      "pull_request_review_id": 1665480038,
      "id": 1353263820,
      "node_id": "PRRC_kwDOABII585QqSrM",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 96,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a7478eab51c156519885673aff9efeaa95504bd3",
      "in_reply_to_id": 1349828896,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! The fix made it into the wrong commit (should be in \"Construct class to handle v2 P2P protocol functions\", it's one commit later).",
      "created_at": "2023-10-10T20:03:42Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353263820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353263820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353384798",
      "pull_request_review_id": 1665480038,
      "id": 1353384798,
      "node_id": "PRRC_kwDOABII585QqwNe",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't\n+                    if length == LENGTH_FIELD_LEN + HEADER_LEN + CHACHA20POLY1305_EXPANSION:\n+                        self.tried_v2_handshake = True\n+                        return processed_length, True\n+                    response = response[length:]\n+            else:\n+                # don't update recvbuf since more bytes need to be received\n+                if len(response) == 0:\n+                    return 0, True\n+                received_garbage += response[:1]\n+                processed_length += 1\n+                response = response[1:]\n+        # disconnect since garbage terminator was not seen after 4 KiB of garbage.\n+        return processed_length, False\n+\n+    def initialize_v2_transport(self, ecdh_secret):\n+        \"\"\"Return a peer object with various BIP324 derived keys and ciphers.\"\"\"",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 178,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this function doesn't return anything, it sets the `peer` class member.",
      "created_at": "2023-10-10T20:56:28Z",
      "updated_at": "2023-10-10T22:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1353384798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1353384798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355307964",
      "pull_request_review_id": 1671747731,
      "id": 1355307964,
      "node_id": "PRRC_kwDOABII585QyFu8",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't\n+                    if length == LENGTH_FIELD_LEN + HEADER_LEN + CHACHA20POLY1305_EXPANSION:\n+                        self.tried_v2_handshake = True\n+                        return processed_length, True\n+                    response = response[length:]\n+            else:\n+                # don't update recvbuf since more bytes need to be received\n+                if len(response) == 0:\n+                    return 0, True\n+                received_garbage += response[:1]\n+                processed_length += 1\n+                response = response[1:]\n+        # disconnect since garbage terminator was not seen after 4 KiB of garbage.\n+        return processed_length, False\n+\n+    def initialize_v2_transport(self, ecdh_secret):\n+        \"\"\"Return a peer object with various BIP324 derived keys and ciphers.\"\"\"\n+        peer = {}\n+        salt = b'bitcoin_v2_shared_secret' + MAGIC_BYTES[\"regtest\"]\n+        for name, length in (('initiator_L', 32), ('initiator_P', 32), ('responder_L', 32), ('responder_P', 32),\n+                             ('garbage_terminators', 32), ('session_id', 32)):\n+            peer[name] = hkdf_sha256(salt=salt, ikm=ecdh_secret, info=name.encode('utf-8'), length=length)\n+        peer['initiator_garbage_terminator'] = peer['garbage_terminators'][:16]\n+        peer['responder_garbage_terminator'] = peer['garbage_terminators'][16:]\n+        del peer['garbage_terminators']\n+        if self.initiating:\n+            self.peer['send_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['send_garbage_terminator'] = peer['initiator_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['recv_garbage_terminator'] = peer['responder_garbage_terminator']\n+        else:\n+            self.peer['send_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['send_garbage_terminator'] = peer['responder_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['recv_garbage_terminator'] = peer['initiator_garbage_terminator']\n+        self.peer['session_id'] = peer['session_id']\n+\n+    def v2_enc_packet(self, contents, aad=b'', ignore=False):\n+        \"\"\"Encrypt a BIP324 packet.\"\"\"\n+        assert len(contents) <= 2**24 - 1\n+        header = (ignore << IGNORE_BIT_POS).to_bytes(HEADER_LEN, 'little')\n+        plaintext = header + contents\n+        aead_ciphertext = self.peer['send_P'].encrypt(aad, plaintext)\n+        enc_plaintext_len = self.peer['send_L'].crypt(len(contents).to_bytes(LENGTH_FIELD_LEN, 'little'))\n+        return enc_plaintext_len + aead_ciphertext\n+\n+    def v2_receive_packet(self, response, aad=b''):\n+        \"\"\"Decrypt a BIP324 packet\n+        Returns:\n+            1. length - length of packet processed in order to update recvbuf.\n+                      - return 0 if only part of packet is received. (recvbuf not updated since decryption not done yet)\n+                      - return -1 if there's a MAC tag mismatch and disconnect.\n+            2. decrypted packet contents\n+                     - return b\"\" if only part of packet is received/MAC tag mismatch.\n+        \"\"\"\n+        if len(response) < LENGTH_FIELD_LEN:\n+            return 0, b\"\"\n+        enc_contents_len = response[:LENGTH_FIELD_LEN]\n+        response = response[LENGTH_FIELD_LEN:]\n+        contents_len = int.from_bytes(self.peer['recv_L'].crypt(enc_contents_len), 'little')",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 225,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have little knowledge of cryptography, but I think that something is wrong here.\r\nDoesn't `crypt` change the internal state of the stream cipher, so if we abort below because we haven't received the message in full, but then call `crypt` again on the same first 3 bytes of the now larger response, we will get an incorrect result?",
      "created_at": "2023-10-11T16:03:53Z",
      "updated_at": "2023-10-11T16:03:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1355307964",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355307964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549582",
      "pull_request_review_id": 1673715969,
      "id": 1356549582,
      "node_id": "PRRC_kwDOABII585Q203O",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 133,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": 1350924659,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done. true! logs had lines like these: `[net] non-version message before version handshake. Message \"\" from peer=0`.",
      "created_at": "2023-10-12T09:27:27Z",
      "updated_at": "2023-10-12T09:27:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356549582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549683",
      "pull_request_review_id": 1673716109,
      "id": 1356549683,
      "node_id": "PRRC_kwDOABII585Q204z",
      "diff_hunk": "@@ -1209,13 +1209,14 @@ class CConnman\n      * @param[in]   address     Address of node to try connecting to\n      * @param[in]   conn_type   ConnectionType::OUTBOUND, ConnectionType::BLOCK_RELAY,\n      *                          ConnectionType::ADDR_FETCH or ConnectionType::FEELER\n+     * @param[in]   use_v2transport  Set to true if node supports BIP324 v2 transport protocol",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": 1353141062,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-10-12T09:27:31Z",
      "updated_at": "2023-10-12T09:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356549683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549798",
      "pull_request_review_id": 1673716273,
      "id": 1356549798,
      "node_id": "PRRC_kwDOABII585Q206m",
      "diff_hunk": "@@ -357,6 +357,7 @@ static RPCHelpMan addconnection()\n         {\n             {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n             {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open (\\\"outbound-full-relay\\\", \\\"block-relay-only\\\", \\\"addr-fetch\\\" or \\\"feeler\\\").\"},\n+            {\"v2transport\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Node supports BIP324 v2 transport protocol\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": 1353143252,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-10-12T09:27:36Z",
      "updated_at": "2023-10-12T09:27:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356549798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549916",
      "pull_request_review_id": 1673716458,
      "id": 1356549916,
      "node_id": "PRRC_kwDOABII585Q208c",
      "diff_hunk": "@@ -388,11 +389,12 @@ static RPCHelpMan addconnection()\n     } else {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, self.ToString());\n     }\n+    bool use_v2transport = !request.params[2].isNull() && request.params[2].get_bool();",
      "path": "src/rpc/net.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": 1353156113,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-10-12T09:27:41Z",
      "updated_at": "2023-10-12T09:27:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356549916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356549916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550097",
      "pull_request_review_id": 1673716731,
      "id": 1356550097,
      "node_id": "PRRC_kwDOABII585Q20_R",
      "diff_hunk": "@@ -1880,7 +1880,7 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\n     RandAddEvent((uint32_t)id);\n }\n \n-bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n+bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type, bool use_v2transport = false)",
      "path": "src/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9810e96c74380a3087b2b576508581380019872f",
      "in_reply_to_id": 1353183494,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-10-12T09:27:46Z",
      "updated_at": "2023-10-12T09:27:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356550097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1836,
      "original_line": 1836,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550296",
      "pull_request_review_id": 1673717025,
      "id": 1356550296,
      "node_id": "PRRC_kwDOABII585Q21CY",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 96,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a7478eab51c156519885673aff9efeaa95504bd3",
      "in_reply_to_id": 1349828896,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oops, fixed.",
      "created_at": "2023-10-12T09:27:52Z",
      "updated_at": "2023-10-12T09:27:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356550296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550774",
      "pull_request_review_id": 1673717719,
      "id": 1356550774,
      "node_id": "PRRC_kwDOABII585Q21J2",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't\n+                    if length == LENGTH_FIELD_LEN + HEADER_LEN + CHACHA20POLY1305_EXPANSION:\n+                        self.tried_v2_handshake = True\n+                        return processed_length, True\n+                    response = response[length:]\n+            else:\n+                # don't update recvbuf since more bytes need to be received\n+                if len(response) == 0:\n+                    return 0, True\n+                received_garbage += response[:1]\n+                processed_length += 1\n+                response = response[1:]\n+        # disconnect since garbage terminator was not seen after 4 KiB of garbage.\n+        return processed_length, False\n+\n+    def initialize_v2_transport(self, ecdh_secret):\n+        \"\"\"Return a peer object with various BIP324 derived keys and ciphers.\"\"\"",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 178,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": 1353384798,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-10-12T09:28:16Z",
      "updated_at": "2023-10-12T09:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356550774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356550774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356583257",
      "pull_request_review_id": 1673768690,
      "id": 1356583257,
      "node_id": "PRRC_kwDOABII585Q29FZ",
      "diff_hunk": "@@ -18,3 +97,143 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response, garbage_len=random.randrange(4096)):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't\n+                    if length == LENGTH_FIELD_LEN + HEADER_LEN + CHACHA20POLY1305_EXPANSION:\n+                        self.tried_v2_handshake = True\n+                        return processed_length, True\n+                    response = response[length:]\n+            else:\n+                # don't update recvbuf since more bytes need to be received\n+                if len(response) == 0:\n+                    return 0, True\n+                received_garbage += response[:1]\n+                processed_length += 1\n+                response = response[1:]\n+        # disconnect since garbage terminator was not seen after 4 KiB of garbage.\n+        return processed_length, False\n+\n+    def initialize_v2_transport(self, ecdh_secret):\n+        \"\"\"Return a peer object with various BIP324 derived keys and ciphers.\"\"\"\n+        peer = {}\n+        salt = b'bitcoin_v2_shared_secret' + MAGIC_BYTES[\"regtest\"]\n+        for name, length in (('initiator_L', 32), ('initiator_P', 32), ('responder_L', 32), ('responder_P', 32),\n+                             ('garbage_terminators', 32), ('session_id', 32)):\n+            peer[name] = hkdf_sha256(salt=salt, ikm=ecdh_secret, info=name.encode('utf-8'), length=length)\n+        peer['initiator_garbage_terminator'] = peer['garbage_terminators'][:16]\n+        peer['responder_garbage_terminator'] = peer['garbage_terminators'][16:]\n+        del peer['garbage_terminators']\n+        if self.initiating:\n+            self.peer['send_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['send_garbage_terminator'] = peer['initiator_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['recv_garbage_terminator'] = peer['responder_garbage_terminator']\n+        else:\n+            self.peer['send_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['send_garbage_terminator'] = peer['responder_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['recv_garbage_terminator'] = peer['initiator_garbage_terminator']\n+        self.peer['session_id'] = peer['session_id']\n+\n+    def v2_enc_packet(self, contents, aad=b'', ignore=False):\n+        \"\"\"Encrypt a BIP324 packet.\"\"\"\n+        assert len(contents) <= 2**24 - 1\n+        header = (ignore << IGNORE_BIT_POS).to_bytes(HEADER_LEN, 'little')\n+        plaintext = header + contents\n+        aead_ciphertext = self.peer['send_P'].encrypt(aad, plaintext)\n+        enc_plaintext_len = self.peer['send_L'].crypt(len(contents).to_bytes(LENGTH_FIELD_LEN, 'little'))\n+        return enc_plaintext_len + aead_ciphertext\n+\n+    def v2_receive_packet(self, response, aad=b''):\n+        \"\"\"Decrypt a BIP324 packet\n+        Returns:\n+            1. length - length of packet processed in order to update recvbuf.\n+                      - return 0 if only part of packet is received. (recvbuf not updated since decryption not done yet)\n+                      - return -1 if there's a MAC tag mismatch and disconnect.\n+            2. decrypted packet contents\n+                     - return b\"\" if only part of packet is received/MAC tag mismatch.\n+        \"\"\"\n+        if len(response) < LENGTH_FIELD_LEN:\n+            return 0, b\"\"\n+        enc_contents_len = response[:LENGTH_FIELD_LEN]\n+        response = response[LENGTH_FIELD_LEN:]\n+        contents_len = int.from_bytes(self.peer['recv_L'].crypt(enc_contents_len), 'little')",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 225,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "5f851714cf5fa7a31bb423c20035f7b44deed25d",
      "in_reply_to_id": 1355307964,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nice catch. you're right!\r\n\r\ni've stored `contents_len` in a class variable so as to not perform the decryption of 3 bytes length again. initially, `contents_len` is -1, after the 3 bytes length gets processed - `contents_len` is updated, when the whole packet is processed `contents_len` is reset to -1 again.\r\n\r\ni'm open to other solutions.\r\n\r\ni wish there was a cleaner way for writing this function with reads like [this](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki?plain=1#L500-L513) but we're working with `P2PConnection`(subclass of `asyncio.Protocol`) where no read is possible(no \"waiting\" for data to be ready) and we just have a [`data_received()`](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.Protocol.data_received) callback when data is received.",
      "created_at": "2023-10-12T09:56:00Z",
      "updated_at": "2023-10-12T09:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1356583257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356583257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388268045",
      "pull_request_review_id": 1723019604,
      "id": 1388268045,
      "node_id": "PRRC_kwDOABII585Sv0oN",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+TRANSPORT_VERSION = b''\n+V1_PREFIX = MAGIC_BYTES[\"regtest\"] + b'version\\x00\\x00\\x00\\x00\\x00'\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))\n+    return msgtype_to_shortid[msgtype].to_bytes(1, 'big') if msgtype in msgtype_to_shortid else b\"\\x00\"\n+\n+\n class EncryptedP2PState:\n+    \"\"\"A class for performing v2 P2P protocol functions on P2PConnection:\n+    - `initiating` defines whether the P2PConnection is an initiator or responder.\n+        - `initiating` = True for inbound connections in the test framework   [TestNode <------- P2PConnection]\n+        - `initiating` = False for outbound connections in the test framework [TestNode -------> P2PConnection]\n+    - perform initial v2 handshake to instantiate the encrypted transport.\n+        - initial v2 handshakes is performed by:\n+            1. initiator using initiate_v2_handshake(), complete_handshake() and authenticate_handshake()\n+            2. responder using respond_v2_handshake(), complete_handshake() and authenticate_handshake()\n+        - see section #overall-handshake-pseudocode in BIP 324\n+    - encrypt/decrypt v2 P2P messages.\n+        - see section #overall_packet_encryption_and_decryption_pseudocode in BIP 324\n+    \"\"\"\n+    def __init__(self, **kwargs):\n+        self.initiating = kwargs['initiating']  # True if initiator",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 79,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could avoid `kwargs` here (unless there is a good reason to also allow other keyword arguments)\r\n```suggestion\r\n    def __init__(self, *, initiating):\r\n        self.initiating = initiating  # True if initiator\r\n```",
      "created_at": "2023-11-09T16:37:53Z",
      "updated_at": "2023-11-09T17:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388268045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388268045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388276157",
      "pull_request_review_id": 1723019604,
      "id": 1388276157,
      "node_id": "PRRC_kwDOABII585Sv2m9",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 19,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: there's already a `MAGIC_BYTES` dictionary in p2p.py, could use that? (though it seems there's some circular inclusion going on, not sure how to properly resolve that....)",
      "created_at": "2023-11-09T16:44:19Z",
      "updated_at": "2023-11-09T17:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388276157",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388276157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388279451",
      "pull_request_review_id": 1723019604,
      "id": 1388279451,
      "node_id": "PRRC_kwDOABII585Sv3ab",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 103,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could deduplicate code by using a helper method like `generate_garbage` (or even `generate_keypair_and_garbage`) that is used both in `initiate_v2_handshake` and `respond_v2_handshake`? Could also put the magic number in a `MAX_GARBAGE_LEN` constant (that's the naming we use in the C++ codebase), though that's one less than the number passed to randrange here.",
      "created_at": "2023-11-09T16:46:41Z",
      "updated_at": "2023-11-09T17:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388279451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388279451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388285003",
      "pull_request_review_id": 1723019604,
      "id": 1388285003,
      "node_id": "PRRC_kwDOABII585Sv4xL",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                garbage_len = random.randrange(4096)\n+                self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 119,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since we are only in test land here, it's probably fine to also use seed-determined randomness for garbage as well (i.e. `random.randrange`)? (I've used `os.urandom` in the past for a PR and got critical feedback about that: https://github.com/bitcoin/bitcoin/pull/25625#discussion_r924540431, which I agree with)\r\n```suggestion\r\n                self.sent_garbage = random.randrange(garbage_len)\r\n```",
      "created_at": "2023-11-09T16:51:05Z",
      "updated_at": "2023-11-09T17:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388285003",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388285003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388307652",
      "pull_request_review_id": 1723019604,
      "id": 1388307652,
      "node_id": "PRRC_kwDOABII585Sv-TE",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                garbage_len = random.randrange(4096)\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 159,
      "original_position": 158,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: as `received_garbage` is ensured to have a maximum size of 16 bytes a few lines above, the slicing isn't needed here.\r\n```suggestion\r\n            if received_garbage == self.peer['recv_garbage_terminator']:\r\n                # Receive, decode, and ignore version packet.\r\n                # This includes skipping decoys and authenticating the received garbage.\r\n                aad = received_garbage\r\n```",
      "created_at": "2023-11-09T17:05:41Z",
      "updated_at": "2023-11-09T17:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388307652",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388307652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 156,
      "original_start_line": 160,
      "start_side": "RIGHT",
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388337105",
      "pull_request_review_id": 1723019604,
      "id": 1388337105,
      "node_id": "PRRC_kwDOABII585SwFfR",
      "diff_hunk": "@@ -689,14 +700,34 @@ def add_outbound_p2p_connection(self, p2p_conn, *, wait_for_verack=True, p2p_idx\n         p2p_idx must be different for simultaneously connected peers. When reusing it for the next peer\n         after disconnecting the previous one, it is necessary to wait for the disconnect to finish to avoid\n         a race condition.\n+\n+        Parameters:\n+            supports_v2_p2p: whether p2p_conn supports v2 P2P or not\n+            advertise_v2_p2p: whether p2p_conn is advertised to support v2 P2P or not\n+\n+        An outbound connection is made from TestNode -------> P2PConnection\n+            - if P2PConnection doesn't advertise_v2_p2p, TestNode sends version message and v1 P2P is followed\n+            - if P2PConnection both supports_v2_p2p and advertise_v2_p2p, TestNode sends ellswift bytes and v2 P2P is followed\n+            - if P2PConnection doesn't supports_v2_p2p but advertise_v2_p2p,\n+                TestNode sends ellswift bytes and P2PConnection disconnects,\n+                TestNode reconnects by sending version message and v1 P2P is followed\n         \"\"\"\n \n         def addconnection_callback(address, port):\n             self.log.debug(\"Connecting to %s:%d %s\" % (address, port, connection_type))\n-            self.addconnection('%s:%d' % (address, port), connection_type)\n+            self.addconnection('%s:%d' % (address, port), connection_type, advertise_v2_p2p)\n \n         p2p_conn.p2p_connected_to_node = False\n-        p2p_conn.peer_accept_connection(connect_cb=addconnection_callback, connect_id=p2p_idx + 1, net=self.chain, timeout_factor=self.timeout_factor, **kwargs)()\n+        if advertise_v2_p2p:\n+            kwargs['services'] = kwargs['services']|NODE_P2P_V2 if 'services' in kwargs else P2P_SERVICES|NODE_P2P_V2",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 76,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1b656a1cf69ff573a23437431c8650729d9fa95a",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "readability nit:\r\n```suggestion\r\n            kwargs['services'] = (kwargs['services']|NODE_P2P_V2) if 'services' in kwargs else (P2P_SERVICES|NODE_P2P_V2)\r\n```",
      "created_at": "2023-11-09T17:25:54Z",
      "updated_at": "2023-11-09T17:39:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388337105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388337105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 722,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388344334",
      "pull_request_review_id": 1723019604,
      "id": 1388344334,
      "node_id": "PRRC_kwDOABII585SwHQO",
      "diff_hunk": "@@ -853,9 +855,11 @@ def send_blocks_and_test(self, blocks, node, *, success=True, force_send=False,\n \n         reject_reason = [reject_reason] if reject_reason else []\n         with node.assert_debug_log(expected_msgs=reject_reason):\n+            if is_decoy:  # since decoy messages don't get sent - no need to wait for response",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 55,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "09638be021c6d928002f0a7fe1ff4fc3d4dbb89a",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n            if is_decoy:  # since decoy messages are ignored by the recipient - no need to wait for response\r\n```\r\n(or \"don't get processed\" or something like that?)",
      "created_at": "2023-11-09T17:30:55Z",
      "updated_at": "2023-11-09T17:39:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388344334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388344334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388353134",
      "pull_request_review_id": 1723019604,
      "id": 1388353134,
      "node_id": "PRRC_kwDOABII585SwJZu",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+\n+REKEY_INTERVAL = 224",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": null,
      "original_position": 23,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "f9a34e333592fc37151f9d5867ced762910e3730",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could import this constant from test_framework.crypto",
      "created_at": "2023-11-09T17:36:20Z",
      "updated_at": "2023-11-09T17:39:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1388353134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388353134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389838929",
      "pull_request_review_id": 1725507560,
      "id": 1389838929,
      "node_id": "PRRC_kwDOABII585S10JR",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 19,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388276157,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that would be nice, in particular so that we can enable `p2p_dos_header_tree.py` (which uses testnet instead of regtest) in combination with v2 transport. One possibility would be to move the `MAGIC_BYTES` constants from `p2p.py` into another file (e.g. `test_framework/messages.py`), change all includes, pass `net` to `EncryptedP2PState`, and change `V1_PREFIX` into a local variable using it)",
      "created_at": "2023-11-10T19:45:16Z",
      "updated_at": "2023-11-10T19:45:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1389838929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389838929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149591",
      "pull_request_review_id": 1725972058,
      "id": 1390149591,
      "node_id": "PRRC_kwDOABII585S2__X",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+TRANSPORT_VERSION = b''\n+V1_PREFIX = MAGIC_BYTES[\"regtest\"] + b'version\\x00\\x00\\x00\\x00\\x00'\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))\n+    return msgtype_to_shortid[msgtype].to_bytes(1, 'big') if msgtype in msgtype_to_shortid else b\"\\x00\"\n+\n+\n class EncryptedP2PState:\n+    \"\"\"A class for performing v2 P2P protocol functions on P2PConnection:\n+    - `initiating` defines whether the P2PConnection is an initiator or responder.\n+        - `initiating` = True for inbound connections in the test framework   [TestNode <------- P2PConnection]\n+        - `initiating` = False for outbound connections in the test framework [TestNode -------> P2PConnection]\n+    - perform initial v2 handshake to instantiate the encrypted transport.\n+        - initial v2 handshakes is performed by:\n+            1. initiator using initiate_v2_handshake(), complete_handshake() and authenticate_handshake()\n+            2. responder using respond_v2_handshake(), complete_handshake() and authenticate_handshake()\n+        - see section #overall-handshake-pseudocode in BIP 324\n+    - encrypt/decrypt v2 P2P messages.\n+        - see section #overall_packet_encryption_and_decryption_pseudocode in BIP 324\n+    \"\"\"\n+    def __init__(self, **kwargs):\n+        self.initiating = kwargs['initiating']  # True if initiator",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 79,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388268045,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-11T06:27:19Z",
      "updated_at": "2023-11-11T06:27:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149597",
      "pull_request_review_id": 1725972065,
      "id": 1390149597,
      "node_id": "PRRC_kwDOABII585S2__d",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 19,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388276157,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nice! included `MAGIC_BYTES` in messages.py",
      "created_at": "2023-11-11T06:27:28Z",
      "updated_at": "2023-11-11T06:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149601",
      "pull_request_review_id": 1725972070,
      "id": 1390149601,
      "node_id": "PRRC_kwDOABII585S2__h",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 103,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388279451,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "true! done.",
      "created_at": "2023-11-11T06:27:32Z",
      "updated_at": "2023-11-11T06:27:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149609",
      "pull_request_review_id": 1725972078,
      "id": 1390149609,
      "node_id": "PRRC_kwDOABII585S2__p",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                garbage_len = random.randrange(4096)\n+                self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 119,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388285003,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "makes sense. done.",
      "created_at": "2023-11-11T06:27:37Z",
      "updated_at": "2023-11-11T06:27:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149609",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149630",
      "pull_request_review_id": 1725972107,
      "id": 1390149630,
      "node_id": "PRRC_kwDOABII585S2__-",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                garbage_len = random.randrange(4096)\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 159,
      "original_position": 158,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388307652,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "but there's also an else condition below where if the `received_garbage` doesn't match the garbage terminator, we keep appending 1 byte to `received_garbage` until there's a match with garbage terminator/we've exceed max garbage limit. so even though initially `received_garbage` length is 16 bytes, it can take values from 17 bytes, ..., 17 + 4095 bytes.  ",
      "created_at": "2023-11-11T06:27:52Z",
      "updated_at": "2023-11-11T06:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149630",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 156,
      "original_start_line": 160,
      "start_side": "RIGHT",
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149640",
      "pull_request_review_id": 1725972133,
      "id": 1390149640,
      "node_id": "PRRC_kwDOABII585S3AAI",
      "diff_hunk": "@@ -689,14 +700,34 @@ def add_outbound_p2p_connection(self, p2p_conn, *, wait_for_verack=True, p2p_idx\n         p2p_idx must be different for simultaneously connected peers. When reusing it for the next peer\n         after disconnecting the previous one, it is necessary to wait for the disconnect to finish to avoid\n         a race condition.\n+\n+        Parameters:\n+            supports_v2_p2p: whether p2p_conn supports v2 P2P or not\n+            advertise_v2_p2p: whether p2p_conn is advertised to support v2 P2P or not\n+\n+        An outbound connection is made from TestNode -------> P2PConnection\n+            - if P2PConnection doesn't advertise_v2_p2p, TestNode sends version message and v1 P2P is followed\n+            - if P2PConnection both supports_v2_p2p and advertise_v2_p2p, TestNode sends ellswift bytes and v2 P2P is followed\n+            - if P2PConnection doesn't supports_v2_p2p but advertise_v2_p2p,\n+                TestNode sends ellswift bytes and P2PConnection disconnects,\n+                TestNode reconnects by sending version message and v1 P2P is followed\n         \"\"\"\n \n         def addconnection_callback(address, port):\n             self.log.debug(\"Connecting to %s:%d %s\" % (address, port, connection_type))\n-            self.addconnection('%s:%d' % (address, port), connection_type)\n+            self.addconnection('%s:%d' % (address, port), connection_type, advertise_v2_p2p)\n \n         p2p_conn.p2p_connected_to_node = False\n-        p2p_conn.peer_accept_connection(connect_cb=addconnection_callback, connect_id=p2p_idx + 1, net=self.chain, timeout_factor=self.timeout_factor, **kwargs)()\n+        if advertise_v2_p2p:\n+            kwargs['services'] = kwargs['services']|NODE_P2P_V2 if 'services' in kwargs else P2P_SERVICES|NODE_P2P_V2",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 76,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1b656a1cf69ff573a23437431c8650729d9fa95a",
      "in_reply_to_id": 1388337105,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-11T06:28:06Z",
      "updated_at": "2023-11-11T06:28:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 722,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149641",
      "pull_request_review_id": 1725972136,
      "id": 1390149641,
      "node_id": "PRRC_kwDOABII585S3AAJ",
      "diff_hunk": "@@ -853,9 +855,11 @@ def send_blocks_and_test(self, blocks, node, *, success=True, force_send=False,\n \n         reject_reason = [reject_reason] if reject_reason else []\n         with node.assert_debug_log(expected_msgs=reject_reason):\n+            if is_decoy:  # since decoy messages don't get sent - no need to wait for response",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 55,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "09638be021c6d928002f0a7fe1ff4fc3d4dbb89a",
      "in_reply_to_id": 1388344334,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-11T06:28:11Z",
      "updated_at": "2023-11-11T06:28:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149646",
      "pull_request_review_id": 1725972145,
      "id": 1390149646,
      "node_id": "PRRC_kwDOABII585S3AAO",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+\n+REKEY_INTERVAL = 224",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": null,
      "original_position": 23,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "f9a34e333592fc37151f9d5867ced762910e3730",
      "in_reply_to_id": 1388353134,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-11T06:28:15Z",
      "updated_at": "2023-11-11T06:28:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390149646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390149646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390234612",
      "pull_request_review_id": 1726071399,
      "id": 1390234612,
      "node_id": "PRRC_kwDOABII585S3Uv0",
      "diff_hunk": "@@ -18,3 +100,147 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(4096)\n+        self.sent_garbage = os.urandom(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte V1_PREFIX.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            if self.received_prefix[-1] != V1_PREFIX[len(self.received_prefix) - 1]:\n+                self.privkey_ours, self.ellswift_ours = ellswift_create()\n+                garbage_len = random.randrange(4096)\n+                self.sent_garbage = os.urandom(garbage_len)\n+                logger.debug(\"sending %d bytes of garbage data\" % garbage_len)\n+                return self.ellswift_ours + self.sent_garbage\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(4096):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 159,
      "original_position": 158,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388307652,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh right, I missed the else-branch and assumed `received_garbage` wouldn't change in the loop (which wouldn't make much sense), nevermind.",
      "created_at": "2023-11-11T14:23:50Z",
      "updated_at": "2023-11-11T14:23:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390234612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390234612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 156,
      "original_start_line": 160,
      "start_side": "RIGHT",
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390623656",
      "pull_request_review_id": 1726545195,
      "id": 1390623656,
      "node_id": "PRRC_kwDOABII585S4zuo",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 19,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388276157,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! \r\nI think you should actually use `net` by making both callers from `p2p.py`  pass it to `EncryptedP2PState`, the default value of 'regtest' should be dropped in my opinion. \r\nCould also change all existing imports for MAGIC_BYTES (there are a few in other tests) to avoid indirect imports.",
      "created_at": "2023-11-13T04:52:32Z",
      "updated_at": "2023-11-13T06:56:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1390623656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390623656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393801774",
      "pull_request_review_id": 1731446070,
      "id": 1393801774,
      "node_id": "PRRC_kwDOABII585TE7ou",
      "diff_hunk": "@@ -4,10 +4,92 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import os\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n \n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+MAGIC_BYTES = {\n+    \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\"   # regtest\n+}",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 19,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "63463aa9be20fbb93a73be3638a61041b792decd",
      "in_reply_to_id": 1388276157,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sounds much better! added a [new commit](https://github.com/bitcoin/bitcoin/pull/24748/commits/7f0e797dc9524c03f650f60a028cb46852877284).",
      "created_at": "2023-11-15T08:06:44Z",
      "updated_at": "2023-11-15T08:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1393801774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393801774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1394911231",
      "pull_request_review_id": 1733127844,
      "id": 1394911231,
      "node_id": "PRRC_kwDOABII585TJKf_",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import random\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.crypto.ellswift import ellswift_create\n+from test_framework.p2p import P2PInterface\n+from test_framework.v2_p2p import EncryptedP2PState\n+\n+\n+class TestEncryptedP2PState(EncryptedP2PState):\n+    \"\"\" Custom implementation of class EncryptedP2PState for testing purposes:\n+\n+    - if `send_net_magic` is True, send first 4 bytes of ellswift(match network magic) else send remaining 60 bytes\n+    - `can_data_be_received` is a variable used to assert if data is received on recvbuf.\n+            - v2 TestNode shouldn't respond back if we send V1_PREFIX and data shouldn't be received on recvbuf.\n+              This state is represented using `can_data_be_received` = False.\n+            - v2 TestNode responds back when mismatch from V1_PREFIX happens and data can be received on recvbuf.\n+              This state is represented using `can_data_be_received` = True.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__(initiating=True, net='regtest')\n+        self.send_net_magic = True\n+        self.can_data_be_received = False\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage.\n+        Here, the 64 bytes ellswift is assumed to have it's 4 bytes match network magic bytes. It is sent in 2 phases:\n+            1. when `send_network_magic` = True, send first 4 bytes of ellswift (matches network magic bytes)\n+            2. when `send_network_magic` = False, send remaining 60 bytes of ellswift\n+        \"\"\"\n+        if self.send_net_magic:\n+            self.privkey_ours, self.ellswift_ours = ellswift_create()\n+            self.sent_garbage = os.urandom(garbage_len)\n+            self.send_net_magic = False\n+            return b\"\\xfa\\xbf\\xb5\\xda\"\n+        else:\n+            self.can_data_be_received = True\n+            return self.ellswift_ours[4:] + self.sent_garbage\n+\n+\n+class PeerEarlyKey(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.v2_state = None\n+\n+    def connection_made(self, *args, **kwargs):\n+        \"\"\"Custom implementation so that 64 bytes ellswift is sent in 2 parts during `initial_v2_handshake()`\"\"\"\n+        self.v2_state = TestEncryptedP2PState()\n+        super(PeerEarlyKey, self).connection_made(*args, **kwargs)",
      "path": "test/functional/p2p_v2_earlykeyresponse.py",
      "position": null,
      "original_position": 55,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b3c0a54085703932e57369f5b1315b516c172dc4",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it on purpose to use `super()` above and provide args here and below? Not an expert on this kind of stuff, but [this](https://stackoverflow.com/questions/59538746/when-do-you-need-to-pass-arguments-to-python-super) suggests that providing args is not necessary in python3.",
      "created_at": "2023-11-15T22:30:14Z",
      "updated_at": "2023-11-15T23:38:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1394911231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1394911231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1394961498",
      "pull_request_review_id": 1733127844,
      "id": 1394961498,
      "node_id": "PRRC_kwDOABII585TJWxa",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import random\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.crypto.ellswift import ellswift_create\n+from test_framework.p2p import P2PInterface\n+from test_framework.v2_p2p import EncryptedP2PState\n+\n+\n+class TestEncryptedP2PState(EncryptedP2PState):\n+    \"\"\" Custom implementation of class EncryptedP2PState for testing purposes:\n+\n+    - if `send_net_magic` is True, send first 4 bytes of ellswift(match network magic) else send remaining 60 bytes\n+    - `can_data_be_received` is a variable used to assert if data is received on recvbuf.\n+            - v2 TestNode shouldn't respond back if we send V1_PREFIX and data shouldn't be received on recvbuf.\n+              This state is represented using `can_data_be_received` = False.\n+            - v2 TestNode responds back when mismatch from V1_PREFIX happens and data can be received on recvbuf.\n+              This state is represented using `can_data_be_received` = True.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__(initiating=True, net='regtest')\n+        self.send_net_magic = True\n+        self.can_data_be_received = False\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage.\n+        Here, the 64 bytes ellswift is assumed to have it's 4 bytes match network magic bytes. It is sent in 2 phases:\n+            1. when `send_network_magic` = True, send first 4 bytes of ellswift (matches network magic bytes)\n+            2. when `send_network_magic` = False, send remaining 60 bytes of ellswift\n+        \"\"\"\n+        if self.send_net_magic:\n+            self.privkey_ours, self.ellswift_ours = ellswift_create()\n+            self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/p2p_v2_earlykeyresponse.py",
      "position": null,
      "original_position": 39,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b3c0a54085703932e57369f5b1315b516c172dc4",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "one more instance of os.urandom (`random.randbytes(garbage_len)` should work)\r\n",
      "created_at": "2023-11-15T23:04:32Z",
      "updated_at": "2023-11-15T23:38:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1394961498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1394961498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1398651836",
      "pull_request_review_id": 1738944298,
      "id": 1398651836,
      "node_id": "PRRC_kwDOABII585TXbu8",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import random\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.crypto.ellswift import ellswift_create\n+from test_framework.p2p import P2PInterface\n+from test_framework.v2_p2p import EncryptedP2PState\n+\n+\n+class TestEncryptedP2PState(EncryptedP2PState):\n+    \"\"\" Custom implementation of class EncryptedP2PState for testing purposes:\n+\n+    - if `send_net_magic` is True, send first 4 bytes of ellswift(match network magic) else send remaining 60 bytes\n+    - `can_data_be_received` is a variable used to assert if data is received on recvbuf.\n+            - v2 TestNode shouldn't respond back if we send V1_PREFIX and data shouldn't be received on recvbuf.\n+              This state is represented using `can_data_be_received` = False.\n+            - v2 TestNode responds back when mismatch from V1_PREFIX happens and data can be received on recvbuf.\n+              This state is represented using `can_data_be_received` = True.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__(initiating=True, net='regtest')\n+        self.send_net_magic = True\n+        self.can_data_be_received = False\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage.\n+        Here, the 64 bytes ellswift is assumed to have it's 4 bytes match network magic bytes. It is sent in 2 phases:\n+            1. when `send_network_magic` = True, send first 4 bytes of ellswift (matches network magic bytes)\n+            2. when `send_network_magic` = False, send remaining 60 bytes of ellswift\n+        \"\"\"\n+        if self.send_net_magic:\n+            self.privkey_ours, self.ellswift_ours = ellswift_create()\n+            self.sent_garbage = os.urandom(garbage_len)\n+            self.send_net_magic = False\n+            return b\"\\xfa\\xbf\\xb5\\xda\"\n+        else:\n+            self.can_data_be_received = True\n+            return self.ellswift_ours[4:] + self.sent_garbage\n+\n+\n+class PeerEarlyKey(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.v2_state = None\n+\n+    def connection_made(self, *args, **kwargs):\n+        \"\"\"Custom implementation so that 64 bytes ellswift is sent in 2 parts during `initial_v2_handshake()`\"\"\"\n+        self.v2_state = TestEncryptedP2PState()\n+        super(PeerEarlyKey, self).connection_made(*args, **kwargs)",
      "path": "test/functional/p2p_v2_earlykeyresponse.py",
      "position": null,
      "original_position": 55,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b3c0a54085703932e57369f5b1315b516c172dc4",
      "in_reply_to_id": 1394911231,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you're right! done.",
      "created_at": "2023-11-20T04:29:57Z",
      "updated_at": "2023-11-20T04:29:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1398651836",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1398651836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1398651878",
      "pull_request_review_id": 1738944376,
      "id": 1398651878,
      "node_id": "PRRC_kwDOABII585TXbvm",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import random\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.crypto.ellswift import ellswift_create\n+from test_framework.p2p import P2PInterface\n+from test_framework.v2_p2p import EncryptedP2PState\n+\n+\n+class TestEncryptedP2PState(EncryptedP2PState):\n+    \"\"\" Custom implementation of class EncryptedP2PState for testing purposes:\n+\n+    - if `send_net_magic` is True, send first 4 bytes of ellswift(match network magic) else send remaining 60 bytes\n+    - `can_data_be_received` is a variable used to assert if data is received on recvbuf.\n+            - v2 TestNode shouldn't respond back if we send V1_PREFIX and data shouldn't be received on recvbuf.\n+              This state is represented using `can_data_be_received` = False.\n+            - v2 TestNode responds back when mismatch from V1_PREFIX happens and data can be received on recvbuf.\n+              This state is represented using `can_data_be_received` = True.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__(initiating=True, net='regtest')\n+        self.send_net_magic = True\n+        self.can_data_be_received = False\n+\n+    def initiate_v2_handshake(self, garbage_len=random.randrange(4096)):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage.\n+        Here, the 64 bytes ellswift is assumed to have it's 4 bytes match network magic bytes. It is sent in 2 phases:\n+            1. when `send_network_magic` = True, send first 4 bytes of ellswift (matches network magic bytes)\n+            2. when `send_network_magic` = False, send remaining 60 bytes of ellswift\n+        \"\"\"\n+        if self.send_net_magic:\n+            self.privkey_ours, self.ellswift_ours = ellswift_create()\n+            self.sent_garbage = os.urandom(garbage_len)",
      "path": "test/functional/p2p_v2_earlykeyresponse.py",
      "position": null,
      "original_position": 39,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b3c0a54085703932e57369f5b1315b516c172dc4",
      "in_reply_to_id": 1394961498,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-20T04:30:06Z",
      "updated_at": "2023-11-20T04:30:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1398651878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1398651878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399855267",
      "pull_request_review_id": 1740854829,
      "id": 1399855267,
      "node_id": "PRRC_kwDOABII585TcBij",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One possible problem I encountered when running the `p2p_invalid_messages.py` `test_resource_exhaustion` subtest with v2 that but could affect many tests intermittently, also this spot:\r\n\r\nI think that there could be a race between the python main thread of functional tests and the p2p thread:\r\nFor example, this command 1) builds messages, 2) encrypts them and 3) sends them, all within the main thread.\r\nIf during step 2) the bitcoind node would decide to send out a ping, the p2p thread will also encrypt a message (the pong answer) and send it. It doesn't wait for the other thread. This isn't a problem with v1 (if the messages are sent in different orders, nothing may break),  but with v2 I think the connection would break down because the ChaCha stream cipher is stateful.\r\n\r\nSo I think that maybe we need some kind of synchronization / locking mechanism?\r\n\r\nI haven't though much about a solution yet, just wanted to share this problem.",
      "created_at": "2023-11-20T23:13:40Z",
      "updated_at": "2023-11-20T23:17:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1399855267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399855267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404207499",
      "pull_request_review_id": 1747722826,
      "id": 1404207499,
      "node_id": "PRRC_kwDOABII585TsoGL",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": 1399855267,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point indeed. To execute the steps build/encrypt/send-message atomically, I think introducing a new lock and acquiring it in the `send_message` method should do the trick? I.e.\r\n```diff\r\ndiff --git a/test/functional/test_framework/p2p.py b/test/functional/test_framework/p2p.py\r\nindex a70682a768..59707471a6 100755\r\n--- a/test/functional/test_framework/p2p.py\r\n+++ b/test/functional/test_framework/p2p.py\r\n@@ -164,6 +164,7 @@ class P2PConnection(asyncio.Protocol):\r\n         # The underlying transport of the connection.\r\n         # Should only call methods on this from the NetworkThread, c.f. call_soon_threadsafe\r\n         self._transport = None\r\n+        self._send_lock = threading.Lock()\r\n         self.v2_state = None  # EncryptedP2PState object needed for v2 p2p connections\r\n         self.supports_v2_p2p = False  # set if the connection supports v2 p2p\r\n         self.reconnect = False  # set if reconnection needs to happen\r\n@@ -371,9 +372,10 @@ class P2PConnection(asyncio.Protocol):\r\n \r\n         This method takes a P2P payload, builds the P2P header and adds\r\n         the message to the send buffer to be sent over the socket.\"\"\"\r\n-        tmsg = self.build_message(message, is_decoy)\r\n-        self._log_message(\"send\", message)\r\n-        return self.send_raw_message(tmsg)\r\n+        with self._send_lock:\r\n+            tmsg = self.build_message(message, is_decoy)\r\n+            self._log_message(\"send\", message)\r\n+            return self.send_raw_message(tmsg)\r\n \r\n     def send_raw_message(self, raw_message_bytes):\r\n         if not self.is_connected:\r\n```\r\nIt might be also good to classify the methods `build_message` and `send_raw_message` as private then (that is, prefixing them with an underscore) to express that they shouldn't be called from the outside anymore, as this would cause problems for v2 connections after handshake completion. Currently only `p2p_invalid_messages.py` is calling those methods, so that test needs to be reworked for v2 support (didn't look deeper yet though, can maybe also done in a follow-up).",
      "created_at": "2023-11-24T10:41:06Z",
      "updated_at": "2023-11-24T10:41:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1404207499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404207499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404234919",
      "pull_request_review_id": 1747764579,
      "id": 1404234919,
      "node_id": "PRRC_kwDOABII585Tsuyn",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": 1399855267,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1, good catch! when i tried this, just running `self.test_resource_exhaustion()` in `p2p_invalid messages.py` took too much time. \r\n1. in v1, without locks - 0m22.265s\r\n2. in v2, without locks - won't work\r\n3. in v1, with locks - 0m22.101s\r\n4. in v2, with locks - 8m45.916s",
      "created_at": "2023-11-24T11:09:16Z",
      "updated_at": "2023-11-24T11:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1404234919",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404234919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404392341",
      "pull_request_review_id": 1748012511,
      "id": 1404392341,
      "node_id": "PRRC_kwDOABII585TtVOV",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": 1399855267,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@stratospher: Seems like the long run-time in case 4. is primarily caused by the slow ChaCha20 implementation in Python. On my machine, encrypting 4MB of data (as done in `test_resource_exhaustion`, but repeated 80 times) takes already more than half a minute:\r\n```\r\n$ ipython \r\nPython 3.10.13 (main, Oct  5 2023, 16:21:31) [Clang 13.0.0 ]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.13.2 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from test.functional.test_framework.crypto.bip324_cipher import aead_chacha20_poly1305_encrypt\r\n\r\nIn [2]: %time _ = aead_chacha20_poly1305_encrypt(key=bytes([1]*32), nonce=bytes([2]*12), aad=bytes(), plaintext=bytes([0xcc]*4000000))\r\nCPU times: user 35.9 s, sys: 40 ms, total: 36 s\r\nWall time: 35.8 s\r\n```\r\nI guess we can't do that much about that (unless someone sees a way to optimize our python cryptography, without introducing new dependencies like `numpy` or calling an external library?), other than reducing the number of loops in `test_resource_exhaustion` if p2p-v2 is used.",
      "created_at": "2023-11-24T14:08:55Z",
      "updated_at": "2023-11-24T14:08:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1404392341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404392341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404533791",
      "pull_request_review_id": 1748231287,
      "id": 1404533791,
      "node_id": "PRRC_kwDOABII585Tt3wf",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": 1399855267,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> so that test needs to be reworked for v2 support (didn't look deeper yet though, can maybe also done in a follow-up)\r\n\r\nYes, multiple tests need an adjustment for running with python v2 P2P. I have a WIP branch at \r\nhttps://github.com/mzumsande/bitcoin/tree/tmp_bip324_fixalltests for that which has helped me find this concurrency issue and other issues I mentioned above, but will only open a PR after this PR is merged.\r\n\r\n> Seems like the long run-time in case 4. is primarily caused by the slow ChaCha20 implementation in Python.\r\n\r\nI agree. I think that his particular subtest maybe could be skipped with v2 because its goal is to stress the node by bombarding it with lots of messages in a short time, not the test framework. But also,  `feature_block.py` and `feature_maxuploadtarget.py`, become very slow on my computer for the same reason and we might have to only run them with v1 transport.",
      "created_at": "2023-11-24T16:48:29Z",
      "updated_at": "2023-11-24T16:48:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1404533791",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404533791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404599389",
      "pull_request_review_id": 1748347506,
      "id": 1404599389,
      "node_id": "PRRC_kwDOABII585TuHxd",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p\n+\n+        self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\n+        peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\n+        assert not peer2.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\n+        peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\n+        assert not peer3.supports_v2_p2p\n+\n+        self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\n+        peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\n+        assert peer5.supports_v2_p2p\n+\n+        self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\n+        assert_equal(len(node0.getpeerinfo()), 4)  # check if above 4 connections are present in node0's getpeerinfo()\n+        for peer in node0.getpeerinfo():\n+            assert_greater_than(peer['bytessent_per_msg']['version'], 0)\n+            assert_greater_than(peer['bytesrecv_per_msg']['verack'], 0)\n+\n+        self.log.info(\"Testing whether blocks propagate - check if tips sync when number of blocks >= REKEY_INTERVAL\")\n+        # tests whether rekeying(which happens every REKEY_INTERVAL packets) works correctly\n+        test_blocks = self.generate_blocks(node0, REKEY_INTERVAL+1)\n+\n+        for i in range(2):\n+            # Add v2 P2P connection to node0\n+            peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\n+            assert peer6.supports_v2_p2p\n+\n+            if i:\n+                # check if node1 connected to node0 (but not to node0's p2p connection directly)\n+                # gets blocks produced by node0's p2p connection\n+                self.log.info(\"Check if blocks produced by node0's p2p connection is received by node0\")\n+                peer6.send_blocks_and_test(test_blocks, node0, success=True) # node0's tip advances",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 102,
      "original_position": 91,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "7eac63705b376d5d8d7f3f1a2d86452412b4e371",
      "in_reply_to_id": 1399855267,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I guess we can't do that much about that (unless someone sees a way to optimize our python cryptography, without introducing new dependencies like numpy or calling an external library?), other than reducing the number of loops in test_resource_exhaustion if p2p-v2 is used.\r\n\r\nmakes sense.\r\n\r\ni've introduced a new lock in [this commit](https://github.com/bitcoin/bitcoin/pull/24748/commits/99f162f3abfe5f76f914a20169743cd151d6c14e).",
      "created_at": "2023-11-24T19:10:24Z",
      "updated_at": "2023-11-24T19:10:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1404599389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404599389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408124460",
      "pull_request_review_id": 1753471883,
      "id": 1408124460,
      "node_id": "PRRC_kwDOABII585T7kYs",
      "diff_hunk": "@@ -197,6 +198,10 @@ def start(self, extra_args=None, *, cwd=None, stdout=None, stderr=None, env=None\n         \"\"\"Start the node.\"\"\"\n         if extra_args is None:\n             extra_args = self.extra_args\n+        if \"-v2transport=1\" in extra_args:\n+            self.advertise_v2_p2p = True",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 13,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b9538c706742444a41c9e9d906baedc40f5aa91e",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that #28805 is merged, `self.use_v2transport` from test_node could be used instead of introducing `self.advertise_v2_p2p`.",
      "created_at": "2023-11-28T17:21:41Z",
      "updated_at": "2023-11-28T21:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1408124460",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408124460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408222484",
      "pull_request_review_id": 1753471883,
      "id": 1408222484,
      "node_id": "PRRC_kwDOABII585T78UU",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why `64 - length` here instead of `64`? I realize that we have already read some bytes in `respond_v2_handshake` but I think we haven't removed these from `self.recvbuf` yet, so wouldn't this need to be at least 64 bytes to proceed?",
      "created_at": "2023-11-28T18:32:06Z",
      "updated_at": "2023-11-28T21:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1408222484",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408222484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408245400",
      "pull_request_review_id": 1753471883,
      "id": 1408245400,
      "node_id": "PRRC_kwDOABII585T8B6Y",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:\n+                return\n+            # `complete_handshake()` computes garbage terminator + authentication packet + version packet to be sent as\n+            # response after deriving shared ECDH secret using received ellswift bytes\n+            response = self.v2_state.complete_handshake(BytesIO(self.recvbuf[length:]))\n+            self.send_raw_message(response)\n+            self.recvbuf = self.recvbuf[64:]\n+\n+        # `self.v2_state.peer` is instantiated only after shared ECDH secret/BIP324 derived keys and ciphers\n+        # is derived in `complete_handshake()`.\n+        # so `authenticate_handshake()` which uses the BIP324 derived ciphers gets called after `complete_handshake()`.\n+        if self.v2_state.peer:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 43,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a way we could get to this spot without `self.v2_state.peer`? I think not (it should have been present from the beginning or created in `complete_handshake`), so this line could be dropped or changed to an assert?",
      "created_at": "2023-11-28T18:52:15Z",
      "updated_at": "2023-11-28T21:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1408245400",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408245400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408269092",
      "pull_request_review_id": 1753471883,
      "id": 1408269092,
      "node_id": "PRRC_kwDOABII585T8Hsk",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:\n+                return\n+            # `complete_handshake()` computes garbage terminator + authentication packet + version packet to be sent as\n+            # response after deriving shared ECDH secret using received ellswift bytes\n+            response = self.v2_state.complete_handshake(BytesIO(self.recvbuf[length:]))\n+            self.send_raw_message(response)\n+            self.recvbuf = self.recvbuf[64:]\n+\n+        # `self.v2_state.peer` is instantiated only after shared ECDH secret/BIP324 derived keys and ciphers\n+        # is derived in `complete_handshake()`.\n+        # so `authenticate_handshake()` which uses the BIP324 derived ciphers gets called after `complete_handshake()`.\n+        if self.v2_state.peer:\n+            # authenticate v2 handshake\n+            if len(self.recvbuf) < 16 + 20:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 45,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could add a comment about the meaning of the magic numbers",
      "created_at": "2023-11-28T19:10:53Z",
      "updated_at": "2023-11-28T21:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1408269092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408269092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408382994",
      "pull_request_review_id": 1753471883,
      "id": 1408382994,
      "node_id": "PRRC_kwDOABII585T8jgS",
      "diff_hunk": "@@ -553,6 +560,11 @@ def on_verack(self, message):\n \n     def on_version(self, message):\n         assert message.nVersion >= MIN_P2P_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_P2P_VERSION_SUPPORTED)\n+        # reconnection using v1 P2P has happened since version message can be processed, previously queued messages are sent using v1 P2P here\n+        if self.reconnect:\n+            while self.queue_messages:\n+                message = self.queue_messages.pop(0)\n+                self.send_message(message)",
      "path": "test/functional/test_framework/p2p.py",
      "position": 316,
      "original_position": 59,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "ae8070c58f628a76d25d15eece1f9ffdd5002e26",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we at some point set `self.reconnect` to `False` again (maybe here?), so that future possible disconnections that would be unrelated will be handled correctly?",
      "created_at": "2023-11-28T20:29:23Z",
      "updated_at": "2023-11-28T21:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1408382994",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408382994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 565,
      "original_line": 565,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409537266",
      "pull_request_review_id": 1755680506,
      "id": 1409537266,
      "node_id": "PRRC_kwDOABII585UA9Ty",
      "diff_hunk": "@@ -197,6 +198,10 @@ def start(self, extra_args=None, *, cwd=None, stdout=None, stderr=None, env=None\n         \"\"\"Start the node.\"\"\"\n         if extra_args is None:\n             extra_args = self.extra_args\n+        if \"-v2transport=1\" in extra_args:\n+            self.advertise_v2_p2p = True",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 13,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "b9538c706742444a41c9e9d906baedc40f5aa91e",
      "in_reply_to_id": 1408124460,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yay! done.",
      "created_at": "2023-11-29T16:18:41Z",
      "updated_at": "2023-11-29T16:18:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409537266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409537266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409538169",
      "pull_request_review_id": 1755682114,
      "id": 1409538169,
      "node_id": "PRRC_kwDOABII585UA9h5",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 32,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": 1408222484,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good catch! done.",
      "created_at": "2023-11-29T16:19:00Z",
      "updated_at": "2023-11-29T16:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409538169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409538169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409539941",
      "pull_request_review_id": 1755685348,
      "id": 1409539941,
      "node_id": "PRRC_kwDOABII585UA99l",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:\n+                return\n+            # `complete_handshake()` computes garbage terminator + authentication packet + version packet to be sent as\n+            # response after deriving shared ECDH secret using received ellswift bytes\n+            response = self.v2_state.complete_handshake(BytesIO(self.recvbuf[length:]))\n+            self.send_raw_message(response)\n+            self.recvbuf = self.recvbuf[64:]\n+\n+        # `self.v2_state.peer` is instantiated only after shared ECDH secret/BIP324 derived keys and ciphers\n+        # is derived in `complete_handshake()`.\n+        # so `authenticate_handshake()` which uses the BIP324 derived ciphers gets called after `complete_handshake()`.\n+        if self.v2_state.peer:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 43,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": 1408245400,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you're right! i've made it an assert.\r\n\r\ni vaguely remember adding this in some older version of the branch because when `TestNode` sends transport layer packets(64 bytes ellswift, x bytes garbage, 16 bytes garbage terminator, optional decoy packets, 20 bytes transport version packet) to our python `P2PInterface`, it's not necessary that we receive all these bytes at once on the wire/have access to these bytes at once on `self.recvbuf`. Looking at this again - even without the \"`if self.v2_state.peer`\", the code paths for when 64 + 16 + 20 bytes is received or when 64 bytes, delay, 16 + 20 bytes is received works fine!",
      "created_at": "2023-11-29T16:19:35Z",
      "updated_at": "2023-11-29T16:19:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409539941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409539941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409540454",
      "pull_request_review_id": 1755686399,
      "id": 1409540454,
      "node_id": "PRRC_kwDOABII585UA-Fm",
      "diff_hunk": "@@ -231,12 +231,65 @@ def connection_lost(self, exc):\n         self.recvbuf = b\"\"\n         self.on_close()\n \n+    # v2 handshake method\n+    def v2_handshake(self):\n+        \"\"\"v2 handshake performed before P2P messages are exchanged(see BIP 324). P2PConnection is an initiator\n+        (in inbound connections to TestNode) and responder(in outbound connections from TestNode).\n+        Performed by:\n+            * initiator using `initiate_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+            * responder using `respond_v2_handshake()`, `complete_handshake()` and `authenticate_handshake()`\n+\n+        `initiate_v2_handshake()` is immediately done by the initiator when the connection is established in\n+        `connection_made()`. the rest of the initial v2 handshake functions are handled here.\n+        \"\"\"\n+        if not self.v2_state.peer:\n+            length = 0\n+            if not self.v2_state.initiating and not self.v2_state.sent_garbage:\n+                # if the responder hasn't sent garbage yet, the responder is still reading ellswift bytes\n+                ellswift_and_garbage_data = self.v2_state.respond_v2_handshake(BytesIO(self.recvbuf))\n+                length = len(self.v2_state.received_prefix)\n+                if ellswift_and_garbage_data == -1:\n+                    self.supports_v2_p2p = False\n+                    self.v2_state = None\n+                    return\n+                elif ellswift_and_garbage_data:\n+                    self.send_raw_message(ellswift_and_garbage_data)\n+\n+            # if we're the responder, read ellswift bytes till the first mismatch from 12 bytes V1_PREFIX in\n+            # `respond_v2_handshake()`.\n+            # `complete_handshake()` reads the remaining `64 - length` ellswift bytes afterwards from recvbuf.\n+            # if we're the initiator, length = 0 and 64 bytes ellswift is read from recvbuf in `complete_handshake()`\n+            if len(self.recvbuf) < 64 - length:\n+                return\n+            # `complete_handshake()` computes garbage terminator + authentication packet + version packet to be sent as\n+            # response after deriving shared ECDH secret using received ellswift bytes\n+            response = self.v2_state.complete_handshake(BytesIO(self.recvbuf[length:]))\n+            self.send_raw_message(response)\n+            self.recvbuf = self.recvbuf[64:]\n+\n+        # `self.v2_state.peer` is instantiated only after shared ECDH secret/BIP324 derived keys and ciphers\n+        # is derived in `complete_handshake()`.\n+        # so `authenticate_handshake()` which uses the BIP324 derived ciphers gets called after `complete_handshake()`.\n+        if self.v2_state.peer:\n+            # authenticate v2 handshake\n+            if len(self.recvbuf) < 16 + 20:",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 45,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "9a6b684becbffd02f24a686b965ada257fa7bfd9",
      "in_reply_to_id": 1408269092,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added!",
      "created_at": "2023-11-29T16:19:47Z",
      "updated_at": "2023-11-29T16:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409540454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409540454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409540710",
      "pull_request_review_id": 1755686870,
      "id": 1409540710,
      "node_id": "PRRC_kwDOABII585UA-Jm",
      "diff_hunk": "@@ -553,6 +560,11 @@ def on_verack(self, message):\n \n     def on_version(self, message):\n         assert message.nVersion >= MIN_P2P_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_P2P_VERSION_SUPPORTED)\n+        # reconnection using v1 P2P has happened since version message can be processed, previously queued messages are sent using v1 P2P here\n+        if self.reconnect:\n+            while self.queue_messages:\n+                message = self.queue_messages.pop(0)\n+                self.send_message(message)",
      "path": "test/functional/test_framework/p2p.py",
      "position": 316,
      "original_position": 59,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "ae8070c58f628a76d25d15eece1f9ffdd5002e26",
      "in_reply_to_id": 1408382994,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good point! done.",
      "created_at": "2023-11-29T16:19:52Z",
      "updated_at": "2023-11-29T16:19:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409540710",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409540710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 565,
      "original_line": 565,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409600332",
      "pull_request_review_id": 1755780494,
      "id": 1409600332,
      "node_id": "PRRC_kwDOABII585UBMtM",
      "diff_hunk": "@@ -4,10 +4,90 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n+from .messages import MAGIC_BYTES\n+\n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+MAX_GARBAGE_LEN = 4095\n+TRANSPORT_VERSION = b''\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 58,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: as this dictionary is only dependent on the constant `SHORTID` dict, could place it in the global namespace (e.g. as `MSGTYPE_TO_SHORTID` directly below `SHORTID`), so it only has to be calculated once if the module is loaded, and not on each `GetShortIDFromMessageType` call again",
      "created_at": "2023-11-29T16:55:09Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409600332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409600332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409605417",
      "pull_request_review_id": 1755780494,
      "id": 1409605417,
      "node_id": "PRRC_kwDOABII585UBN8p",
      "diff_hunk": "@@ -4,10 +4,90 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n+from .messages import MAGIC_BYTES\n+\n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+MAX_GARBAGE_LEN = 4095\n+TRANSPORT_VERSION = b''\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))\n+    return msgtype_to_shortid[msgtype].to_bytes(1, 'big') if msgtype in msgtype_to_shortid else b\"\\x00\"",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 59,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a little more pythonic (see https://docs.python.org/3/library/stdtypes.html#dict.get):\r\n```suggestion\r\n    return msgtype_to_shortid.get(msgtype, 0).to_bytes(1, 'big')\r\n```",
      "created_at": "2023-11-29T16:58:55Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409605417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409605417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409620992",
      "pull_request_review_id": 1755780494,
      "id": 1409620992,
      "node_id": "PRRC_kwDOABII585UBRwA",
      "diff_hunk": "@@ -18,3 +98,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 102,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\r\n```",
      "created_at": "2023-11-29T17:11:19Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409620992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409620992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409649019",
      "pull_request_review_id": 1755780494,
      "id": 1409649019,
      "node_id": "PRRC_kwDOABII585UBYl7",
      "diff_hunk": "@@ -301,23 +302,47 @@ def _on_data(self):\n         the on_message callback for processing.\"\"\"\n         try:\n             while True:\n-                if len(self.recvbuf) < 4:\n-                    return\n-                if self.recvbuf[:4] != self.magic_bytes:\n-                    raise ValueError(\"magic bytes mismatch: {} != {}\".format(repr(self.magic_bytes), repr(self.recvbuf)))\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4:\n-                    return\n-                msgtype = self.recvbuf[4:4+12].split(b\"\\x00\", 1)[0]\n-                msglen = struct.unpack(\"<i\", self.recvbuf[4+12:4+12+4])[0]\n-                checksum = self.recvbuf[4+12+4:4+12+4+4]\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4 + msglen:\n-                    return\n-                msg = self.recvbuf[4+12+4+4:4+12+4+4+msglen]\n-                th = sha256(msg)\n-                h = sha256(th)\n-                if checksum != h[:4]:\n-                    raise ValueError(\"got bad checksum \" + repr(self.recvbuf))\n-                self.recvbuf = self.recvbuf[4+12+4+4+msglen:]\n+                if self.supports_v2_p2p:\n+                    if not self.v2_state.tried_v2_handshake:\n+                        return\n+                    # v2 P2P messages are read\n+                    if len(self.recvbuf) < 3 + 1 + 16:\n+                        return\n+                    msglen, msg = self.v2_state.v2_receive_packet(self.recvbuf)\n+                    if msglen == -1:\n+                        raise ValueError(\"invalid v2 mac tag \" + repr(self.recvbuf))\n+                    self.recvbuf = self.recvbuf[msglen:]\n+                    shortid = msg[0]\n+                    if shortid == 0:\n+                        # a string command\n+                        msgtype = msg[1:13].rstrip(b'\\x00')\n+                        msg = msg[13:] # msg is set to be payload\n+                    else:\n+                        # a short id\n+                        if shortid in SHORTID:\n+                            msgtype = SHORTID[shortid]\n+                        else:\n+                            msgtype = \"unknown-\" + str(shortid)",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 49,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "07be9af55860b447edbb7069114881abdd1d85a4",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: shorter, using dict's `.get` method again:\r\n```suggestion\r\n                        msgtype = SHORTID.get(shortid, f\"unknown-{shortid}\")\r\n```",
      "created_at": "2023-11-29T17:35:08Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409649019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409649019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 322,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409654837",
      "pull_request_review_id": 1755780494,
      "id": 1409654837,
      "node_id": "PRRC_kwDOABII585UBaA1",
      "diff_hunk": "@@ -387,17 +388,29 @@ def maybe_write():\n \n     def build_message(self, message):\n         \"\"\"Build a serialized P2P message\"\"\"\n-        msgtype = message.msgtype\n-        data = message.serialize()\n-        tmsg = self.magic_bytes\n-        tmsg += msgtype\n-        tmsg += b\"\\x00\" * (12 - len(msgtype))\n-        tmsg += struct.pack(\"<I\", len(data))\n-        th = sha256(data)\n-        h = sha256(th)\n-        tmsg += h[:4]\n-        tmsg += data\n-        return tmsg\n+        if self.supports_v2_p2p:\n+            msgtype = message.msgtype\n+            data = message.serialize()",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 25,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "985791c38ff90c09dfd4fa727e326e395ebc1406",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: to deduplicate, could move these two assignments above the `if`, as they are identical in both branches",
      "created_at": "2023-11-29T17:40:40Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409654837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409654837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 392,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409687151",
      "pull_request_review_id": 1755780494,
      "id": 1409687151,
      "node_id": "PRRC_kwDOABII585UBh5v",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 58,
      "original_position": 58,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a1109bfc250263d629070bcb0763b76e9ebc1689",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "to verify each connection's transport protocol version, could additionally take the node's perspective into account via `getpeerinfo()`, e.g.:\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_v2_encrypted.py b/test/functional/p2p_v2_encrypted.py\r\nindex 177c3ed42f..8f5c4bb925 100755\r\n--- a/test/functional/p2p_v2_encrypted.py\r\n+++ b/test/functional/p2p_v2_encrypted.py\r\n@@ -56,23 +56,28 @@ class P2PEncrypted(BitcoinTestFramework):\r\n         self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\r\n         peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\r\n         assert peer1.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v2\")\r\n \r\n         self.log.info(\"Check inbound connection to v2 TestNode from v1 P2PConnection is v1\")\r\n         peer2 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=False)\r\n         assert not peer2.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v1\")\r\n \r\n         self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v1 is v1\")\r\n         peer3 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, supports_v2_p2p=False, advertise_v2_p2p=False)\r\n         assert not peer3.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v1\")\r\n \r\n         # v2 TestNode performs downgrading here\r\n         self.log.info(\"Check outbound connection from v2 TestNode to v1 P2PConnection advertised as v2 is v1\")\r\n         peer4 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, supports_v2_p2p=False, advertise_v2_p2p=True)\r\n         assert not peer4.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v1\")\r\n \r\n         self.log.info(\"Check outbound connection from v2 TestNode to v2 P2PConnection advertised as v2 is v2\")\r\n         peer5 = node0.add_outbound_p2p_connection(P2PInterface(), p2p_idx=2, supports_v2_p2p=True, advertise_v2_p2p=True)\r\n         assert peer5.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v2\")\r\n \r\n         self.log.info(\"Check if version is sent and verack is received in inbound/outbound connections\")\r\n         assert_equal(len(node0.getpeerinfo()), 5)  # check if above 5 connections are present in node0's getpeerinfo()\r\n@@ -88,6 +93,7 @@ class P2PEncrypted(BitcoinTestFramework):\r\n             # Add v2 P2P connection to node0\r\n             peer6 = node0.add_p2p_connection(P2PDataStore(), supports_v2_p2p=True)\r\n             assert peer6.supports_v2_p2p\r\n+            assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v2\")\r\n \r\n             if i:\r\n                 # check if node1 connected to node0 (but not to node0's p2p connection directly)\r\n@@ -115,6 +121,7 @@ class P2PEncrypted(BitcoinTestFramework):\r\n         self.restart_node(0, [\"-v2transport=0\"])\r\n         peer7 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\r\n         assert not peer7.supports_v2_p2p\r\n+        assert_equal(node0.getpeerinfo()[-1][\"transport_protocol_type\"], \"v1\")\r\n         check_node_connections(node=node0, num_in=1, num_out=0)\r\n```\r\n</details>\r\n(same for the downgrading check commit after)",
      "created_at": "2023-11-29T18:09:34Z",
      "updated_at": "2023-11-29T18:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409687151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409687151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 56,
      "original_start_line": 56,
      "start_side": "RIGHT",
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409717469",
      "pull_request_review_id": 1755965923,
      "id": 1409717469,
      "node_id": "PRRC_kwDOABII585UBpTd",
      "diff_hunk": "@@ -642,18 +643,30 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, mat\n                     assert_msg += \"with expected error \" + expected_msg\n                 self._raise_assertion_error(assert_msg)\n \n-    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, send_version=True, **kwargs):\n+    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, send_version=True, supports_v2_p2p=False, **kwargs):\n         \"\"\"Add an inbound p2p connection to the node.\n \n         This method adds the p2p connection to the self.p2ps list and also\n-        returns the connection to the caller.\"\"\"\n+        returns the connection to the caller.\n+\n+        When self.use_v2transport is True, TestNode advertises NODE_P2P_V2 service flag\n+\n+        An inbound connection is made from TestNode <------ P2PConnection\n+        - if TestNode doesn't advertise NODE_P2P_V2 service, P2PConnection sends version message and v1 P2P is followed\n+        - if TestNode advertises NODE_P2P_V2 service, (and if P2PConnections supports v2 P2P)\n+                P2PConnection sends ellswift bytes and v2 P2P is followed\n+        \"\"\"\n         if 'dstport' not in kwargs:\n             kwargs['dstport'] = p2p_port(self.index)\n         if 'dstaddr' not in kwargs:\n             kwargs['dstaddr'] = '127.0.0.1'\n \n         p2p_conn.p2p_connected_to_node = True\n-        p2p_conn.peer_connect(**kwargs, send_version=send_version, net=self.chain, timeout_factor=self.timeout_factor)()\n+        if self.use_v2transport:\n+            kwargs['services'] = kwargs['services']|NODE_P2P_V2 if 'services' in kwargs else P2P_SERVICES|NODE_P2P_V2",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "47e72daf656ea6dc6766f71e5c8bda5717dc5362",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, now that `use_v2transport` with the correct restart behavior is used, CI fails because it is necessary to fix the `test_service_flags` subtest from rpc_net.py already in this PR, to something like\r\n```\r\nif self.options.v2transport:\r\n    assert_equal(['UNKNOWN[2^4]', 'P2P_V2', 'UNKNOWN[2^63]'], self.nodes[0].getpeerinfo()[-1]['servicesnames'])\r\nelse:\r\n    assert_equal(['UNKNOWN[2^4]', 'UNKNOWN[2^63]'], self.nodes[0].getpeerinfo()[-1]['servicesnames'])\r\n```",
      "created_at": "2023-11-29T18:37:35Z",
      "updated_at": "2023-11-29T18:37:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1409717469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409717469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 666,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410160755",
      "pull_request_review_id": 1756640775,
      "id": 1410160755,
      "node_id": "PRRC_kwDOABII585UDVhz",
      "diff_hunk": "@@ -4,10 +4,90 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n+from .messages import MAGIC_BYTES\n+\n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+MAX_GARBAGE_LEN = 4095\n+TRANSPORT_VERSION = b''\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 58,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": 1409600332,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "great idea! done.",
      "created_at": "2023-11-30T05:08:49Z",
      "updated_at": "2023-11-30T05:08:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410160755",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410160755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161591",
      "pull_request_review_id": 1756641992,
      "id": 1410161591,
      "node_id": "PRRC_kwDOABII585UDVu3",
      "diff_hunk": "@@ -4,10 +4,90 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n+from .messages import MAGIC_BYTES\n+\n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+MAX_GARBAGE_LEN = 4095\n+TRANSPORT_VERSION = b''\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+\n+def GetShortIDFromMessageType(msgtype):\n+    \"\"\"Returns 1-byte short message type ID for the P2P message\"\"\"\n+    msgtype_to_shortid = dict(map(reversed, SHORTID.items()))\n+    return msgtype_to_shortid[msgtype].to_bytes(1, 'big') if msgtype in msgtype_to_shortid else b\"\\x00\"",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 59,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": 1409605417,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "interesting! i've kept a `MSGTYPE_TO_SHORTID` dictionary and used this construct in [`build_message`](https://github.com/bitcoin/bitcoin/blob/6567fe2aafa43b99e8298018b0665222eec4daff/test/functional/test_framework/p2p.py#L398).",
      "created_at": "2023-11-30T05:10:27Z",
      "updated_at": "2023-11-30T05:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410161591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161655",
      "pull_request_review_id": 1756642068,
      "id": 1410161655,
      "node_id": "PRRC_kwDOABII585UDVv3",
      "diff_hunk": "@@ -18,3 +98,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(\"sending %d bytes of garbage data\" % garbage_len)",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": null,
      "original_position": 102,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "95d57de31f6e1fd251ffb1db4dd6959cf4f90a36",
      "in_reply_to_id": 1409620992,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-30T05:10:32Z",
      "updated_at": "2023-11-30T05:10:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410161655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161736",
      "pull_request_review_id": 1756642205,
      "id": 1410161736,
      "node_id": "PRRC_kwDOABII585UDVxI",
      "diff_hunk": "@@ -301,23 +302,47 @@ def _on_data(self):\n         the on_message callback for processing.\"\"\"\n         try:\n             while True:\n-                if len(self.recvbuf) < 4:\n-                    return\n-                if self.recvbuf[:4] != self.magic_bytes:\n-                    raise ValueError(\"magic bytes mismatch: {} != {}\".format(repr(self.magic_bytes), repr(self.recvbuf)))\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4:\n-                    return\n-                msgtype = self.recvbuf[4:4+12].split(b\"\\x00\", 1)[0]\n-                msglen = struct.unpack(\"<i\", self.recvbuf[4+12:4+12+4])[0]\n-                checksum = self.recvbuf[4+12+4:4+12+4+4]\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4 + msglen:\n-                    return\n-                msg = self.recvbuf[4+12+4+4:4+12+4+4+msglen]\n-                th = sha256(msg)\n-                h = sha256(th)\n-                if checksum != h[:4]:\n-                    raise ValueError(\"got bad checksum \" + repr(self.recvbuf))\n-                self.recvbuf = self.recvbuf[4+12+4+4+msglen:]\n+                if self.supports_v2_p2p:\n+                    if not self.v2_state.tried_v2_handshake:\n+                        return\n+                    # v2 P2P messages are read\n+                    if len(self.recvbuf) < 3 + 1 + 16:\n+                        return\n+                    msglen, msg = self.v2_state.v2_receive_packet(self.recvbuf)\n+                    if msglen == -1:\n+                        raise ValueError(\"invalid v2 mac tag \" + repr(self.recvbuf))\n+                    self.recvbuf = self.recvbuf[msglen:]\n+                    shortid = msg[0]\n+                    if shortid == 0:\n+                        # a string command\n+                        msgtype = msg[1:13].rstrip(b'\\x00')\n+                        msg = msg[13:] # msg is set to be payload\n+                    else:\n+                        # a short id\n+                        if shortid in SHORTID:\n+                            msgtype = SHORTID[shortid]\n+                        else:\n+                            msgtype = \"unknown-\" + str(shortid)",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 49,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "07be9af55860b447edbb7069114881abdd1d85a4",
      "in_reply_to_id": 1409649019,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yay! looks pythonic! done.",
      "created_at": "2023-11-30T05:10:42Z",
      "updated_at": "2023-11-30T05:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410161736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 322,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161807",
      "pull_request_review_id": 1756642260,
      "id": 1410161807,
      "node_id": "PRRC_kwDOABII585UDVyP",
      "diff_hunk": "@@ -387,17 +388,29 @@ def maybe_write():\n \n     def build_message(self, message):\n         \"\"\"Build a serialized P2P message\"\"\"\n-        msgtype = message.msgtype\n-        data = message.serialize()\n-        tmsg = self.magic_bytes\n-        tmsg += msgtype\n-        tmsg += b\"\\x00\" * (12 - len(msgtype))\n-        tmsg += struct.pack(\"<I\", len(data))\n-        th = sha256(data)\n-        h = sha256(th)\n-        tmsg += h[:4]\n-        tmsg += data\n-        return tmsg\n+        if self.supports_v2_p2p:\n+            msgtype = message.msgtype\n+            data = message.serialize()",
      "path": "test/functional/test_framework/p2p.py",
      "position": null,
      "original_position": 25,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "985791c38ff90c09dfd4fa727e326e395ebc1406",
      "in_reply_to_id": 1409654837,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-11-30T05:10:47Z",
      "updated_at": "2023-11-30T05:10:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410161807",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": 392,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161873",
      "pull_request_review_id": 1756642336,
      "id": 1410161873,
      "node_id": "PRRC_kwDOABII585UDVzR",
      "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test encrypted v2 p2p proposed in BIP 324\n+\"\"\"\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    check_node_connections,\n+)\n+from test_framework.crypto.chacha20 import REKEY_INTERVAL\n+\n+\n+class P2PEncrypted(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-v2transport=1\"], [\"-v2transport=1\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def generate_blocks(self, node, number):\n+        test_blocks = []\n+        last_block = node.getbestblockhash()\n+        tip = int(last_block, 16)\n+        tipheight = node.getblockcount()\n+        last_block_time = node.getblock(last_block)['time']\n+        for _ in range(number):\n+            # Create some blocks\n+            block = create_block(tip, create_coinbase(tipheight + 1), last_block_time + 1)\n+            block.solve()\n+            test_blocks.append(block)\n+            tip = block.sha256\n+            tipheight += 1\n+            last_block_time += 1\n+        return test_blocks\n+\n+    def create_test_block(self, txs):\n+        block = create_block(self.tip, create_coinbase(self.tipheight + 1), self.last_block_time + 600, txlist=txs)\n+        block.solve()\n+        return block\n+\n+    def run_test(self):\n+        node0, node1 = self.nodes[0], self.nodes[1]\n+        self.log.info(\"Check inbound connections to v2 TestNode from v2 P2PConnection is v2\")\n+        peer1 = node0.add_p2p_connection(P2PInterface(), wait_for_verack=True, supports_v2_p2p=True)\n+        assert peer1.supports_v2_p2p",
      "path": "test/functional/p2p_v2_encrypted.py",
      "position": 58,
      "original_position": 58,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "a1109bfc250263d629070bcb0763b76e9ebc1689",
      "in_reply_to_id": 1409687151,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good suggestion! done.",
      "created_at": "2023-11-30T05:10:53Z",
      "updated_at": "2023-11-30T05:10:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410161873",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410161873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 56,
      "original_start_line": 56,
      "start_side": "RIGHT",
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410162030",
      "pull_request_review_id": 1756642573,
      "id": 1410162030,
      "node_id": "PRRC_kwDOABII585UDV1u",
      "diff_hunk": "@@ -642,18 +643,30 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, mat\n                     assert_msg += \"with expected error \" + expected_msg\n                 self._raise_assertion_error(assert_msg)\n \n-    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, send_version=True, **kwargs):\n+    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, send_version=True, supports_v2_p2p=False, **kwargs):\n         \"\"\"Add an inbound p2p connection to the node.\n \n         This method adds the p2p connection to the self.p2ps list and also\n-        returns the connection to the caller.\"\"\"\n+        returns the connection to the caller.\n+\n+        When self.use_v2transport is True, TestNode advertises NODE_P2P_V2 service flag\n+\n+        An inbound connection is made from TestNode <------ P2PConnection\n+        - if TestNode doesn't advertise NODE_P2P_V2 service, P2PConnection sends version message and v1 P2P is followed\n+        - if TestNode advertises NODE_P2P_V2 service, (and if P2PConnections supports v2 P2P)\n+                P2PConnection sends ellswift bytes and v2 P2P is followed\n+        \"\"\"\n         if 'dstport' not in kwargs:\n             kwargs['dstport'] = p2p_port(self.index)\n         if 'dstaddr' not in kwargs:\n             kwargs['dstaddr'] = '127.0.0.1'\n \n         p2p_conn.p2p_connected_to_node = True\n-        p2p_conn.peer_connect(**kwargs, send_version=send_version, net=self.chain, timeout_factor=self.timeout_factor)()\n+        if self.use_v2transport:\n+            kwargs['services'] = kwargs['services']|NODE_P2P_V2 if 'services' in kwargs else P2P_SERVICES|NODE_P2P_V2",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "47e72daf656ea6dc6766f71e5c8bda5717dc5362",
      "in_reply_to_id": 1409717469,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "missed that! i've updated the subtest in `rpc_net.py`.",
      "created_at": "2023-11-30T05:11:12Z",
      "updated_at": "2023-11-30T05:11:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1410162030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410162030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 666,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418061039",
      "pull_request_review_id": 1768762854,
      "id": 1418061039,
      "node_id": "PRRC_kwDOABII585UheTv",
      "diff_hunk": "@@ -163,6 +163,7 @@ def __init__(self):\n         # The underlying transport of the connection.\n         # Should only call methods on this from the NetworkThread, c.f. call_soon_threadsafe\n         self._transport = None\n+        self._send_lock = threading.Lock()",
      "path": "test/functional/test_framework/p2p.py",
      "position": 38,
      "original_position": 4,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "bc26a862b06257ce922b586ac5a7751e61e45e4b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One thing to consider is that now we have two locks for p2p, we need to worry about deadlocks.\r\nThere is an implied lock order, `on_message` locks `p2p_lock`, and can call messages (e.g. `on_inv`) that will call `send_message` and lock `_send_lock`. So we must make sure never to take `p2p_lock` after `_send_lock`. I don't think that this is currently possible, but maybe we should add a comment about this.",
      "created_at": "2023-12-06T22:43:13Z",
      "updated_at": "2023-12-06T22:47:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1418061039",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418061039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 167,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419447076",
      "pull_request_review_id": 1770812972,
      "id": 1419447076,
      "node_id": "PRRC_kwDOABII585Umwsk",
      "diff_hunk": "@@ -4,10 +4,87 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for v2 P2P protocol (see BIP 324)\"\"\"\n \n-from .crypto.ellswift import ellswift_ecdh_xonly\n+import logging\n+import random\n+\n+from .crypto.bip324_cipher import FSChaCha20Poly1305\n+from .crypto.chacha20 import FSChaCha20\n+from .crypto.ellswift import ellswift_create, ellswift_ecdh_xonly\n+from .crypto.hkdf import hkdf_sha256\n from .key import TaggedHash\n+from .messages import MAGIC_BYTES\n+\n+logger = logging.getLogger(\"TestFramework.v2_p2p\")\n+\n+CHACHA20POLY1305_EXPANSION = 16\n+HEADER_LEN = 1\n+IGNORE_BIT_POS = 7\n+LENGTH_FIELD_LEN = 3\n+MAX_GARBAGE_LEN = 4095\n+TRANSPORT_VERSION = b''\n+\n+SHORTID = {\n+    1: b\"addr\",\n+    2: b\"block\",\n+    3: b\"blocktxn\",\n+    4: b\"cmpctblock\",\n+    5: b\"feefilter\",\n+    6: b\"filteradd\",\n+    7: b\"filterclear\",\n+    8: b\"filterload\",\n+    9: b\"getblocks\",\n+    10: b\"getblocktxn\",\n+    11: b\"getdata\",\n+    12: b\"getheaders\",\n+    13: b\"headers\",\n+    14: b\"inv\",\n+    15: b\"mempool\",\n+    16: b\"merkleblock\",\n+    17: b\"notfound\",\n+    18: b\"ping\",\n+    19: b\"pong\",\n+    20: b\"sendcmpct\",\n+    21: b\"tx\",\n+    22: b\"getcfilters\",\n+    23: b\"cfilter\",\n+    24: b\"getcfheaders\",\n+    25: b\"cfheaders\",\n+    26: b\"getcfcheckpt\",\n+    27: b\"cfcheckpt\",\n+    28: b\"addrv2\",\n+}\n+\n+# Dictionary which contains short message type ID for the P2P message\n+MSGTYPE_TO_SHORTID = {msgtype: shortid for shortid, msgtype in SHORTID.items()}\n+\n \n class EncryptedP2PState:\n+    \"\"\"A class for performing v2 P2P protocol functions on P2PConnection:",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 62,
      "original_position": 60,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[test] Construct class to handle v2 P2P protocol functions\"\r\n\r\nIt would be helpful to explain what the return value of the various functions in this class means. In several cases the return value seems to be bytes-that-should-be-sent-to-the-peer, but there are exceptions (-1 meaning downgrade for `respond_v2_handshake`, and `v2_ecdh` returning the shared secret).",
      "created_at": "2023-12-07T18:32:41Z",
      "updated_at": "2023-12-07T19:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419447076",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419447076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419473256",
      "pull_request_review_id": 1770812972,
      "id": 1419473256,
      "node_id": "PRRC_kwDOABII585Um3Fo",
      "diff_hunk": "@@ -18,3 +95,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        return self.generate_keypair_and_garbage()\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte v1_prefix.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            v1_prefix = MAGIC_BYTES[self.net] + b'version\\x00\\x00\\x00\\x00\\x00'\n+            if self.received_prefix[-1] != v1_prefix[len(self.received_prefix) - 1]:\n+                return self.generate_keypair_and_garbage()\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 138,
      "original_position": 133,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[test] Construct class to handle v2 P2P protocol functions\"\r\n\r\nIt seems a bit strange to always send exactly 10 decoy packets before the version packet. Maybe randomize that too?",
      "created_at": "2023-12-07T18:55:33Z",
      "updated_at": "2023-12-07T19:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419473256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419473256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419502857",
      "pull_request_review_id": 1770812972,
      "id": 1419502857,
      "node_id": "PRRC_kwDOABII585Um-UJ",
      "diff_hunk": "@@ -18,3 +95,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        return self.generate_keypair_and_garbage()\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte v1_prefix.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            v1_prefix = MAGIC_BYTES[self.net] + b'version\\x00\\x00\\x00\\x00\\x00'\n+            if self.received_prefix[-1] != v1_prefix[len(self.received_prefix) - 1]:\n+                return self.generate_keypair_and_garbage()\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(MAX_GARBAGE_LEN + 1):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't\n+                    if length == LENGTH_FIELD_LEN + HEADER_LEN + CHACHA20POLY1305_EXPANSION:\n+                        self.tried_v2_handshake = True\n+                        return processed_length, True\n+                    response = response[length:]\n+            else:\n+                # don't update recvbuf since more bytes need to be received\n+                if len(response) == 0:\n+                    return 0, True\n+                received_garbage += response[:1]\n+                processed_length += 1\n+                response = response[1:]\n+        # disconnect since garbage terminator was not seen after 4 KiB of garbage.\n+        return processed_length, False\n+\n+    def initialize_v2_transport(self, ecdh_secret):\n+        \"\"\"Sets the peer object with various BIP324 derived keys and ciphers.\"\"\"\n+        peer = {}\n+        salt = b'bitcoin_v2_shared_secret' + MAGIC_BYTES[self.net]\n+        for name, length in (('initiator_L', 32), ('initiator_P', 32), ('responder_L', 32), ('responder_P', 32),\n+                             ('garbage_terminators', 32), ('session_id', 32)):\n+            peer[name] = hkdf_sha256(salt=salt, ikm=ecdh_secret, info=name.encode('utf-8'), length=length)\n+        peer['initiator_garbage_terminator'] = peer['garbage_terminators'][:16]\n+        peer['responder_garbage_terminator'] = peer['garbage_terminators'][16:]\n+        del peer['garbage_terminators']\n+        if self.initiating:\n+            self.peer['send_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['send_garbage_terminator'] = peer['initiator_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['recv_garbage_terminator'] = peer['responder_garbage_terminator']\n+        else:\n+            self.peer['send_L'] = FSChaCha20(peer['responder_L'])\n+            self.peer['send_P'] = FSChaCha20Poly1305(peer['responder_P'])\n+            self.peer['send_garbage_terminator'] = peer['responder_garbage_terminator']\n+            self.peer['recv_L'] = FSChaCha20(peer['initiator_L'])\n+            self.peer['recv_P'] = FSChaCha20Poly1305(peer['initiator_P'])\n+            self.peer['recv_garbage_terminator'] = peer['initiator_garbage_terminator']\n+        self.peer['session_id'] = peer['session_id']\n+\n+    def v2_enc_packet(self, contents, aad=b'', ignore=False):\n+        \"\"\"Encrypt a BIP324 packet.\"\"\"\n+        assert len(contents) <= 2**24 - 1\n+        header = (ignore << IGNORE_BIT_POS).to_bytes(HEADER_LEN, 'little')\n+        plaintext = header + contents\n+        aead_ciphertext = self.peer['send_P'].encrypt(aad, plaintext)\n+        enc_plaintext_len = self.peer['send_L'].crypt(len(contents).to_bytes(LENGTH_FIELD_LEN, 'little'))\n+        return enc_plaintext_len + aead_ciphertext\n+\n+    def v2_receive_packet(self, response, aad=b''):\n+        \"\"\"Decrypt a BIP324 packet\n+        Returns:\n+            1. length - length of packet processed in order to update recvbuf.\n+                      - return 0 if only part of packet is received. (recvbuf not updated since decryption not done yet)\n+                      - return -1 if there's a MAC tag mismatch and disconnect.\n+            2. decrypted packet contents\n+                     - return b\"\" if only part of packet is received/MAC tag mismatch.",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 225,
      "original_position": 220,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[test] Construct class to handle v2 P2P protocol functions\"\r\n\r\nAs I understand it, this function does not distinguish between \"valid packet with 0-byte contents\" and \"decoy packet\", which I believe is incorrect (the version packet can have 0-byte contents, but if it's a decoy, we should still listen for more packets). This isn't caught because Bitcoin Core's V2Transport implementation never sends decoys, but if it did, I believe the tests would break.\r\n\r\nMy suggestion would be to return `None` instead of `b\"\"` for decoys.",
      "created_at": "2023-12-07T19:22:31Z",
      "updated_at": "2023-12-07T19:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419502857",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419502857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 225,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419509492",
      "pull_request_review_id": 1770812972,
      "id": 1419509492,
      "node_id": "PRRC_kwDOABII585Um_70",
      "diff_hunk": "@@ -18,3 +95,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        return self.generate_keypair_and_garbage()\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte v1_prefix.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            v1_prefix = MAGIC_BYTES[self.net] + b'version\\x00\\x00\\x00\\x00\\x00'\n+            if self.received_prefix[-1] != v1_prefix[len(self.received_prefix) - 1]:\n+                return self.generate_keypair_and_garbage()\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(MAX_GARBAGE_LEN + 1):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length\n+                    aad = b\"\"\n+                    if length == -1:\n+                        return processed_length, False\n+                    elif length == 0:\n+                        return 0, True\n+                    # currently version packet has empty content while decoy packets don't",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 168,
      "original_position": 163,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[test] Construct class to handle v2 P2P protocol functions\"\r\n\r\nI don't think we should be hardcoding this assumption. Decoy packets with 0-byte contents are very much correct and possibly useful. See my other comment on `v2_receive_packet` about distinguishing decoys from 0-byte content packets.",
      "created_at": "2023-12-07T19:28:15Z",
      "updated_at": "2023-12-07T19:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419509492",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419509492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 168,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419512254",
      "pull_request_review_id": 1770812972,
      "id": 1419512254,
      "node_id": "PRRC_kwDOABII585UnAm-",
      "diff_hunk": "@@ -199,8 +211,13 @@ def connection_made(self, transport):\n         assert not self._transport\n         logger.debug(\"Connected & Listening: %s:%d\" % (self.dstaddr, self.dstport))\n         self._transport = transport\n+        # in an inbound connection to the TestNode, P2PConnection is the initiator. [TestNode <---- P2PConnection]\n+        # ellswift is generated and sent immediately to begin the initial v2 handshake.\n+        if self.supports_v2_p2p and self.v2_state.initiating and not self.v2_state.tried_v2_handshake:\n+            ellswift_and_garbage_data = self.v2_state.initiate_v2_handshake()",
      "path": "test/functional/test_framework/p2p.py",
      "position": 79,
      "original_position": 52,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "e378d8af14e302fb34900c403d698445ade5f582",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[test] Introduce EncryptedP2PState object in P2PConnection\"\r\n\r\nNit: I'd find it a bit cleaner to *not* give this variable such an accurate name for reasons of abstractions. The code here shouldn't care about *what* it is that the `EncryptedP2PState` tells us to send; it should just be sent. Maybe call it \"send_handshake_bytes\" ?",
      "created_at": "2023-12-07T19:30:17Z",
      "updated_at": "2023-12-07T19:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419512254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419512254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419733098",
      "pull_request_review_id": 1771245412,
      "id": 1419733098,
      "node_id": "PRRC_kwDOABII585Un2hq",
      "diff_hunk": "@@ -18,3 +95,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        return self.generate_keypair_and_garbage()\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte v1_prefix.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            v1_prefix = MAGIC_BYTES[self.net] + b'version\\x00\\x00\\x00\\x00\\x00'\n+            if self.received_prefix[-1] != v1_prefix[len(self.received_prefix) - 1]:\n+                return self.generate_keypair_and_garbage()\n+        # return -1 to decide v1 only after all 16 bytes processed\n+        return -1\n+\n+    def complete_handshake(self, response):\n+        \"\"\" Instantiates the encrypted transport and\n+        sends garbage terminator + optional decoy packets + transport version packet.\n+        Done by both initiator and responder.\"\"\"\n+        received_prefix = b'' if self.initiating else self.received_prefix\n+        ellswift_theirs = received_prefix + response.read(64 - len(received_prefix))\n+        ecdh_secret = self.v2_ecdh(self.privkey_ours, ellswift_theirs, self.ellswift_ours, self.initiating)\n+        self.initialize_v2_transport(ecdh_secret)\n+        # Send garbage terminator\n+        msg_to_send = self.peer['send_garbage_terminator']\n+        # Optionally send decoy packets after garbage terminator.\n+        aad = self.sent_garbage\n+        for decoy_content_len in [random.randint(1, 100) for _ in range(10)]:\n+            msg_to_send += self.v2_enc_packet(decoy_content_len * b'\\x00', aad=aad, ignore=True)\n+            aad = b''\n+        # Send version packet.\n+        msg_to_send += self.v2_enc_packet(TRANSPORT_VERSION, aad=aad)\n+        return msg_to_send\n+\n+    def authenticate_handshake(self, response):\n+        \"\"\" Ensures that the received optional decoy packets and transport version packet are authenticated.\n+        Marks the v2 handshake as complete. Done by both initiator and responder.\n+        Returns:\n+            1. length of bytes that were processed so that recvbuf can be updated\n+            2. True if the authentication was successful/more bytes need to be received and False otherwise\n+        \"\"\"\n+        received_garbage = response[:16]\n+        response = response[16:]\n+        processed_length = len(received_garbage)\n+        for i in range(MAX_GARBAGE_LEN + 1):\n+            if received_garbage[-16:] == self.peer['recv_garbage_terminator']:\n+                # Receive, decode, and ignore version packet.\n+                # This includes skipping decoys and authenticating the received garbage.\n+                aad = received_garbage[:-16]\n+                while not self.tried_v2_handshake:\n+                    length, contents = self.v2_receive_packet(response, aad=aad)\n+                    processed_length += length",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 162,
      "original_position": 157,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If the length returned by `v2_receive_packet(...)` is -1 due to a MAC tag mismatch, `processed_length` is decreased by one here, which is very likely unintended. Currently this is not a problem (the call-site in the later introduced method `P2PConnection.v2_handshake` throws an exception then anyways and doesn't do anything with the returned length), but it's probably better if the `processed_length` increase happens after the length-checks and returns a few lines below.",
      "created_at": "2023-12-07T22:37:31Z",
      "updated_at": "2023-12-08T00:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419733098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419733098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 161,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 162,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419736521",
      "pull_request_review_id": 1771245412,
      "id": 1419736521,
      "node_id": "PRRC_kwDOABII585Un3XJ",
      "diff_hunk": "@@ -18,3 +95,148 @@ def v2_ecdh(priv, ellswift_theirs, ellswift_ours, initiating):\n         else:\n             # Responding, place their public key encoding first.\n             return TaggedHash(\"bip324_ellswift_xonly_ecdh\", ellswift_theirs + ellswift_ours + ecdh_point_x32)\n+\n+    def generate_keypair_and_garbage(self):\n+        \"\"\"Generates ellswift keypair and 4095 bytes garbage at max\"\"\"\n+        self.privkey_ours, self.ellswift_ours = ellswift_create()\n+        garbage_len = random.randrange(MAX_GARBAGE_LEN + 1)\n+        self.sent_garbage = random.randbytes(garbage_len)\n+        logger.debug(f\"sending {garbage_len} bytes of garbage data\")\n+        return self.ellswift_ours + self.sent_garbage\n+\n+    def initiate_v2_handshake(self):\n+        \"\"\"Initiator begins the v2 handshake by sending its ellswift bytes and garbage\"\"\"\n+        return self.generate_keypair_and_garbage()\n+\n+    def respond_v2_handshake(self, response):\n+        \"\"\"Responder begins the v2 handshake by sending its ellswift bytes and garbage. However, the responder\n+        sends this after having received at least one byte that mismatches 16-byte v1_prefix.\"\"\"\n+        while len(self.received_prefix) < 16:\n+            byte = response.read(1)\n+            # return b\"\" if we need to receive more bytes\n+            if not byte:\n+                return b\"\"\n+            self.received_prefix += byte\n+            v1_prefix = MAGIC_BYTES[self.net] + b'version\\x00\\x00\\x00\\x00\\x00'",
      "path": "test/functional/test_framework/v2_p2p.py",
      "position": 120,
      "original_position": 115,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "1e070587145a307477328bd313b2eebf72d3a208",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: as the `v1_prefix` only depends on `self.net` and never changes, could set it once before the loop (or even in the constructor and store it as member, if we'd ever need it somewhere else), rather than repeatedly on each iteration.",
      "created_at": "2023-12-07T22:41:55Z",
      "updated_at": "2023-12-08T00:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419736521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419736521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419777979",
      "pull_request_review_id": 1771245412,
      "id": 1419777979,
      "node_id": "PRRC_kwDOABII585UoBe7",
      "diff_hunk": "@@ -301,23 +302,44 @@ def _on_data(self):\n         the on_message callback for processing.\"\"\"\n         try:\n             while True:\n-                if len(self.recvbuf) < 4:\n-                    return\n-                if self.recvbuf[:4] != self.magic_bytes:\n-                    raise ValueError(\"magic bytes mismatch: {} != {}\".format(repr(self.magic_bytes), repr(self.recvbuf)))\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4:\n-                    return\n-                msgtype = self.recvbuf[4:4+12].split(b\"\\x00\", 1)[0]\n-                msglen = struct.unpack(\"<i\", self.recvbuf[4+12:4+12+4])[0]\n-                checksum = self.recvbuf[4+12+4:4+12+4+4]\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4 + msglen:\n-                    return\n-                msg = self.recvbuf[4+12+4+4:4+12+4+4+msglen]\n-                th = sha256(msg)\n-                h = sha256(th)\n-                if checksum != h[:4]:\n-                    raise ValueError(\"got bad checksum \" + repr(self.recvbuf))\n-                self.recvbuf = self.recvbuf[4+12+4+4+msglen:]\n+                if self.supports_v2_p2p:\n+                    if not self.v2_state.tried_v2_handshake:\n+                        return\n+                    # v2 P2P messages are read\n+                    if len(self.recvbuf) < 3 + 1 + 16:\n+                        return\n+                    msglen, msg = self.v2_state.v2_receive_packet(self.recvbuf)\n+                    if msglen == -1:\n+                        raise ValueError(\"invalid v2 mac tag \" + repr(self.recvbuf))\n+                    self.recvbuf = self.recvbuf[msglen:]\n+                    shortid = msg[0]\n+                    if shortid == 0:\n+                        # a string command\n+                        msgtype = msg[1:13].rstrip(b'\\x00')\n+                        msg = msg[13:]  # msg is set to be payload",
      "path": "test/functional/test_framework/p2p.py",
      "position": 199,
      "original_position": 43,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "74187afea19284f1ccf576321a57ff18b6e2b1d0",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could check that `msg` has the required minimum length (13) and raise an error if it doesn't, to avoid a potential index out-of-bounds exception (even though this is more theoretical now, as bitcoind wouldn't send such an invalid message).",
      "created_at": "2023-12-07T23:53:04Z",
      "updated_at": "2023-12-08T00:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419777979",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419777979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 324,
      "original_start_line": 317,
      "start_side": "RIGHT",
      "line": 326,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419779955",
      "pull_request_review_id": 1771245412,
      "id": 1419779955,
      "node_id": "PRRC_kwDOABII585UoB9z",
      "diff_hunk": "@@ -301,23 +302,44 @@ def _on_data(self):\n         the on_message callback for processing.\"\"\"\n         try:\n             while True:\n-                if len(self.recvbuf) < 4:\n-                    return\n-                if self.recvbuf[:4] != self.magic_bytes:\n-                    raise ValueError(\"magic bytes mismatch: {} != {}\".format(repr(self.magic_bytes), repr(self.recvbuf)))\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4:\n-                    return\n-                msgtype = self.recvbuf[4:4+12].split(b\"\\x00\", 1)[0]\n-                msglen = struct.unpack(\"<i\", self.recvbuf[4+12:4+12+4])[0]\n-                checksum = self.recvbuf[4+12+4:4+12+4+4]\n-                if len(self.recvbuf) < 4 + 12 + 4 + 4 + msglen:\n-                    return\n-                msg = self.recvbuf[4+12+4+4:4+12+4+4+msglen]\n-                th = sha256(msg)\n-                h = sha256(th)\n-                if checksum != h[:4]:\n-                    raise ValueError(\"got bad checksum \" + repr(self.recvbuf))\n-                self.recvbuf = self.recvbuf[4+12+4+4+msglen:]\n+                if self.supports_v2_p2p:\n+                    if not self.v2_state.tried_v2_handshake:\n+                        return\n+                    # v2 P2P messages are read\n+                    if len(self.recvbuf) < 3 + 1 + 16:\n+                        return",
      "path": "test/functional/test_framework/p2p.py",
      "position": 188,
      "original_position": 34,
      "commit_id": "f479a99cc92c7966266804e8c33338cebbc44fbc",
      "original_commit_id": "74187afea19284f1ccf576321a57ff18b6e2b1d0",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this early check needed? I think `v2_receive_packet` already takes care of these \"only part of packet is received\" cases and indicates this with a corresponding return code.",
      "created_at": "2023-12-07T23:56:54Z",
      "updated_at": "2023-12-08T00:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24748#discussion_r1419779955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419779955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748"
        }
      },
      "start_line": 314,
      "original_start_line": 309,
      "start_side": "RIGHT",
      "line": 315,
      "original_line": 310,
      "side": "RIGHT"
    }
  ]
}