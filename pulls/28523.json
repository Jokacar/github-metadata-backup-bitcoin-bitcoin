{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523",
    "id": 1527476981,
    "node_id": "PR_kwDOABII585bC3L1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28523",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28523.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28523.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
    "number": 28523,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rpc: add hidden getrawaddrman RPC to list addrman table entries",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Inspired by `getaddrmaninfo` (#27511), this adds a hidden/test-only `getrawaddrman` RPC. The RPC returns information on all addresses in the address manager new and tried tables. Addrman table contents can be used in tests and during development. \r\n\r\nThe RPC result encodes the `bucket` and `position`, the internal location of addresses in the tables, in the address object's string key. This allows users to choose to consume or to ignore the location information. If the internals of the address manager implementation change, the location encoding might change too.  \r\n\r\n```\r\ngetrawaddrman\r\n\r\nEXPERIMENTAL warning: this call may be changed in future releases.\r\n\r\nReturns information on all address manager entries for the new and tried tables.\r\n\r\nResult:\r\n{                                  (json object)\r\n  \"table\" : {                      (json object) buckets with addresses in the address manager table ( new, tried )\r\n    \"bucket/position\" : {          (json object) the location in the address manager table (<bucket>/<position>)\r\n      \"address\" : \"str\",           (string) The address of the node\r\n      \"port\" : n,                  (numeric) The port number of the node\r\n      \"network\" : \"str\",           (string) The network (ipv4, ipv6, onion, i2p, cjdns) of the address\r\n      \"services\" : n,              (numeric) The services offered by the node\r\n      \"time\" : xxx,                (numeric) The UNIX epoch time when the node was last seen\r\n      \"source\" : \"str\",            (string) The address that relayed the address to us\r\n      \"source_network\" : \"str\"     (string) The network (ipv4, ipv6, onion, i2p, cjdns) of the source address\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nExamples:\r\n> bitcoin-cli getrawaddrman\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getrawaddrman\", \"params\": []}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2023-09-23T17:48:13Z",
    "updated_at": "2023-10-13T09:02:39Z",
    "closed_at": "2023-10-03T15:38:37Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-10-03T15:38:36Z",
    "merge_commit_sha": "01bd9d7b991bf8b79748ba5b3c76839a0d3bb5a4",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "0xB10C:2023-09-verbose-getaddrmaninfo",
      "ref": "2023-09-verbose-getaddrmaninfo",
      "sha": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 184896538,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODQ4OTY1Mzg=",
        "name": "bitcoin",
        "full_name": "0xB10C/bitcoin",
        "owner": {
          "login": "0xB10C",
          "id": 19157360,
          "node_id": "MDQ6VXNlcjE5MTU3MzYw",
          "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/0xB10C",
          "html_url": "https://github.com/0xB10C",
          "followers_url": "https://api.github.com/users/0xB10C/followers",
          "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
          "organizations_url": "https://api.github.com/users/0xB10C/orgs",
          "repos_url": "https://api.github.com/users/0xB10C/repos",
          "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/0xB10C/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/0xB10C/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/0xB10C/bitcoin",
        "archive_url": "https://api.github.com/repos/0xB10C/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/0xB10C/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/0xB10C/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/0xB10C/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/0xB10C/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/0xB10C/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/0xB10C/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/0xB10C/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/0xB10C/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/0xB10C/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/0xB10C/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/0xB10C/bitcoin/events",
        "forks_url": "https://api.github.com/repos/0xB10C/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/0xB10C/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/0xB10C/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/0xB10C/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/0xB10C/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/0xB10C/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/0xB10C/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/0xB10C/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/0xB10C/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/0xB10C/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/0xB10C/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/0xB10C/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/0xB10C/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:0xB10C/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/0xB10C/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/0xB10C/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/0xB10C/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/0xB10C/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/0xB10C/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/0xB10C/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/0xB10C/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/0xB10C/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/0xB10C/bitcoin/hooks",
        "svn_url": "https://github.com/0xB10C/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 228364,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-06T12:35:57Z",
        "created_at": "2019-05-04T13:11:05Z",
        "updated_at": "2022-08-30T07:36:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8909667ab8a65478e0eaa6495299305ad836e835",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35821,
        "stargazers_count": 71790,
        "watchers_count": 71790,
        "size": 241490,
        "default_branch": "master",
        "open_issues_count": 628,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-13T09:39:28Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-10-13T07:46:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 239,
    "deletions": 1,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 30,
    "comments": 18
  },
  "events": [
    {
      "event": "commented",
      "id": 1732374516,
      "node_id": "IC_kwDOABII585nQe_0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1732374516",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T17:48:15Z",
      "updated_at": "2023-10-03T15:38:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [willcl-ark](https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1743069520), [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1743537409), [stratospher](https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1744103792), [achow101](https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1745233631) |\n| Concept ACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1647790432) |\n| Stale ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1652644055) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28565](https://github.com/bitcoin/bitcoin/pull/28565) (rpc: getaddrmaninfo followups by stratospher)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1732374516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "labeled",
      "id": 10453724785,
      "node_id": "LE_lADOABII585x14OhzwAAAAJvFy5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10453724785",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T17:48:17Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 1732390179,
      "node_id": "IC_kwDOABII585nQi0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1732390179",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T19:10:37Z",
      "updated_at": "2023-09-23T19:10:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK. I think it makes sense to expose more info about the addrman internals to allow for better observations & tooling ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1732390179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-24T00:46:09Z",
      "updated_at": "2023-09-24T00:46:09Z",
      "source": {
        "issue": {
          "id": 1678790809,
          "node_id": "PR_kwDOABII585O4GIc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27511",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27511/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27511/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27511/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27511",
          "number": 27511,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add test-only RPC getaddrmaninfo for new/tried table address count",
          "body": "implements https://github.com/bitcoin/bitcoin/issues/26907. split off from #26988 to keep RPC, CLI discussions separate.\r\n\r\nThis PR introduces a new RPC `getaddrmaninfo`which returns the count of addresses in the new/tried table of a node's addrman broken down by network type. This would be useful for users who want to see the distribution of addresses from different networks across new/tried table in the addrman.\r\n\r\n```jsx\r\n$ getaddrmaninfo\r\n\r\nResult:\r\n{                   (json object) json object with network type as keys\r\n  \"network\" : {     (json object) The network (ipv4, ipv6, onion, i2p, cjdns)\r\n    \"new\" : n,      (numeric) number of addresses in new table\r\n    \"tried\" : n,    (numeric) number of addresses in tried table\r\n    \"total\" : n     (numeric) total number of addresses in both new/tried tables from a network\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\n### additional context from [original PR](https://github.com/bitcoin/bitcoin/pull/26988)\r\n\r\n1. network coverage tests were skipped because there’s a small chance that addresses from different networks could hash to the same bucket and cause count of different network addresses in the tests to fail. see https://github.com/bitcoin/bitcoin/pull/26988#discussion_r1137596851.\r\n2. #26988 uses this RPC in -addrinfo CLI. Slight preference for keeping the RPC hidden since this info will mostly be useful to only super users. see https://github.com/bitcoin/bitcoin/pull/26988#discussion_r1173964808.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27511",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27511",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27511.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27511.patch"
          },
          "closed_at": "2023-09-20T12:25:37Z",
          "created_at": "2023-04-21T16:28:48Z",
          "updated_at": "2023-10-03T14:14:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1732532598,
      "node_id": "IC_kwDOABII585nRFl2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1732532598",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-24T09:43:15Z",
      "updated_at": "2023-09-24T09:43:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1732532598",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "reviewed",
      "id": 1641031644,
      "node_id": "PRR_kwDOABII585h0Cfc",
      "url": null,
      "actor": null,
      "commit_id": "48dfc81e7e1e6ecdccb4a165a292bb4c8cf96fbd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1641031644",
      "submitted_at": "2023-09-24T10:06:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "reviewed",
      "id": 1641040890,
      "node_id": "PRR_kwDOABII585h0Ev6",
      "url": null,
      "actor": null,
      "commit_id": "48dfc81e7e1e6ecdccb4a165a292bb4c8cf96fbd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1641040890",
      "submitted_at": "2023-09-24T11:41:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10461849132,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJvkyYs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10461849132",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T12:17:03Z"
    },
    {
      "event": "commented",
      "id": 1733608639,
      "node_id": "IC_kwDOABII585nVMS_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1733608639",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T12:24:46Z",
      "updated_at": "2023-09-25T12:24:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "- addressed @brunoerg's review\r\n- included  https://github.com/bitcoin/bitcoin/pull/27511#discussion_r1335084087 as I'm touching the line anyway\r\n\r\n\r\nI've also been hacking on a tool that visualizes addrman tables from the getaddrmaninfo verbose output in the browser. A wip version is on https://0xb10c.github.io/addrman-observer ([github.com/0xB10C/addrman-observer](https://github.com/0xB10C/addrman-observer)). You can load dumps produced with `bitcoin-cli getaddrmaninfo true > getaddrmaninfo.json` (all processing happens locally).\r\n\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1733608639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "mentioned",
      "id": 10461945642,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJvlJ8q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10461945642",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T12:24:46Z"
    },
    {
      "event": "subscribed",
      "id": 10461945658,
      "node_id": "SE_lADOABII585x14OhzwAAAAJvlJ86",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10461945658",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T12:24:46Z"
    },
    {
      "event": "reviewed",
      "id": 1644341592,
      "node_id": "PRR_kwDOABII585iAqlY",
      "url": null,
      "actor": null,
      "commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1644341592",
      "submitted_at": "2023-09-26T13:55:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "reviewed",
      "id": 1644458046,
      "node_id": "PRR_kwDOABII585iBHA-",
      "url": null,
      "actor": null,
      "commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "light ACK da44fd3e499ca53242332ef9cb2907ec31fce1e3\r\n\r\nI intend to do more tests soon. Just tested it on a recent clearnet node and worked as expected.\r\nOutputs: https://gist.github.com/brunoerg/e3643337b4c16923ee0e0f7e66bec4d9",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1644458046",
      "submitted_at": "2023-09-26T14:37:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "reviewed",
      "id": 1644463026,
      "node_id": "PRR_kwDOABII585iBIOy",
      "url": null,
      "actor": null,
      "commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1644463026",
      "submitted_at": "2023-09-26T14:39:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10490199730,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJxQ76y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10490199730",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T17:07:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10490269028,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJxRM1k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10490269028",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T17:15:05Z"
    },
    {
      "event": "reviewed",
      "id": 1647790432,
      "node_id": "PRR_kwDOABII585iN0lg",
      "url": null,
      "actor": null,
      "commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1647790432",
      "submitted_at": "2023-09-28T02:52:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "reviewed",
      "id": 1648439139,
      "node_id": "PRR_kwDOABII585iQS9j",
      "url": null,
      "actor": null,
      "commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1648439139",
      "submitted_at": "2023-09-28T10:39:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:26:19Z",
      "updated_at": "2023-09-28T15:26:19Z",
      "source": {
        "issue": {
          "id": 1851853129,
          "node_id": "I_kwDOKHeBS85uYQlJ",
          "url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/2",
          "repository_url": "https://api.github.com/repos/bitcoin-dev-project/warnet",
          "labels_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/2/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/2/comments",
          "events_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/2/events",
          "html_url": "https://github.com/bitcoin-dev-project/warnet/issues/2",
          "number": 2,
          "state": "open",
          "state_reason": null,
          "title": "Add log aggregation",
          "body": "For a running warnet, ship debug logs back to a central server. This should include:\r\n\r\n* Debug logs\r\n* bonus: USDT tracepoints per node, all aggregated back to the logging server\r\n  * this gives us data on p2p messages",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5855422959,
              "node_id": "LA_kwDOKHeBS88AAAABXQKp7w",
              "url": "https://api.github.com/repos/bitcoin-dev-project/warnet/labels/backlog",
              "name": "backlog",
              "description": "feature backlog",
              "color": "bfdadc",
              "default": false
            }
          ],
          "assignee": {
            "login": "willcl-ark",
            "id": 6606587,
            "node_id": "MDQ6VXNlcjY2MDY1ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willcl-ark",
            "html_url": "https://github.com/willcl-ark",
            "followers_url": "https://api.github.com/users/willcl-ark/followers",
            "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
            "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
            "repos_url": "https://api.github.com/users/willcl-ark/repos",
            "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "willcl-ark",
              "id": 6606587,
              "node_id": "MDQ6VXNlcjY2MDY1ODc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/willcl-ark",
              "html_url": "https://github.com/willcl-ark",
              "followers_url": "https://api.github.com/users/willcl-ark/followers",
              "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
              "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
              "repos_url": "https://api.github.com/users/willcl-ark/repos",
              "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
              "type": "User",
              "site_admin": false
            },
            {
              "login": "josibake",
              "id": 7444140,
              "node_id": "MDQ6VXNlcjc0NDQxNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/josibake",
              "html_url": "https://github.com/josibake",
              "followers_url": "https://api.github.com/users/josibake/followers",
              "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
              "organizations_url": "https://api.github.com/users/josibake/orgs",
              "repos_url": "https://api.github.com/users/josibake/repos",
              "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/josibake/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "created_at": "2023-08-15T17:39:33Z",
          "updated_at": "2023-09-29T11:06:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:49:41Z",
      "updated_at": "2023-09-29T09:49:41Z",
      "source": {
        "issue": {
          "id": 1918930679,
          "node_id": "PR_kwDOKXeXq85bhPLM",
          "url": "https://api.github.com/repos/0xB10C/addrman-observer/issues/1",
          "repository_url": "https://api.github.com/repos/0xB10C/addrman-observer",
          "labels_url": "https://api.github.com/repos/0xB10C/addrman-observer/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/0xB10C/addrman-observer/issues/1/comments",
          "events_url": "https://api.github.com/repos/0xB10C/addrman-observer/issues/1/events",
          "html_url": "https://github.com/0xB10C/addrman-observer/pull/1",
          "number": 1,
          "state": "closed",
          "state_reason": null,
          "title": "Switch to new getrawaddrman format",
          "body": "See https://github.com/bitcoin/bitcoin/pull/28523\r\n\r\nNew format: \r\n```\r\n{                                  (json object)\r\n  \"table\" : {                      (json object) buckets with addresses in the address manager table ( new, tried )\r\n    \"bucket/position\" : {          (json object) the location in the address manager table (<bucket>/<position>)\r\n      \"address\" : \"str\",           (string) The address of the node\r\n      \"port\" : n,                  (numeric) The port number of the node\r\n      \"network\" : \"str\",           (string) The network (ipv4, ipv6, onion, i2p, cjdns) of the address\r\n      \"services\" : n,              (numeric) The services offered by the node\r\n      \"time\" : xxx,                (numeric) The UNIX epoch time when the node was last seen\r\n      \"source\" : \"str\",            (string) The address that relayed the address to us\r\n      \"source_network\" : \"str\"     (string) The network (ipv4, ipv6, onion, i2p, cjdns) of the source address\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n```",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "OWNER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/0xB10C/addrman-observer/pulls/1",
            "html_url": "https://github.com/0xB10C/addrman-observer/pull/1",
            "diff_url": "https://github.com/0xB10C/addrman-observer/pull/1.diff",
            "patch_url": "https://github.com/0xB10C/addrman-observer/pull/1.patch"
          },
          "closed_at": "2023-09-29T10:02:02Z",
          "created_at": "2023-09-29T09:34:20Z",
          "updated_at": "2023-09-29T10:02:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10509376339,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJyaFtT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509376339",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:54:27Z"
    },
    {
      "event": "commented",
      "id": 1740626821,
      "node_id": "IC_kwDOABII585nv9uF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1740626821",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z",
      "updated_at": "2023-09-29T09:56:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the helpful review comments @brunoerg @ajtowns @amitiuttarwar. I think I have addressed them all in the most recent push:\r\n\r\n- https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1337326653: I'm now adding an `onion` and an `ipv6` address (instead of two `ipv4`) to the addrman tables. There are already two IPv4 addresses in the addrman during the test.\r\n- https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339430595: Inspired by `getnodeaddresses` I added a `time`, `port`, `network`, and `source_network` field. This increases the response size. However, this is highly compressible if someone wants to store or serve it.\r\n- https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339444441: adopted the `<bucket>/<position>` key. I've implemented both discussed approaches and found `<bucket>/<position>` to be better. See commit message for details.\r\n- https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339454178: moved this out of `getaddrmaninfo verbose` and into a separate, hidden `getrawaddrman` RPC. This also means https://github.com/bitcoin/bitcoin/pull/27511#discussion_r1335084087 is not included anymore.\r\n- https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339908447: using `AddressPosition` in a `std::pair<AddrInfo, AddressPosition>` now. This should be easier to reason about than a `std::tuple<int, int, AddrInfo>`.\r\n\r\nI've also updated OP and the tool on https://0xb10c.github.io/addrman-observer.\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1740626821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "mentioned",
      "id": 10509392056,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyaJi4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392056",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "subscribed",
      "id": 10509392066,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyaJjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392066",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "mentioned",
      "id": 10509392081,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyaJjR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392081",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "subscribed",
      "id": 10509392090,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyaJja",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392090",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "mentioned",
      "id": 10509392105,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyaJjp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392105",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "subscribed",
      "id": 10509392120,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyaJj4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509392120",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:05Z"
    },
    {
      "event": "renamed",
      "id": 10509395769,
      "node_id": "RTE_lADOABII585x14OhzwAAAAJyaKc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509395769",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T09:56:29Z",
      "rename": {
        "from": "rpc: add getaddrmaninfo verbose to list addrman table entries",
        "to": "rpc: add hidden getrawaddrman RPC to list addrman table entries"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10509609832,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJya-to",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509609832",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T10:18:57Z"
    },
    {
      "event": "labeled",
      "id": 10509610696,
      "node_id": "LE_lADOABII585x14OhzwAAAAJya-7I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10509610696",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T10:19:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10510449685,
      "node_id": "UNLE_lADOABII585x14OhzwAAAAJyeLwV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10510449685",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T11:42:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1650820049,
      "node_id": "PRR_kwDOABII585iZYPR",
      "url": null,
      "actor": null,
      "commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tested ACK 45a84d1. Very cool to have!",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1650820049",
      "submitted_at": "2023-09-29T15:30:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "review_requested",
      "id": 10512775763,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJynDpT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10512775763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T15:30:31Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T16:24:06Z",
      "updated_at": "2023-09-29T16:24:06Z",
      "source": {
        "issue": {
          "id": 1825685854,
          "node_id": "PR_kwDOABII585WnbQ4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28176",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28176/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28176/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28176/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28176",
          "number": 28176,
          "state": "closed",
          "state_reason": null,
          "title": "tests: add coverage to feature_addrman.py",
          "body": "I added two new tests that will cover the nNew and nTried tests which add coverage to the if block by checking values larger than our range since we only check for negative values now\r\n\r\nadding coverage to these lines\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/addrman.cpp#L273\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/addrman.cpp#L280\r\n\r\nour test seem to only cover the `nTried < 0` and `nNew < 0` scenarios",
          "user": {
            "login": "kevkevinpal",
            "id": 15950706,
            "node_id": "MDQ6VXNlcjE1OTUwNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevkevinpal",
            "html_url": "https://github.com/kevkevinpal",
            "followers_url": "https://api.github.com/users/kevkevinpal/followers",
            "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
            "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
            "repos_url": "https://api.github.com/users/kevkevinpal/repos",
            "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28176",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28176",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28176.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28176.patch"
          },
          "closed_at": "2023-10-02T13:07:30Z",
          "created_at": "2023-07-28T04:35:33Z",
          "updated_at": "2023-10-02T13:07:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1651208768,
      "node_id": "PRR_kwDOABII585ia3JA",
      "url": null,
      "actor": null,
      "commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tested ACK 45a84d19dec. All the review comments are small style/doc things. The functionality looks good. ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1651208768",
      "submitted_at": "2023-09-29T18:14:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10515675588,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJyyHnE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515675588",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:03:04Z"
    },
    {
      "event": "commented",
      "id": 1741533993,
      "node_id": "IC_kwDOABII585nzbMp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741533993",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:14Z",
      "updated_at": "2023-09-29T22:04:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addresses the comments and nits. Thanks @amitiuttarwar, @stratospher, and @ajtowns.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1741533993",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "mentioned",
      "id": 10515680484,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyyIzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680484",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:14Z"
    },
    {
      "event": "subscribed",
      "id": 10515680489,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyyIzp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680489",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:14Z"
    },
    {
      "event": "mentioned",
      "id": 10515680494,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyyIzu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680494",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:14Z"
    },
    {
      "event": "subscribed",
      "id": 10515680507,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyyIz7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680507",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:14Z"
    },
    {
      "event": "mentioned",
      "id": 10515680513,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJyyI0B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680513",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:15Z"
    },
    {
      "event": "subscribed",
      "id": 10515680520,
      "node_id": "SE_lADOABII585x14OhzwAAAAJyyI0I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10515680520",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T22:04:15Z"
    },
    {
      "event": "commented",
      "id": 1741838253,
      "node_id": "IC_kwDOABII585n0let",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741838253",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T19:04:52Z",
      "updated_at": "2023-09-30T19:04:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 584e12d977b5c7dd57f4aafd984e38e64e85916a ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1741838253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_requested",
      "id": 10517853760,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJy6bZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10517853760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T19:04:56Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1741968748,
      "node_id": "IC_kwDOABII585n1FVs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741968748",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T05:51:17Z",
      "updated_at": "2023-10-01T05:51:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 584e12d.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1741968748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_request_removed",
      "id": 10518810271,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJy-E6f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518810271",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T05:51:20Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 10518894743,
      "node_id": "LE_lADOABII585x14OhzwAAAAJy-ZiX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518894743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T06:44:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1651873005,
      "node_id": "PRR_kwDOABII585idZTt",
      "url": null,
      "actor": null,
      "commit_id": "584e12d977b5c7dd57f4aafd984e38e64e85916a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1651873005",
      "submitted_at": "2023-10-01T09:54:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "commented",
      "id": 1742028118,
      "node_id": "IC_kwDOABII585n1T1W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742028118",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T10:00:57Z",
      "updated_at": "2023-10-01T10:00:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "The red CI job with the failing `wallet_upgradewallet.py --legacy-wallet` test looks unrelated.\r\n\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1742028118",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "unlabeled",
      "id": 10523915079,
      "node_id": "UNLE_lADOABII585x14OhzwAAAAJzRjNH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10523915079",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T09:29:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1742776155,
      "node_id": "IC_kwDOABII585n4Kdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742776155",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T10:34:25Z",
      "updated_at": "2023-10-02T10:34:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "This seems awfully slow to execute on my machine, taking about 30 seconds to return...\r\n\r\nIt appears after some (light) investigation that the time is spent inside `AddrmanTableToJSON`: https://tmp.256k1.dev/23_10_bitcoin_getrawaddrman_split.svg\r\n\r\nThe working call to (addrman) `GetEntries` is this sliver here, with _all_ the rest of the time taken by processing the result to JSON:\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/6606587/c835fbe1-7f5f-4f51-bfaf-37f3f8119e7c)\r\n\r\nIf this is the best we can do then it might not be a blocker for me, as at least we aren't holding locks for all this time, but it does seem a shame to spend 30 seconds processing a near-instant internal call, especially for an RPC which could conceivably be used in a polling situation...\r\n\r\nOf course it's also possible that this is just something wrong with my system?\r\n\r\nAddrman numbers for reference:\r\n\r\n```\r\n$ time /home/will/src/bitcoin/src/bitcoin-cli getaddrmaninfo\r\n{\r\n  \"ipv4\": {\r\n    \"new\": 40403,\r\n    \"tried\": 1623,\r\n    \"total\": 42026\r\n  },\r\n  \"ipv6\": {\r\n    \"new\": 9806,\r\n    \"tried\": 0,\r\n    \"total\": 9806\r\n  },\r\n  \"onion\": {\r\n    \"new\": 11200,\r\n    \"tried\": 818,\r\n    \"total\": 12018\r\n  },\r\n  \"i2p\": {\r\n    \"new\": 746,\r\n    \"tried\": 107,\r\n    \"total\": 853\r\n  },\r\n  \"cjdns\": {\r\n    \"new\": 0,\r\n    \"tried\": 0,\r\n    \"total\": 0\r\n  },\r\n  \"all_networks\": {\r\n    \"new\": 62155,\r\n    \"tried\": 2548,\r\n    \"total\": 64703\r\n  }\r\n}\r\n\r\n________________________________________________________\r\nExecuted in    8.06 millis    fish           external\r\n   usr time    4.12 millis  723.00 micros    3.39 millis\r\n   sys time    3.58 millis  188.00 micros    3.39 millis\r\n\r\n```",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1742776155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10525025905,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJzVyZx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525025905",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:35:14Z"
    },
    {
      "event": "commented",
      "id": 1742854581,
      "node_id": "IC_kwDOABII585n4dm1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742854581",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:35:40Z",
      "updated_at": "2023-10-02T11:36:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @willcl-ark for testing. I'm seeing about 6s for `time bitcoin-cli getrawaddrman > /dev/null` with similar sized addrman tables ( \"new\": 61469, \"tried\": 1157 vs  \"new\": 62155, \"tried\": 2548) on a medium-spec machine. I wonder where the 5x increase in processing time on your side comes from. Can you reproduce this on a different machine?\r\n\r\nThe flamegraph shows that were spending quite a bit of time in `UniValue::pushKV()` and `UniValue::findKey()`. This is O(n) for the number of addrman table entries (here mostly new table entries). The same problem was fixed for `getrawmempool` in #14984 by using `__pushKV()` (now called `pushKVEnd()`), which is O(1). We can use it here too, as our keys are unique.\r\n\r\nThis reduces `time bitcoin-cli getrawaddrman > /dev/null` from 6s to 900ms for me. I've pushed this as I think this is generally a nice improvement. Would be curious to hear about the improvement on your side. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1742854581",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "mentioned",
      "id": 10525029514,
      "node_id": "MEE_lADOABII585x14OhzwAAAAJzVzSK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525029514",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:35:41Z"
    },
    {
      "event": "subscribed",
      "id": 10525029523,
      "node_id": "SE_lADOABII585x14OhzwAAAAJzVzST",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525029523",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:35:41Z"
    },
    {
      "event": "commented",
      "id": 1742894236,
      "node_id": "IC_kwDOABII585n4nSc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742894236",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:05:56Z",
      "updated_at": "2023-10-02T12:05:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would be curious to hear about the improvement on your side.\r\n\r\nThanks for the quick response. This certainly seems to give a good-enough improvement on my side:\r\n\r\n```\r\nwill@ubuntu in ~/src/bitcoin on  2023-09-verbose-getaddrmaninfo [$?] : C v16.0.6-clang : 🐍 3.8.17\r\n₿ git log --oneline | head -n1; and time ./src/bitcoin-cli getrawaddrman > /dev/null\r\n584e12d977 test: getrawaddrman RPC\r\n\r\n________________________________________________________\r\nExecuted in   30.71 secs    fish           external\r\n   usr time    1.04 secs  204.00 micros    1.04 secs\r\n   sys time    0.07 secs   41.00 micros    0.07 secs\r\n\r\n\r\nwill@ubuntu in ~/src/bitcoin on  2023-09-verbose-getaddrmaninfo [$?] : C v16.0.6-clang : 🐍 3.8.17 took 30s\r\n₿ git log --oneline | head -n1; and time ./src/bitcoin-cli getrawaddrman > /dev/null\r\n2dc1a6d59e test: getrawaddrman RPC\r\n\r\n________________________________________________________\r\nExecuted in    3.19 secs    fish           external\r\n   usr time    1.09 secs  419.00 micros    1.09 secs\r\n   sys time    0.04 secs   89.00 micros    0.04 secs\r\n\r\n```",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1742894236",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "commented",
      "id": 1742921373,
      "node_id": "IC_kwDOABII585n4t6d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742921373",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:25:44Z",
      "updated_at": "2023-10-02T12:25:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK 2dc1a6d59e\r\n\r\nNice introspection tool which is very useful for monitoring addrman buckets without the need for tracepoints.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1742921373",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_requested",
      "id": 10525466570,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzXd_K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525466570",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:25:48Z",
      "requested_reviewer": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10525466733,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzXeBt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525466733",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:25:49Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1652644055,
      "node_id": "PRR_kwDOABII585igVjX",
      "url": null,
      "actor": null,
      "commit_id": "2dc1a6d59e9fed4297d10ae2b4b0b00084538348",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "crACK 2dc1a6d59e9fed4297d10ae2b4b0b00084538348",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1652644055",
      "submitted_at": "2023-10-02T12:29:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    },
    {
      "event": "review_request_removed",
      "id": 10525506496,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzXnvA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525506496",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:30:03Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10525506643,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzXnxT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525506643",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T12:30:04Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRhMzg0YTI4NmJkODRhOTdlN2ViZTdhNjQ2NTRjNWJlMjBhYjJkZjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da384a286bd84a97e7ebe7a64654c5be20ab2df1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/da384a286bd84a97e7ebe7a64654c5be20ab2df1",
      "tree": {
        "sha": "443d2d048e0692a702f6ac46c1d85c573a5d67e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/443d2d048e0692a702f6ac46c1d85c573a5d67e8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 443d2d048e0692a702f6ac46c1d85c573a5d67e8\nparent 8909667ab8a65478e0eaa6495299305ad836e835\nauthor 0xb10c <b10c@b10c.me> 1695231465 +0200\ncommitter 0xb10c <b10c@b10c.me> 1696253668 +0200\n\nrpc: getrawaddrman for addrman entries\n\nExposing address manager table entries in a hidden RPC allows to introspect\naddrman tables in tests and during development.\n\nAs response JSON object the following FORMAT1 is choosen:\n{\n  \"table\": {\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    ...\n  }\n}\n\nAn alternative would be FORMAT2\n{\n  \"table\": {\n    \"bucket\": {\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      ..\n    },\n    \"bucket\": {\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      ..\n    },\n  }\n}\n\nFORMAT1 and FORMAT2 have different encodings for the location of the\naddress in the address manager. While FORMAT2 might be easier to process\nfor downstream tools, it also mimics internal addrman mappings, which\nmight change at some point. Users not interested in the address location\ncan ignore the location key. They don't have to adapt to a new RPC\nresponse format, when the internal addrman layout changes. Additionally,\nFORMAT1 is also slightly easier to to iterate in downstream tools. The\nRPC response-building implemenation complexcity is lower with FORMAT1\nas we can more easily build a \"<bucket>/<position>\" key than a multiple\n\"bucket\" objects with multiple \"position\" objects (FORMAT2).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmUaxuQACgkQ4v/VsdiM\nqX0N6g//ZnuU0+1jn43XAal9SpkrdH2G7RSanGPpY14dQLOP76qBnAmIWDws4xFK\nh14kwdlkxcNGwp3BKu9SX2XQxivvPsP+FsJNVw8deCPg+QtI4Z/9ToqQ3hYliP8f\nEdeJY2n1lmfSg8XH9aj9h0QgKY9OnSttBWdrTzs0dOwZKYoVs/HQQDGVbQM+hnvz\nP6bBZr7oTRlDxGyRT1KwpghDigkEuDEmwPMPxtpMqk9Un7aQwj40L0rvEbeDGgRx\nANhkOkTJhlyEdnplwD/fnu6JEFcbNYPu7q1m61uM9/py9cpdZLu+wRADZJThG5+C\nmKvMYSk1/0q9MlFlbSpQm+ORW5co4aKNW1WRNeyVHtwnL+zoSAkBa5IwEx36ROEI\nyA34aeUFFwKytPcYEc1owEw4kA6zUuXIyGJR8B+Fm3cHukgvnVwgQM03JBQVmTSI\nG7b3i++DJUcrSuf3Mcjpg/8D/eT+uZjjvefaAu2t2ARsQ8AJyZboIdWFO1LT7M20\npnVlrZriODHsQCO10IHoBIkGaG3TF7mLFVjVg0ZHcUSFvbv9deksAsY3qjalqNtn\nAARTSOj6Z/SXzbotGchtbuAld7pT1qDjcPZ732NK2xC68H9BNQN15S8DPpgl6R39\nmxj6u8vyVChv/49XDcqak4A8oMX93gHziqnR+fpS3Hu1VC2ORpk=\n=uO0Y\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGYKpRKzJ++bdZZWxMC3nRDtg7bLlOSG9LyjpYOXODocCP/wED7f3lCIUxvy\nWQHd4q/VvU0I8QRlGsbt8AgBlSnLe4t+uACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEIkZYkNBCg0wPG3CZAVJ3oUI8CBNQdW0\nA7qSazabOPas/tlLWR1CYcyQxnew69axmu7iZAjxBGUaxu3wCCmPOYtySrueAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BCXTpJDGLjUvo5MOeYr8obaCPEgU7xevIf6+t1wnMgZSHUQ4ZYbyb6c\nk+GJvRlH6L64G00I8SAeulriQwn90Lg4nGTIbDjrSlZ8hZa0HDV6xMZF2Ll4Fwjx\nIAPsTBnI7JN0ENGexk5T6WgYqFCEB97CCKuscpSC0/EyCPEEZRrG7fAI7az6bbZz\noSMAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0\nYW1wcy5vcmfwEMuNdm2rn63f/K55uqM+zzYI8CD6yduSDga05Vd9Li+vgLzYAOCy\ndxJTe4libhpcQVGIRQjxIJ0NieBBVw6ojJWDzbILDMTO5TUTac5HnXTeGnyBU0qv\nCPEgUcVgXHoK63PVO3CGDV4xVsUz52mYvJ/zzPk+KvveoM0I8QRlGsbt8Ait9G6g\nq5FNeQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8909667ab8a65478e0eaa6495299305ad836e835",
          "sha": "8909667ab8a65478e0eaa6495299305ad836e835",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8909667ab8a65478e0eaa6495299305ad836e835"
        }
      ],
      "message": "rpc: getrawaddrman for addrman entries\n\nExposing address manager table entries in a hidden RPC allows to introspect\naddrman tables in tests and during development.\n\nAs response JSON object the following FORMAT1 is choosen:\n{\n  \"table\": {\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    \"<bucket>/<position>\": { \"address\": \"..\", \"port\": .., ... },\n    ...\n  }\n}\n\nAn alternative would be FORMAT2\n{\n  \"table\": {\n    \"bucket\": {\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      ..\n    },\n    \"bucket\": {\n      \"position\": { \"address\": \"..\", \"port\": .., ... },\n      ..\n    },\n  }\n}\n\nFORMAT1 and FORMAT2 have different encodings for the location of the\naddress in the address manager. While FORMAT2 might be easier to process\nfor downstream tools, it also mimics internal addrman mappings, which\nmight change at some point. Users not interested in the address location\ncan ignore the location key. They don't have to adapt to a new RPC\nresponse format, when the internal addrman layout changes. Additionally,\nFORMAT1 is also slightly easier to to iterate in downstream tools. The\nRPC response-building implemenation complexcity is lower with FORMAT1\nas we can more easily build a \"<bucket>/<position>\" key than a multiple\n\"bucket\" objects with multiple \"position\" objects (FORMAT2).",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-10-02T13:34:28Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-09-20T17:37:45Z"
      },
      "sha": "da384a286bd84a97e7ebe7a64654c5be20ab2df1"
    },
    {
      "event": "review_request_removed",
      "id": 10526284990,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzaly-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526284990",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:42:39Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10526285201,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzal2R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526285201",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:42:39Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10526285821,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzal_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526285821",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:42:42Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10526285957,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzamCF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526285957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:42:43Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM1MmQ1ZWIyYTllODljZmY0YTI4MTVkOTRhOWQ4MWZjYzIwYzRiMmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "tree": {
        "sha": "27413c5bfa7d4ffbb4282ab9f20bd25e666cd925",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27413c5bfa7d4ffbb4282ab9f20bd25e666cd925"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 27413c5bfa7d4ffbb4282ab9f20bd25e666cd925\nparent da384a286bd84a97e7ebe7a64654c5be20ab2df1\nauthor 0xb10c <b10c@b10c.me> 1695480877 +0200\ncommitter 0xb10c <b10c@b10c.me> 1696254314 +0200\n\ntest: getrawaddrman RPC\n\nTest that the getrawaddrman returns the addresses in the new and tried\ntables. We can't check the buckets and positions as these are not\ndeterministic (yet).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmUayWoACgkQ4v/VsdiM\nqX06AQ//VAc5O087idM5F/K8490XsbeA887nnSbof4n8Fn+qatnCFY6nXoBxN6VX\nq2Xk7MrgDl//ENAt9J/ifB548rYgpg+nuod1er6H/Yu+C/ja806nvBIOvl0/I3mQ\nyyXqW4RAj9sFrwN0nmktOU7v65bg4DBJSAglj7EaXXWhcVIFpNS/eo41u/hCaTXE\nlswUCaWo/G0rBJZhp7wsiaKE++jH24aIa+UJY+q0g/4Lq7fwHvGhezqmjzU6JtDh\nxnznuELCC6K1PS/JQ4U9Xgctbwn0wsfRWffeMkxTsq/gFyEN0PNlcN3aEospQUKs\njZygI74GWI33GsrIe0w2mfRgZ32lIDubG+PZKnv8nr5z327bBe2Ok1XOiINXGSkv\n7QC9rxmJF3DS+VMZ/CFXRR8IgwJxt9UY0Cty0QrT4JjhdEP9cDCuNBZhHLqm4RmK\nv+2n/JfJSsuYgv4G+loV8o+UBVApdOczCCyMA9u9+hp7fwtaRpXxFzLChex28NTO\nVYOF+3jsoMuJu4DQePQXohZML/2uu2YS//vHWgNtVOYk+hmpFUMNr8hZUS1XX7lw\nSwmWUTMAFB1kWteImEPO53Ws8hZNmt7kgWR6G+gsS9EvLfy/nLINpFueDcohuoJ/\nUBCIHZSU5z+9wDw2krNsVrfHif8IuWufblSAnvlvMYvVFyMvw4E=\n=fkbZ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIARNzShf4XB7VW8JA/89GwI4hBk8Ka/+hrQ2/MggdvK7CP/wEBbnWiJDpq78\n6lMG7QrPjwEI8CAyBQ5dPDxl3++gxamefohvxa9+5CPhUv+j3F6mc95bogjxBGUa\nyW3wCEsFLbYY1btvAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQq73OgXltwzrs6fDO8s54zgjwICuqT8kI3qzTnjRj\ndFLuS5kiEeE+i+XvhfHMQYR4JjTYCPEEZRrJbvAINCxKcvIHY3IAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//w\nEL6lBRb7TZrMXilZguPY9XwI8SA+OKedubeZKQkKKvzlXJdJB5NgKuRadCGvydr4\n9jFlqQjxBGUayW3wCCCtWkiS4ky5AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t8BD5f2AQthAIDDd4dhpxeBYaCPEEZRrJbfAIssOK\niCFg9JMAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da384a286bd84a97e7ebe7a64654c5be20ab2df1",
          "sha": "da384a286bd84a97e7ebe7a64654c5be20ab2df1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/da384a286bd84a97e7ebe7a64654c5be20ab2df1"
        }
      ],
      "message": "test: getrawaddrman RPC\n\nTest that the getrawaddrman returns the addresses in the new and tried\ntables. We can't check the buckets and positions as these are not\ndeterministic (yet).",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-10-02T13:45:14Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-09-23T14:54:37Z"
      },
      "sha": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10526346684,
      "node_id": "HRFPE_lADOABII585x14OhzwAAAAJza028",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526346684",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:48:02Z"
    },
    {
      "event": "commented",
      "id": 1743052544,
      "node_id": "IC_kwDOABII585n5N8A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743052544",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:48:36Z",
      "updated_at": "2023-10-02T13:56:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "With https://github.com/bitcoin/bitcoin/pull/28176 merged, I've rebased and now use the addrman table size constants  in `netutil.py` in the test framework. This also resolves https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1342109520. Sorry for invalidating the ACKs again.\r\n\r\nRe-reviewers might want to use `git range-diff 2dc1a6d...352d5eb`. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1743052544",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "commented",
      "id": 1743069520,
      "node_id": "IC_kwDOABII585n5SFQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743069520",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:58:21Z",
      "updated_at": "2023-10-02T13:58:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 352d5eb2a9\r\n\r\ngit range-diff shows the only difference since previous ACK @ 2dc1a6d is using the just-merged constants from `netutil.py`:\r\n\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\n₿ git range-diff 2dc1a6d...352d5eb\r\n -:  ---------- >  1:  63e90e1d3f test: check for specific disconnect reasons in p2p_blockfilters.py\r\n -:  ---------- >  2:  2ab7952bda test: add bip157 coverage for (start height > stop height) disconnect\r\n -:  ---------- >  3:  5671c15f45 blockstorage: Mark FindBlockPos as nodiscard\r\n -:  ---------- >  4:  f0207e0030 blockstorage: Return on fatal block file flush error\r\n -:  ---------- >  5:  d8041d4e04 blockstorage: Return on fatal undo file flush error\r\n -:  ---------- >  6:  925bb723ca [refactor] batch-add transactions to DisconnectedBlockTransactions\r\n -:  ---------- >  7:  59a35a7398 [bench] DisconnectedBlockTransactions\r\n -:  ---------- >  8:  79ce9f0aa4 add std::list to memusage\r\n -:  ---------- >  9:  2765d6f343 rewrite DisconnectedBlockTransactions as a list + map\r\n -:  ---------- > 10:  cf5f1faa03 MOVEONLY: DisconnectedBlockTransactions to its own file\r\n -:  ---------- > 11:  4313c77400 make DisconnectedBlockTransactions responsible for its own memory management\r\n -:  ---------- > 12:  fa389d902f refactor: Drop unused fclose() from BufferedFile\r\n -:  ---------- > 13:  9999b89cd3 Make BufferedFile to be a CAutoFile wrapper\r\n -:  ---------- > 14:  fa56c421be Return CAutoFile from BlockManager::Open*File()\r\n -:  ---------- > 15:  fa4a9c0f43 Remove unused GetType() from OverrideStream, CVectorWriter, SpanReader\r\n -:  ---------- > 16:  fa72f09d6f Remove CHashWriter type\r\n -:  ---------- > 17:  fac29a0ab1 Remove SER_GETHASH, hard-code client version in CKeyPool serialize\r\n -:  ---------- > 18:  96b3f2dbe4 test: add unit test coverage for Python ECDSA implementation\r\n -:  ---------- > 19:  12f7257b8f doc: Be vague instead of wrong about MALLOC_ARENA_MAX\r\n -:  ---------- > 20:  b3db8c9d5c rpc: bumpfee, improve doc for 'reduce_output' arg\r\n -:  ---------- > 21:  4660fc82a1 wallet: Check last block and conflict height are valid in MarkConflicted\r\n -:  ---------- > 22:  782701ce7d test: Test loading wallets with conflicts without a chain\r\n -:  ---------- > 23:  b0f5175c04 net: Drop v2 garbage authentication packet\r\n -:  ---------- > 24:  e3720bca39 net: Simplify v2 recv logic by decoupling AAD from state machine\r\n -:  ---------- > 25:  fa40b3ee22 test: Avoid test failure on Linux root without cap-add LINUX_IMMUTABLE\r\n -:  ---------- > 26:  b5a962564e tests: Use manual bumps instead of bumpfee for resendwallettransactions\r\n -:  ---------- > 27:  d9841a7ac6 Add make_secure_unique helper\r\n -:  ---------- > 28:  6ef405ddb1 key: don't allocate secure mem for null (invalid) key\r\n -:  ---------- > 29:  262ab8ef78 Add package evaluation fuzzer\r\n -:  ---------- > 30:  f9047771d6 lint: fix custom mypy cache dir setting\r\n -:  ---------- > 31:  380130d9d7 test: add coverage to feature_addrman.py\r\n -:  ---------- > 32:  d9b172cd00 doc: fix link to developer-notes.md file in multiprocess.md\r\n 1:  7303dac506 = 33:  da384a286b rpc: getrawaddrman for addrman entries\r\n 2:  2dc1a6d59e ! 34:  352d5eb2a9 test: getrawaddrman RPC\r\n    @@ Commit message\r\n         deterministic (yet).\r\n\r\n      ## test/functional/rpc_net.py ##\r\n    -@@ test/functional/rpc_net.py: from test_framework.util import (\r\n    - )\r\n    - from test_framework.wallet import MiniWallet\r\n    +@@ test/functional/rpc_net.py: from itertools import product\r\n    + import time\r\n\r\n    -+# Address manager size constants as defined in addrman_impl.h\r\n    -+ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\r\n    -+ADDRMAN_TRIED_BUCKET_COUNT = 1 << 8\r\n    -+ADDRMAN_BUCKET_SIZE = 1 << 6\r\n    -+\r\n    -\r\n    - def assert_net_servicesnames(servicesflag, servicenames):\r\n    -     \"\"\"Utility that checks if all flags are correctly decoded in\r\n    + import test_framework.messages\r\n    ++from test_framework.netutil import ADDRMAN_NEW_BUCKET_COUNT, ADDRMAN_TRIED_BUCKET_COUNT, ADDRMAN_BUCKET_SIZE\r\n    + from test_framework.p2p import (\r\n    +     P2PInterface,\r\n    +     P2P_SERVICES,\r\n     @@ test/functional/rpc_net.py: class NetTest(BitcoinTestFramework):\r\n              self.test_addpeeraddress()\r\n              self.test_sendmsgtopeer()\r\n```\r\n\r\n</details>",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1743069520",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_request_removed",
      "id": 10526471728,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzbTYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526471728",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:58:25Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10526471952,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzbTcQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526471952",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:58:27Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10526472186,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzbTf6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526472186",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T13:58:28Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1743537409,
      "node_id": "IC_kwDOABII585n7EUB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743537409",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T18:30:24Z",
      "updated_at": "2023-10-02T18:30:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 352d5eb2a9e",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1743537409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_request_removed",
      "id": 10529222709,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzlzA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10529222709",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T18:30:28Z",
      "requested_reviewer": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10529222717,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzlzA9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10529222717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T18:30:28Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10529222904,
      "node_id": "RRE_lADOABII585x14OhzwAAAAJzlzD4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10529222904",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T18:30:29Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1744103792,
      "node_id": "IC_kwDOABII585n9Olw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744103792",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T03:24:04Z",
      "updated_at": "2023-10-03T03:24:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK 352d5eb.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1744103792",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "review_request_removed",
      "id": 10532677114,
      "node_id": "RRRE_lADOABII585x14OhzwAAAAJzy-X6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10532677114",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T03:24:08Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T10:48:52Z",
      "updated_at": "2023-10-03T10:48:52Z",
      "source": {
        "issue": {
          "id": 1923338793,
          "node_id": "PR_kwDOABII585bv8sK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28565",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28565/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28565/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28565/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28565",
          "number": 28565,
          "state": "open",
          "state_reason": null,
          "title": "rpc: getaddrmaninfo followups",
          "body": "- make `getaddrmaninfo` RPC public since it's not for development purposes only and regular users might find it useful. [#26988 (comment)](https://github.com/bitcoin/bitcoin/pull/26988#issuecomment-1738371584)\r\n- add missing `all_networks` key to RPC help. [#27511 (comment)](https://github.com/bitcoin/bitcoin/pull/27511#discussion_r1335084087)\r\n- fix clang format spacing\r\n- add and use `EnsureAddrman` in RPC code. [#27511 (comment)](https://github.com/bitcoin/bitcoin/pull/27511#discussion_r1331501491)\r\n",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28565",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28565",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28565.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28565.patch"
          },
          "created_at": "2023-10-03T05:26:42Z",
          "updated_at": "2023-10-10T10:42:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1745233631,
      "node_id": "IC_kwDOABII585oBibf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745233631",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T15:38:09Z",
      "updated_at": "2023-10-03T15:38:09Z",
      "author_association": "MEMBER",
      "body": "ACK 352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#issuecomment-1745233631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28523"
    },
    {
      "event": "merged",
      "id": 10540167319,
      "node_id": "ME_lADOABII585x14OhzwAAAAJ0PjCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10540167319",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "01bd9d7b991bf8b79748ba5b3c76839a0d3bb5a4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01bd9d7b991bf8b79748ba5b3c76839a0d3bb5a4",
      "created_at": "2023-10-03T15:38:37Z"
    },
    {
      "event": "closed",
      "id": 10540167356,
      "node_id": "CE_lADOABII585x14OhzwAAAAJ0PjC8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10540167356",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T15:38:37Z"
    },
    {
      "event": "reviewed",
      "id": 1641032747,
      "node_id": "PRR_kwDOABII585h0Cwr",
      "url": null,
      "actor": null,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#pullrequestreview-1641032747",
      "submitted_at": "2023-10-13T09:01:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335156026",
      "pull_request_review_id": 1641031644,
      "id": 1335156026,
      "node_id": "PRRC_kwDOABII585PlN06",
      "diff_hunk": "@@ -838,6 +838,25 @@ std::vector<CAddress> AddrManImpl::GetAddr_(size_t max_addresses, size_t max_pct\n     return addresses;\n }\n \n+std::vector<std::tuple<int, int, AddrInfo>> AddrManImpl::GetEntries_(bool from_tried) const\n+{\n+    AssertLockHeld(cs);\n+\n+    const int bucket_count = (from_tried) ? ADDRMAN_TRIED_BUCKET_COUNT : ADDRMAN_NEW_BUCKET_COUNT;",
      "path": "src/addrman.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "48dfc81e7e1e6ecdccb4a165a292bb4c8cf96fbd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    const int bucket_count = from_tried ? ADDRMAN_TRIED_BUCKET_COUNT : ADDRMAN_NEW_BUCKET_COUNT;\r\n```",
      "created_at": "2023-09-24T10:06:28Z",
      "updated_at": "2023-09-24T10:06:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1335156026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335156026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335166553",
      "pull_request_review_id": 1641040890,
      "id": 1335166553,
      "node_id": "PRRC_kwDOABII585PlQZZ",
      "diff_hunk": "@@ -1014,52 +1015,105 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in a address manager table ( new_table, tried_table )\",",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "48dfc81e7e1e6ecdccb4a165a292bb4c8cf96fbd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\r\n```",
      "created_at": "2023-09-24T11:41:37Z",
      "updated_at": "2023-09-24T11:41:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1335166553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1335166553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1054,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337253953",
      "pull_request_review_id": 1644341592,
      "id": 1337253953,
      "node_id": "PRRC_kwDOABII585PtOBB",
      "diff_hunk": "@@ -1014,52 +1015,105 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},\n+                                {RPCResult::Type::STR, \"source\", \"the address that relayed the address to us\"},\n+                            }},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getaddrmaninfo\", \"\")\n+            + HelpExampleCli(\"getaddrmaninfo\", \"true\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"\")},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 108,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 56adcf42805b3007b66396754a9e5dcd0968d027: We could add the 'verbose' example for the RPC.\r\n```suggestion\r\n            + HelpExampleRpc(\"getaddrmaninfo\", \"\")},\r\n            + HelpExampleRpc(\"getaddrmaninfo\", \"true\")}\r\n```",
      "created_at": "2023-09-26T13:55:01Z",
      "updated_at": "2023-09-26T13:55:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1337253953",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337253953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1071,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337326653",
      "pull_request_review_id": 1644463026,
      "id": 1337326653,
      "node_id": "PRRC_kwDOABII585Ptfw9",
      "diff_hunk": "@@ -386,5 +391,70 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+        self.log.debug(\n+            \"Test that verbose keys are not in the default getaddrmaninfo\")\n+        assert \"new_table\" not in res\n+        assert \"tried_table\" not in res\n+\n+        self.log.info(\"Test getaddrmaninfo verbose = True\")\n+        res = node.getaddrmaninfo(verbose=True)\n+\n+        # we expect one addrman new table entry added in a previous test\n+        assert_equal(len(res[\"new_table\"]), 1)\n+        assert_equal(len(res[\"new_table\"]), res[\"all_networks\"][\"new\"])\n+        assert_equal(res[\"new_table\"][0][\"address\"], \"2.0.0.0:8333\")\n+        assert_equal(res[\"new_table\"][0][\"services\"], 9)\n+        assert_equal(res[\"new_table\"][0][\"source\"], \"2.0.0.0\")\n+        assert 0 <= res[\"new_table\"][0][\"bucket\"] < ADDRMAN_NEW_BUCKET_COUNT\n+        assert 0 <= res[\"new_table\"][0][\"position\"] < ADDRMAN_BUCKET_SIZE\n+\n+        # we expect one addrman tried table entry added in a previous test\n+        assert_equal(len(res[\"tried_table\"]), 1)\n+        assert_equal(len(res[\"tried_table\"]), res[\"all_networks\"][\"tried\"])\n+        assert_equal(res[\"tried_table\"][0][\"address\"], \"1.2.3.4:8333\")\n+        assert_equal(res[\"tried_table\"][0][\"services\"], 9)\n+        assert_equal(res[\"tried_table\"][0][\"source\"], \"1.2.3.4\")\n+        assert 0 <= res[\"tried_table\"][0][\"bucket\"] < ADDRMAN_TRIED_BUCKET_COUNT\n+        assert 0 <= res[\"tried_table\"][0][\"position\"] < ADDRMAN_BUCKET_SIZE\n+\n+        self.log.debug(\"Add one new address to each addrman table\")",
      "path": "test/functional/rpc_net.py",
      "position": 94,
      "original_position": 42,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In da44fd3e499ca53242332ef9cb2907ec31fce1e3: I think we could addresses from other networks (e.g tor) to test it as well.",
      "created_at": "2023-09-26T14:39:12Z",
      "updated_at": "2023-09-26T14:39:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1337326653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337326653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 465,
      "original_line": 465,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338934464",
      "pull_request_review_id": 1647192779,
      "id": 1338934464,
      "node_id": "PRRC_kwDOABII585PzoTA",
      "diff_hunk": "@@ -1014,52 +1015,105 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},\n+                                {RPCResult::Type::STR, \"source\", \"the address that relayed the address to us\"},\n+                            }},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getaddrmaninfo\", \"\")\n+            + HelpExampleCli(\"getaddrmaninfo\", \"true\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"\")},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 108,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "in_reply_to_id": 1337253953,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done!",
      "created_at": "2023-09-27T17:03:52Z",
      "updated_at": "2023-09-27T17:03:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1338934464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338934464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1071,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338939771",
      "pull_request_review_id": 1647199802,
      "id": 1338939771,
      "node_id": "PRRC_kwDOABII585Pzpl7",
      "diff_hunk": "@@ -386,5 +391,70 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+        self.log.debug(\n+            \"Test that verbose keys are not in the default getaddrmaninfo\")\n+        assert \"new_table\" not in res\n+        assert \"tried_table\" not in res\n+\n+        self.log.info(\"Test getaddrmaninfo verbose = True\")\n+        res = node.getaddrmaninfo(verbose=True)\n+\n+        # we expect one addrman new table entry added in a previous test\n+        assert_equal(len(res[\"new_table\"]), 1)\n+        assert_equal(len(res[\"new_table\"]), res[\"all_networks\"][\"new\"])\n+        assert_equal(res[\"new_table\"][0][\"address\"], \"2.0.0.0:8333\")\n+        assert_equal(res[\"new_table\"][0][\"services\"], 9)\n+        assert_equal(res[\"new_table\"][0][\"source\"], \"2.0.0.0\")\n+        assert 0 <= res[\"new_table\"][0][\"bucket\"] < ADDRMAN_NEW_BUCKET_COUNT\n+        assert 0 <= res[\"new_table\"][0][\"position\"] < ADDRMAN_BUCKET_SIZE\n+\n+        # we expect one addrman tried table entry added in a previous test\n+        assert_equal(len(res[\"tried_table\"]), 1)\n+        assert_equal(len(res[\"tried_table\"]), res[\"all_networks\"][\"tried\"])\n+        assert_equal(res[\"tried_table\"][0][\"address\"], \"1.2.3.4:8333\")\n+        assert_equal(res[\"tried_table\"][0][\"services\"], 9)\n+        assert_equal(res[\"tried_table\"][0][\"source\"], \"1.2.3.4\")\n+        assert 0 <= res[\"tried_table\"][0][\"bucket\"] < ADDRMAN_TRIED_BUCKET_COUNT\n+        assert 0 <= res[\"tried_table\"][0][\"position\"] < ADDRMAN_BUCKET_SIZE\n+\n+        self.log.debug(\"Add one new address to each addrman table\")",
      "path": "test/functional/rpc_net.py",
      "position": 94,
      "original_position": 42,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "da44fd3e499ca53242332ef9cb2907ec31fce1e3",
      "in_reply_to_id": 1337326653,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "will do if I re-touch the tests",
      "created_at": "2023-09-27T17:08:25Z",
      "updated_at": "2023-09-27T17:08:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1338939771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338939771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 465,
      "original_line": 465,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339430595",
      "pull_request_review_id": 1647790432,
      "id": 1339430595,
      "node_id": "PRRC_kwDOABII585P1hbD",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`getnodeaddresses` separates this into `address` and `port`; does it make sense to be different here?\r\n\r\n`getnodeaddresses` also includes the last seen time which seems like it might be useful?",
      "created_at": "2023-09-28T02:09:31Z",
      "updated_at": "2023-09-28T02:52:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339430595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339430595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1057,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339444441",
      "pull_request_review_id": 1647790432,
      "id": 1339444441,
      "node_id": "PRRC_kwDOABII585P1kzZ",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could substantially reduce the size of the json output (by about 20%) by changing this to:\r\n\r\n```json\r\n{\r\n  \"new_table\": {\r\n    \"0/2\": {\r\n      \"address\": \"89.78.111.197:8333\",\r\n      \"services\": 1037,\r\n      \"source\": \"34.126.67.135\"\r\n    },\r\n    \"0/5\": {\r\n      \"address\": \"13.228.211.83:8333\",\r\n      \"services\": 1033,\r\n      \"source\": \"34.126.67.135\"\r\n    }\r\n}\r\n```",
      "created_at": "2023-09-28T02:33:38Z",
      "updated_at": "2023-09-28T02:52:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339444441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339444441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339450561",
      "pull_request_review_id": 1647790432,
      "id": 1339450561,
      "node_id": "PRRC_kwDOABII585P1mTB",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},\n+                                {RPCResult::Type::STR, \"source\", \"the address that relayed the address to us\"},\n+                            }},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getaddrmaninfo\", \"\")\n+            + HelpExampleCli(\"getaddrmaninfo\", \"true\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            if (!node.addrman) {\n+                throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n+            }\n+\n+            bool verbose = false;\n+            if (!request.params[0].isNull()) {\n+                verbose = request.params[0].get_bool();\n+            }",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add\r\n\r\n```c++\r\nTMPL_INST(CheckRequiredOrDefault, bool, CHECK_NONFATAL(maybe_arg)->get_bool(););\r\n```\r\n\r\nin rpc/util.cpp and this becomes `const bool verbose = self.Arg<bool>(0);`  (see #28230)",
      "created_at": "2023-09-28T02:44:32Z",
      "updated_at": "2023-09-28T02:52:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339450561",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339450561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339454178",
      "pull_request_review_id": 1647790432,
      "id": 1339454178,
      "node_id": "PRRC_kwDOABII585P1nLi",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},\n+                                {RPCResult::Type::STR, \"source\", \"the address that relayed the address to us\"},\n+                            }},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getaddrmaninfo\", \"\")\n+            + HelpExampleCli(\"getaddrmaninfo\", \"true\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            if (!node.addrman) {\n+                throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n+            }\n+\n+            bool verbose = false;\n+            if (!request.params[0].isNull()) {\n+                verbose = request.params[0].get_bool();\n+            }\n+\n+            UniValue ret(UniValue::VOBJ);\n+            for (int n = 0; n < NET_MAX; ++n) {\n+                enum Network network = static_cast<enum Network>(n);\n+                if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n+                UniValue obj(UniValue::VOBJ);\n+                obj.pushKV(\"new\", node.addrman->Size(network, true));\n+                obj.pushKV(\"tried\", node.addrman->Size(network, false));\n+                obj.pushKV(\"total\", node.addrman->Size(network));\n+                ret.pushKV(GetNetworkName(network), obj);\n+            }\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n+            obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n+            obj.pushKV(\"total\", node.addrman->Size());\n+            ret.pushKV(\"all_networks\", obj);\n+\n+            if (verbose) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We have `getmempoolinfo` that gives statistics about the mempool and `getrawmempool` that gives the contents of the mempool; wouldn't it make more sense to mirror that arrangement and have two separate RPCs here as well?",
      "created_at": "2023-09-28T02:50:50Z",
      "updated_at": "2023-09-28T02:52:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339454178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339454178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339867604",
      "pull_request_review_id": 1648384145,
      "id": 1339867604,
      "node_id": "PRRC_kwDOABII585P3MHU",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": 1339444441,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not a fan of representing two integers as string in JSON key and having downstream figure out how to parse it. However, why not do\r\n\r\n```\r\n\"table\": {\r\n  bucket: {\r\n    position: {\r\n      \"address\": \"13.228.211.83:8333\",\r\n      \"services\": 1033,\r\n      \"source\": \"34.126.67.135\"\r\n    },\r\n  }\r\n}\r\n```\r\nwhere `bucket` and `position` are integer keys.\r\n\r\n ",
      "created_at": "2023-09-28T10:06:59Z",
      "updated_at": "2023-09-28T10:06:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339867604",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339867604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339908447",
      "pull_request_review_id": 1648439139,
      "id": 1339908447,
      "node_id": "PRRC_kwDOABII585P3WFf",
      "diff_hunk": "@@ -1199,6 +1218,15 @@ std::vector<CAddress> AddrManImpl::GetAddr(size_t max_addresses, size_t max_pct,\n     return addresses;\n }\n \n+std::vector<std::tuple<int, int, AddrInfo>> AddrManImpl::GetEntries(bool from_tried) const",
      "path": "src/addrman.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it'd be nice to have some sort of named struct instead of using `std::vector<std::tuple<int, int, AddrInfo>>` several times, including from the callers. Especially since having two `int` fields means it's easy for callers to mix up. \r\n\r\nI wonder if it could make sense to use the `AddressPosition` struct defined in `addrman.h`. It's not a perfect mapping, but it's currently only used in the tests, and it seems fine to add the additional info from `AddrInfo` to it to pass to the RPC. that could generally be cleaner, but might be overkill. \r\n\r\nAlternatively just the bucket & position could be pulled out into a small struct (similar to `NewTriedCount`), and that can be used in this tuple. ",
      "created_at": "2023-09-28T10:39:25Z",
      "updated_at": "2023-09-28T10:39:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339908447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339908447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340008020",
      "pull_request_review_id": 1648607970,
      "id": 1340008020,
      "node_id": "PRRC_kwDOABII585P3uZU",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": 1339444441,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TIL UniValue doesn't support integer keys - only string keys. Still going with this as it's about a 15% size reduction with somewhat empty addrman tables. I assume even more space savings on a full addrman tables, as the `getaddrmaninfo verbose` output would contain more `bucket` keys.\r\n\r\n```\r\n$ ll getrawaddrman.json getaddrmaninfo_verbose.json -h\r\n-rw-r--r-- 1 user group 761K Sep 28 13:37 getrawaddrman.json\r\n-rw-r--r-- 1 user group 881K Sep 28 13:37 getaddrmaninfo_verbose.json\r\n```\r\n",
      "created_at": "2023-09-28T11:53:49Z",
      "updated_at": "2023-09-28T11:54:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1340008020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340008020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340186430",
      "pull_request_review_id": 1648919768,
      "id": 1340186430,
      "node_id": "PRRC_kwDOABII585P4Z8-",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": 1339444441,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "JSON in general  doesn't support integer keys.\r\n\r\nNot a strong opinion, but there's two advantages of `\"0/5\":` vs `\"0\": {\"5\":` -- one is that if you don't care about the bucket/position, you can just skip through the values directly (`x.values()` vs `sum(x2.values() for x2 in x.values())`), the other is that bucket+position are pretty internal arrangements; if we end up with a different layout in the future, we can just map that to a different string template (eg \"0/5/2\") and only the people who care about the internals have to even notice the change.",
      "created_at": "2023-09-28T13:47:42Z",
      "updated_at": "2023-09-28T13:47:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1340186430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1340186430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341159511",
      "pull_request_review_id": 1650463340,
      "id": 1341159511,
      "node_id": "PRRC_kwDOABII585P8HhX",
      "diff_hunk": "@@ -1014,52 +1015,107 @@ static RPCHelpMan sendmsgtopeer()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(unsigned int bucket, unsigned int position, const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddrPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"bucket\", bucket);\n+    ret.pushKV(\"position\", position);\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    return ret;\n+}\n+\n static RPCHelpMan getaddrmaninfo()\n {\n     return RPCHelpMan{\"getaddrmaninfo\",\n-                      \"\\nProvides information about the node's address manager by returning the number of \"\n-                      \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n-                      \"This RPC is for testing only.\\n\",\n-                      {},\n-                      RPCResult{\n-                              RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n-                              {\n-                                      {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \")\",\n-                                       {\n-                                               {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n-                                               {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n-                                               {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n-                                       }},\n-                              }\n-                      },\n-                      RPCExamples{\n-                              HelpExampleCli(\"getaddrmaninfo\", \"\")\n-                              + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n-                      },\n-                      [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-                      {\n-                          NodeContext& node = EnsureAnyNodeContext(request.context);\n-                          if (!node.addrman) {\n-                              throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n-                          }\n-\n-                          UniValue ret(UniValue::VOBJ);\n-                          for (int n = 0; n < NET_MAX; ++n) {\n-                              enum Network network = static_cast<enum Network>(n);\n-                              if (network == NET_UNROUTABLE || network == NET_INTERNAL) continue;\n-                              UniValue obj(UniValue::VOBJ);\n-                              obj.pushKV(\"new\", node.addrman->Size(network, true));\n-                              obj.pushKV(\"tried\", node.addrman->Size(network, false));\n-                              obj.pushKV(\"total\", node.addrman->Size(network));\n-                              ret.pushKV(GetNetworkName(network), obj);\n-                          }\n-                          UniValue obj(UniValue::VOBJ);\n-                          obj.pushKV(\"new\", node.addrman->Size(std::nullopt, true));\n-                          obj.pushKV(\"tried\", node.addrman->Size(std::nullopt, false));\n-                          obj.pushKV(\"total\", node.addrman->Size());\n-                          ret.pushKV(\"all_networks\", obj);\n-                          return ret;\n-                      },\n+        \"\\nProvides information about the node's address manager by returning the number of \"\n+        \"addresses in the `new` and `tried` tables and their sum for all networks.\\n\"\n+        \"When setting the verbose flag, the address manager entries for the new \"\n+        \"and tried table are also returned.\\n\"\n+        \"This RPC is for testing only.\\n\",\n+        {\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a list of address manager entries by table, false for address counts only\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type as keys\",\n+                {\n+                    {RPCResult::Type::OBJ, \"network\", \"the network (\" + Join(GetNetworkNames(), \", \") + \", all_networks )\", {\n+                        {RPCResult::Type::NUM, \"new\", \"number of addresses in the new table, which represent potential peers the node has discovered but hasn't yet successfully connected to.\"},\n+                        {RPCResult::Type::NUM, \"tried\", \"number of addresses in the tried table, which represent peers the node has successfully connected to in the past.\"},\n+                        {RPCResult::Type::NUM, \"total\", \"total number of addresses in both new/tried tables\"},\n+                    }},\n+                },\n+            },\n+            RPCResult{\"for verbose = true\", RPCResult::Type::OBJ_DYN, \"\", \"json object with network type, new_table and tried_table as keys\",\n+                {\n+                    {RPCResult::Type::ELISION, \"\", \"The same output as verbose = false\"},\n+                    {\n+                        RPCResult::Type::ARR, \"table\", \"list of addresses in the address manager table ( new_table, tried_table )\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"an address manager table entry\", {\n+                                {RPCResult::Type::STR, \"address\", \"the address\"},\n+                                {RPCResult::Type::NUM, \"services\", \"the services the node might support\"},\n+                                {RPCResult::Type::NUM, \"bucket\", \"the address manager bucket the address is placed in\"},\n+                                {RPCResult::Type::NUM, \"position\", \"the bucket position the address is placed in\"},\n+                                {RPCResult::Type::STR, \"source\", \"the address that relayed the address to us\"},\n+                            }},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getaddrmaninfo\", \"\")\n+            + HelpExampleCli(\"getaddrmaninfo\", \"true\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"\")\n+            + HelpExampleRpc(\"getaddrmaninfo\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            if (!node.addrman) {\n+                throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Address manager functionality missing or disabled\");\n+            }\n+\n+            bool verbose = false;\n+            if (!request.params[0].isNull()) {\n+                verbose = request.params[0].get_bool();\n+            }",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "4307c8c90b5deb282ffa1b8f899f7638b1a9c989",
      "in_reply_to_id": 1339450561,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I choose to move to `getrawaddrman` instead of extending `getaddrmaninfo` with a verbose flag. https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1339454178. Resolving this as there's no need for it anymore.",
      "created_at": "2023-09-29T09:59:43Z",
      "updated_at": "2023-09-29T09:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341159511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341159511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341389523",
      "pull_request_review_id": 1650820049,
      "id": 1341389523,
      "node_id": "PRRC_kwDOABII585P8_rT",
      "diff_hunk": "@@ -838,6 +838,30 @@ std::vector<CAddress> AddrManImpl::GetAddr_(size_t max_addresses, size_t max_pct\n     return addresses;\n }\n \n+std::vector<std::pair<AddrInfo, AddressPosition>> AddrManImpl::GetEntries_(bool from_tried) const\n+{\n+    AssertLockHeld(cs);\n+\n+    const int bucket_count = from_tried ? ADDRMAN_TRIED_BUCKET_COUNT : ADDRMAN_NEW_BUCKET_COUNT;\n+    std::vector<std::pair<AddrInfo, AddressPosition>> infos;\n+    for (int bucket = 0; bucket < bucket_count; ++bucket) {\n+        for (int position = 0; position < ADDRMAN_BUCKET_SIZE; position++) {",
      "path": "src/addrman.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "b7407bb7758089dea32acc9e94f31562b936e4e7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b7407bb: micro style nit, only if you retouch this commit for some reason - `s/position++/++position`\r\n",
      "created_at": "2023-09-29T13:48:53Z",
      "updated_at": "2023-09-29T15:30:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341389523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341389523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 848,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341443044",
      "pull_request_review_id": 1650820049,
      "id": 1341443044,
      "node_id": "PRRC_kwDOABII585P9Mvk",
      "diff_hunk": "@@ -386,5 +392,115 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+    def test_getrawaddrman(self):\n+        self.log.info(\"Test getrawaddrman\")\n+        node = self.nodes[1]\n+\n+        self.log.debug(\"Test that getrawaddrman is a hidden RPC\")\n+        # It is hidden from general help, but its detailed help may be called directly.\n+        assert \"getrawaddrman\" not in node.help()\n+        assert \"getrawaddrman\" in node.help(\"getrawaddrman\")\n+\n+        def check_addr_information(result, expected):\n+            \"\"\"Utillity to compare an getrawaddrman result entry to a expected entry\"\"\"",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 34,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "45a84d1:\r\n```suggestion\r\n            \"\"\"Utility to compare a getrawaddrman result entry with an expected entry\"\"\"\r\n```\r\nsame suggestion for [L416](https://github.com/bitcoin/bitcoin/blob/45a84d19dec4953a71a744de0c1aac4a3a51c685/test/functional/rpc_net.py#L416) too.",
      "created_at": "2023-09-29T14:33:15Z",
      "updated_at": "2023-09-29T15:30:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341443044",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341443044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341628296",
      "pull_request_review_id": 1651208768,
      "id": 1341628296,
      "node_id": "PRRC_kwDOABII585P95-I",
      "diff_hunk": "@@ -260,6 +263,8 @@ class AddrManImpl\n \n     std::vector<CAddress> GetAddr_(size_t max_addresses, size_t max_pct, std::optional<Network> network) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n+    std::vector<std::pair<AddrInfo, AddressPosition>> GetEntries_(bool use_tried) const EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/addrman_impl.h",
      "position": null,
      "original_position": 14,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "b7407bb7758089dea32acc9e94f31562b936e4e7",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any reason `from_tried` became `use_tried`? I'm guessing to keep consistent with the param to `GetEntry`, but then could it make sense to just rename the param in the newly introduced `GetEntries`? ",
      "created_at": "2023-09-29T17:18:48Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341628296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341628296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341643952",
      "pull_request_review_id": 1651208768,
      "id": 1341643952,
      "node_id": "PRRC_kwDOABII585P99yw",
      "diff_hunk": "@@ -1063,6 +1064,72 @@ static RPCHelpMan getaddrmaninfo()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddr());\n+    ret.pushKV(\"port\", info.GetPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"time\", int64_t{TicksSinceEpoch<std::chrono::seconds>(info.nTime)});\n+    ret.pushKV(\"network\", GetNetworkName(info.GetNetClass()));\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    ret.pushKV(\"source_network\", GetNetworkName(info.source.GetNetClass()));\n+    return ret;\n+}\n+\n+UniValue AddrmanTableToJSON(const std::vector<std::pair<AddrInfo, AddressPosition>>& tableInfos)\n+{\n+    UniValue table(UniValue::VOBJ);\n+    for (const auto& e : tableInfos) {\n+        AddrInfo info = e.first;\n+        AddressPosition location = e.second;\n+        std::ostringstream key;\n+        key << location.bucket << \"/\" << location.position;\n+        table.pushKV(key.str(), AddrmanEntryToJSON(info));\n+    }\n+    return table;\n+}\n+\n+static RPCHelpMan getrawaddrman()\n+{\n+    return RPCHelpMan{\n+        \"getrawaddrman\",\n+        \"\\nReturns information on all address manager entries for the new and tried tables.\\n\"\n+        \"This RPC is for testing only.\\n\",",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "b7407bb7758089dea32acc9e94f31562b936e4e7",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is it? 👀 ",
      "created_at": "2023-09-29T17:37:19Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341643952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341643952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1098,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341659454",
      "pull_request_review_id": 1651208768,
      "id": 1341659454,
      "node_id": "PRRC_kwDOABII585P-Bk-",
      "diff_hunk": "@@ -386,5 +392,115 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+    def test_getrawaddrman(self):\n+        self.log.info(\"Test getrawaddrman\")\n+        node = self.nodes[1]\n+\n+        self.log.debug(\"Test that getrawaddrman is a hidden RPC\")\n+        # It is hidden from general help, but its detailed help may be called directly.\n+        assert \"getrawaddrman\" not in node.help()\n+        assert \"getrawaddrman\" in node.help(\"getrawaddrman\")\n+\n+        def check_addr_information(result, expected):\n+            \"\"\"Utillity to compare an getrawaddrman result entry to a expected entry\"\"\"\n+            assert_equal(result[\"address\"], expected[\"address\"])\n+            assert_equal(result[\"port\"], expected[\"port\"])\n+            assert_equal(result[\"services\"], expected[\"services\"])\n+            assert_equal(result[\"network\"], expected[\"network\"])\n+            assert_equal(result[\"source\"], expected[\"source\"])\n+            assert_equal(result[\"source_network\"], expected[\"source_network\"])\n+            # To avoid failing on slow test runners, use a 10s vspan here.\n+            assert_approx(result[\"time\"], time.time(), vspan=10)\n+\n+        def check_getrawaddrman_entries(expected):\n+            \"\"\"Utillity to compare an getrawaddrman result to expected addrman contents\"\"\"\n+            getrawaddrman = node.getrawaddrman()\n+            getaddrmaninfo = node.getaddrmaninfo()\n+            for (table_name, table_info) in expected.items():\n+                assert_equal(len(getrawaddrman[table_name]), len(table_info[\"entries\"]))\n+                assert_equal(len(getrawaddrman[table_name]), getaddrmaninfo[\"all_networks\"][table_name])\n+\n+                for bucket_position in getrawaddrman[table_name].keys():\n+                    bucket = int(bucket_position.split(\"/\")[0])\n+                    position = int(bucket_position.split(\"/\")[1])\n+\n+                    # bucket and position only be sanity checked here as the\n+                    # test-addrman isn't deterministic\n+                    assert 0 <= int(bucket) < table_info[\"bucket_count\"]\n+                    assert 0 <= int(position) < ADDRMAN_BUCKET_SIZE\n+\n+                    entry = getrawaddrman[table_name][bucket_position]\n+                    expected_entry = list(filter(lambda e: e[\"address\"] == entry[\"address\"], table_info[\"entries\"]))[0]\n+                    check_addr_information(entry, expected_entry)\n+\n+        # we expect one addrman new and tried table entry, which were added in a previous test\n+        expected = {\n+            \"new\": {\n+                \"bucket_count\": ADDRMAN_NEW_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"2.0.0.0\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"2.0.0.0\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            },\n+            \"tried\": {\n+                \"bucket_count\": ADDRMAN_TRIED_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"1.2.3.4\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"1.2.3.4\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            }\n+        }\n+\n+        self.log.debug(\"Test that the getrawaddrman contains information about the addresses added in a previous test\")\n+        check_getrawaddrman_entries(expected)\n+\n+        self.log.debug(\"Add one new address to each addrman table\")\n+        expected[\"new\"][\"entries\"].append({\n+            \"address\": \"2803:0:1234:abcd::1\",\n+            \"services\": 9,\n+            \"network\": \"ipv6\",\n+            \"source\": \"2803:0:1234:abcd::1\",\n+            \"source_network\": \"ipv6\",\n+            \"port\": -1, # set once addpeeraddress is successful",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 105,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "flake8 complains: `E261 at least two spaces before inline comment` (here and below)",
      "created_at": "2023-09-29T17:57:31Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341659454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341659454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341660051",
      "pull_request_review_id": 1651208768,
      "id": 1341660051,
      "node_id": "PRRC_kwDOABII585P-BuT",
      "diff_hunk": "@@ -386,5 +392,115 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+    def test_getrawaddrman(self):\n+        self.log.info(\"Test getrawaddrman\")\n+        node = self.nodes[1]\n+\n+        self.log.debug(\"Test that getrawaddrman is a hidden RPC\")\n+        # It is hidden from general help, but its detailed help may be called directly.\n+        assert \"getrawaddrman\" not in node.help()\n+        assert \"getrawaddrman\" in node.help(\"getrawaddrman\")\n+\n+        def check_addr_information(result, expected):\n+            \"\"\"Utillity to compare an getrawaddrman result entry to a expected entry\"\"\"\n+            assert_equal(result[\"address\"], expected[\"address\"])\n+            assert_equal(result[\"port\"], expected[\"port\"])\n+            assert_equal(result[\"services\"], expected[\"services\"])\n+            assert_equal(result[\"network\"], expected[\"network\"])\n+            assert_equal(result[\"source\"], expected[\"source\"])\n+            assert_equal(result[\"source_network\"], expected[\"source_network\"])\n+            # To avoid failing on slow test runners, use a 10s vspan here.\n+            assert_approx(result[\"time\"], time.time(), vspan=10)\n+\n+        def check_getrawaddrman_entries(expected):\n+            \"\"\"Utillity to compare an getrawaddrman result to expected addrman contents\"\"\"\n+            getrawaddrman = node.getrawaddrman()\n+            getaddrmaninfo = node.getaddrmaninfo()\n+            for (table_name, table_info) in expected.items():\n+                assert_equal(len(getrawaddrman[table_name]), len(table_info[\"entries\"]))\n+                assert_equal(len(getrawaddrman[table_name]), getaddrmaninfo[\"all_networks\"][table_name])\n+\n+                for bucket_position in getrawaddrman[table_name].keys():\n+                    bucket = int(bucket_position.split(\"/\")[0])\n+                    position = int(bucket_position.split(\"/\")[1])\n+\n+                    # bucket and position only be sanity checked here as the\n+                    # test-addrman isn't deterministic\n+                    assert 0 <= int(bucket) < table_info[\"bucket_count\"]\n+                    assert 0 <= int(position) < ADDRMAN_BUCKET_SIZE\n+\n+                    entry = getrawaddrman[table_name][bucket_position]\n+                    expected_entry = list(filter(lambda e: e[\"address\"] == entry[\"address\"], table_info[\"entries\"]))[0]\n+                    check_addr_information(entry, expected_entry)\n+\n+        # we expect one addrman new and tried table entry, which were added in a previous test\n+        expected = {\n+            \"new\": {\n+                \"bucket_count\": ADDRMAN_NEW_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"2.0.0.0\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"2.0.0.0\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            },\n+            \"tried\": {\n+                \"bucket_count\": ADDRMAN_TRIED_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"1.2.3.4\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"1.2.3.4\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            }\n+        }\n+\n+        self.log.debug(\"Test that the getrawaddrman contains information about the addresses added in a previous test\")\n+        check_getrawaddrman_entries(expected)\n+\n+        self.log.debug(\"Add one new address to each addrman table\")\n+        expected[\"new\"][\"entries\"].append({\n+            \"address\": \"2803:0:1234:abcd::1\",\n+            \"services\": 9,\n+            \"network\": \"ipv6\",\n+            \"source\": \"2803:0:1234:abcd::1\",\n+            \"source_network\": \"ipv6\",\n+            \"port\": -1, # set once addpeeraddress is successful\n+        })\n+        expected[\"tried\"][\"entries\"].append({\n+            \"address\": \"nrfj6inpyf73gpkyool35hcmne5zwfmse3jl3aw23vk7chdemalyaqad.onion\",\n+            \"services\": 9,\n+            \"network\": \"onion\",\n+            \"source\": \"nrfj6inpyf73gpkyool35hcmne5zwfmse3jl3aw23vk7chdemalyaqad.onion\",\n+            \"source_network\": \"onion\",\n+            \"port\": -1, # set once addpeeraddress is successful\n+        })\n+\n+        port = 0\n+        for (table_name, table_info) in expected.items():\n+            # There's a slight chance that the to-be-added address collides with an already\n+            # present table entry. To avoid this, we increment the port until an address has been\n+            # added. Incrementing the port changes the position in the new table bucket (bucket\n+            # stays the same) and changes both the bucket and the position in the tried table.\n+            while True:\n+                if node.addpeeraddress(address=table_info[\"entries\"][1][\"address\"], port=port, tried=table_name==\"tried\")[\"success\"]:",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 123,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "flake8 complains: `E225 missing whitespace around operator` (for `table_name==\"tried\"` part)",
      "created_at": "2023-09-29T17:58:19Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341660051",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341660051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341660556",
      "pull_request_review_id": 1651208768,
      "id": 1341660556,
      "node_id": "PRRC_kwDOABII585P-B2M",
      "diff_hunk": "@@ -386,5 +392,115 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+    def test_getrawaddrman(self):\n+        self.log.info(\"Test getrawaddrman\")\n+        node = self.nodes[1]\n+\n+        self.log.debug(\"Test that getrawaddrman is a hidden RPC\")\n+        # It is hidden from general help, but its detailed help may be called directly.\n+        assert \"getrawaddrman\" not in node.help()\n+        assert \"getrawaddrman\" in node.help(\"getrawaddrman\")\n+\n+        def check_addr_information(result, expected):\n+            \"\"\"Utillity to compare an getrawaddrman result entry to a expected entry\"\"\"\n+            assert_equal(result[\"address\"], expected[\"address\"])\n+            assert_equal(result[\"port\"], expected[\"port\"])\n+            assert_equal(result[\"services\"], expected[\"services\"])\n+            assert_equal(result[\"network\"], expected[\"network\"])\n+            assert_equal(result[\"source\"], expected[\"source\"])\n+            assert_equal(result[\"source_network\"], expected[\"source_network\"])\n+            # To avoid failing on slow test runners, use a 10s vspan here.\n+            assert_approx(result[\"time\"], time.time(), vspan=10)\n+\n+        def check_getrawaddrman_entries(expected):\n+            \"\"\"Utillity to compare an getrawaddrman result to expected addrman contents\"\"\"\n+            getrawaddrman = node.getrawaddrman()\n+            getaddrmaninfo = node.getaddrmaninfo()\n+            for (table_name, table_info) in expected.items():\n+                assert_equal(len(getrawaddrman[table_name]), len(table_info[\"entries\"]))\n+                assert_equal(len(getrawaddrman[table_name]), getaddrmaninfo[\"all_networks\"][table_name])\n+\n+                for bucket_position in getrawaddrman[table_name].keys():\n+                    bucket = int(bucket_position.split(\"/\")[0])\n+                    position = int(bucket_position.split(\"/\")[1])\n+\n+                    # bucket and position only be sanity checked here as the\n+                    # test-addrman isn't deterministic\n+                    assert 0 <= int(bucket) < table_info[\"bucket_count\"]\n+                    assert 0 <= int(position) < ADDRMAN_BUCKET_SIZE\n+\n+                    entry = getrawaddrman[table_name][bucket_position]\n+                    expected_entry = list(filter(lambda e: e[\"address\"] == entry[\"address\"], table_info[\"entries\"]))[0]\n+                    check_addr_information(entry, expected_entry)\n+\n+        # we expect one addrman new and tried table entry, which were added in a previous test\n+        expected = {\n+            \"new\": {\n+                \"bucket_count\": ADDRMAN_NEW_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"2.0.0.0\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"2.0.0.0\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            },\n+            \"tried\": {\n+                \"bucket_count\": ADDRMAN_TRIED_BUCKET_COUNT,\n+                \"entries\": [\n+                    {\n+                        \"address\": \"1.2.3.4\",\n+                        \"port\": 8333,\n+                        \"services\": 9,\n+                        \"network\": \"ipv4\",\n+                        \"source\": \"1.2.3.4\",\n+                        \"source_network\": \"ipv4\",\n+                    }\n+                ]\n+            }\n+        }\n+\n+        self.log.debug(\"Test that the getrawaddrman contains information about the addresses added in a previous test\")\n+        check_getrawaddrman_entries(expected)\n+\n+        self.log.debug(\"Add one new address to each addrman table\")\n+        expected[\"new\"][\"entries\"].append({\n+            \"address\": \"2803:0:1234:abcd::1\",\n+            \"services\": 9,\n+            \"network\": \"ipv6\",\n+            \"source\": \"2803:0:1234:abcd::1\",\n+            \"source_network\": \"ipv6\",\n+            \"port\": -1, # set once addpeeraddress is successful\n+        })\n+        expected[\"tried\"][\"entries\"].append({\n+            \"address\": \"nrfj6inpyf73gpkyool35hcmne5zwfmse3jl3aw23vk7chdemalyaqad.onion\",\n+            \"services\": 9,\n+            \"network\": \"onion\",\n+            \"source\": \"nrfj6inpyf73gpkyool35hcmne5zwfmse3jl3aw23vk7chdemalyaqad.onion\",\n+            \"source_network\": \"onion\",\n+            \"port\": -1, # set once addpeeraddress is successful\n+        })\n+\n+        port = 0\n+        for (table_name, table_info) in expected.items():\n+            # There's a slight chance that the to-be-added address collides with an already\n+            # present table entry. To avoid this, we increment the port until an address has been\n+            # added. Incrementing the port changes the position in the new table bucket (bucket\n+            # stays the same) and changes both the bucket and the position in the tried table.\n+            while True:",
      "path": "test/functional/rpc_net.py",
      "position": 118,
      "original_position": 122,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good solution for the addrman collisions issue :) ",
      "created_at": "2023-09-29T17:58:59Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341660556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341660556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 489,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341665166",
      "pull_request_review_id": 1651208768,
      "id": 1341665166,
      "node_id": "PRRC_kwDOABII585P-C-O",
      "diff_hunk": "@@ -168,6 +169,15 @@ class AddrMan\n      */\n     std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network) const;\n \n+    /**\n+     * Returns a information-location pair for all addresses in an addrman table.\n+     *\n+     * @param[in] from_tried     If tried table entries should be returned. Otherwise, new table entries are returned.",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 21,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n     * @param[in] from_tried     Which table to return entries from (only selects from one). \r\n```\r\n\r\nnot sure if that's the best wording, but when I initially read this I was uncertain if true would be (new & tried) or just tried. ",
      "created_at": "2023-09-29T18:04:51Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341665166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341665166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341669391",
      "pull_request_review_id": 1651208768,
      "id": 1341669391,
      "node_id": "PRRC_kwDOABII585P-EAP",
      "diff_hunk": "@@ -168,6 +169,15 @@ class AddrMan\n      */\n     std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network) const;\n \n+    /**\n+     * Returns a information-location pair for all addresses in an addrman table.\n+     *\n+     * @param[in] from_tried     If tried table entries should be returned. Otherwise, new table entries are returned.\n+     *\n+     * @return                   A vector consisting of pairs of AddrInfo and AddressPosition.",
      "path": "src/addrman.h",
      "position": 25,
      "original_position": 23,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "45a84d19dec4953a71a744de0c1aac4a3a51c685",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe if an addr has multiplicity > 1 (aka shows up on the new table multiple times), that this function will return it multiple times. Could consider adding to this documentation. ",
      "created_at": "2023-09-29T18:10:44Z",
      "updated_at": "2023-09-29T18:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341669391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341669391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 179,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341709939",
      "pull_request_review_id": 1651342258,
      "id": 1341709939,
      "node_id": "PRRC_kwDOABII585P-N5z",
      "diff_hunk": "@@ -1063,6 +1064,72 @@ static RPCHelpMan getaddrmaninfo()\n     };\n }\n \n+UniValue AddrmanEntryToJSON(const AddrInfo& info)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"address\", info.ToStringAddr());\n+    ret.pushKV(\"port\", info.GetPort());\n+    ret.pushKV(\"services\", (uint64_t)info.nServices);\n+    ret.pushKV(\"time\", int64_t{TicksSinceEpoch<std::chrono::seconds>(info.nTime)});\n+    ret.pushKV(\"network\", GetNetworkName(info.GetNetClass()));\n+    ret.pushKV(\"source\", info.source.ToStringAddr());\n+    ret.pushKV(\"source_network\", GetNetworkName(info.source.GetNetClass()));\n+    return ret;\n+}\n+\n+UniValue AddrmanTableToJSON(const std::vector<std::pair<AddrInfo, AddressPosition>>& tableInfos)\n+{\n+    UniValue table(UniValue::VOBJ);\n+    for (const auto& e : tableInfos) {\n+        AddrInfo info = e.first;\n+        AddressPosition location = e.second;\n+        std::ostringstream key;\n+        key << location.bucket << \"/\" << location.position;\n+        table.pushKV(key.str(), AddrmanEntryToJSON(info));\n+    }\n+    return table;\n+}\n+\n+static RPCHelpMan getrawaddrman()\n+{\n+    return RPCHelpMan{\n+        \"getrawaddrman\",\n+        \"\\nReturns information on all address manager entries for the new and tried tables.\\n\"\n+        \"This RPC is for testing only.\\n\",",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "b7407bb7758089dea32acc9e94f31562b936e4e7",
      "in_reply_to_id": 1341643952,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps it would be better to describe it as \"EXPERIMENTAL warning: this call may be changed in future releases.\" like `sendall` ?",
      "created_at": "2023-09-29T19:03:28Z",
      "updated_at": "2023-09-29T19:03:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1341709939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341709939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1098,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342109520",
      "pull_request_review_id": 1651873005,
      "id": 1342109520,
      "node_id": "PRRC_kwDOABII585P_vdQ",
      "diff_hunk": "@@ -26,6 +26,11 @@\n )\n from test_framework.wallet import MiniWallet\n \n+# Address manager size constants as defined in addrman_impl.h\n+ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+ADDRMAN_TRIED_BUCKET_COUNT = 1 << 8\n+ADDRMAN_BUCKET_SIZE = 1 << 6\n+",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 8,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "584e12d977b5c7dd57f4aafd984e38e64e85916a",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I re-touch this, I'll move the constants to `test/functional/test_framework/netutil.py` as in https://github.com/bitcoin/bitcoin/pull/28176#issuecomment-1741842516",
      "created_at": "2023-10-01T09:54:13Z",
      "updated_at": "2023-10-01T09:54:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1342109520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342109520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342711837",
      "pull_request_review_id": 1652780419,
      "id": 1342711837,
      "node_id": "PRRC_kwDOABII585QCCgd",
      "diff_hunk": "@@ -26,6 +26,11 @@\n )\n from test_framework.wallet import MiniWallet\n \n+# Address manager size constants as defined in addrman_impl.h\n+ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+ADDRMAN_TRIED_BUCKET_COUNT = 1 << 8\n+ADDRMAN_BUCKET_SIZE = 1 << 6\n+",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 8,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "584e12d977b5c7dd57f4aafd984e38e64e85916a",
      "in_reply_to_id": 1342109520,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#28176 was merged, you might want to move on it to avoid duplication.\r\nOr a follow up",
      "created_at": "2023-10-02T13:42:26Z",
      "updated_at": "2023-10-02T13:48:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1342711837",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342711837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357978510",
      "pull_request_review_id": 1641032747,
      "id": 1357978510,
      "node_id": "PRRC_kwDOABII585Q8RuO",
      "diff_hunk": "@@ -838,6 +838,30 @@ std::vector<CAddress> AddrManImpl::GetAddr_(size_t max_addresses, size_t max_pct\n     return addresses;\n }\n \n+std::vector<std::pair<AddrInfo, AddressPosition>> AddrManImpl::GetEntries_(bool from_tried) const\n+{\n+    AssertLockHeld(cs);\n+\n+    const int bucket_count = from_tried ? ADDRMAN_TRIED_BUCKET_COUNT : ADDRMAN_NEW_BUCKET_COUNT;\n+    std::vector<std::pair<AddrInfo, AddressPosition>> infos;\n+    for (int bucket = 0; bucket < bucket_count; ++bucket) {\n+        for (int position = 0; position < ADDRMAN_BUCKET_SIZE; ++position) {\n+            int id = GetEntry(from_tried, bucket, position);\n+            if (id >= 0) {\n+                AddrInfo info = mapInfo.at(id);\n+                AddressPosition location = AddressPosition(\n+                    from_tried,\n+                    /*multiplicity_in=*/from_tried ? 1 : info.nRefCount,\n+                    bucket,\n+                    position);\n+                infos.push_back(std::make_pair(info, location));",
      "path": "src/addrman.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`std::make_pair` isn't needed, starting with C++11, you can use `emplace_back`. Fixed in https://github.com/bitcoin/bitcoin/pull/28583",
      "created_at": "2023-10-13T08:55:40Z",
      "updated_at": "2023-10-13T09:01:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1357978510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357978510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357980527",
      "pull_request_review_id": 1641032747,
      "id": 1357980527,
      "node_id": "PRRC_kwDOABII585Q8SNv",
      "diff_hunk": "@@ -386,5 +388,115 @@ def test_getaddrmaninfo(self):\n             assert_equal(res[net][\"tried\"], 0)\n             assert_equal(res[net][\"total\"], 0)\n \n+    def test_getrawaddrman(self):\n+        self.log.info(\"Test getrawaddrman\")\n+        node = self.nodes[1]\n+\n+        self.log.debug(\"Test that getrawaddrman is a hidden RPC\")\n+        # It is hidden from general help, but its detailed help may be called directly.\n+        assert \"getrawaddrman\" not in node.help()\n+        assert \"getrawaddrman\" in node.help(\"getrawaddrman\")\n+\n+        def check_addr_information(result, expected):\n+            \"\"\"Utility to compare a getrawaddrman result entry with an expected entry\"\"\"\n+            assert_equal(result[\"address\"], expected[\"address\"])\n+            assert_equal(result[\"port\"], expected[\"port\"])\n+            assert_equal(result[\"services\"], expected[\"services\"])\n+            assert_equal(result[\"network\"], expected[\"network\"])\n+            assert_equal(result[\"source\"], expected[\"source\"])\n+            assert_equal(result[\"source_network\"], expected[\"source_network\"])\n+            # To avoid failing on slow test runners, use a 10s vspan here.\n+            assert_approx(result[\"time\"], time.time(), vspan=10)",
      "path": "test/functional/rpc_net.py",
      "position": 38,
      "original_position": 38,
      "commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "original_commit_id": "352d5eb2a9e89cff4a2815d94a9d81fcc20c4b2c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n test  2023-10-12T14:27:36.383000Z TestFramework (DEBUG): Test that the getrawaddrman contains information about the addresses added in a previous test \r\n node1 2023-10-12T14:27:36.384588Z [http] [httpserver.cpp:307] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:37962 \r\n node1 2023-10-12T14:27:36.385003Z [httpworker.1] [rpc/request.cpp:181] [parse] [rpc] ThreadRPCServer method=getrawaddrman user=__cookie__ \r\n node1 2023-10-12T14:27:36.385345Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:36.385576Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.17ms) \r\n node1 2023-10-12T14:27:36.988817Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:36.989107Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.17ms) \r\n node1 2023-10-12T14:27:36.989261Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:36.989419Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.083728Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.094364Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (10.42ms) \r\n node1 2023-10-12T14:27:37.096430Z [http] [httpserver.cpp:307] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:37962 \r\n node1 2023-10-12T14:27:37.096690Z [httpworker.1] [rpc/request.cpp:181] [parse] [rpc] ThreadRPCServer method=getaddrmaninfo user=__cookie__ \r\n node1 2023-10-12T14:27:37.096908Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.097184Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.21ms) \r\n node1 2023-10-12T14:27:37.097247Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.097385Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.097434Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.097563Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.097606Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.097715Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.08ms) \r\n node1 2023-10-12T14:27:37.097757Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.097854Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.07ms) \r\n node1 2023-10-12T14:27:37.097883Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.175048Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (74.78ms) \r\n node1 2023-10-12T14:27:37.179840Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.180187Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.27ms) \r\n node1 2023-10-12T14:27:37.180243Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.180383Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.180466Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.180610Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.180652Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.180790Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.180850Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.180980Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.09ms) \r\n node1 2023-10-12T14:27:37.181023Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.181160Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.181234Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.181363Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.09ms) \r\n node1 2023-10-12T14:27:37.181406Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.181545Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.181605Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.181738Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.181780Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.181948Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.182008Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.182146Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.182187Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.182321Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.182393Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.182545Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.182588Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.182724Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.182786Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.182926Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.182975Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.183118Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.183181Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.183325Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.10ms) \r\n node1 2023-10-12T14:27:37.183393Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.183544Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.183617Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.183772Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.12ms) \r\n node1 2023-10-12T14:27:37.183812Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.183955Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.184068Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.184220Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.12ms) \r\n node1 2023-10-12T14:27:37.184261Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.184404Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.184460Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.184607Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.184646Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.184790Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.184868Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.185043Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.14ms) \r\n node1 2023-10-12T14:27:37.185086Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.185255Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.13ms) \r\n node1 2023-10-12T14:27:37.185313Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.185483Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.185524Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.185671Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n node1 2023-10-12T14:27:37.185734Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.185883Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.12ms) \r\n node1 2023-10-12T14:27:37.185922Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: new 1, tried 1, total 2 started \r\n node1 2023-10-12T14:27:37.186069Z [httpworker.1] [logging/timer.h:58] [Log] [addrman] CheckAddrman: completed (0.11ms) \r\n test  2023-10-12T14:27:37.273000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/rpc_net.py\", line 71, in run_test\r\n                                       self.test_getrawaddrman()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/rpc_net.py\", line 465, in test_getrawaddrman\r\n                                       check_getrawaddrman_entries(expected)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/rpc_net.py\", line 432, in check_getrawaddrman_entries\r\n                                       check_addr_information(entry, expected_entry)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/rpc_net.py\", line 411, in check_addr_information\r\n                                       assert_approx(result[\"time\"], time.time(), vspan=10)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/util.py\", line 38, in assert_approx\r\n                                       raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\r\n                                   AssertionError: 1697120845 < [1697120847.2721245..1697120867.2721245]\r\n",
      "created_at": "2023-10-13T08:57:27Z",
      "updated_at": "2023-10-13T09:01:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28523#discussion_r1357980527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357980527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28523"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 409,
      "original_line": 409,
      "side": "RIGHT"
    }
  ]
}