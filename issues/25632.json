{
  "type": "issue",
  "issue": {
    "id": 1307985219,
    "node_id": "I_kwDOABII585N9kVD",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/25632",
    "number": 25632,
    "state": "closed",
    "state_reason": "completed",
    "title": "SUMMARY: ThreadSanitizer: SEGV src/index/base.cpp:388:9 in BaseIndex::SetBestBlockIndex(CBlockIndex const*)::$_1::operator()() const",
    "body": "On current master (d806407173926e46421ad807750a06e49afbbdbd):\r\n\r\n```\r\n==92915==ERROR: ThreadSanitizer: SEGV on unknown address 0x000000000068 (pc 0x563f9856361b bp 0x7b140000ae48 sp 0x7f2a8bcfec90 T93437)\r\n==92915==The signal is caused by a READ memory access.\r\n==92915==Hint: address points to the zero page.\r\n    #0 BaseIndex::SetBestBlockIndex(CBlockIndex const*)::$_1::operator()() const src/index/base.cpp:388:9 (test_bitcoin+0xcf161b)\r\n    #1 BaseIndex::SetBestBlockIndex(CBlockIndex const*) src/index/base.cpp:388:9 (test_bitcoin+0xcf161b)\r\n    #2 BaseIndex::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*) src/index/base.cpp:273:9 (test_bitcoin+0xcf3899)\r\n    #3 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)::operator()(CValidationInterface&) const src/validationinterface.cpp:225:79 (test_bitcoin+0x104ac34)\r\n    #4 void MainSignalsImpl::Iterate<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)&&) src/validationinterface.cpp:86:17 (test_bitcoin+0x104ac34)\r\n    #5 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const src/validationinterface.cpp:225:22 (test_bitcoin+0x104ac34)\r\n    #6 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9::operator()() const src/validationinterface.cpp:227:5 (test_bitcoin+0x104ac34)\r\n    #7 decltype(static_cast<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(fp)()) std::__1::__invoke<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0x104ac34)\r\n    #8 void std::__1::__invoke_void_return_wrapper<void, true>::__call<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0x104ac34)\r\n    #9 std::__1::__function::__alloc_func<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9, std::__1::allocator<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0x104ac34)\r\n    #10 std::__1::__function::__func<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9, std::__1::allocator<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0x104ac34)\r\n    #11 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x10e3661)\r\n    #12 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x10e3661)\r\n    #13 SingleThreadedSchedulerClient::ProcessQueue() src/scheduler.cpp:175:5 (test_bitcoin+0x10e3661)\r\n    #14 SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1::operator()() const src/scheduler.cpp:144:41 (test_bitcoin+0x10e5365)\r\n    #15 decltype(static_cast<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(fp)()) std::__1::__invoke<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0x10e5365)\r\n    #16 void std::__1::__invoke_void_return_wrapper<void, true>::__call<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0x10e5365)\r\n    #17 std::__1::__function::__alloc_func<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1, std::__1::allocator<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0x10e5365)\r\n    #18 std::__1::__function::__func<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1, std::__1::allocator<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0x10e5365)\r\n    #19 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x10e264c)\r\n    #20 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x10e264c)\r\n    #21 CScheduler::serviceQueue() src/scheduler.cpp:62:17 (test_bitcoin+0x10e264c)\r\n    #22 ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0::operator()() const src/test/util/setup_common.cpp:177:110 (test_bitcoin+0xa733c8)\r\n    #23 decltype(static_cast<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(fp)()) std::__1::__invoke<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0xa733c8)\r\n    #24 void std::__1::__invoke_void_return_wrapper<void, true>::__call<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0xa733c8)\r\n    #25 std::__1::__function::__alloc_func<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, std::__1::allocator<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0xa733c8)\r\n    #26 std::__1::__function::__func<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, std::__1::allocator<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0xa733c8)\r\n    #27 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x11a229f)\r\n    #28 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x11a229f)\r\n    #29 util::TraceThread(char const*, std::__1::function<void ()>) src/util/thread.cpp:19:9 (test_bitcoin+0x11a229f)\r\n    #30 decltype(static_cast<void (*>(fp)(static_cast<char const*>(fp0), static_cast<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0xa72fc1)\r\n    #31 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (test_bitcoin+0xa72fc1)\r\n    #32 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (test_bitcoin+0xa72fc1)\r\n    #33 __tsan_thread_start_func <null> (test_bitcoin+0x12d2bc)\r\n    #34 <null> <null> (libc.so.6+0x94b42)\r\n    #35 <null> <null> (libc.so.6+0x1269ff)\r\nThreadSanitizer can not provide additional info.\r\nSUMMARY: ThreadSanitizer: SEGV src/index/base.cpp:388:9 in BaseIndex::SetBestBlockIndex(CBlockIndex const*)::$_1::operator()() const\r\n==92915==ABORTING\r\nExit status: 2\r\n```\r\n\r\nhttps://cirrus-ci.com/task/5494683034976256?logs=ci#L3229",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 2,
    "closed_at": "2022-09-12T15:26:38Z",
    "created_at": "2022-07-18T13:44:26Z",
    "updated_at": "2022-09-12T15:26:59Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 7012200612,
      "node_id": "LE_lADOABII585N9kVDzwAAAAGh9bCk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7012200612",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T13:44:26Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "commented",
      "id": 1187479458,
      "node_id": "IC_kwDOABII585Gx3-i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1187479458",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T13:48:35Z",
      "updated_at": "2022-07-18T13:48:35Z",
      "author_association": "MEMBER",
      "body": "debug log (from the same cirrus page):\r\n\r\n```\r\n...\r\n2022-07-18T11:26:16.704534Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191\r\n2022-07-18T11:26:16.705100Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2702] [ConnectTip] [bench]   - Using cached block\r\n2022-07-18T11:26:16.705165Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2709] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.03s (0.07ms/blk)]\r\n2022-07-18T11:26:16.705254Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2052] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.00ms/blk)]\r\n2022-07-18T11:26:16.705329Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2151] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.05s (0.12ms/blk)]\r\n2022-07-18T11:26:16.705407Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2236] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.071ms/tx, 0.000ms/txin) [0.04s (0.09ms/blk)]\r\n2022-07-18T11:26:16.705509Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2249] [ConnectBlock] [bench]     - Verify 0 txins: 0.18ms (0.000ms/txin) [0.07s (0.18ms/blk)]\r\n2022-07-18T11:26:16.705632Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2259] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.03s (0.07ms/blk)]\r\n2022-07-18T11:26:16.705688Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2271] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.02s (0.04ms/blk)]\r\n2022-07-18T11:26:16.705756Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 state=Valid\r\n2022-07-18T11:26:16.705816Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2721] [ConnectTip] [bench]   - Connect total: 0.66ms [0.15s (0.38ms/blk)]\r\n2022-07-18T11:26:16.705873Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2726] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.03ms/blk)]\r\n2022-07-18T11:26:16.705941Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2732] [ConnectTip] [bench]   - Writing chainstate: 0.07ms [0.02s (0.04ms/blk)]\r\n2022-07-18T11:26:16.706470Z (mocktime: 2020-08-31T15:34:11Z) [test] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current\r\n2022-07-18T11:26:16.706587Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2512] [UpdateTipLog] UpdateTip: new best=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 height=100 version=0x20000000 log2_work=7.658211 tx=101 date='2020-08-31T15:34:11Z' progress=1.000000 cache=0.0MiB(100txo)\r\n2022-07-18T11:26:16.706645Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2743] [ConnectTip] [bench]   - Connect postprocess: 0.70ms [0.16s (0.39ms/blk)]\r\n2022-07-18T11:26:16.706695Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2744] [ConnectTip] [bench] - Connect block: 1.54ms [0.37s (0.92ms/blk)]\r\n2022-07-18T11:26:16.706756Z (mocktime: 2020-08-31T15:34:11Z) [test] [txmempool.cpp:730] [check] [mempool] Checking mempool with 0 transactions and 0 inputs\r\n2022-07-18T11:26:16.706856Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 block height=100\r\n2022-07-18T11:26:16.706979Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 fork block hash=68aef0c7c1c2cc15ca20a558ea1d6e66aecc1d6398bddea75e4c031cb79cc07e (in IBD=false)\r\n2022-07-18T11:26:16.707068Z (mocktime: 2020-08-31T15:34:11Z) [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 block height=100\r\n2022-07-18T11:26:16.707279Z (mocktime: 2020-08-31T15:34:11Z) [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 fork block hash=68aef0c7c1c2cc15ca20a558ea1d6e66aecc1d6398bddea75e4c031cb79cc07e (in IBD=false)\r\n2022-07-18T11:26:16.708018Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:145] [CDBWrapper] Opened LevelDB successfully\r\n2022-07-18T11:26:16.708121Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:170] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/6d82bc357e1c5246adb523e63d8a859382b0e82c2712e006618e61bdd84cd715/regtest/indexes/coinstats/db: 0000000000000000\r\n2022-07-18T11:26:16.708801Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/thread.cpp:18] [TraceThread] coinstatsindex thread start\r\n2022-07-18T11:26:16.708887Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [index/base.cpp:166] [ThreadSync] Syncing coinstatsindex with block chain from height 0\r\n2022-07-18T11:26:16.709042Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/system.h:50] [error] ERROR: Commit: Failed to commit latest coinstatsindex state\r\n2022-07-18T11:26:19.380206Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [index/base.cpp:192] [ThreadSync] coinstatsindex is enabled at height 100\r\n2022-07-18T11:26:19.387836Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/thread.cpp:20] [TraceThread] coinstatsindex thread exit\r\n2022-07-18T11:26:19.418550Z (mocktime: 2020-08-31T15:34:12Z) [test] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 940 txs: 0 fees: 0 sigops 400\r\n2022-07-18T11:26:19.479671Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2052] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.00ms/blk)]\r\n2022-07-18T11:26:19.479778Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2151] [ConnectBlock] [bench]     - Fork checks: 0.14ms [0.05s (0.12ms/blk)]\r\n2022-07-18T11:26:19.479872Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2236] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.085ms/tx, 0.000ms/txin) [0.04s (0.09ms/blk)]\r\n2022-07-18T11:26:19.479955Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2249] [ConnectBlock] [bench]     - Verify 0 txins: 0.17ms (0.000ms/txin) [0.07s (0.18ms/blk)]\r\n2022-07-18T11:26:19.480039Z (mocktime: 2020-08-31T15:34:12Z) [test] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.05ms (0 packages, 0 updated descendants), validity: 61.60ms (total 61.64ms)\r\n2022-07-18T11:26:19.480669Z (mocktime: 2020-08-31T15:34:12Z) [test] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844\r\n2022-07-18T11:26:19.481304Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2702] [ConnectTip] [bench]   - Using cached block\r\n2022-07-18T11:26:19.481372Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2709] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.03s (0.07ms/blk)]\r\n2022-07-18T11:26:19.481526Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2052] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.00ms/blk)]\r\n2022-07-18T11:26:19.481609Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2151] [ConnectBlock] [bench]     - Fork checks: 0.09ms [0.05s (0.12ms/blk)]\r\n2022-07-18T11:26:19.481695Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2236] [ConnectBlock] [bench]       - Connect 1 transactions: 0.08ms (0.078ms/tx, 0.000ms/txin) [0.04s (0.09ms/blk)]\r\n2022-07-18T11:26:19.562436Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2249] [ConnectBlock] [bench]     - Verify 0 txins: 80.77ms (0.000ms/txin) [0.15s (0.38ms/blk)]\r\n2022-07-18T11:26:19.562612Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2259] [ConnectBlock] [bench]     - Write undo data: 0.23ms [0.03s (0.07ms/blk)]\r\n2022-07-18T11:26:19.562676Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2271] [ConnectBlock] [bench]     - Index writing: 0.07ms [0.02s (0.04ms/blk)]\r\n2022-07-18T11:26:19.562760Z (mocktime: 2020-08-31T15:34:12Z) [test] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844 state=Valid\r\n2022-07-18T11:26:19.562861Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2721] [ConnectTip] [bench]   - Connect total: 81.49ms [0.24s (0.58ms/blk)]\r\n2022-07-18T11:26:19.564541Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2726] [ConnectTip] [bench]   - Flush: 0.09ms [0.01s (0.03ms/blk)]\r\n2022-07-18T11:26:19.564725Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2732] [ConnectTip] [bench]   - Writing chainstate: 1.76ms [0.02s (0.04ms/blk)]\r\n2022-07-18T11:26:19.565525Z (mocktime: 2020-08-31T15:34:12Z) [test] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current\r\n2022-07-18T11:26:19.565689Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2512] [UpdateTipLog] UpdateTip: new best=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844 height=101 version=0x20000000 log2_work=7.672425 tx=102 date='2020-08-31T15:34:12Z' progress=1.000000 cache=0.0MiB(101txo)\r\n2022-07-18T11:26:19.565762Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2743] [ConnectTip] [bench]   - Connect postprocess: 1.05ms [0.16s (0.40ms/blk)]\r\n2022-07-18T11:26:19.565826Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2744] [ConnectTip] [bench] - Connect block: 84.45ms [0.45s (1.12ms/blk)]\r\n2022-07-18T11:26:19.565902Z (mocktime: 2020-08-31T15:34:12Z) [test] [txmempool.cpp:730] [check] [mempool] Checking mempool with 0 transactions and 0 inputs\r\n2022-07-18T11:26:19.566036Z (mocktime: 2020-08-31T15:34:12Z) [test] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844 block height=101\r\n2022-07-18T11:26:19.566174Z (mocktime: 2020-08-31T15:34:12Z) [test] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844 fork block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 (in IBD=false)\r\n2022-07-18T11:26:19.566282Z (mocktime: 2020-08-31T15:34:12Z) [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844 block height=101\r\n2022-07-18T11:26:19.566461Z (mocktime: 2020-08-31T15:34:12Z) [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, node/blockstorage.cpp:484 started\r\n2022-07-18T11:26:19.566896Z (mocktime: 2020-08-31T15:34:12Z) [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, node/blockstorage.cpp:484 completed (0μs)\r\n2022-07-18T11:26:19.566974Z (mocktime: 2020-08-31T15:34:12Z) [test] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:2322 started\r\n2022-07-18T11:26:19.567073Z (mocktime: 2020-08-31T15:34:12Z) [test] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:2322 completed (0μs)\r\n2022-07-18T11:26:19.604723Z (mocktime: 2020-08-31T15:34:12Z) [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, index/base.cpp:388 started\r\n2022-07-18T11:26:19.60698ThreadSanitizer:DEADLYSIGNAL\r\nmake[3]: *** [Makefile:20875: test/coinstatsindex_tests.cpp.test] Error 1",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25632#issuecomment-1187479458",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "verdy-p",
        "id": 1387035,
        "node_id": "MDQ6VXNlcjEzODcwMzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1387035?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/verdy-p",
        "html_url": "https://github.com/verdy-p",
        "followers_url": "https://api.github.com/users/verdy-p/followers",
        "following_url": "https://api.github.com/users/verdy-p/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/verdy-p/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/verdy-p/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/verdy-p/subscriptions",
        "organizations_url": "https://api.github.com/users/verdy-p/orgs",
        "repos_url": "https://api.github.com/users/verdy-p/repos",
        "events_url": "https://api.github.com/users/verdy-p/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/verdy-p/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T16:18:02Z",
      "updated_at": "2022-08-16T16:18:02Z",
      "source": {
        "issue": {
          "id": 1340015683,
          "node_id": "I_kwDOABII585P3wRD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25857",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/25857",
          "number": 25857,
          "state": "closed",
          "state_reason": "completed",
          "title": "IBD core dumped during recursive call to CCoinsViewCache::FetchCoin (while connecting best chain tip)",
          "body": "During IBD, sometimes I get this crash reported by gbd:\r\n\r\n```\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\r\n#1  0x00007fffff0c5537 in __GI_abort () at abort.c:79\r\n#2  0x00000000080949d8 in CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at coins.cpp:307\r\n#3  0x00000000083b0153 in CCoinsViewCache::FetchCoin (this=0x88b26a0, outpoint=...) at coins.cpp:46\r\n#4  0x00000000083b033a in CCoinsViewCache::GetCoin (this=<optimized out>, outpoint=..., coin=...) at coins.cpp:59\r\n#5  0x00000000083b0153 in CCoinsViewCache::FetchCoin (this=0x7fff3338f1c0, outpoint=...) at coins.cpp:46\r\n#6  0x000000000829fa5a in CCoinsViewCache::HaveCoin (outpoint=..., this=0x7fff3338f1c0) at coins.cpp:160\r\n#7  CCoinsViewCache::HaveInputs (tx=..., this=<optimized out>) at coins.cpp:265\r\n#8  CCoinsViewCache::HaveInputs (tx=..., this=0x7fff3338f1c0) at coins.cpp:261\r\n#9  Consensus::CheckTxInputs (tx=..., state=..., inputs=..., nSpendHeight=661434, txfee=@0x7fff3338dcd0: 0) at consensus/tx_verify.cpp:171\r\n#10 0x00000000085559f0 in CChainState::ConnectBlock(CBlock const&, BlockValidationState&, CBlockIndex*, CCoinsViewCache&, bool) [clone .constprop.0] (this=this@entry=0x88acfa0, block=..., state=...,\r\n    pindex=<optimized out>, pindex@entry=0xa6f0238, view=..., fJustCheck=fJustCheck@entry=false) at validation.cpp:2186\r\n#11 0x000000000827b79c in CChainState::ConnectTip (disconnectpool=..., connectTrace=<synthetic pointer>..., pblock=std::shared_ptr<const CBlock> (empty) = {...}, pindexNew=0xa6f0238, state=...,\r\n    this=0x88acfa0) at validation.cpp:2720\r\n#12 CChainState::ActivateBestChainStep (connectTrace=..., fInvalidFound=<optimized out>, pblock=..., pindexMostWork=<optimized out>, state=..., this=<optimized out>) at validation.cpp:2883\r\n#13 CChainState::ActivateBestChain (this=0x88acfa0, state=..., pblock=std::shared_ptr<const CBlock> (empty) = {...}) at validation.cpp:3010\r\n#14 0x000000000818ed7a in node::ThreadImport (chainman=..., vImportFiles=..., args=..., mempool_path=...) at node/blockstorage.cpp:887\r\n#15 0x00000000081199f2 in operator() (__closure=0x7fff2c000b60) at init.cpp:1575\r\n#16 std::__invoke_impl<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> (__f=...) at /usr/include/c++/10/bits/invoke.h:60\r\n#17 std::__invoke_r<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> (__fn=...) at /usr/include/c++/10/bits/invoke.h:110\r\n#18 std::_Function_handler<void(), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> >::_M_invoke(const std::_Any_data &) (__functor=...)\r\n    at /usr/include/c++/10/bits/std_function.h:291\r\n#19 0x00000000084331c4 in std::function<void ()>::operator()() const (this=0x7fff3338fe50) at /usr/include/c++/10/bits/std_function.h:622\r\n#20 util::TraceThread(char const*, std::function<void ()>) (thread_name=<optimized out>, thread_func=...) at util/thread.cpp:19\r\n#21 0x00000000081197cb in std::__invoke_impl<void, void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > (\r\n    __f=@0x13344fe8: 0x8433080 <util::TraceThread(char const*, std::function<void ()>)>) at /usr/include/c++/10/bits/invoke.h:60\r\n#22 std::__invoke<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > (\r\n    __fn=@0x13344fe8: 0x8433080 <util::TraceThread(char const*, std::function<void ()>)>) at /usr/include/c++/10/bits/invoke.h:95\r\n#23 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > >::_M_invoke<0, 1, 2> (\r\n    this=0x13344fb8) at /usr/include/c++/10/thread:264\r\n#24 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > >::operator() (\r\n    this=0x13344fb8) at /usr/include/c++/10/thread:271\r\n#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > > >::_M_run(void) (this=0x13344fb0) at /usr/include/c++/10/thread:215\r\n#26 0x00007fffff4beed0 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#27 0x00007fffff796ea7 in start_thread (arg=<optimized out>) at pthread_create.c:477\r\n#28 0x00007fffff19ddef in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n```\r\n\r\nLast logs displayed (running bitcoind with -debug=all) before the crash when running inside gdb (with current sources sync'ed from this git repo).\r\n\r\n```\r\n2022-08-16T08:41:08.970168Z [loadblk] [validationinterface.cpp:199] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 fork block hash=000000000000000000035e2d3a32a3249d4db7ef6c89db3a9f5d8e5111046285 (in IBD=true)\r\n2022-08-16T08:41:08.970455Z [scheduler] [validationinterface.cpp:227] [operator()] [validation] BlockConnected: block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 block height=661432\r\n2022-08-16T08:41:08.982873Z [loadblk] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 12.38ms [1.19s (14.02ms/blk)]\r\n2022-08-16T08:41:08.985121Z [loadblk] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 2.00ms [0.19s (2.20ms/blk)]\r\n2022-08-16T08:41:08.985349Z [loadblk] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.23ms [0.02s (0.23ms/blk)]\r\n2022-08-16T08:41:09.695210Z [loadblk] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1308 transactions: 709.85ms (0.543ms/tx, 0.113ms/txin) [47.74s (555.09ms/blk)]\r\n2022-08-16T08:41:09.695478Z [loadblk] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 6271 txins: 710.13ms (0.113ms/txin) [47.76s (555.36ms/blk)]\r\n2022-08-16T08:41:09.695698Z [loadblk] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.22ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.695895Z [loadblk] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.20ms [0.02s (0.19ms/blk)]\r\n2022-08-16T08:41:09.696274Z [loadblk] [validationinterface.cpp:251] [BlockChecked] [validation] BlockChecked: block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 state=Valid\r\n2022-08-16T08:41:09.696475Z [loadblk] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 713.62ms [48.01s (558.28ms/blk)]\r\n2022-08-16T08:41:09.702334Z [loadblk] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 5.86ms [0.64s (7.47ms/blk)]\r\n2022-08-16T08:41:09.702531Z [loadblk] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.20ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.703023Z [loadblk] [validation.cpp:2511] [UpdateTipLog] UpdateTip: new best=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 height=661433 version=0x20006000 log2_work=92.516788 tx=596277697 date='2020-12-15T05:08:04Z' progress=0.788542 cache=79.7MiB(606180txo)\r\n2022-08-16T08:41:09.703239Z [loadblk] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.71ms [0.08s (0.95ms/blk)]\r\n2022-08-16T08:41:09.703429Z [loadblk] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 732.76ms [49.95s (580.77ms/blk)]\r\n2022-08-16T08:41:09.703618Z [loadblk] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs\r\n2022-08-16T08:41:09.703806Z [loadblk] [validationinterface.cpp:227] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 block height=661433\r\n2022-08-16T08:41:09.704008Z [loadblk] [validationinterface.cpp:199] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 fork block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 (in IBD=true)\r\n2022-08-16T08:41:09.711612Z [loadblk] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 7.41ms [1.20s (13.94ms/blk)]\r\n2022-08-16T08:41:09.713156Z [loadblk] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 1.24ms [0.19s (2.19ms/blk)]\r\n2022-08-16T08:41:09.713345Z [loadblk] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.19ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.723584Z [loadblk] [dbwrapper.h:250] [Read] LevelDB read failure: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n2022-08-16T08:41:09.723798Z [loadblk] [dbwrapper.cpp:246] [HandleError] Fatal LevelDB error: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n2022-08-16T08:41:09.723998Z [loadblk] [dbwrapper.cpp:247] [HandleError] You can use -debug=leveldb to get more complete diagnostic messages\r\n2022-08-16T08:41:09.724248Z [loadblk] [noui.cpp:43] [noui_ThreadSafeMessageBox] Error: Error reading from database, shutting down.\r\nError: Error reading from database, shutting down.\r\n2022-08-16T08:41:09.724697Z [loadblk] [coins.cpp:302] [GetCoin] Error reading from database: Fatal LevelDB error: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n\r\nThread 15 \"b-loadblk\" received signal SIGABRT, Aborted.\r\n[Switching to Thread 0x7fff32f60700 (LWP 14607)]\r\n__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\r\n50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb)\r\n```\r\nRunning on Debian Running on Debian bullseye InRelease (with all current apt updates).\r\n\r\nNote that restarting bitcoind (with -checklevel=4 -checkblock=6) just restarts from a recent height, and does not detect any corruption, it processes a few dozens of blocks for a couple of minutes and crashes again. Retrying restarts from the same blockheight.\r\n\r\nI've checked the leveldb with external tools, and did not find any corruption or missing index in the key indexes, or any incorrect sort of keys in the 6 levels, or any corruption with dummy/partial records in the journal or sorted indexes.",
          "user": {
            "login": "verdy-p",
            "id": 1387035,
            "node_id": "MDQ6VXNlcjEzODcwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1387035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/verdy-p",
            "html_url": "https://github.com/verdy-p",
            "followers_url": "https://api.github.com/users/verdy-p/followers",
            "following_url": "https://api.github.com/users/verdy-p/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/verdy-p/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/verdy-p/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/verdy-p/subscriptions",
            "organizations_url": "https://api.github.com/users/verdy-p/orgs",
            "repos_url": "https://api.github.com/users/verdy-p/repos",
            "events_url": "https://api.github.com/users/verdy-p/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/verdy-p/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 323697996,
              "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
              "name": "Data corruption",
              "color": "f7c6c7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 9,
          "closed_at": "2022-08-23T06:39:57Z",
          "created_at": "2022-08-16T08:44:45Z",
          "updated_at": "2022-09-06T19:29:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T15:19:57Z",
      "updated_at": "2022-09-12T15:19:57Z",
      "source": {
        "issue": {
          "id": 1369724880,
          "node_id": "I_kwDOABII585RpFfQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26068",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26068/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26068/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26068/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/26068",
          "number": 26068,
          "state": "closed",
          "state_reason": "completed",
          "title": "Segmentation fault in the scheduler thread when an index fails to commit to the db",
          "body": "See https://cirrus-ci.com/task/5413417262514176?logs=ci#L3188 :\r\n\r\n* First, it fails to commit (for some unknown reason): `ERROR: Commit: Failed to commit latest coinstatsindex state`\r\n* Then, it considers itself synced: `coinstatsindex is enabled at height 100`, `coinstatsindex thread exit`\r\n* Then, the scheduler thread segfaults.\r\n\r\n```\r\n...\r\n\r\n2022-09-12T10:55:06.800147Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)]\r\n2022-09-12T10:55:06.800227Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.23s (0.57ms/blk)]\r\n2022-09-12T10:55:06.800311Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.08ms (0.076ms/tx, 0.000ms/txin) [0.04s (0.10ms/blk)]\r\n2022-09-12T10:55:06.800399Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.17ms (0.000ms/txin) [0.09s (0.23ms/blk)]\r\n2022-09-12T10:55:06.800528Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.13ms [0.03s (0.07ms/blk)]\r\n2022-09-12T10:55:06.800590Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.07ms [0.02s (0.04ms/blk)]\r\n2022-09-12T10:55:06.800692Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 state=Valid\r\n2022-09-12T10:55:06.800760Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.71ms [0.18s (0.45ms/blk)]\r\n2022-09-12T10:55:06.800820Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.05s (0.12ms/blk)]\r\n2022-09-12T10:55:06.800920Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.09ms [0.02s (0.04ms/blk)]\r\n2022-09-12T10:55:06.801517Z (mocktime: 2020-08-31T15:34:11Z) [test] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current\r\n2022-09-12T10:55:06.801640Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 height=100 version=0x20000000 log2_work=7.658211 tx=101 date='2020-08-31T15:34:11Z' progress=1.000000 cache=0.0MiB(100txo)\r\n2022-09-12T10:55:06.801701Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.78ms [0.34s (0.83ms/blk)]\r\n2022-09-12T10:55:06.801755Z (mocktime: 2020-08-31T15:34:11Z) [test] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.72ms [0.75s (1.85ms/blk)]\r\n2022-09-12T10:55:06.801819Z (mocktime: 2020-08-31T15:34:11Z) [test] [txmempool.cpp:706] [check] [mempool] Checking mempool with 0 transactions and 0 inputs\r\n2022-09-12T10:55:06.801952Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 block height=100\r\n2022-09-12T10:55:06.802069Z (mocktime: 2020-08-31T15:34:11Z) [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 block height=100\r\n2022-09-12T10:55:06.802183Z (mocktime: 2020-08-31T15:34:11Z) [test] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 fork block hash=68aef0c7c1c2cc15ca20a558ea1d6e66aecc1d6398bddea75e4c031cb79cc07e (in IBD=false)\r\n2022-09-12T10:55:06.802295Z (mocktime: 2020-08-31T15:34:11Z) [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191 fork block hash=68aef0c7c1c2cc15ca20a558ea1d6e66aecc1d6398bddea75e4c031cb79cc07e (in IBD=false)\r\n2022-09-12T10:55:06.803313Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:158] [CDBWrapper] Opened LevelDB successfully\r\n2022-09-12T10:55:06.803450Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:183] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/7b9ce9462bbe925416385de4a76d6cf557607ae446c058cb3eba456ddb39ce92/regtest/indexes/coinstats/db: 0000000000000000\r\n2022-09-12T10:55:06.804336Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/thread.cpp:18] [TraceThread] coinstatsindex thread start\r\n2022-09-12T10:55:06.804462Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [index/base.cpp:186] [ThreadSync] Syncing coinstatsindex with block chain from height 0\r\n2022-09-12T10:55:06.804547Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/system.h:50] [error] ERROR: Commit: Failed to commit latest coinstatsindex state\r\n2022-09-12T10:55:09.607921Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [index/base.cpp:215] [ThreadSync] coinstatsindex is enabled at height 100\r\n2022-09-12T10:55:09.608000Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/thread.cpp:20] [TraceThread] coinstatsindex thread exit\r\n2022-09-12T10:55:09.608444Z (mocktime: 2020-08-31T15:34:12Z) [test] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 940 txs: 0 fees: 0 sigops 400\r\n2022-09-12T10:55:09.608651Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)]\r\n2022-09-12T10:55:09.608752Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.23s (0.57ms/blk)]\r\n2022-09-12T10:55:09.608860Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.088ms/tx, 0.000ms/txin) [0.04s (0.10ms/blk)]\r\n2022-09-12T10:55:09.608974Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.22ms (0.000ms/txin) [0.10s (0.23ms/blk)]\r\n2022-09-12T10:55:09.609051Z (mocktime: 2020-08-31T15:34:12Z) [test] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.05ms (0 packages, 0 updated descendants), validity: 0.69ms (total 0.74ms)\r\n2022-09-12T10:55:09.609767Z (mocktime: 2020-08-31T15:34:12Z) [test] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=0e146357c1f82a8b9e2c54cb53a619a0ffbcace90d33ad228dc0ef44752b6844\r\n2022-09-12T10:55:09.610524Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block\r\n2022-09-12T10:55:09.610601Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.07ms [0.16s (0.41ms/blk)]\r\n2022-09-12T10:55:09.610702Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)]\r\n2022-09-12T10:55:09.610794Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.09ms [0.23s (0.57ms/blk)]\r\n2022-09-12T10:55:09.610920Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.10ms (0.096ms/tx, 0.000ms/txin) [0.04s (0.10ms/blk)]\r\n2022-09-12T10:55:09.611012Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.21ms (0.000ms/txin) [0.10s (0.23ms/blk)]\r\n2022-09-12T10:55:09.611151Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.14ms [0.03s (0.07ms/blk)]\r\n2022-09-12T10:55:09.611217Z (mocktime: 2020-08-31T15:34:12Z) [test] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.07ms [0.02s (0.04ms/blk)]\r\n2022-09-12T10:55:09.611296Z (mocktime: 2020-08-31T15:34:12Z) [test] [valiThreadSanitizer:DEADLYSIGNAL\r\nmake[3]: *** [Makefile:21202: test/coinstatsindex_tests.cpp.test] Error 1\r\nmake[3]: *** Waiting for unfinished jobs....\r\nPASS: qt/test/test_bitcoin-qt\r\n============================================================================\r\nTestsuite summary for Bitcoin Core 23.99.0\r\n============================================================================\r\n# TOTAL: 4\r\n# PASS:  4\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  0\r\n# XPASS: 0\r\n# ERROR: 0\r\n============================================================================\r\nmake[4]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake[3]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake[2]: *** [Makefile:19260: check-am] Error 2\r\nmake[2]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake[1]: *** [Makefile:18926: check-recursive] Error 1\r\nmake[1]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake: *** [Makefile:824: check-recursive] Error 1\r\n==25198==ERROR: ThreadSanitizer: SEGV on unknown address 0x000000000068 (pc 0x55e8c6500aeb bp 0x7b1400009548 sp 0x7fdf23d0ec80 T25670)\r\n==25198==The signal is caused by a READ memory access.\r\n==25198==Hint: address points to the zero page.\r\n    #0 BaseIndex::SetBestBlockIndex(CBlockIndex const*)::$_1::operator()() const src/index/base.cpp:418:9 (test_bitcoin+0xd78aeb)\r\n    #1 BaseIndex::SetBestBlockIndex(CBlockIndex const*) src/index/base.cpp:418:9 (test_bitcoin+0xd78aeb)\r\n    #2 BaseIndex::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*) src/index/base.cpp:298:9 (test_bitcoin+0xd7ae5b)\r\n    #3 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)::operator()(CValidationInterface&) const src/validationinterface.cpp:225:79 (test_bitcoin+0x10f0f54)\r\n    #4 void MainSignalsImpl::Iterate<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const::'lambda'(CValidationInterface&)&&) src/validationinterface.cpp:86:17 (test_bitcoin+0x10f0f54)\r\n    #5 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_8::operator()() const src/validationinterface.cpp:225:22 (test_bitcoin+0x10f0f54)\r\n    #6 CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9::operator()() const src/validationinterface.cpp:227:5 (test_bitcoin+0x10f0f54)\r\n    #7 decltype(static_cast<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(fp)()) std::__1::__invoke<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0x10f0f54)\r\n    #8 void std::__1::__invoke_void_return_wrapper<void, true>::__call<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&>(CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0x10f0f54)\r\n    #9 std::__1::__function::__alloc_func<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9, std::__1::allocator<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0x10f0f54)\r\n    #10 std::__1::__function::__func<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9, std::__1::allocator<CMainSignals::BlockConnected(std::__1::shared_ptr<CBlock const> const&, CBlockIndex const*)::$_9>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0x10f0f54)\r\n    #11 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x118bc01)\r\n    #12 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x118bc01)\r\n    #13 SingleThreadedSchedulerClient::ProcessQueue() src/scheduler.cpp:175:5 (test_bitcoin+0x118bc01)\r\n    #14 SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1::operator()() const src/scheduler.cpp:144:41 (test_bitcoin+0x118d915)\r\n    #15 decltype(static_cast<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(fp)()) std::__1::__invoke<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0x118d915)\r\n    #16 void std::__1::__invoke_void_return_wrapper<void, true>::__call<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&>(SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0x118d915)\r\n    #17 std::__1::__function::__alloc_func<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1, std::__1::allocator<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0x118d915)\r\n    #18 std::__1::__function::__func<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1, std::__1::allocator<SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()::$_1>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0x118d915)\r\n    #19 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x118abec)\r\n    #20 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x118abec)\r\n    #21 CScheduler::serviceQueue() src/scheduler.cpp:62:17 (test_bitcoin+0x118abec)\r\n    #22 ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0::operator()() const src/test/util/setup_common.cpp:186:110 (test_bitcoin+0xab5148)\r\n    #23 decltype(static_cast<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(fp)()) std::__1::__invoke<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0xab5148)\r\n    #24 void std::__1::__invoke_void_return_wrapper<void, true>::__call<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&>(ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (test_bitcoin+0xab5148)\r\n    #25 std::__1::__function::__alloc_func<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, std::__1::allocator<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (test_bitcoin+0xab5148)\r\n    #26 std::__1::__function::__func<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, std::__1::allocator<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (test_bitcoin+0xab5148)\r\n    #27 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (test_bitcoin+0x124b1af)\r\n    #28 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (test_bitcoin+0x124b1af)\r\n    #29 util::TraceThread(char const*, std::__1::function<void ()>) src/util/thread.cpp:19:9 (test_bitcoin+0x124b1af)\r\n    #30 decltype(static_cast<void (*>(fp)(static_cast<char const*>(fp0), static_cast<ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (test_bitcoin+0xab4d41)\r\n    #31 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (test_bitcoin+0xab4d41)\r\n    #32 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, ChainTestingSetup::ChainTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)::$_0> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (test_bitcoin+0xab4d41)\r\n    #33 __tsan_thread_start_func <null> (test_bitcoin+0x13319c)\r\n    #34 <null> <null> (libc.so.6+0x94b42)\r\n    #35 <null> <null> (libc.so.6+0x1269ff)\r\nThreadSanitizer can not provide additional info.\r\nSUMMARY: ThreadSanitizer: SEGV src/index/base.cpp:418:9 in BaseIndex::SetBestBlockIndex(CBlockIndex const*)::$_1::operator()() const\r\n==25198==ABORTING\r\nExit status: 2",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "closed_at": "2022-09-16T12:26:58Z",
          "created_at": "2022-09-12T11:28:13Z",
          "updated_at": "2022-09-16T12:26:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "closed",
      "id": 7368696737,
      "node_id": "CE_lADOABII585N9kVDzwAAAAG3NWOh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7368696737",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T15:26:38Z"
    },
    {
      "event": "commented",
      "id": 1243909607,
      "node_id": "IC_kwDOABII585KJI3n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1243909607",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T15:26:59Z",
      "updated_at": "2022-09-12T15:26:59Z",
      "author_association": "MEMBER",
      "body": "Duplicate of #https://github.com/bitcoin/bitcoin/issues/26068 ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25632#issuecomment-1243909607",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25632"
    }
  ]
}