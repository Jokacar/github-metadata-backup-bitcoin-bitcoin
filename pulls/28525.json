{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525",
    "id": 1527708277,
    "node_id": "PR_kwDOABII585bDvp1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28525",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28525.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28525.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e3720bca398820038b3e97f467adb2c45ef9ef5f",
    "number": 28525,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: Drop v2 garbage authentication packet",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note that this is a breaking change, see also https://github.com/bitcoin/bips/pull/1498\r\n\r\nThe benefit is a simpler implementation:\r\n - The protocol state machine does not need separate states for garbage authentication and version phases.\r\n - The special case of \"ignoring the ignore bit\" is removed.\r\n - The freedom to choose the contents of the garbage authentication packet is removed. This simplifies testing.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-09-24T13:46:50Z",
    "updated_at": "2023-09-29T10:59:30Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "74e2b0a108d93d86e0e9ec7b2b83744d5644997a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "real-or-random:202309-garbauth",
      "ref": "202309-garbauth",
      "sha": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 132016800,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMzIwMTY4MDA=",
        "name": "bitcoin",
        "full_name": "real-or-random/bitcoin",
        "owner": {
          "login": "real-or-random",
          "id": 1071625,
          "node_id": "MDQ6VXNlcjEwNzE2MjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/real-or-random",
          "html_url": "https://github.com/real-or-random",
          "followers_url": "https://api.github.com/users/real-or-random/followers",
          "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
          "organizations_url": "https://api.github.com/users/real-or-random/orgs",
          "repos_url": "https://api.github.com/users/real-or-random/repos",
          "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/real-or-random/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/real-or-random/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/real-or-random/bitcoin",
        "archive_url": "https://api.github.com/repos/real-or-random/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/real-or-random/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/real-or-random/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/real-or-random/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/real-or-random/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/real-or-random/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/real-or-random/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/real-or-random/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/real-or-random/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/real-or-random/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/real-or-random/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/real-or-random/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/real-or-random/bitcoin/events",
        "forks_url": "https://api.github.com/repos/real-or-random/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/real-or-random/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/real-or-random/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/real-or-random/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/real-or-random/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/real-or-random/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/real-or-random/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/real-or-random/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/real-or-random/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/real-or-random/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/real-or-random/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/real-or-random/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/real-or-random/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/real-or-random/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/real-or-random/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/real-or-random/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:real-or-random/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/real-or-random/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/real-or-random/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/real-or-random/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/real-or-random/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/real-or-random/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/real-or-random/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/real-or-random/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/real-or-random/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/real-or-random/bitcoin/hooks",
        "svn_url": "https://github.com/real-or-random/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 218445,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-27T10:20:13Z",
        "created_at": "2018-05-03T15:43:06Z",
        "updated_at": "2018-08-21T19:00:23Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c9f288244b8d183e09a917025922b99e3368ef78",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35768,
        "stargazers_count": 71510,
        "watchers_count": 71510,
        "size": 240202,
        "default_branch": "master",
        "open_issues_count": 637,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-29T10:53:13Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-09-29T09:36:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 69,
    "deletions": 103,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 22,
    "comments": 12
  },
  "events": [
    {
      "event": "commented",
      "id": 1732574160,
      "node_id": "IC_kwDOABII585nRPvQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1732574160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-24T13:46:53Z",
      "updated_at": "2023-09-29T06:36:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1737390554), [sipa](https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1737453972), [Sjors](https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1648317844), [theStack](https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1649082234), [ajtowns](https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1740379553) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1732574160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "labeled",
      "id": 10455262730,
      "node_id": "LE_lADOABII585x2_NGzwAAAAJvLqYK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10455262730",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-24T13:46:54Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T13:05:33Z",
      "updated_at": "2023-09-25T13:05:33Z",
      "source": {
        "issue": {
          "id": 1910235128,
          "node_id": "PR_kwDOAN28mc5bDutB",
          "url": "https://api.github.com/repos/bitcoin/bips/issues/1498",
          "repository_url": "https://api.github.com/repos/bitcoin/bips",
          "labels_url": "https://api.github.com/repos/bitcoin/bips/issues/1498/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1498/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bips/issues/1498/events",
          "html_url": "https://github.com/bitcoin/bips/pull/1498",
          "number": 1498,
          "state": "closed",
          "state_reason": null,
          "title": "bip324: Remove garbage authentication packet (breaking change)",
          "body": "by merging it with the version packet. Or more accurately, by merging it with the first packet sent after garbage termination, which may be a decoy packet or the version packet.\r\n\r\nThe new protocol simplifies implementations:\r\n - A protocol state machine won't need separate states for garbage authentication and version phases.\r\n - The special case of \"ignoring the ignore bit\" is removed.\r\n - The freedom to choose the contents of the garbage authentication packet is removed. This simplifies testing.\r\n\r\nThe reason for having a separate garbage authentication packet was to materialize the separation of the key exchange phase and version negotiation phase even in the bytestream on the wire. However, this is not necessary, and arguably, these phases are still properly separated: Since the AEAD will ensure that AAD (=garbage) is checked before looking at the contents (=version), the peers won't interpret version data before having authenticated the garbage.",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bips/pulls/1498",
            "html_url": "https://github.com/bitcoin/bips/pull/1498",
            "diff_url": "https://github.com/bitcoin/bips/pull/1498.diff",
            "patch_url": "https://github.com/bitcoin/bips/pull/1498.patch"
          },
          "closed_at": "2023-09-29T07:19:24Z",
          "created_at": "2023-09-24T13:30:04Z",
          "updated_at": "2023-09-29T07:19:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1643691130,
      "node_id": "PRR_kwDOABII585h-Lx6",
      "url": null,
      "actor": null,
      "commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1643691130",
      "submitted_at": "2023-09-26T08:48:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "commented",
      "id": 1735129734,
      "node_id": "IC_kwDOABII585na_qG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1735129734",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T09:04:57Z",
      "updated_at": "2023-09-26T09:04:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK assuming BIP change is accepted",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1735129734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10473972378,
      "node_id": "HRFPE_lADOABII585x2_NGzwAAAAJwTCKa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10473972378",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T11:39:54Z"
    },
    {
      "event": "reviewed",
      "id": 1644125951,
      "node_id": "PRR_kwDOABII585h_17_",
      "url": null,
      "actor": null,
      "commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1644125951",
      "submitted_at": "2023-09-26T12:19:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "reviewed",
      "id": 1644144918,
      "node_id": "PRR_kwDOABII585h_6kW",
      "url": null,
      "actor": null,
      "commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1644144918",
      "submitted_at": "2023-09-26T12:29:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "reviewed",
      "id": 1645033013,
      "node_id": "PRR_kwDOABII585iDTY1",
      "url": null,
      "actor": null,
      "commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK, with minor nits. I'm also on board with the corresponding BIP change (see the discussion there).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1645033013",
      "submitted_at": "2023-09-26T19:24:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T19:34:08Z",
      "updated_at": "2023-09-26T19:34:08Z",
      "source": {
        "issue": {
          "id": 1707054771,
          "node_id": "I_kwDOABII585lv5az",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27634",
          "number": 27634,
          "state": "open",
          "state_reason": null,
          "title": "BIP324 tracking issue",
          "body": "This issue will be updated to reflect the current state of [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) integration.\r\n\r\nPRs ready for review:\r\n* #28374 \r\n* #28331\r\n\r\nOverall plan:\r\n* ElligatorSwift integration in Bitcoin Core (formerly 23432, 23561)\r\n  * [x] Dependency: Jacobi symbol support in libsecp256k1: bitcoin-core/secp256k1#979\r\n  * [x] Dependency: ElligatorSwift support in libsecp256k1: bitcoin-core/secp256k1#1129\r\n  * [x] Dependency: update libsecp256k1 subtree: currently part of 27479.\r\n  * [x] Main feature: #27479\r\n* Cipher suite implementation (formerly 25361):\r\n  * [x] Dependency: support for not wasting ChaCha20 stream bytes: #26153\r\n  * [x] Dependency: support for RFC8439 variant of ChaCha20: #27985\r\n  * [x] Dependency: support for incremental Poly1305 computation: #27993\r\n  * [x] Main feature: #28008\r\n  * [x] Follow-up: #28267\r\n  * [ ] Follow-up: #28263\r\n* P2P v2 connection support (formerly 25361, 23233, 24545):\r\n  * [x] Dependency: P2P transport abstraction: #28165\r\n  * [x] Main feature: #28196\r\n  * [x] Follow up: #28433\r\n  * [x] Bugfix: #28489\r\n  * [ ] Proposed BIP change: #28525\r\n  * [ ] Potential follow-up: decide how to report handshake/decoy bytes in per-message stats: https://github.com/bitcoin/bitcoin/pull/28331#issuecomment-1731202211\r\n* P2P v2 signalling/integration (formerly 24545):\r\n  * [ ] Main feature: #28331 \r\n  * [ ] Potential follow-up: integrated connect/add/reconnect logic: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1335820022\r\n  * [ ] Potential follow-up: reuse `CNode` objects on reconnect: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1335876277\r\n  * [ ] Potential follow-up: use `V2Transport` for everything, dropping abstract class: https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1336030845\r\n* BIP324 functional tests: \r\n   * [x] Dependency: ElligatorSwift support in functional tests: #24005\r\n   * [x] Dependency: Field element support in functional tests: #26222\r\n   * [ ] Dependency: Python cryptography #28374\r\n   * [ ] Main feature: #24748\r\n* P2P_V2 service flag support in DNS seeder:\r\n  * [x] Main feature: sipa/bitcoin-seeder#102\r\n\r\n<details><summary>Older stuff:</summary>\r\n\r\n* Prehistory:\r\n  * [x] CKey negation (no longer needed): #14047\r\n  * [x] ChaCha20 encryption: #15512\r\n  * [x] Poly1305 authentication: #15519 \r\n  * [x] Old ChaCha20Poly1305@Bitcoin cipher: #15649\r\n  * Preparing for multiple transport layers:\r\n    * [x] #16202\r\n    * [x] #16562\r\n  * Fuzz tests for various components:\r\n    * [x] #17771\r\n    * [x] #19296\r\n    * [x] #22029\r\n    * [x] #22704\r\n    * [x] #23806\r\n  * Miscellaneous fixes:\r\n    * [x]  #22331\r\n    * [x] #23271\r\n  * [x] ChaCha20 performance: #24946 \r\n\r\n* Superseded:\r\n  * #14032\r\n  * #14046\r\n  * #14049 \r\n  * #14050 \r\n  * #18242\r\n  * #20962\r\n  * #23233 \r\n  * #23322\r\n  * #23432\r\n  * #23441\r\n  * #23900\r\n  * #23561\r\n  * #24545\r\n  * #25361\r\n \r\n</details>",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "created_at": "2023-05-12T07:00:54Z",
          "updated_at": "2023-09-27T14:04:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10485519507,
      "node_id": "HRFPE_lADOABII585x2_NGzwAAAAJw_FST",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10485519507",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T10:17:18Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIwZjUxNzVjMDQ0ZGY5NTZjMGYwN2Y1NDA3MDZkNDU3YzQ5MTI4NTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0f5175c044df956c0f07f540706d457c4912856",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b0f5175c044df956c0f07f540706d457c4912856",
      "tree": {
        "sha": "f08f4ae0d515c1e1746fc91494381d437ea7170a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f08f4ae0d515c1e1746fc91494381d437ea7170a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac9fa6ec78158e41006d621ee62e44dec0f934c0",
          "sha": "ac9fa6ec78158e41006d621ee62e44dec0f934c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac9fa6ec78158e41006d621ee62e44dec0f934c0"
        }
      ],
      "message": "net: Drop v2 garbage authentication packet\n\nSee also https://github.com/bitcoin/bips/pull/1498\n\nThe benefit is a simpler implementation:\n - The protocol state machine does not need separate states for garbage\n   authentication and version phases.\n - The special case of \"ignoring the ignore bit\" is removed.\n - The freedom to choose the contents of the garbage authentication\n   packet is removed. This simplifies testing.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2023-09-27T10:19:54Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2023-09-23T23:50:01Z"
      },
      "sha": "b0f5175c044df956c0f07f540706d457c4912856"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUzNzIwYmNhMzk4ODIwMDM4YjNlOTdmNDY3YWRiMmM0NWVmOWVmNWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "tree": {
        "sha": "682817ecf08ced05701347f27f67eab91fdf7653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/682817ecf08ced05701347f27f67eab91fdf7653"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0f5175c044df956c0f07f540706d457c4912856",
          "sha": "b0f5175c044df956c0f07f540706d457c4912856",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b0f5175c044df956c0f07f540706d457c4912856"
        }
      ],
      "message": "net: Simplify v2 recv logic by decoupling AAD from state machine",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2023-09-27T10:19:54Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2023-09-26T11:26:27Z"
      },
      "sha": "e3720bca398820038b3e97f467adb2c45ef9ef5f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10485549641,
      "node_id": "HRFPE_lADOABII585x2_NGzwAAAAJw_MpJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10485549641",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T10:20:17Z"
    },
    {
      "event": "commented",
      "id": 1737226795,
      "node_id": "IC_kwDOABII585ni_or",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737226795",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T11:40:11Z",
      "updated_at": "2023-09-27T11:41:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "The [CI failure](https://github.com/bitcoin/bitcoin/actions/runs/6324609410/job/17174453679?pr=28525#step:28:927) seems unrelated: ` test_framework.authproxy.JSONRPCException: Unable to create transaction. Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate) (-4)`. edit: Okay, this is https://github.com/bitcoin/bitcoin/issues/28491.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1737226795",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "commented",
      "id": 1737390554,
      "node_id": "IC_kwDOABII585njnna",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737390554",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T13:22:46Z",
      "updated_at": "2023-09-27T13:22:46Z",
      "author_association": "MEMBER",
      "body": "ACK e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1737390554",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "commented",
      "id": 1737453972,
      "node_id": "IC_kwDOABII585nj3GU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737453972",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T13:56:16Z",
      "updated_at": "2023-09-27T13:56:16Z",
      "author_association": "MEMBER",
      "body": "ACK e3720bca398820038b3e97f467adb2c45ef9ef5f. Re-ran the v2 transport fuzzer overnight.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1737453972",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "reviewed",
      "id": 1647106317,
      "node_id": "PRR_kwDOABII585iLNkN",
      "url": null,
      "actor": null,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1647106317",
      "submitted_at": "2023-09-27T16:19:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "commented",
      "id": 1738105708,
      "node_id": "IC_kwDOABII585nmWNs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738105708",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T21:31:39Z",
      "updated_at": "2023-09-27T21:31:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1738105708",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "commented",
      "id": 1738132350,
      "node_id": "IC_kwDOABII585nmct-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738132350",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T21:57:49Z",
      "updated_at": "2023-09-27T21:57:49Z",
      "author_association": "MEMBER",
      "body": "Observation during discussion with @achow101: the old behavior is actually equivalent to the new behavior, but with the added rule that the very first packet is implicitly a decoy (whether the bit is set or not).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1738132350",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "mentioned",
      "id": 10492599023,
      "node_id": "MEE_lADOABII585x2_NGzwAAAAJxaFrv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10492599023",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T21:57:50Z"
    },
    {
      "event": "subscribed",
      "id": 10492599031,
      "node_id": "SE_lADOABII585x2_NGzwAAAAJxaFr3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10492599031",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T21:57:50Z"
    },
    {
      "event": "commented",
      "id": 1738616650,
      "node_id": "IC_kwDOABII585noS9K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738616650",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:23:43Z",
      "updated_at": "2023-09-28T07:23:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> old behavior [...] with the added rule that the very first packet is implicitly a decoy (whether the bit is set or not).\r\n\r\nInteresting observation, and this confirms that the old behavior is somewhat unnatural.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1738616650",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "reviewed",
      "id": 1648317844,
      "node_id": "PRR_kwDOABII585iP1WU",
      "url": null,
      "actor": null,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK e3720bca398820038b3e97f467adb2c45ef9ef5f\r\n\r\nTiming wise, I plan to run this on mainnet once it's added to the integration PR.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1648317844",
      "submitted_at": "2023-09-28T09:30:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "reviewed",
      "id": 1649082234,
      "node_id": "PRR_kwDOABII585iSv96",
      "url": null,
      "actor": null,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code-review ACK e3720bca398820038b3e97f467adb2c45ef9ef5f\r\n\r\nI didn't follow the full discussion in the BIP change PR yet, but to my understanding, this approach simplifies the state machine and doesn't have any drawbacks (other than adaptions needed in #24748 and a temporary incompatibility between BIP324 nodes running old/new version, obviously).",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#pullrequestreview-1649082234",
      "submitted_at": "2023-09-28T14:55:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
    },
    {
      "event": "commented",
      "id": 1739878142,
      "node_id": "IC_kwDOABII585ntG7-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739878142",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T19:19:40Z",
      "updated_at": "2023-09-28T19:19:40Z",
      "author_association": "MEMBER",
      "body": "RFM but waiting for BIP change to be merged first.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1739878142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T20:38:26Z",
      "updated_at": "2023-09-28T20:38:26Z",
      "source": {
        "issue": {
          "id": 1864182144,
          "node_id": "PR_kwDOABII585YpKGv",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28331/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28331",
          "number": 28331,
          "state": "open",
          "state_reason": null,
          "title": "BIP324 integration",
          "body": "Part of #27634. Based on #28525.\r\n\r\nThis makes BIP324 support feature complete, through a (default off) `-v2transport` option for enabling V2 connections. If it is enabled:\r\n* The `NODE_P2P_V2` service flag (*1 << 11*) is advertized.\r\n* Inbound connections can use V1 or V2 (automatically detected based on the protocol used by the peer)\r\n* V2 connections are used on outbound when the `NODE_P2P_V2` service is available (or the new `use_v2` parameter is set on the `addnode` RPC).\r\n* V2 outbound connections that instantly fail get retried as V1.\r\n\r\nThere are two new RPC fields, `\"transport_protocol_type\"` and `\"session_id\"`, in `getpeerinfo`.\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28331",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28331",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28331.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28331.patch"
          },
          "created_at": "2023-08-24T00:25:16Z",
          "updated_at": "2023-09-29T09:52:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1740379553,
      "node_id": "IC_kwDOABII585nvBWh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1740379553",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T06:36:10Z",
      "updated_at": "2023-09-29T06:36:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK e3720bca398820038b3e97f467adb2c45ef9ef5f - simpler and more flexible, nice",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1740379553",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "commented",
      "id": 1740453505,
      "node_id": "IC_kwDOABII585nvTaB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1740453505",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T07:42:23Z",
      "updated_at": "2023-09-29T07:42:23Z",
      "author_association": "MEMBER",
      "body": "BIP has been merged",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1740453505",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    },
    {
      "event": "commented",
      "id": 1740698880,
      "node_id": "IC_kwDOABII585nwPUA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1740698880",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T10:53:13Z",
      "updated_at": "2023-09-29T10:59:30Z",
      "author_association": "MEMBER",
      "body": "FYI this is what happens if you _don't_ upgrade your node and try to connect to an upgrade one:\r\n\r\n```\r\n2023-09-29T10:45:39.069931Z [net] Added connection to ... peer=369\r\n2023-09-29T10:45:39.069954Z [net] sending version (103 bytes) peer=369\r\n2023-09-29T10:45:39.069969Z [net] send version message: version 70016, blocks=809861, them=[...]:8333, txrelay=1, peer=369\r\n2023-09-29T10:45:39.111424Z [net] start sending v2 handshake to peer=369\r\n2023-09-29T10:45:39.295724Z [net] received: wtxidrelay (0 bytes) peer=369\r\n2023-09-29T10:45:39.295749Z [net] non-version message before version handshake. Message \"wtxidrelay\" from peer=369\r\n2023-09-29T10:45:39.295860Z [net] received: sendaddrv2 (0 bytes) peer=369\r\n2023-09-29T10:45:39.295883Z [net] non-version message before version handshake. Message \"sendaddrv2\" from peer=369\r\n2023-09-29T10:45:39.295990Z [net] received: verack (0 bytes) peer=369\r\n2023-09-29T10:45:39.296011Z [net] non-version message before version handshake. Message \"verack\" from peer=369\r\n2023-09-29T10:46:40.011229Z [net] version handshake timeout, disconnecting peer=369\r\n2023-09-29T10:46:40.011279Z [net] disconnecting peer=369\r\n2023-09-29T10:46:40.011323Z [net] Cleared nodestate for peer=369\r\n```\r\n\r\n (bangs head on table for forgetting `make install`)\r\n\r\n\r\nThe other way around, if you upgrade but connect to a node that didn't upgrade, you get something like:\r\n\r\n```\r\n[net] V2 transport error: invalid message type (0 bytes contents), peer=...\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#issuecomment-1740698880",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28525"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336842411",
      "pull_request_review_id": 1643691130,
      "id": 1336842411,
      "node_id": "PRRC_kwDOABII585Prpir",
      "diff_hunk": "@@ -1266,18 +1253,16 @@ bool V2Transport::ProcessReceivedPacketBytes() noexcept\n         // At this point we have a valid packet decrypted into m_recv_decode_buffer. Depending on\n         // the current state, decide what to do with it.\n         switch (m_recv_state) {\n-        case RecvState::GARBAUTH:\n-            // Ignore flag does not matter for garbage authentication. Any valid packet functions\n-            // as authentication. Receive and process the version packet next.\n-            SetReceiveState(RecvState::VERSION);\n-            ClearShrink(m_recv_garbage);\n-            break;\n         case RecvState::VERSION:\n             if (!ignore) {\n                 // Version message received; transition to application phase. The contents is\n                 // ignored, but can be used for future extensions.\n                 SetReceiveState(RecvState::APP);\n             }\n+            // We have decrypted one valid packet (which may or may not have been a decoy) with the\n+            // received garbage as AAD. We no longer need the received garbage and further packets",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">further packets are expected to use the empty string as AAD.\r\n\r\nthis part is irrelevant here?",
      "created_at": "2023-09-26T08:38:08Z",
      "updated_at": "2023-09-26T08:48:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1336842411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336842411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1263,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336844877",
      "pull_request_review_id": 1643691130,
      "id": 1336844877,
      "node_id": "PRRC_kwDOABII585PrqJN",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy",
      "path": "src/net.h",
      "position": null,
      "original_position": 40,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`non-decoy decoy`? Not sure if this is intentional, although i can see some sense in this... :)",
      "created_at": "2023-09-26T08:39:55Z",
      "updated_at": "2023-09-26T08:48:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1336844877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336844877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336851588",
      "pull_request_review_id": 1643691130,
      "id": 1336851588,
      "node_id": "PRRC_kwDOABII585PrryE",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * decoy) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for",
      "path": "src/net.h",
      "position": null,
      "original_position": 42,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This description is confusing.\r\nCurrently, we will switch to APP no matter whether the authenticating package was decoy or version.\r\n\r\nIn future, `the state becomes APP, and the decrypted contents is interpreted as version negotiation`might not be the case, if the authenticating package was decoy.\r\n\r\nAt that point we might as well change this comment, but why having something certainly confusing in the first place?",
      "created_at": "2023-09-26T08:44:59Z",
      "updated_at": "2023-09-26T08:48:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1336851588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336851588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337026829",
      "pull_request_review_id": 1643975973,
      "id": 1337026829,
      "node_id": "PRRC_kwDOABII585PsWkN",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy",
      "path": "src/net.h",
      "position": null,
      "original_position": 40,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": 1336844877,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, I wanted to write \"first non-decoy **packet**\" here. Fixed.",
      "created_at": "2023-09-26T10:58:59Z",
      "updated_at": "2023-09-26T11:40:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337026829",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337026829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 497,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337030584",
      "pull_request_review_id": 1643975973,
      "id": 1337030584,
      "node_id": "PRRC_kwDOABII585PsXe4",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * decoy) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for",
      "path": "src/net.h",
      "position": null,
      "original_position": 42,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": 1336851588,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In future, `the state becomes APP, and the decrypted contents is interpreted as version negotiation` might not be the case, if the authenticating package was decoy.\r\n\r\n`the state becomes APP, and the decrypted contents is interpreted as version negotiation` *is* always the case. The first non-decoy packet received in VERSION state is the version packet, and that means that we interpret the contents as version info and switch to APP.\r\n\r\n> At that point we might as well change this comment, but why having something certainly confusing in the first place?\r\n\r\nI'm not sure what you're suggesting. Can you elaborate? (Maybe it's based on a misunderstanding that has been resolved now?)",
      "created_at": "2023-09-26T11:02:32Z",
      "updated_at": "2023-09-26T11:40:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337030584",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337030584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337071855",
      "pull_request_review_id": 1643975973,
      "id": 1337071855,
      "node_id": "PRRC_kwDOABII585Pshjv",
      "diff_hunk": "@@ -1266,18 +1253,16 @@ bool V2Transport::ProcessReceivedPacketBytes() noexcept\n         // At this point we have a valid packet decrypted into m_recv_decode_buffer. Depending on\n         // the current state, decide what to do with it.\n         switch (m_recv_state) {\n-        case RecvState::GARBAUTH:\n-            // Ignore flag does not matter for garbage authentication. Any valid packet functions\n-            // as authentication. Receive and process the version packet next.\n-            SetReceiveState(RecvState::VERSION);\n-            ClearShrink(m_recv_garbage);\n-            break;\n         case RecvState::VERSION:\n             if (!ignore) {\n                 // Version message received; transition to application phase. The contents is\n                 // ignored, but can be used for future extensions.\n                 SetReceiveState(RecvState::APP);\n             }\n+            // We have decrypted one valid packet (which may or may not have been a decoy) with the\n+            // received garbage as AAD. We no longer need the received garbage and further packets",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": 1336842411,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hah, it's not. We need to clear `m_recv_garbage` to make sure potential further packets in VERSION state don't except AAD. I agree that it's confusing. Added a commit to simply further. (Happy to squash if that's simpler.)",
      "created_at": "2023-09-26T11:38:24Z",
      "updated_at": "2023-09-26T11:40:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337071855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337071855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1263,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337119907",
      "pull_request_review_id": 1644125951,
      "id": 1337119907,
      "node_id": "PRRC_kwDOABII585PstSj",
      "diff_hunk": "@@ -1249,45 +1236,37 @@ bool V2Transport::ProcessReceivedPacketBytes() noexcept\n         // as GetMaxBytesToProcess only allows up to LENGTH_LEN into the buffer before that point.\n         m_recv_decode_buffer.resize(m_recv_len);\n         bool ignore{false};\n-        Span<const std::byte> aad;\n-        if (m_recv_state == RecvState::GARBAUTH) aad = MakeByteSpan(m_recv_garbage);\n         bool ret = m_cipher.Decrypt(\n             /*input=*/MakeByteSpan(m_recv_buffer).subspan(BIP324Cipher::LENGTH_LEN),\n-            /*aad=*/aad,\n+            /*aad=*/MakeByteSpan(m_recv_aad),\n             /*ignore=*/ignore,\n             /*contents=*/MakeWritableByteSpan(m_recv_decode_buffer));\n         if (!ret) {\n             LogPrint(BCLog::NET, \"V2 transport error: packet decryption failure (%u bytes), peer=%d\\n\", m_recv_len, m_nodeid);\n             return false;\n         }\n+        // We have decrypted a valid packet with the AAD we expected, so clear the expected AAD.\n+        ClearShrink(m_recv_aad);\n         // Feed the last 4 bytes of the Poly1305 authentication tag (and its timing) into our RNG.\n         RandAddEvent(ReadLE32(m_recv_buffer.data() + m_recv_buffer.size() - 4));\n \n-        // At this point we have a valid packet decrypted into m_recv_decode_buffer. Depending on\n-        // the current state, decide what to do with it.\n-        switch (m_recv_state) {\n-        case RecvState::GARBAUTH:\n-            // Ignore flag does not matter for garbage authentication. Any valid packet functions\n-            // as authentication. Receive and process the version packet next.\n-            SetReceiveState(RecvState::VERSION);\n-            ClearShrink(m_recv_garbage);\n-            break;\n-        case RecvState::VERSION:\n-            if (!ignore) {\n+        // At this point we have a valid packet decrypted into m_recv_decode_buffer. If it's not a\n+        // decoy, which we simply ignore, use the current state to decide what to do with it.\n+        if (!ignore) {\n+            switch (m_recv_state) {\n+            case RecvState::VERSION:",
      "path": "src/net.cpp",
      "position": 111,
      "original_position": 101,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~The ` if (m_recv_state != RecvState::APP_READY) ClearShrink(m_recv_decode_buffer);` below could be moved into this state transition.~~\r\n\r\nEDIT: no, we also want to do that for decoy packets.",
      "created_at": "2023-09-26T12:19:49Z",
      "updated_at": "2023-09-26T12:23:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337119907",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337119907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1256,
      "original_line": 1256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337126185",
      "pull_request_review_id": 1644135666,
      "id": 1337126185,
      "node_id": "PRRC_kwDOABII585Psu0p",
      "diff_hunk": "@@ -1249,45 +1236,37 @@ bool V2Transport::ProcessReceivedPacketBytes() noexcept\n         // as GetMaxBytesToProcess only allows up to LENGTH_LEN into the buffer before that point.\n         m_recv_decode_buffer.resize(m_recv_len);\n         bool ignore{false};\n-        Span<const std::byte> aad;\n-        if (m_recv_state == RecvState::GARBAUTH) aad = MakeByteSpan(m_recv_garbage);\n         bool ret = m_cipher.Decrypt(\n             /*input=*/MakeByteSpan(m_recv_buffer).subspan(BIP324Cipher::LENGTH_LEN),\n-            /*aad=*/aad,\n+            /*aad=*/MakeByteSpan(m_recv_aad),\n             /*ignore=*/ignore,\n             /*contents=*/MakeWritableByteSpan(m_recv_decode_buffer));\n         if (!ret) {\n             LogPrint(BCLog::NET, \"V2 transport error: packet decryption failure (%u bytes), peer=%d\\n\", m_recv_len, m_nodeid);\n             return false;\n         }\n+        // We have decrypted a valid packet with the AAD we expected, so clear the expected AAD.\n+        ClearShrink(m_recv_aad);\n         // Feed the last 4 bytes of the Poly1305 authentication tag (and its timing) into our RNG.\n         RandAddEvent(ReadLE32(m_recv_buffer.data() + m_recv_buffer.size() - 4));\n \n-        // At this point we have a valid packet decrypted into m_recv_decode_buffer. Depending on\n-        // the current state, decide what to do with it.\n-        switch (m_recv_state) {\n-        case RecvState::GARBAUTH:\n-            // Ignore flag does not matter for garbage authentication. Any valid packet functions\n-            // as authentication. Receive and process the version packet next.\n-            SetReceiveState(RecvState::VERSION);\n-            ClearShrink(m_recv_garbage);\n-            break;\n-        case RecvState::VERSION:\n-            if (!ignore) {\n+        // At this point we have a valid packet decrypted into m_recv_decode_buffer. If it's not a\n+        // decoy, which we simply ignore, use the current state to decide what to do with it.\n+        if (!ignore) {\n+            switch (m_recv_state) {\n+            case RecvState::VERSION:",
      "path": "src/net.cpp",
      "position": 111,
      "original_position": 101,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "in_reply_to_id": 1337119907,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~You mean \"into this `switch`\"? Since I moved the `switch` block into the `if (!ignore)` block, this means we would not clean the buffer in case of a decoy packet. That seems fine to me, but is this what you're suggesting?~~",
      "created_at": "2023-09-26T12:24:56Z",
      "updated_at": "2023-09-26T12:27:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337126185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337126185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1256,
      "original_line": 1256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337132054",
      "pull_request_review_id": 1644144918,
      "id": 1337132054,
      "node_id": "PRRC_kwDOABII585PswQW",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * packet) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for\n+         * negotiating future extensions). If it fails, the connection aborts. */",
      "path": "src/net.h",
      "position": null,
      "original_position": 43,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: the `it` in this sentence is easily interpreted as \"decryption/verification of the first non-decoy packet\", which is slightly confusing, as failure to decrypt will causing aborting even for decoy packets.\r\n\r\nSuggestion:\r\n\r\n> A packet is received, and decrypted/verified. If that fails, the connection aborts. The first received packet in this state (whether it's a decoy or not) is expected to authenticate the garbage received during the GARB_GARBTERM state as AAD. The first non-decoy packet in this state is interpreted as version negotiation (currently, that means ignoring it, but it can be used for negotiating future extensions), and afterwards the state becomes APP.",
      "created_at": "2023-09-26T12:29:41Z",
      "updated_at": "2023-09-26T12:29:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337132054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337132054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337678247",
      "pull_request_review_id": 1645033013,
      "id": 1337678247,
      "node_id": "PRRC_kwDOABII585Pu1mn",
      "diff_hunk": "@@ -1193,25 +1195,26 @@ class V2TransportTester\n \n     /** Schedule garbage terminator and authentication packet to be sent to the transport (only",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f93f8b457f1062af7b42a8e728ae3d5ab4b32d0f",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment is outdated (\"authentication packet\") here.",
      "created_at": "2023-09-26T19:21:04Z",
      "updated_at": "2023-09-26T19:24:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1337678247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337678247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338153772",
      "pull_request_review_id": 1645769653,
      "id": 1338153772,
      "node_id": "PRRC_kwDOABII585Pwpss",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * decoy) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for",
      "path": "src/net.h",
      "position": null,
      "original_position": 42,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "8753b6af9bf8767be50d71d1bf7e3711738fcfd2",
      "in_reply_to_id": 1336851588,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think my issue was resolved with the typo fix right above.",
      "created_at": "2023-09-27T07:19:34Z",
      "updated_at": "2023-09-27T07:19:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338153772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338153772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338156510",
      "pull_request_review_id": 1645773914,
      "id": 1338156510,
      "node_id": "PRRC_kwDOABII585PwqXe",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * packet) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for\n+         * negotiating future extensions). If it fails, the connection aborts. */",
      "path": "src/net.h",
      "position": null,
      "original_position": 43,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "in_reply_to_id": 1337132054,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">currently, that means ignoring it, but it can be used for negotiating future extensions\r\n\r\nPerhaps say `ignoring the content`, to make sure aad is not meant to be ignored?",
      "created_at": "2023-09-27T07:22:13Z",
      "updated_at": "2023-09-27T07:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338156510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338156510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338392808",
      "pull_request_review_id": 1646127757,
      "id": 1338392808,
      "node_id": "PRRC_kwDOABII585PxkDo",
      "diff_hunk": "@@ -1193,25 +1195,26 @@ class V2TransportTester\n \n     /** Schedule garbage terminator and authentication packet to be sent to the transport (only",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f93f8b457f1062af7b42a8e728ae3d5ab4b32d0f",
      "in_reply_to_id": 1337678247,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, along with some more outdated comments found by grepping for \"auth\" in all touched files.",
      "created_at": "2023-09-27T10:20:24Z",
      "updated_at": "2023-09-27T10:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338392808",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338392808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338393030",
      "pull_request_review_id": 1646128074,
      "id": 1338393030,
      "node_id": "PRRC_kwDOABII585PxkHG",
      "diff_hunk": "@@ -485,24 +485,19 @@ class V2Transport final : public Transport\n         /** Garbage and garbage terminator.\n          *\n          * Whenever a byte is received, the last 16 bytes are compared with the expected garbage\n-         * terminator. When that happens, the state becomes GARBAUTH. If no matching terminator is\n+         * terminator. When that happens, the state becomes VERSION. If no matching terminator is\n          * received in 4111 bytes (4095 for the maximum garbage length, and 16 bytes for the\n          * terminator), the connection aborts. */\n         GARB_GARBTERM,\n \n-        /** Garbage authentication packet.\n-         *\n-         * A packet is received, and decrypted/verified with AAD set to the garbage received during\n-         * the GARB_GARBTERM state. If that succeeds, the state becomes VERSION. If it fails the\n-         * connection aborts. */\n-        GARBAUTH,\n-\n         /** Version packet.\n          *\n-         * A packet is received, and decrypted/verified. If that succeeds, the state becomes APP,\n-         * and the decrypted contents is interpreted as version negotiation (currently, that means\n-         * ignoring it, but it can be used for negotiating future extensions). If it fails, the\n-         * connection aborts. */\n+         * A packet is received, and decrypted/verified. The first received packet in this state\n+         * (whether it's a decoy or not) is expected to authenticate the garbage received during\n+         * the GARB_GARBTERM state as AAD. If decryption/verification (of the first non-decoy\n+         * packet) succeeds, the state becomes APP, and the decrypted contents is interpreted as\n+         * version negotiation (currently, that means ignoring it, but it can be used for\n+         * negotiating future extensions). If it fails, the connection aborts. */",
      "path": "src/net.h",
      "position": null,
      "original_position": 43,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "f02fb7119eca6ee9744fa7c28291e6351650291a",
      "in_reply_to_id": 1337132054,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2023-09-27T10:20:36Z",
      "updated_at": "2023-09-27T10:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338393030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338393030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338861777",
      "pull_request_review_id": 1647106317,
      "id": 1338861777,
      "node_id": "PRRC_kwDOABII585PzWjR",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Conceptually it's a bit weird to receive an AAD in one message but then verify it in the next message. Perhaps it's cleaner to to keep `m_recv_garbage` around and explicitly move it into `m_recv_aad` as soon as we start receiving bytes for the decoy/version message?\r\n\r\nThat way we can `Assume` that `m_recv_aad` is empty when start receiving bytes and clear it when we're done processing a message. (this commit already does the latter)",
      "created_at": "2023-09-27T16:15:32Z",
      "updated_at": "2023-09-27T16:19:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338861777",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338861777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338928377",
      "pull_request_review_id": 1647184782,
      "id": 1338928377,
      "node_id": "PRRC_kwDOABII585Pzmz5",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Perhaps it's cleaner to to keep m_recv_garbage around and explicitly move it into m_recv_aad as soon as we start receiving bytes for the decoy/version message?\r\n\r\nWe receive data into `m_recv_buffer`, and by the time we process it, we're effectively already done with it. So what you're suggesting would just amount to moving/shrinking from `m_recv_buffer` to `m_recv_garbage` and immediately after (on the next line) moving that to `m_recv_aad`.\r\n\r\nI think the better way of looking at it is not that the AAD is data *received* at all; it's a side effect of processing data in a particular phase that results in a requirement that the next message commit to it. For now, the only place where this happens is that during the processing of received bytes in the `GARB_TERM` phase the garbage needs to be committed to (but not all the data received during that phase, as it doesn't include the terminator).\r\n\r\n> That way we can `Assume` that `m_recv_aad` is empty when start receiving bytes and clear it when we're done processing a message. (this commit already does the latter).\r\n\r\nI don't think that works? At the start of the version phase, the previous garbage will be in `m_recv_aad`.",
      "created_at": "2023-09-27T16:58:58Z",
      "updated_at": "2023-09-27T17:02:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338928377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338928377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338983254",
      "pull_request_review_id": 1647256728,
      "id": 1338983254,
      "node_id": "PRRC_kwDOABII585Pz0NW",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Conceptually it's a bit weird to receive an AAD in one message but then verify it in the next message. Perhaps it's cleaner to to keep `m_recv_garbage` around and explicitly move it into `m_recv_aad` as soon as we start receiving bytes for the decoy/version message?\r\n\r\nIf I understand correctly, this is roughly equivalent to dropping the second commit again, and I don't think this was cleaner.",
      "created_at": "2023-09-27T17:44:21Z",
      "updated_at": "2023-09-27T17:44:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1338983254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1338983254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339728856",
      "pull_request_review_id": 1648187290,
      "id": 1339728856,
      "node_id": "PRRC_kwDOABII585P2qPY",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> At the start of the version phase, the previous garbage will be in `m_recv_aad`.\r\n\r\nThis is the part that feels a bit strange to me. But may it's not too bad:\r\n\r\nWe could instead `Assume` that `m_recv_aad` is empty when we enter the `APP` and when we enter the `APP_READY` state. It can be cleared in the `VERSION` state and after each normal message in the `APP` state, which indeed this PR does.",
      "created_at": "2023-09-28T08:24:48Z",
      "updated_at": "2023-09-28T08:24:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1339728856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339728856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339810858",
      "pull_request_review_id": 1648306061,
      "id": 1339810858,
      "node_id": "PRRC_kwDOABII585P2-Qq",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose an `Assume` in `APP` may or may not be future proof, because it depends on how AADs will be used: do we know what to expect for the next message (as is the case here for garbage), do we infer it from the current message, is it some time dependent thing or even a constant?",
      "created_at": "2023-09-28T09:24:46Z",
      "updated_at": "2023-09-28T09:24:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1339810858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339810858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339879610",
      "pull_request_review_id": 1648400991,
      "id": 1339879610,
      "node_id": "PRRC_kwDOABII585P3PC6",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I suppose an `Assume` in `APP` may or may not be future proof, because it depends on how AADs will be used: do we know what to expect for the next message (as is the case here for garbage), do we infer it from the current message, is it some time dependent thing or even a constant?\r\n\r\nWell, if we ever have a v3 that uses AAD for more than the garbage, we could drop the `Assume`, so I guess that's not a big deal.\r\n\r\nOn the other hand, I don't see that much value in adding an `Assume`. The sender and receiver code are sufficiently independent. So unless we have the exact same bug in the sender logic, a bug in the receiver logic that leads to `m_recv_aad` being non-empty would lead to an immediate disconnect. That is, such a bug will certainly be noticed during testing, even without the `Assume`. (The `Assume` would just make it easier to find the cause.) \r\n\r\nMy current thinking is that I don't want to touch the PR now that it has three ACKs. But I'll add an `Assume` if there's another good reason to touch it (or if you have strong opinions on this, of course.) ",
      "created_at": "2023-09-28T10:15:54Z",
      "updated_at": "2023-09-28T10:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1339879610",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339879610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339889801",
      "pull_request_review_id": 1648414459,
      "id": 1339889801,
      "node_id": "PRRC_kwDOABII585P3RiJ",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not totally relevant to the PR but some remarks:\r\n\r\n> do we know what to expect for the next message (as is the case here for garbage)\r\n> do we infer it from the current message,\r\n\r\nI think one of these two is true in 99.9% of the cases I can imagine.\r\n\r\nAs for inferring it from current message: Inferring it from the contents of the AEAD is excluded by design (you can't decrypt a ciphertext that doesn't verify). It would just be possible for data in the \"outer\" header (currently that's just the length field). But even if we want some additional data in the outer header, this doesn't really contradict the current logic in the code (e.g., we could concatenate the current-message thing to whatever `m_recv_aad` is, or then start Assuming it's empty).\r\n\r\n> is it some time dependent thing\r\n\r\nThat will be too fragile, i.e., we would abort the connection if clocks are off.\r\n\r\n> even a constant?\r\n\r\nThen there will be no reason to include it.\r\n\r\n",
      "created_at": "2023-09-28T10:24:32Z",
      "updated_at": "2023-09-28T10:34:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1339889801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339889801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339902114",
      "pull_request_review_id": 1648430793,
      "id": 1339902114,
      "node_id": "PRRC_kwDOABII585P3Uii",
      "diff_hunk": "@@ -578,13 +573,13 @@ class V2Transport final : public Transport\n \n     /** Lock for receiver-side fields. */\n     mutable Mutex m_recv_mutex ACQUIRED_BEFORE(m_send_mutex);\n-    /** In {GARBAUTH, VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n+    /** In {VERSION, APP}, the decrypted packet length, if m_recv_buffer.size() >=\n      *  BIP324Cipher::LENGTH_LEN. Unspecified otherwise. */\n     uint32_t m_recv_len GUARDED_BY(m_recv_mutex) {0};\n     /** Receive buffer; meaning is determined by m_recv_state. */\n     std::vector<uint8_t> m_recv_buffer GUARDED_BY(m_recv_mutex);\n-    /** During GARBAUTH, the garbage received during GARB_GARBTERM. */\n-    std::vector<uint8_t> m_recv_garbage GUARDED_BY(m_recv_mutex);\n+    /** AAD expected in next received packet (currently used only for garbage). */\n+    std::vector<uint8_t> m_recv_aad GUARDED_BY(m_recv_mutex);",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "original_commit_id": "e3720bca398820038b3e97f467adb2c45ef9ef5f",
      "in_reply_to_id": 1338861777,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the clarifications. Agree that adding an `Assume` can wait.",
      "created_at": "2023-09-28T10:33:52Z",
      "updated_at": "2023-09-28T10:33:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28525#discussion_r1339902114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1339902114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    }
  ]
}