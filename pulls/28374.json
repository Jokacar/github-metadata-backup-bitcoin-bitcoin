{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374",
    "id": 1496896219,
    "node_id": "PR_kwDOABII585ZONLb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28374",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28374.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28374.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
    "number": 28374,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test/BIP324: python cryptography required for BIP 324 functional tests",
    "user": {
      "login": "stratospher",
      "id": 44024636,
      "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stratospher",
      "html_url": "https://github.com/stratospher",
      "followers_url": "https://api.github.com/users/stratospher/followers",
      "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
      "organizations_url": "https://api.github.com/users/stratospher/orgs",
      "repos_url": "https://api.github.com/users/stratospher/repos",
      "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stratospher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "split off from #24748 to keep commits related to cryptography and functional test framework changes separate.\r\n\r\nThis PR adds python implementation and unit tests for HKDF, ChaCha20, Poly1305, ChaCha20Poly1305 AEAD, FSChaCha20 and FSChaCha20Poly1305 AEAD.\r\n\r\nThey're based on https://github.com/bitcoin/bips/blob/cc177ab7bc5abcdcdf9c956ee88afd1052053328/bip-0324/reference.py for easy review.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-31T10:14:05Z",
    "updated_at": "2023-09-03T13:29:41Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "f8328911aa0e617e03e1dcb0dc3168085d8c0302",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stratospher:crypto-v2tests",
      "ref": "crypto-v2tests",
      "sha": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 379929443,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNzk5Mjk0NDM=",
        "name": "bitcoin",
        "full_name": "stratospher/bitcoin",
        "owner": {
          "login": "stratospher",
          "id": 44024636,
          "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stratospher",
          "html_url": "https://github.com/stratospher",
          "followers_url": "https://api.github.com/users/stratospher/followers",
          "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
          "organizations_url": "https://api.github.com/users/stratospher/orgs",
          "repos_url": "https://api.github.com/users/stratospher/repos",
          "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stratospher/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stratospher/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stratospher/bitcoin",
        "archive_url": "https://api.github.com/repos/stratospher/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stratospher/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stratospher/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stratospher/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stratospher/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stratospher/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stratospher/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stratospher/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stratospher/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stratospher/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stratospher/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stratospher/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stratospher/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stratospher/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stratospher/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stratospher/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stratospher/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stratospher/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stratospher/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stratospher/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stratospher/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stratospher/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stratospher/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stratospher/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stratospher/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stratospher/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stratospher/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stratospher/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stratospher/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stratospher/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stratospher/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stratospher/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stratospher/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stratospher/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stratospher/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stratospher/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stratospher/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stratospher/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stratospher/bitcoin/hooks",
        "svn_url": "https://github.com/stratospher/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 229729,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-02T04:14:31Z",
        "created_at": "2021-06-24T13:12:06Z",
        "updated_at": "2022-01-06T18:58:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "df98a12fc2af11b25d8e57ab8c3a233b532acabc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35609,
        "stargazers_count": 71203,
        "watchers_count": 71203,
        "size": 238774,
        "default_branch": "master",
        "open_issues_count": 682,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-03T13:49:08Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-09-03T11:37:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 463,
    "deletions": 59,
    "changed_files": 6,
    "commits": 7,
    "review_comments": 14,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxZjcxYzY3ODk1YzE4NjEzN2NjMTliMzBmMjZjNTdiOGE4YzU2MmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21f71c67895c186137cc19b30f26c57b8a8c562e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21f71c67895c186137cc19b30f26c57b8a8c562e",
      "tree": {
        "sha": "a464e5e30447ce03e618037f4b60e3a2ca851f6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a464e5e30447ce03e618037f4b60e3a2ca851f6b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83719146047947e588aa0c7b5eee02f44884553d",
          "sha": "83719146047947e588aa0c7b5eee02f44884553d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83719146047947e588aa0c7b5eee02f44884553d"
        }
      ],
      "message": "[test/crypto] Add HMAC-based Key Derivation Function (HKDF)\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-08-29T14:08:23Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T06:19:28Z"
      },
      "sha": "21f71c67895c186137cc19b30f26c57b8a8c562e"
    },
    {
      "event": "commented",
      "id": 1700759702,
      "node_id": "IC_kwDOABII585lX4iW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1700759702",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T10:14:09Z",
      "updated_at": "2023-09-01T13:42:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/28374#pullrequestreview-1606904477) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#issuecomment-1700759702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28374"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10242833695,
      "node_id": "HRFPE_lADOABII585vxZLkzwAAAAJihT0f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10242833695",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T10:16:14Z"
    },
    {
      "event": "labeled",
      "id": 10254980297,
      "node_id": "LE_lADOABII585vxZLkzwAAAAJjPpTJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10254980297",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T09:04:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 1606904477,
      "node_id": "PRR_kwDOABII585fx2qd",
      "url": null,
      "actor": null,
      "commit_id": "7ceb9b77fec4eca6e5054b1f8166735b1dea826c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nVery nice! Left some non-blocking nits below, they all can be seen as potential follow-up material.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#pullrequestreview-1606904477",
      "submitted_at": "2023-09-01T13:42:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGViMzY5NDYwZGQzNzY5YWEzMmY3N2NiYjE1MDhkYWUzZTNkZmUzN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb369460dd3769aa32f77cbb1508dae3e3dfe37f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eb369460dd3769aa32f77cbb1508dae3e3dfe37f",
      "tree": {
        "sha": "fb52a7e29dee6e46903dce306f601cee09f1cfb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb52a7e29dee6e46903dce306f601cee09f1cfb1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21f71c67895c186137cc19b30f26c57b8a8c562e",
          "sha": "21f71c67895c186137cc19b30f26c57b8a8c562e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21f71c67895c186137cc19b30f26c57b8a8c562e"
        }
      ],
      "message": "[test/crypto] Add ChaCha20 python implementation\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:32:12Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T14:23:07Z"
      },
      "sha": "eb369460dd3769aa32f77cbb1508dae3e3dfe37f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVmYWMzMzFhNGQ5YzIwNDgzNjhhYzI5ZGFlN2MwNDZiNDg4YTQyYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efac331a4d9c2048368ac29dae7c046b488a42c5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/efac331a4d9c2048368ac29dae7c046b488a42c5",
      "tree": {
        "sha": "590af284157532bc56a133b4c85f0a99d2c2295a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/590af284157532bc56a133b4c85f0a99d2c2295a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb369460dd3769aa32f77cbb1508dae3e3dfe37f",
          "sha": "eb369460dd3769aa32f77cbb1508dae3e3dfe37f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eb369460dd3769aa32f77cbb1508dae3e3dfe37f"
        }
      ],
      "message": "[test/crypto] Use chacha20_block function in `data_to_num3072`",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:32:14Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-08-31T08:48:38Z"
      },
      "sha": "efac331a4d9c2048368ac29dae7c046b488a42c5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkYjllOTUwMGJkMjgyMjc4ZTZlZTllNjY2YWI3YTFmM2RiN2YzYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4",
      "tree": {
        "sha": "128e8bf273c0df3b9365cafece9acb9bcd7389fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/128e8bf273c0df3b9365cafece9acb9bcd7389fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efac331a4d9c2048368ac29dae7c046b488a42c5",
          "sha": "efac331a4d9c2048368ac29dae7c046b488a42c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/efac331a4d9c2048368ac29dae7c046b488a42c5"
        }
      ],
      "message": "[test/crypto] Add Poly1305 python implementation\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:32:14Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T14:27:34Z"
      },
      "sha": "5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5ZDAyMmEzM2NhMzIwOGQ0YWYwNTg0OTc1YzQ1YTgyNWRkYzU5Zjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39d022a33ca3208d4af0584975c45a825ddc59f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39d022a33ca3208d4af0584975c45a825ddc59f8",
      "tree": {
        "sha": "566528e09b982e7860b12b34bc560533dbb41371",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/566528e09b982e7860b12b34bc560533dbb41371"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4",
          "sha": "5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4"
        }
      ],
      "message": "[test/crypto] Add RFC 8439's ChaCha20Poly1305 AEAD\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:32:14Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T14:36:49Z"
      },
      "sha": "39d022a33ca3208d4af0584975c45a825ddc59f8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1ODJiM2VmMmQ4NWMwMTkyNDdlYzQ3ODViMmU5NjIzMjhmZDIwYjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4582b3ef2d85c019247ec4785b2e962328fd20b8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4582b3ef2d85c019247ec4785b2e962328fd20b8",
      "tree": {
        "sha": "8ff6e94e829eb6f2ccb3c798040bd380d6baa2b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ff6e94e829eb6f2ccb3c798040bd380d6baa2b5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39d022a33ca3208d4af0584975c45a825ddc59f8",
          "sha": "39d022a33ca3208d4af0584975c45a825ddc59f8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39d022a33ca3208d4af0584975c45a825ddc59f8"
        }
      ],
      "message": "[test/crypto] Add FSChaCha20 python implementation\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:55:05Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2022-10-06T14:48:10Z"
      },
      "sha": "4582b3ef2d85c019247ec4785b2e962328fd20b8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5ZWQ0MTRjZTAxNDk1ZGRmYTNmNzRkZDBjOTRjY2Y3NmIzOGM2ZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "tree": {
        "sha": "f0fed1471263e1a19c2b2de94641e5aa9099c851",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0fed1471263e1a19c2b2de94641e5aa9099c851"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4582b3ef2d85c019247ec4785b2e962328fd20b8",
          "sha": "4582b3ef2d85c019247ec4785b2e962328fd20b8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4582b3ef2d85c019247ec4785b2e962328fd20b8"
        }
      ],
      "message": "[test/crypto] Add FSChaCha20Poly1305 AEAD python implementation\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-09-02T03:55:58Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-08-31T09:56:56Z"
      },
      "sha": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10262901861,
      "node_id": "HRFPE_lADOABII585vxZLkzwAAAAJjt3Rl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10262901861",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-02T04:14:35Z"
    },
    {
      "event": "reviewed",
      "id": 1607880254,
      "node_id": "PRR_kwDOABII585f1k4-",
      "url": null,
      "actor": null,
      "commit_id": "4582b3ef2d85c019247ec4785b2e962328fd20b8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#pullrequestreview-1607880254",
      "submitted_at": "2023-09-02T04:24:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-02T11:55:16Z",
      "updated_at": "2023-09-02T11:55:16Z",
      "source": {
        "issue": {
          "id": 1707054771,
          "node_id": "I_kwDOABII585lv5az",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27634",
          "number": 27634,
          "state": "open",
          "state_reason": null,
          "title": "BIP324 tracking issue",
          "body": "This issue will be updated to reflect the current state of [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) integration.\r\n\r\nPRs ready for review:\r\n* #28196 \r\n* #28374 \r\n\r\nOverall plan:\r\n* ElligatorSwift integration in Bitcoin Core\r\n  * [x] Dependency: ElligatorSwift support in libsecp256k1: bitcoin-core/secp256k1#1129\r\n  * [x] Dependency: update libsecp256k1 subtree: currently part of 27479.\r\n  * [x] Main feature: #27479\r\n* Cipher suite implementation (formerly 25361):\r\n  * [x] Dependency: support for not wasting ChaCha20 stream bytes: #26153\r\n  * [x] Dependency: support for RFC8439 variant of ChaCha20: #27985\r\n  * [x] Dependency: support for incremental Poly1305 computation: #27993\r\n  * [x] Main feature: #28008\r\n  * [x] Follow-up: #28267\r\n  * [ ] Follow-up: #28263\r\n* P2P v2 connection support (formerly 23561, 23233, 24545):\r\n  * [x] Dependency: P2P transport abstraction: #28165\r\n  * [ ] Main feature: #28196\r\n* P2P v2 signalling/integration (formerly 24545):\r\n  * [ ] Main feature: #28331 \r\n* BIP324 functional tests: \r\n   * [x] Dependency: ElligatorSwift support in functional tests: #24005\r\n   * [x] Dependency: Field element support in functional tests: #26222\r\n   * [ ] Dependency: Python cryptography #28374\r\n   * [ ] Main feature: #24748\r\n* P2P_V2 service flag support in DNS seeder:\r\n  * [x] Main feature: sipa/bitcoin-seeder#102\r\n* Prehistory:\r\n  * [x] Old ChaCha20Poly1305@Bitcoin cipher: #15649\r\n  * [x] Preparing for multiple transport layers: #16202 and #16562\r\n  * [x] Miscellaneous fixes: #22331 #23271\r\n  * [x] ChaCha20 performance: #24946 \r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "created_at": "2023-05-12T07:00:54Z",
          "updated_at": "2023-09-03T13:50:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10265962650,
      "node_id": "LE_lADOABII585vxZLkzwAAAAJj5iia",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10265962650",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T12:15:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1608522032,
      "node_id": "PRR_kwDOABII585f4Bkw",
      "url": null,
      "actor": null,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#pullrequestreview-1608522032",
      "submitted_at": "2023-09-03T13:29:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312997599",
      "pull_request_review_id": 1606904477,
      "id": 1312997599,
      "node_id": "PRRC_kwDOABII585OQsDf",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Python implementation of ChaCha20 cipher\"\"\"\n+\n+import unittest\n+\n+CHACHA20_INDICES = (\n+    (0, 4, 8, 12), (1, 5, 9, 13), (2, 6, 10, 14), (3, 7, 11, 15),\n+    (0, 5, 10, 15), (1, 6, 11, 12), (2, 7, 8, 13), (3, 4, 9, 14)\n+)\n+\n+CHACHA20_CONSTANTS = (0x61707865, 0x3320646e, 0x79622d32, 0x6b206574)\n+\n+def rotl32(v, bits):\n+    \"\"\"Rotate the 32-bit value v left by bits bits.\"\"\"\n+    bits %= 32  # Make sure the term below does not throw an exception\n+    return ((v << bits) & 0xffffffff) | (v >> (32 - bits))\n+\n+def chacha20_doubleround(s):\n+    \"\"\"Apply a ChaCha20 double round to 16-element state array s.\n+    See https://cr.yp.to/chacha/chacha-20080128.pdf and https://tools.ietf.org/html/rfc8439\n+    \"\"\"\n+    for a, b, c, d in CHACHA20_INDICES:\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rotl32(s[d] ^ s[a], 16)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rotl32(s[b] ^ s[c], 12)\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rotl32(s[d] ^ s[a], 8)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rotl32(s[b] ^ s[c], 7)\n+\n+def chacha20_block(key, nonce, cnt):\n+    \"\"\"Compute the 64-byte output of the ChaCha20 block function.\n+    Takes as input a 32-byte key, 12-byte nonce, and 32-bit integer counter.\n+    \"\"\"\n+    # Initial state.\n+    init = [0 for _ in range(16)]\n+    for i in range(4):\n+        init[i] = CHACHA20_CONSTANTS[i]\n+    for i in range(8):\n+        init[4 + i] = int.from_bytes(key[4 * i:4 * (i+1)], 'little')\n+    init[12] = cnt\n+    for i in range(3):\n+        init[13 + i] = int.from_bytes(nonce[4 * i:4 * (i+1)], 'little')\n+    # Perform 20 rounds.\n+    state = list(init)\n+    for _ in range(10):\n+        chacha20_doubleround(state)\n+    # Add initial values back into state.\n+    for i in range(16):\n+        state[i] = (state[i] + init[i]) & 0xffffffff\n+    # Produce byte output\n+    return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n+\n+\n+# Test vectors from RFC7539/8439 consisting of 32 byte key, 12 byte nonce, block counter\n+# and 64 byte output after applying `chacha20_block` function\n+CHACHA20_TESTS = [\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0x09000000, 0x4a000000], 1,\n+     \"10f1e7e4d13b5915500fdd1fa32071c4c7d1f4c733c068030422aa9ac3d46c4e\"\n+     \"d2826446079faa0914c2d705d98b02a2b5129cd1de164eb9cbd083e8a2503c4e\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0], 0,\n+     \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7\"\n+     \"da41597c5157488d7724e03fb8d84a376a43b8f41518a11cc387b669b2ee6586\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0], 1,\n+     \"9f07e7be5551387a98ba977c732d080dcb0f29a048e3656912c6533e32ee7aed\"\n+     \"29b721769ce64e43d57133b074d839d531ed1f28510afb45ace10a1f4b794d6f\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000001\", [0, 0], 1,\n+     \"3aeb5224ecf849929b9d828db1ced4dd832025e8018b8160b82284f3c949aa5a\"\n+     \"8eca00bbb4a73bdad192b5c42f73f2fd4e273644c8b36125a64addeb006c13a0\"],\n+    [\"00ff000000000000000000000000000000000000000000000000000000000000\", [0, 0], 2,\n+     \"72d54dfbf12ec44b362692df94137f328fea8da73990265ec1bbbea1ae9af0ca\"\n+     \"13b25aa26cb4a648cb9b9d1be65b2c0924a66c54d545ec1b7374f4872e99f096\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0x200000000000000], 0,\n+     \"c2c64d378cd536374ae204b9ef933fcd1a8b2288b3dfa49672ab765b54ee27c7\"\n+     \"8a970e0e955c14f3a88e741b97c286f75f8fc299e8148362fa198a39531bed6d\"],\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0, 0x4a000000], 1,\n+     \"224f51f3401bd9e12fde276fb8631ded8c131f823d2c06e27e4fcaec9ef3cf78\"\n+     \"8a3b0aa372600a92b57974cded2b9334794cba40c63e34cdea212c4cf07d41b7\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000001\", [0, 0], 0,\n+     \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41\"\n+     \"bbe2a0b6ea7566d2a5d1e7e20d42af2c53d792b1c43fea817e9ad275ae546963\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 1], 0,\n+     \"ef3fdfd6c61578fbf5cf35bd3dd33b8009631634d21e42ac33960bd138e50d32\"\n+     \"111e4caf237ee53ca8ad6426194a88545ddc497a0b466e7d6bbdb0041b2f586b\"],\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0, 0x0706050403020100], 0,\n+     \"f798a189f195e66982105ffb640bb7757f579da31602fc93ec01ac56f85ac3c1\"\n+     \"34a4547b733b46413042c9440049176905d3be59ea1c53f15916155c2be8241a\"],\n+]\n+\n+\n+class TestFrameworkChacha(unittest.TestCase):\n+    def test_chacha20(self):\n+        \"\"\"ChaCha20 test vectors.\"\"\"\n+        for test_vector in CHACHA20_TESTS:\n+            hex_key, hex_nonce, counter, hex_output = test_vector",
      "path": "test/functional/test_framework/chacha20.py",
      "position": null,
      "original_position": 99,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "cb838f0d9c9b84c07b5081c783275680e48a9023",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "naming nit: the nonce from `CHACHA20_TESTS` is not provided as a hex string, but as a list of two integers, so the `hex_` prefix doesn't apply here. Maybe something like `nonce_pair` instead? (or simply `nonce` and rename the bytes-version below to somethig else like `nonce_bytes`)\r\n```suggestion\r\n            hex_key, nonce_pair, counter, hex_output = test_vector\r\n```",
      "created_at": "2023-09-01T13:00:39Z",
      "updated_at": "2023-09-01T13:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1312997599",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312997599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313004252",
      "pull_request_review_id": 1606904477,
      "id": 1313004252,
      "node_id": "PRRC_kwDOABII585OQtrc",
      "diff_hunk": "@@ -27,6 +27,22 @@ def TaggedHash(tag, data):\n     ss += data\n     return hashlib.sha256(ss).digest()\n \n+# HKDF-SHA256\n+def hmac_sha256(key, data):",
      "path": "test/functional/test_framework/key.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "21f71c67895c186137cc19b30f26c57b8a8c562e",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As `key.py` is currently containing only code related to digital signatures (according to the module description it's a \"secp256k1 elliptic curve protocols implementation\"), the HKDF would maybe be better suited in another (new?) module. Probably it generally makes sense to do a follow-up with restructuring crypto-related helpers, e.g. having an own \"test_framework/crypto\" folder would be nice on the long-term for better structuring I think, as the list of crypto-related modules has grown quite a bit.",
      "created_at": "2023-09-01T13:07:03Z",
      "updated_at": "2023-09-01T13:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313004252",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313004252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313018187",
      "pull_request_review_id": 1606904477,
      "id": 1313018187,
      "node_id": "PRRC_kwDOABII585OQxFL",
      "diff_hunk": "@@ -112,3 +161,24 @@ def test_aead(self):\n             self.assertEqual(hex_cipher, ciphertext.hex())\n             plaintext = aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext)\n             self.assertEqual(plain, plaintext)\n+\n+    def test_fschacha20poly1305aead(self):\n+        \"FSChaCha20Poly1305 AEAD test vectors.\"\n+        for test_vector in FSAEAD_TESTS:\n+            hex_plain, hex_aad, hex_key, msg_idx, hex_cipher = test_vector\n+            plain = bytes.fromhex(hex_plain)\n+            aad = bytes.fromhex(hex_aad)\n+            key = bytes.fromhex(hex_key)\n+\n+            enc_aead = FSChaCha20Poly1305(key)\n+            dec_aead = FSChaCha20Poly1305(key)\n+\n+            for _ in range(msg_idx):\n+                enc_aead.crypt(b\"\", b\"\", False)",
      "path": "test/functional/test_framework/bip324_cipher.py",
      "position": 177,
      "original_position": 94,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "7ceb9b77fec4eca6e5054b1f8166735b1dea826c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: named arguments for the boolean here and below would be nice\r\n```suggestion\r\n                enc_aead.crypt(b\"\", b\"\", is_decrypt=False)\r\n```",
      "created_at": "2023-09-01T13:17:51Z",
      "updated_at": "2023-09-01T13:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313018187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313018187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313030628",
      "pull_request_review_id": 1606904477,
      "id": 1313030628,
      "node_id": "PRRC_kwDOABII585OQ0Hk",
      "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"ChaCha20 Poly1305 AEAD Construction in RFC 8439\"\"\"\n+\n+import unittest\n+\n+from .chacha20 import chacha20_block\n+from .poly1305 import Poly1305\n+\n+def aead_chacha20_poly1305_encrypt(key, nonce, aad, plaintext):\n+    \"\"\"Encrypt a plaintext using ChaCha20Poly1305.\"\"\"\n+    ret = bytearray()\n+    msg_len = len(plaintext)\n+    for i in range((msg_len + 63) // 64):\n+        now = min(64, msg_len - 64 * i)\n+        keystream = chacha20_block(key, nonce, i + 1)\n+        for j in range(now):\n+            ret.append(plaintext[j + 64 * i] ^ keystream[j])\n+    poly1305 = Poly1305(chacha20_block(key, nonce, 0)[:32])\n+    poly1305.add(aad, pad=True).add(ret, pad=True)\n+    poly1305.add(len(aad).to_bytes(8, 'little') + msg_len.to_bytes(8, 'little'))\n+    ret += poly1305.tag()\n+    return bytes(ret)\n+\n+def aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext):\n+    \"\"\"Decrypt a ChaCha20Poly1305 ciphertext.\"\"\"\n+    if len(ciphertext) < 16:\n+        return None\n+    msg_len = len(ciphertext) - 16\n+    poly1305 = Poly1305(chacha20_block(key, nonce, 0)[:32])\n+    poly1305.add(aad, pad=True)\n+    poly1305.add(ciphertext, length=msg_len, pad=True)\n+    poly1305.add(len(aad).to_bytes(8, 'little') + msg_len.to_bytes(8, 'little'))\n+    if ciphertext[-16:] != poly1305.tag():\n+        return None\n+    ret = bytearray()\n+    for i in range((msg_len + 63) // 64):\n+        now = min(64, msg_len - 64 * i)\n+        keystream = chacha20_block(key, nonce, i + 1)\n+        for j in range(now):\n+            ret.append(ciphertext[j + 64 * i] ^ keystream[j])\n+    return bytes(ret)\n+\n+\n+# Test vectors from RFC8439 consisting of plaintext, aad, 32 byte key, 12 byte nonce and ciphertext\n+AEAD_TESTS = [\n+    # RFC 8439 Example from section 2.8.2\n+    [\"4c616469657320616e642047656e746c656d656e206f662074686520636c6173\"\n+     \"73206f66202739393a204966204920636f756c64206f6666657220796f75206f\"\n+     \"6e6c79206f6e652074697020666f7220746865206675747572652c2073756e73\"\n+     \"637265656e20776f756c642062652069742e\",\n+     \"50515253c0c1c2c3c4c5c6c7\",\n+     \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\",\n+     [7, 0x4746454443424140],\n+     \"d31a8d34648e60db7b86afbc53ef7ec2a4aded51296e08fea9e2b5a736ee62d6\"\n+     \"3dbea45e8ca9671282fafb69da92728b1a71de0a9e060b2905d6a5b67ecd3b36\"\n+     \"92ddbd7f2d778b8c9803aee328091b58fab324e4fad675945585808b4831d7bc\"\n+     \"3ff4def08e4b7a9de576d26586cec64b61161ae10b594f09e26a7e902ecbd060\"\n+     \"0691\"],\n+    # RFC 8439 Test vector A.5\n+    [\"496e7465726e65742d4472616674732061726520647261667420646f63756d65\"\n+     \"6e74732076616c696420666f722061206d6178696d756d206f6620736978206d\"\n+     \"6f6e74687320616e64206d617920626520757064617465642c207265706c6163\"\n+     \"65642c206f72206f62736f6c65746564206279206f7468657220646f63756d65\"\n+     \"6e747320617420616e792074696d652e20497420697320696e617070726f7072\"\n+     \"6961746520746f2075736520496e7465726e65742d4472616674732061732072\"\n+     \"65666572656e6365206d6174657269616c206f7220746f206369746520746865\"\n+     \"6d206f74686572207468616e206173202fe2809c776f726b20696e2070726f67\"\n+     \"726573732e2fe2809d\",\n+     \"f33388860000000000004e91\",\n+     \"1c9240a5eb55d38af333888604f6b5f0473917c1402b80099dca5cbc207075c0\",\n+     [0, 0x0807060504030201],\n+     \"64a0861575861af460f062c79be643bd5e805cfd345cf389f108670ac76c8cb2\"\n+     \"4c6cfc18755d43eea09ee94e382d26b0bdb7b73c321b0100d4f03b7f355894cf\"\n+     \"332f830e710b97ce98c8a84abd0b948114ad176e008d33bd60f982b1ff37c855\"\n+     \"9797a06ef4f0ef61c186324e2b3506383606907b6a7c02b0f9f6157b53c867e4\"\n+     \"b9166c767b804d46a59b5216cde7a4e99040c5a40433225ee282a1b0a06c523e\"\n+     \"af4534d7f83fa1155b0047718cbc546a0d072b04b3564eea1b422273f548271a\"\n+     \"0bb2316053fa76991955ebd63159434ecebb4e466dae5a1073a6727627097a10\"\n+     \"49e617d91d361094fa68f0ff77987130305beaba2eda04df997b714d6c6f2c29\"\n+     \"a6ad5cb4022b02709beead9d67890cbb22392336fea1851f38\"],\n+    # Test vectors exercising aad and plaintext which are multiples of 16 bytes.\n+    [\"8d2d6a8befd9716fab35819eaac83b33269afb9f1a00fddf66095a6c0cd91951\"\n+     \"a6b7ad3db580be0674c3f0b55f618e34\",\n+     \"\",\n+     \"72ddc73f07101282bbbcf853b9012a9f9695fc5d36b303a97fd0845d0314e0c3\",\n+     [0x3432b75f, 0xb3585537eb7f4024],\n+     \"f760b8224fb2a317b1b07875092606131232a5b86ae142df5df1c846a7f6341a\"\n+     \"f2564483dd77f836be45e6230808ffe402a6f0a3e8be074b3d1f4ea8a7b09451\"],\n+    [\"\",\n+     \"36970d8a704c065de16250c18033de5a400520ac1b5842b24551e5823a3314f3\"\n+     \"946285171e04a81ebfbe3566e312e74ab80e94c7dd2ff4e10de0098a58d0f503\",\n+     \"77adda51d6730b9ad6c995658cbd49f581b2547e7c0c08fcc24ceec797461021\",\n+     [0x1f90da88, 0x75dafa3ef84471a4],\n+     \"aaae5bb81e8407c94b2ae86ae0c7efbe\"],\n+]\n+\n+\n+class TestFrameworkAEAD(unittest.TestCase):\n+    def test_aead(self):\n+        \"\"\"ChaCha20Poly1305 AEAD test vectors.\"\"\"\n+        for test_vector in AEAD_TESTS:\n+            hex_plain, hex_aad, hex_key, hex_nonce, hex_cipher = test_vector\n+            plain = bytes.fromhex(hex_plain)\n+            aad = bytes.fromhex(hex_aad)\n+            key = bytes.fromhex(hex_key)\n+            nonce = hex_nonce[0].to_bytes(4, 'little') + hex_nonce[1].to_bytes(8, 'little')\n+\n+            ciphertext = aead_chacha20_poly1305_encrypt(key, nonce, aad, plain)\n+            self.assertEqual(hex_cipher, ciphertext.hex())\n+            plaintext = aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext)\n+            self.assertEqual(plain, plaintext)",
      "path": "test/functional/test_framework/bip324_cipher.py",
      "position": 163,
      "original_position": 114,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "8a35ba8bdf15be5bb5e2b36610d5499079fd2153",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Follow-up idea: it might be nice to also test that the decryption fails (i.e. returns `None` due to poly1305 tag mismatch) if a random bit in `ciphertext` or `aad` is flipped.",
      "created_at": "2023-09-01T13:28:49Z",
      "updated_at": "2023-09-01T13:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313030628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313030628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": 162,
      "original_start_line": 113,
      "start_side": "RIGHT",
      "line": 163,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313036350",
      "pull_request_review_id": 1606904477,
      "id": 1313036350,
      "node_id": "PRRC_kwDOABII585OQ1g-",
      "diff_hunk": "@@ -55,6 +57,34 @@ def chacha20_block(key, nonce, cnt):\n     # Produce byte output\n     return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n \n+class FSChaCha20:\n+    \"\"\"Rekeying wrapper stream cipher around ChaCha20.\"\"\"\n+    def __init__(self, initial_key, rekey_interval=REKEY_INTERVAL):\n+        self.key = initial_key",
      "path": "test/functional/test_framework/chacha20.py",
      "position": null,
      "original_position": 25,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "9a5f84fc5ccc3320df106cc117ba3ba8357f2732",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "small nit: not sure if it's really worth to change it, but in Python member variables and methods that shouldn't be accessed from the outside are usually prefixed with an underscore (`_`) (see e.g.: https://peps.python.org/pep-0008/#method-names-and-instance-variables). But that's just a naming convention anyway and the \"private\" usage is not enforced by the language.",
      "created_at": "2023-09-01T13:33:20Z",
      "updated_at": "2023-09-01T13:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313036350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313036350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713439",
      "pull_request_review_id": 1607879160,
      "id": 1313713439,
      "node_id": "PRRC_kwDOABII585OTa0f",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Python implementation of ChaCha20 cipher\"\"\"\n+\n+import unittest\n+\n+CHACHA20_INDICES = (\n+    (0, 4, 8, 12), (1, 5, 9, 13), (2, 6, 10, 14), (3, 7, 11, 15),\n+    (0, 5, 10, 15), (1, 6, 11, 12), (2, 7, 8, 13), (3, 4, 9, 14)\n+)\n+\n+CHACHA20_CONSTANTS = (0x61707865, 0x3320646e, 0x79622d32, 0x6b206574)\n+\n+def rotl32(v, bits):\n+    \"\"\"Rotate the 32-bit value v left by bits bits.\"\"\"\n+    bits %= 32  # Make sure the term below does not throw an exception\n+    return ((v << bits) & 0xffffffff) | (v >> (32 - bits))\n+\n+def chacha20_doubleround(s):\n+    \"\"\"Apply a ChaCha20 double round to 16-element state array s.\n+    See https://cr.yp.to/chacha/chacha-20080128.pdf and https://tools.ietf.org/html/rfc8439\n+    \"\"\"\n+    for a, b, c, d in CHACHA20_INDICES:\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rotl32(s[d] ^ s[a], 16)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rotl32(s[b] ^ s[c], 12)\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rotl32(s[d] ^ s[a], 8)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rotl32(s[b] ^ s[c], 7)\n+\n+def chacha20_block(key, nonce, cnt):\n+    \"\"\"Compute the 64-byte output of the ChaCha20 block function.\n+    Takes as input a 32-byte key, 12-byte nonce, and 32-bit integer counter.\n+    \"\"\"\n+    # Initial state.\n+    init = [0 for _ in range(16)]\n+    for i in range(4):\n+        init[i] = CHACHA20_CONSTANTS[i]\n+    for i in range(8):\n+        init[4 + i] = int.from_bytes(key[4 * i:4 * (i+1)], 'little')\n+    init[12] = cnt\n+    for i in range(3):\n+        init[13 + i] = int.from_bytes(nonce[4 * i:4 * (i+1)], 'little')\n+    # Perform 20 rounds.\n+    state = list(init)\n+    for _ in range(10):\n+        chacha20_doubleround(state)\n+    # Add initial values back into state.\n+    for i in range(16):\n+        state[i] = (state[i] + init[i]) & 0xffffffff\n+    # Produce byte output\n+    return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n+\n+\n+# Test vectors from RFC7539/8439 consisting of 32 byte key, 12 byte nonce, block counter\n+# and 64 byte output after applying `chacha20_block` function\n+CHACHA20_TESTS = [\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0x09000000, 0x4a000000], 1,\n+     \"10f1e7e4d13b5915500fdd1fa32071c4c7d1f4c733c068030422aa9ac3d46c4e\"\n+     \"d2826446079faa0914c2d705d98b02a2b5129cd1de164eb9cbd083e8a2503c4e\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0], 0,\n+     \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7\"\n+     \"da41597c5157488d7724e03fb8d84a376a43b8f41518a11cc387b669b2ee6586\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0], 1,\n+     \"9f07e7be5551387a98ba977c732d080dcb0f29a048e3656912c6533e32ee7aed\"\n+     \"29b721769ce64e43d57133b074d839d531ed1f28510afb45ace10a1f4b794d6f\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000001\", [0, 0], 1,\n+     \"3aeb5224ecf849929b9d828db1ced4dd832025e8018b8160b82284f3c949aa5a\"\n+     \"8eca00bbb4a73bdad192b5c42f73f2fd4e273644c8b36125a64addeb006c13a0\"],\n+    [\"00ff000000000000000000000000000000000000000000000000000000000000\", [0, 0], 2,\n+     \"72d54dfbf12ec44b362692df94137f328fea8da73990265ec1bbbea1ae9af0ca\"\n+     \"13b25aa26cb4a648cb9b9d1be65b2c0924a66c54d545ec1b7374f4872e99f096\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 0x200000000000000], 0,\n+     \"c2c64d378cd536374ae204b9ef933fcd1a8b2288b3dfa49672ab765b54ee27c7\"\n+     \"8a970e0e955c14f3a88e741b97c286f75f8fc299e8148362fa198a39531bed6d\"],\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0, 0x4a000000], 1,\n+     \"224f51f3401bd9e12fde276fb8631ded8c131f823d2c06e27e4fcaec9ef3cf78\"\n+     \"8a3b0aa372600a92b57974cded2b9334794cba40c63e34cdea212c4cf07d41b7\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000001\", [0, 0], 0,\n+     \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41\"\n+     \"bbe2a0b6ea7566d2a5d1e7e20d42af2c53d792b1c43fea817e9ad275ae546963\"],\n+    [\"0000000000000000000000000000000000000000000000000000000000000000\", [0, 1], 0,\n+     \"ef3fdfd6c61578fbf5cf35bd3dd33b8009631634d21e42ac33960bd138e50d32\"\n+     \"111e4caf237ee53ca8ad6426194a88545ddc497a0b466e7d6bbdb0041b2f586b\"],\n+    [\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", [0, 0x0706050403020100], 0,\n+     \"f798a189f195e66982105ffb640bb7757f579da31602fc93ec01ac56f85ac3c1\"\n+     \"34a4547b733b46413042c9440049176905d3be59ea1c53f15916155c2be8241a\"],\n+]\n+\n+\n+class TestFrameworkChacha(unittest.TestCase):\n+    def test_chacha20(self):\n+        \"\"\"ChaCha20 test vectors.\"\"\"\n+        for test_vector in CHACHA20_TESTS:\n+            hex_key, hex_nonce, counter, hex_output = test_vector",
      "path": "test/functional/test_framework/chacha20.py",
      "position": null,
      "original_position": 99,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "cb838f0d9c9b84c07b5081c783275680e48a9023",
      "in_reply_to_id": 1312997599,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oops, done.",
      "created_at": "2023-09-02T04:15:14Z",
      "updated_at": "2023-09-02T04:18:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313713439",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713473",
      "pull_request_review_id": 1607879160,
      "id": 1313713473,
      "node_id": "PRRC_kwDOABII585OTa1B",
      "diff_hunk": "@@ -27,6 +27,22 @@ def TaggedHash(tag, data):\n     ss += data\n     return hashlib.sha256(ss).digest()\n \n+# HKDF-SHA256\n+def hmac_sha256(key, data):",
      "path": "test/functional/test_framework/key.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "21f71c67895c186137cc19b30f26c57b8a8c562e",
      "in_reply_to_id": 1313004252,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> As key.py is currently containing only code related to digital signatures (according to the module description it's a \"secp256k1 elliptic curve protocols implementation\"), the HKDF would maybe be better suited in another (new?) module.\r\n\r\nmakes sense. what about keeping HKDF in the file where it's used for [initialising v2 transport](https://github.com/bitcoin/bitcoin/blob/edd0cadfaa9645c98f6e0e1c77a489afe4c279c8/test/functional/test_framework/v2_p2p.py#L162)? i'll include this commit in the original #24748 PR with the rest of that file.\r\n\r\n> Probably it generally makes sense to do a follow-up with restructuring crypto-related helpers, e.g. having an own \"test_framework/crypto\" folder would be nice on the long-term for better structuring I think, as the list of crypto-related modules has grown quite a bit.\r\n\r\nyeah! that would be great to have.\r\n",
      "created_at": "2023-09-02T04:15:47Z",
      "updated_at": "2023-09-02T04:18:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313713473",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713476",
      "pull_request_review_id": 1607879160,
      "id": 1313713476,
      "node_id": "PRRC_kwDOABII585OTa1E",
      "diff_hunk": "@@ -112,3 +161,24 @@ def test_aead(self):\n             self.assertEqual(hex_cipher, ciphertext.hex())\n             plaintext = aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext)\n             self.assertEqual(plain, plaintext)\n+\n+    def test_fschacha20poly1305aead(self):\n+        \"FSChaCha20Poly1305 AEAD test vectors.\"\n+        for test_vector in FSAEAD_TESTS:\n+            hex_plain, hex_aad, hex_key, msg_idx, hex_cipher = test_vector\n+            plain = bytes.fromhex(hex_plain)\n+            aad = bytes.fromhex(hex_aad)\n+            key = bytes.fromhex(hex_key)\n+\n+            enc_aead = FSChaCha20Poly1305(key)\n+            dec_aead = FSChaCha20Poly1305(key)\n+\n+            for _ in range(msg_idx):\n+                enc_aead.crypt(b\"\", b\"\", False)",
      "path": "test/functional/test_framework/bip324_cipher.py",
      "position": 177,
      "original_position": 94,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "7ceb9b77fec4eca6e5054b1f8166735b1dea826c",
      "in_reply_to_id": 1313018187,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-09-02T04:15:51Z",
      "updated_at": "2023-09-02T04:18:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313713476",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713506",
      "pull_request_review_id": 1607879160,
      "id": 1313713506,
      "node_id": "PRRC_kwDOABII585OTa1i",
      "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"ChaCha20 Poly1305 AEAD Construction in RFC 8439\"\"\"\n+\n+import unittest\n+\n+from .chacha20 import chacha20_block\n+from .poly1305 import Poly1305\n+\n+def aead_chacha20_poly1305_encrypt(key, nonce, aad, plaintext):\n+    \"\"\"Encrypt a plaintext using ChaCha20Poly1305.\"\"\"\n+    ret = bytearray()\n+    msg_len = len(plaintext)\n+    for i in range((msg_len + 63) // 64):\n+        now = min(64, msg_len - 64 * i)\n+        keystream = chacha20_block(key, nonce, i + 1)\n+        for j in range(now):\n+            ret.append(plaintext[j + 64 * i] ^ keystream[j])\n+    poly1305 = Poly1305(chacha20_block(key, nonce, 0)[:32])\n+    poly1305.add(aad, pad=True).add(ret, pad=True)\n+    poly1305.add(len(aad).to_bytes(8, 'little') + msg_len.to_bytes(8, 'little'))\n+    ret += poly1305.tag()\n+    return bytes(ret)\n+\n+def aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext):\n+    \"\"\"Decrypt a ChaCha20Poly1305 ciphertext.\"\"\"\n+    if len(ciphertext) < 16:\n+        return None\n+    msg_len = len(ciphertext) - 16\n+    poly1305 = Poly1305(chacha20_block(key, nonce, 0)[:32])\n+    poly1305.add(aad, pad=True)\n+    poly1305.add(ciphertext, length=msg_len, pad=True)\n+    poly1305.add(len(aad).to_bytes(8, 'little') + msg_len.to_bytes(8, 'little'))\n+    if ciphertext[-16:] != poly1305.tag():\n+        return None\n+    ret = bytearray()\n+    for i in range((msg_len + 63) // 64):\n+        now = min(64, msg_len - 64 * i)\n+        keystream = chacha20_block(key, nonce, i + 1)\n+        for j in range(now):\n+            ret.append(ciphertext[j + 64 * i] ^ keystream[j])\n+    return bytes(ret)\n+\n+\n+# Test vectors from RFC8439 consisting of plaintext, aad, 32 byte key, 12 byte nonce and ciphertext\n+AEAD_TESTS = [\n+    # RFC 8439 Example from section 2.8.2\n+    [\"4c616469657320616e642047656e746c656d656e206f662074686520636c6173\"\n+     \"73206f66202739393a204966204920636f756c64206f6666657220796f75206f\"\n+     \"6e6c79206f6e652074697020666f7220746865206675747572652c2073756e73\"\n+     \"637265656e20776f756c642062652069742e\",\n+     \"50515253c0c1c2c3c4c5c6c7\",\n+     \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\",\n+     [7, 0x4746454443424140],\n+     \"d31a8d34648e60db7b86afbc53ef7ec2a4aded51296e08fea9e2b5a736ee62d6\"\n+     \"3dbea45e8ca9671282fafb69da92728b1a71de0a9e060b2905d6a5b67ecd3b36\"\n+     \"92ddbd7f2d778b8c9803aee328091b58fab324e4fad675945585808b4831d7bc\"\n+     \"3ff4def08e4b7a9de576d26586cec64b61161ae10b594f09e26a7e902ecbd060\"\n+     \"0691\"],\n+    # RFC 8439 Test vector A.5\n+    [\"496e7465726e65742d4472616674732061726520647261667420646f63756d65\"\n+     \"6e74732076616c696420666f722061206d6178696d756d206f6620736978206d\"\n+     \"6f6e74687320616e64206d617920626520757064617465642c207265706c6163\"\n+     \"65642c206f72206f62736f6c65746564206279206f7468657220646f63756d65\"\n+     \"6e747320617420616e792074696d652e20497420697320696e617070726f7072\"\n+     \"6961746520746f2075736520496e7465726e65742d4472616674732061732072\"\n+     \"65666572656e6365206d6174657269616c206f7220746f206369746520746865\"\n+     \"6d206f74686572207468616e206173202fe2809c776f726b20696e2070726f67\"\n+     \"726573732e2fe2809d\",\n+     \"f33388860000000000004e91\",\n+     \"1c9240a5eb55d38af333888604f6b5f0473917c1402b80099dca5cbc207075c0\",\n+     [0, 0x0807060504030201],\n+     \"64a0861575861af460f062c79be643bd5e805cfd345cf389f108670ac76c8cb2\"\n+     \"4c6cfc18755d43eea09ee94e382d26b0bdb7b73c321b0100d4f03b7f355894cf\"\n+     \"332f830e710b97ce98c8a84abd0b948114ad176e008d33bd60f982b1ff37c855\"\n+     \"9797a06ef4f0ef61c186324e2b3506383606907b6a7c02b0f9f6157b53c867e4\"\n+     \"b9166c767b804d46a59b5216cde7a4e99040c5a40433225ee282a1b0a06c523e\"\n+     \"af4534d7f83fa1155b0047718cbc546a0d072b04b3564eea1b422273f548271a\"\n+     \"0bb2316053fa76991955ebd63159434ecebb4e466dae5a1073a6727627097a10\"\n+     \"49e617d91d361094fa68f0ff77987130305beaba2eda04df997b714d6c6f2c29\"\n+     \"a6ad5cb4022b02709beead9d67890cbb22392336fea1851f38\"],\n+    # Test vectors exercising aad and plaintext which are multiples of 16 bytes.\n+    [\"8d2d6a8befd9716fab35819eaac83b33269afb9f1a00fddf66095a6c0cd91951\"\n+     \"a6b7ad3db580be0674c3f0b55f618e34\",\n+     \"\",\n+     \"72ddc73f07101282bbbcf853b9012a9f9695fc5d36b303a97fd0845d0314e0c3\",\n+     [0x3432b75f, 0xb3585537eb7f4024],\n+     \"f760b8224fb2a317b1b07875092606131232a5b86ae142df5df1c846a7f6341a\"\n+     \"f2564483dd77f836be45e6230808ffe402a6f0a3e8be074b3d1f4ea8a7b09451\"],\n+    [\"\",\n+     \"36970d8a704c065de16250c18033de5a400520ac1b5842b24551e5823a3314f3\"\n+     \"946285171e04a81ebfbe3566e312e74ab80e94c7dd2ff4e10de0098a58d0f503\",\n+     \"77adda51d6730b9ad6c995658cbd49f581b2547e7c0c08fcc24ceec797461021\",\n+     [0x1f90da88, 0x75dafa3ef84471a4],\n+     \"aaae5bb81e8407c94b2ae86ae0c7efbe\"],\n+]\n+\n+\n+class TestFrameworkAEAD(unittest.TestCase):\n+    def test_aead(self):\n+        \"\"\"ChaCha20Poly1305 AEAD test vectors.\"\"\"\n+        for test_vector in AEAD_TESTS:\n+            hex_plain, hex_aad, hex_key, hex_nonce, hex_cipher = test_vector\n+            plain = bytes.fromhex(hex_plain)\n+            aad = bytes.fromhex(hex_aad)\n+            key = bytes.fromhex(hex_key)\n+            nonce = hex_nonce[0].to_bytes(4, 'little') + hex_nonce[1].to_bytes(8, 'little')\n+\n+            ciphertext = aead_chacha20_poly1305_encrypt(key, nonce, aad, plain)\n+            self.assertEqual(hex_cipher, ciphertext.hex())\n+            plaintext = aead_chacha20_poly1305_decrypt(key, nonce, aad, ciphertext)\n+            self.assertEqual(plain, plaintext)",
      "path": "test/functional/test_framework/bip324_cipher.py",
      "position": 163,
      "original_position": 114,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "8a35ba8bdf15be5bb5e2b36610d5499079fd2153",
      "in_reply_to_id": 1313030628,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can be done in a follow up if it's desirable to have more tests. ",
      "created_at": "2023-09-02T04:16:02Z",
      "updated_at": "2023-09-02T04:18:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313713506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": 162,
      "original_start_line": 113,
      "start_side": "RIGHT",
      "line": 163,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713527",
      "pull_request_review_id": 1607879160,
      "id": 1313713527,
      "node_id": "PRRC_kwDOABII585OTa13",
      "diff_hunk": "@@ -55,6 +57,34 @@ def chacha20_block(key, nonce, cnt):\n     # Produce byte output\n     return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n \n+class FSChaCha20:\n+    \"\"\"Rekeying wrapper stream cipher around ChaCha20.\"\"\"\n+    def __init__(self, initial_key, rekey_interval=REKEY_INTERVAL):\n+        self.key = initial_key",
      "path": "test/functional/test_framework/chacha20.py",
      "position": null,
      "original_position": 25,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "9a5f84fc5ccc3320df106cc117ba3ba8357f2732",
      "in_reply_to_id": 1313036350,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done.",
      "created_at": "2023-09-02T04:16:08Z",
      "updated_at": "2023-09-02T04:18:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313713527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313713527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313714417",
      "pull_request_review_id": 1607880254,
      "id": 1313714417,
      "node_id": "PRRC_kwDOABII585OTbDx",
      "diff_hunk": "@@ -55,6 +57,34 @@ def chacha20_block(key, nonce, cnt):\n     # Produce byte output\n     return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n \n+class FSChaCha20:\n+    \"\"\"Rekeying wrapper stream cipher around ChaCha20.\"\"\"\n+    def __init__(self, initial_key, rekey_interval=REKEY_INTERVAL):\n+        self._key = initial_key\n+        self.rekey_interval = rekey_interval\n+        self.block_counter = 0\n+        self.chunk_counter = 0\n+        self.keystream = b''\n+\n+    def get_keystream_bytes(self, nbytes):\n+        while len(self.keystream) < nbytes:\n+            nonce = ((0).to_bytes(4, 'little') + (self.chunk_counter // self.rekey_interval).to_bytes(8, 'little'))\n+            self.keystream += chacha20_block(self._key, nonce, self.block_counter)\n+            self.block_counter += 1\n+        ret = self.keystream[:nbytes]\n+        self.keystream = self.keystream[nbytes:]\n+        return ret\n+\n+    def crypt(self, chunk):\n+        ks = self.get_keystream_bytes(len(chunk))\n+        ret = bytes([ks[i] ^ chunk[i] for i in range(len(chunk))])\n+        if ((self.chunk_counter + 1) % self.rekey_interval) == 0:\n+            self._key = self.get_keystream_bytes(32)\n+            self.block_counter = 0\n+            self.keystream = b''",
      "path": "test/functional/test_framework/chacha20.py",
      "position": 84,
      "original_position": 46,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "4582b3ef2d85c019247ec4785b2e962328fd20b8",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line was added in `FSChaCha20` for rekey interval option and `self.keystream = b''` in the unit tests. That's the only change from [bip-0324/reference.py](https://github.com/bitcoin/bips/blob/cc177ab7bc5abcdcdf9c956ee88afd1052053328/bip-0324/reference.py).\r\n\r\nadded `self.keystream = b''` so that keystream is discarded if there is some keystream left when rekeying happens. this is only needed for `FSCHACHA20_TESTS` and not in BIP 324's usage of FSChaCha20.\r\n\r\nIn BIP 324's usage of FSChaCha20, rekeying happens after 224 messages.\r\n- so 3 bytes message length encrypted each time for 224 messages means 3 bytes * 224 = 10.5 chacha20 blocks get used.\r\n- the remaining 0.5 chach20 block (32 bytes) is used to rekey\r\n\r\nso there would be no keystream left behind and nothing to discard.",
      "created_at": "2023-09-02T04:24:31Z",
      "updated_at": "2023-09-02T04:24:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1313714417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313714417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314253965",
      "pull_request_review_id": 1608522032,
      "id": 1314253965,
      "node_id": "PRRC_kwDOABII585OVeyN",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Python implementation of Poly1305 authenticator\"\"\"\n+\n+import unittest\n+\n+class Poly1305:\n+    \"\"\"Class representing a running poly1305 computation.\"\"\"\n+    MODULUS = 2**130 - 5\n+\n+    def __init__(self, key):\n+        self.r = int.from_bytes(key[:16], 'little') & 0xffffffc0ffffffc0ffffffc0fffffff\n+        self.s = int.from_bytes(key[16:], 'little')\n+        self.acc = 0\n+\n+    def add(self, msg, length=None, pad=False):",
      "path": "test/functional/test_framework/poly1305.py",
      "position": 18,
      "original_position": 18,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "5db9e9500bd282278e6ee9e666ab7a1f3db7f3b4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about dropping the length/pad arguments, and dropping the \"Input so far must be a multiple of 16 bytes\" requirement? You can do so by buffering incoming bytes in the object until 16 are reached, and then applying the logic currently in `add`.\r\n\r\nI used this somewhat adhoc interface for the BIP324 reference code because it was less code for that purpose, but it isn't as intuitive as it could be. Perhaps if we're going to have a proper poly1305 module here, it's worth having a more generally usable one.",
      "created_at": "2023-09-03T13:15:48Z",
      "updated_at": "2023-09-03T13:29:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1314253965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314253965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314259279",
      "pull_request_review_id": 1608522032,
      "id": 1314259279,
      "node_id": "PRRC_kwDOABII585OVgFP",
      "diff_hunk": "@@ -55,6 +57,34 @@ def chacha20_block(key, nonce, cnt):\n     # Produce byte output\n     return b''.join(state[i].to_bytes(4, 'little') for i in range(16))\n \n+class FSChaCha20:\n+    \"\"\"Rekeying wrapper stream cipher around ChaCha20.\"\"\"\n+    def __init__(self, initial_key, rekey_interval=REKEY_INTERVAL):\n+        self._key = initial_key\n+        self.rekey_interval = rekey_interval\n+        self.block_counter = 0\n+        self.chunk_counter = 0\n+        self.keystream = b''\n+\n+    def get_keystream_bytes(self, nbytes):\n+        while len(self.keystream) < nbytes:\n+            nonce = ((0).to_bytes(4, 'little') + (self.chunk_counter // self.rekey_interval).to_bytes(8, 'little'))\n+            self.keystream += chacha20_block(self._key, nonce, self.block_counter)\n+            self.block_counter += 1\n+        ret = self.keystream[:nbytes]\n+        self.keystream = self.keystream[nbytes:]\n+        return ret\n+\n+    def crypt(self, chunk):\n+        ks = self.get_keystream_bytes(len(chunk))\n+        ret = bytes([ks[i] ^ chunk[i] for i in range(len(chunk))])\n+        if ((self.chunk_counter + 1) % self.rekey_interval) == 0:\n+            self._key = self.get_keystream_bytes(32)\n+            self.block_counter = 0\n+            self.keystream = b''",
      "path": "test/functional/test_framework/chacha20.py",
      "position": 84,
      "original_position": 46,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "4582b3ef2d85c019247ec4785b2e962328fd20b8",
      "in_reply_to_id": 1313714417,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense; `FSChaCha20` in the C++ code does the same.",
      "created_at": "2023-09-03T13:27:41Z",
      "updated_at": "2023-09-03T13:29:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1314259279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314259279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314259446",
      "pull_request_review_id": 1608522032,
      "id": 1314259446,
      "node_id": "PRRC_kwDOABII585OVgH2",
      "diff_hunk": "@@ -27,6 +27,22 @@ def TaggedHash(tag, data):\n     ss += data\n     return hashlib.sha256(ss).digest()\n \n+# HKDF-SHA256\n+def hmac_sha256(key, data):",
      "path": "test/functional/test_framework/key.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "a9ed414ce01495ddfa3f74dd0c94ccf76b38c6f2",
      "original_commit_id": "21f71c67895c186137cc19b30f26c57b8a8c562e",
      "in_reply_to_id": 1313004252,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I think having HKDF in either `v2_p2p.py` or in a (separate) `crypto/` module would make more sense than in `key.py.`",
      "created_at": "2023-09-03T13:29:11Z",
      "updated_at": "2023-09-03T13:29:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28374#discussion_r1314259446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314259446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28374"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    }
  ]
}