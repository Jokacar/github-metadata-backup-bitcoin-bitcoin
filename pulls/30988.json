{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988",
    "id": 2095252001,
    "node_id": "PR_kwDOABII58584wIh",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30988",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30988.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30988.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
    "number": 30988,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Split CConnman",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently `CConnman` is a mixture of:\r\n* low level socket handling, e.g. send, recv, poll, bind, listen, connect, and\r\n* higher level logic that is specific to the Bitcoin P2P protocol, e.g. V1/V2 transport, choosing which address to connect to, if we manage to connect mark the address good in `AddrMan`, maintaining the number of inbound and outbound connections, banning of peers, interacting with `PeerManager`.\r\n\r\nThis PR splits the socket handling into a new class which makes the code more modular and reusable. The aim is to (re)use that for Stratum V2 and for libevent-less RPC/HTTP server.\r\n\r\nThe socket operations are driven by the new class `SockMan` which informs the higher level via provided methods when e.g. new data arrives on the socket or a new connection is accepted. For this, `SockMan` provides some non-virtual methods to start it rolling and then it calls pure virtual methods which are implemented by the higher level (e.g. `CConnman`) on certain events, for example \"got this new data on this node's socket\".\r\n\r\nThe public interface of `SockMan` is:\r\n\r\n```cpp\r\n/**\r\n * A socket manager class which handles socket operations.\r\n * To use this class, inherit from it and implement the pure virtual methods.\r\n * Handled operations:\r\n * - binding and listening on sockets\r\n * - starting of necessary threads to process socket operations\r\n * - accepting incoming connections\r\n * - making outbound connections\r\n * - closing connections\r\n * - waiting for IO readiness on sockets and doing send/recv accordingly\r\n */\r\nclass SockMan\r\n{\r\npublic:\r\n\r\n    //\r\n    // Non-virtual functions, to be reused by children classes.\r\n    //\r\n\r\n    /**\r\n     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\r\n     * Should be called before `StartSocketsThreads()`.\r\n     * @param[in] to Where to bind.\r\n     * @param[out] errmsg Error string if an error occurs.\r\n     * @retval true Success.\r\n     * @retval false Failure, `strError` will be set.\r\n     */\r\n    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\r\n\r\n    /**\r\n     * Start the necessary threads for sockets IO.\r\n     */\r\n    void StartSocketsThreads(const Options& options);\r\n\r\n    /**\r\n     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\r\n     */\r\n    void JoinSocketsThreads();\r\n\r\n    /**\r\n     * Make an outbound connection, save the socket internally and return a newly generated node id.\r\n     * @param[in] to The address to connect to, either as CService or a host as string and port as\r\n     * an integer, if the later is used, then `proxy` must be valid.\r\n     * @param[in] is_important If true, then log failures with higher severity.\r\n     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\r\n     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\r\n     * proxy, then it will be set to true.\r\n     * @param[out] me If the connection was successful then this is set to the address on the\r\n     * local side of the socket.\r\n     * @return Newly generated node id, or std::nullopt if the operation fails.\r\n     */\r\n    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\r\n                                               bool is_important,\r\n                                               const Proxy& proxy,\r\n                                               bool& proxy_failed,\r\n                                               CService& me);\r\n\r\n    /**\r\n     * Disconnect a given peer by closing its socket and release resources occupied by it.\r\n     * @return Whether the peer existed and its socket was closed by this call.\r\n     */\r\n    bool CloseConnection(NodeId node_id);\r\n\r\n    /**\r\n     * Try to send some data to the given node.\r\n     * @param[in] node_id Identifier of the node to send to.\r\n     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\r\n     * @param[in] will_send_more Used as an optimization if the caller knows that they will\r\n     * be sending more data soon after this call.\r\n     * @param[out] errmsg If <0 is returned then this will contain a human readable message\r\n     * explaining the error.\r\n     * @retval >=0 The number of bytes actually sent.\r\n     * @retval <0 A permanent error has occurred.\r\n     */\r\n    ssize_t SendBytes(NodeId node_id,\r\n                      Span<const unsigned char> data,\r\n                      bool will_send_more,\r\n                      std::string& errmsg) const;\r\n\r\n    /**\r\n     * Close all sockets.\r\n     */\r\n    void CloseSockets();\r\n\r\n    //\r\n    // Pure virtual functions must be implemented by children classes.\r\n    //\r\n\r\n    /**\r\n     * Be notified when a new connection has been accepted.\r\n     * @param[in] node_id Id of the newly accepted connection.\r\n     * @param[in] me The address and port at our side of the connection.\r\n     * @param[in] them The address and port at the peer's side of the connection.\r\n     * @retval true The new connection was accepted at the higher level.\r\n     * @retval false The connection was refused at the higher level, so the\r\n     * associated socket and node_id should be discarded by `SockMan`.\r\n     */\r\n    virtual bool EventNewConnectionAccepted(NodeId node_id,\r\n                                            const CService& me,\r\n                                            const CService& them) = 0;\r\n\r\n    /**\r\n     * Called when the socket is ready to send data and `ShouldTryToSend()` has\r\n     * returned true. This is where the higher level code serializes its messages\r\n     * and calls `SockMan::SendBytes()`.\r\n     * @param[in] node_id Id of the node whose socket is ready to send.\r\n     * @param[out] cancel_recv Should always be set upon return and if it is true,\r\n     * then the next attempt to receive data from that node will be omitted.\r\n     */\r\n    virtual void EventReadyToSend(NodeId node_id, bool& cancel_recv) = 0;\r\n\r\n    /**\r\n     * Called when new data has been received.\r\n     * @param[in] node_id Node for which the data arrived.\r\n     * @param[in] data Data buffer.\r\n     * @param[in] n Number of bytes in `data`.\r\n     */\r\n    virtual void EventGotData(NodeId node_id, const uint8_t* data, size_t n) = 0;\r\n\r\n    /**\r\n     * Called when the remote peer has sent an EOF on the socket. This is a graceful\r\n     * close of their writing side, we can still send and they will receive, if it\r\n     * makes sense at the application level.\r\n     * @param[in] node_id Node whose socket got EOF.\r\n     */\r\n    virtual void EventGotEOF(NodeId node_id) = 0;\r\n\r\n    /**\r\n     * Called when we get an irrecoverable error trying to read from a socket.\r\n     * @param[in] node_id Node whose socket got an error.\r\n     * @param[in] errmsg Message describing the error.\r\n     */\r\n    virtual void EventGotPermanentReadError(NodeId node_id, const std::string& errmsg) = 0;\r\n\r\n    //\r\n    // Non-pure virtual functions can be overridden by children classes or left\r\n    // alone to use the default implementation from SockMan.\r\n    //\r\n\r\n    /**\r\n     * SockMan would only call EventReadyToSend() if this returns true.\r\n     * Can be used to temporary pause sends for a node.\r\n     * The implementation in SockMan always returns true.\r\n     * @param[in] node_id Node for which to confirm or cancel a call to EventReadyToSend().\r\n     */\r\n    virtual bool ShouldTryToSend(NodeId node_id) const;\r\n\r\n    /**\r\n     * SockMan would only call Recv() on a node's socket if this returns true.\r\n     * Can be used to temporary pause receives for a node.\r\n     * The implementation in SockMan always returns true.\r\n     * @param[in] node_id Node for which to confirm or cancel a receive.\r\n     */\r\n    virtual bool ShouldTryToRecv(NodeId node_id) const;\r\n\r\n    /**\r\n     * SockMan has completed the current send+recv iteration for a node.\r\n     * It will do another send+recv for this node after processing all other nodes.\r\n     * Can be used to execute periodic tasks for a given node.\r\n     * The implementation in SockMan does nothing.\r\n     * @param[in] node_id Node for which send+recv has been done.\r\n     */\r\n    virtual void EventIOLoopCompletedForNode(NodeId node_id);\r\n\r\n    /**\r\n     * SockMan has completed send+recv for all nodes.\r\n     * Can be used to execute periodic tasks for all nodes.\r\n     * The implementation in SockMan does nothing.\r\n     */\r\n    virtual void EventIOLoopCompletedForAllPeers();\r\n\r\n    /**\r\n     * Be notified of a change in the state of listening for incoming I2P connections.\r\n     * The default behavior, implemented by `SockMan`, is to ignore this event.\r\n     * @param[in] addr Our listening address.\r\n     * @param[in] success If true then the listen succeeded and we are now\r\n     * listening for incoming I2P connections at `addr`. If false then the\r\n     * call failed and now we are not listening (even if this was invoked\r\n     * before with `true`).\r\n     */\r\n    virtual void EventI2PListen(const CService& addr, bool success);\r\n};\r\n```\r\n\r\nResolves: https://github.com/bitcoin/bitcoin/issues/30694\r\n\r\n---\r\n\r\nReview hint: this PR moves some code around, so reviewers may find this helpful: `git show --color-moved --color-moved-ws=allow-indentation-change`.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-09-27T07:57:10Z",
    "updated_at": "2024-10-22T14:30:44Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "dc10fec0e36a0316f51f9253c4088abc61adc024",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:sockman",
      "ref": "sockman",
      "sha": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 245400,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-22T11:19:35Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2024-10-09T09:33:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36271,
        "stargazers_count": 78982,
        "watchers_count": 78982,
        "size": 270007,
        "default_branch": "master",
        "open_issues_count": 650,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-22T14:52:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-22T14:47:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1343,
    "deletions": 714,
    "changed_files": 18,
    "commits": 16,
    "review_comments": 21,
    "comments": 9
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiZmMxY2E5YjZiNjhjNjM1NmZmYzIzZWNmMDFlNDE3MTUyYWRlOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
      "tree": {
        "sha": "b4d5ee477b598c42b750f573da9979de4dd690fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4d5ee477b598c42b750f573da9979de4dd690fa"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b4d5ee477b598c42b750f573da9979de4dd690fa\nparent 36ad9516dbd6c0ff533251a4c3252cc24b192e73\nauthor Vasil Dimov <vd@FreeBSD.org> 1724411497 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727423344 +0200\n\nnet: reduce CAddress usage to CService or CNetAddr\n\n* `CConnman::CalculateKeyedNetGroup()` needs `CNetAddr`, not `CAddress`,\n  thus change its argument.\n\n* Both callers of `CConnman::CreateNodeFromAcceptedSocket()` create a\n  dummy `CAddress` from `CService`, so use `CService` instead.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2Y3AACgkQVN8G9ktV\ny78dIB//S8pU93HX4SIvPEERwdeZzuj6s7kWxydfqcNI4SAtkG+jSbN1Z7ihQupE\nhAxTxu0nTjWTwTeSeXlLcXhXhrmtfRu9Nj50KDHcBnVbkS2+o//NksG6A5Vd+zhR\nNt+B9QnYFFftnK/YC5GGeaFV0uD8O+G57IPBlLgn2cu+8gr/pEDnPQEKMjBCWbHU\ntsrL9Rrpy3+F95R3gfEqU9wPCJMVXPpnlFPv2nZqFXm1rfhEsDlLRI2UCIMJcrvb\n/0n0cu9y9uHk8wxvciHJ02bHi/Zy66B3SpWXysDsoMLuPnVpINxjftVgvsrhfahV\nS5OzWuGBh6b8jAWLIDM2GH0SLcPwE3cqaxSK05V0kZcy1laTNJXSKiO+FUvEdgyG\n7/rNkSrOEFaPzy7E+ij+Rd1zsw05f3li19mFe68I2DQZhS3mjfoxjsxNE3adCTmm\nVTbyBvfP0lREz2baprQPbpJpNUsSX6aItpf4Wscl9v2KZNUDA6YUmsHaKJsoKzvz\nXjv4qm/2nuD55Qz+AfHJF61uiimtaMDJr5xWHhVtZ7lqPiYLsiwcjgwRkCVeBXpN\nDjtUi42vGfV8SIMgKHA53sRLdnVFG50V18jbYjEPJmB9I8gTCmRrBzQRVWlKpD6R\nUjWtbqjVSTqhTiStnMbdyLQwCGPbEk9CnPGkVY7uJgvrzV7bd3CuU9vi/9e6MPAv\nY6QwSVzD82VSplW77xD1J/CSxrSvA8IQbP2tNfwCvEclsQLbdR88Gb5qhbCXWFap\nGalrp9Xrys4ICxlEZ6u8bqgTz0kqReGjmFuViUUQZIOukmQIQdiMrFNHTkoeB511\n5MEYN3tAINJR7XzIqdQdBolz2hqYxM7kMDDPw3KNXe3drfcZMJlgQgo96YezweEl\np50UUsr8tUc/HQRbLuFtxyjUFHmsxi7pT8nUURK21aZ/kH80MIm04mAAYYQTrr+Z\nVfebWqav/6oBkmgHIniIRGJwEjGvXGVgnCUcKW0u7KicOEW1zJuyRb2mEEyKz94C\nkFfeu6rK+aZW5PdyPLnt308Zm8FSi1gvhHqvPrUsk44xzZAGokqn/sYEz9L/a4ZS\nBbBqoMbuEpR7WaXSWzO3XLXDGk4xa4WXsxwad+BTRAkDHEyiENfAiGdH1KY+Q1O3\noVFTL2UJaGRV6a9u4EC4NL6Q2pJGuWqv2JwKsheA5lY3mYWtFGuMq39pXH2/Fnui\ndvt4ZdtozJc4q7EqSmgwf7SdK49ng0sqQTL3rzAfUhdNB4mkyScynREIZpK3y+pE\nxY5fNqChULZYX7doZcRfkWZW/ngBOTuUFCfyBYfbtLM2vJHvXfy55sWF/ycjNM2w\neZU+HVLhBayM8kt3G7qkXfAe4oeyYg==\n=TGJm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36ad9516dbd6c0ff533251a4c3252cc24b192e73",
          "sha": "36ad9516dbd6c0ff533251a4c3252cc24b192e73",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/36ad9516dbd6c0ff533251a4c3252cc24b192e73"
        }
      ],
      "message": "net: reduce CAddress usage to CService or CNetAddr\n\n* `CConnman::CalculateKeyedNetGroup()` needs `CNetAddr`, not `CAddress`,\n  thus change its argument.\n\n* Both callers of `CConnman::CreateNodeFromAcceptedSocket()` create a\n  dummy `CAddress` from `CService`, so use `CService` instead.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T07:49:04Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-23T11:11:37Z"
      },
      "sha": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95"
    },
    {
      "event": "commented",
      "id": 2378648531,
      "node_id": "IC_kwDOABII586Nx0vT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2378648531",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T07:57:13Z",
      "updated_at": "2024-10-22T14:30:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30988).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2373476515) |\n| Concept ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2336026243) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31072](https://github.com/bitcoin/bitcoin/pull/31072) (refactor: Clean up messy strformat and bilingual_str usages by ryanofsky)\n* [#31042](https://github.com/bitcoin/bitcoin/pull/31042) (build: Rename `PACKAGE_*` variables to `CLIENT_*` by hebasto)\n* [#31022](https://github.com/bitcoin/bitcoin/pull/31022) (test: Add mockable steady clock, tests for PCP and NATPMP implementations by laanwj)\n* [#31014](https://github.com/bitcoin/bitcoin/pull/31014) (net: Use GetAdaptersAddresses to get local addresses on Windows by laanwj)\n* [#30381](https://github.com/bitcoin/bitcoin/pull/30381) ([WIP] net: return result from addnode RPC by willcl-ark)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#28584](https://github.com/bitcoin/bitcoin/pull/28584) (Fuzz: extend CConnman tests by vasild)\n* [#28521](https://github.com/bitcoin/bitcoin/pull/28521) (net, net_processing: additional and consistent disconnect logging by Sjors)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2378648531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 14428004914,
      "node_id": "LE_lADOABII586YIJemzwAAAANb-eIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14428004914",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T09:09:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2379079961,
      "node_id": "IC_kwDOABII586NzeEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379079961",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:41:28Z",
      "updated_at": "2024-09-27T11:41:48Z",
      "author_association": "MEMBER",
      "body": "Nice! I'll try to use this for `Sv2Connman` in https://github.com/Sjors/bitcoin/pull/50 and will let you know if anything is missing.\r\n\r\nCan you put `sockman.h` in `libbitcoin_common` instead of `libbitcoin_node`? For the Template Provider I'm trying to prevent a circular dependency on the node. This should do the trick: https://github.com/bitcoin/bitcoin/commit/4dd51b2924860bf10466da080ea4ff7bed1a3e3f",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379079961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "reviewed",
      "id": 2333138089,
      "node_id": "PRR_kwDOABII586LENyp",
      "url": null,
      "actor": null,
      "commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2333138089",
      "submitted_at": "2024-09-27T11:51:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxYzg3ZGRiM2Q3YTE4ZDJjMGZhN2VjY2ZiZGU1N2U5ZDZlODk4YzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "tree": {
        "sha": "29c8566d603d75b6902055bcc1da0893eb2d5b07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29c8566d603d75b6902055bcc1da0893eb2d5b07"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 29c8566d603d75b6902055bcc1da0893eb2d5b07\nparent 1bfc1ca9b6b68c6356ffc23ecf01e417152ade95\nauthor Vasil Dimov <vd@FreeBSD.org> 1724420200 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449353 +0200\n\nnet: split CConnman::BindListenPort() off CConnman\n\nIntroduce a new low-level socket managing class `SockMan`\nand move the `CConnman::BindListenPort()` method to it.\n\nAlso, separate the listening socket from the permissions -\nthey were coupled in `struct ListenSocket`, but the socket\nis protocol agnostic, whereas the permissions are specific\nto the application of the Bitcoin P2P protocol.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yQwACgkQVN8G9ktV\ny78xhh/+M3j5p727Oiglc/FPEpL8hW4R9K79weWM6XKc/UbHBw/4+bw+mecBP8u5\nTBKj1jp0+zD9WarZLrNdy8AKCylOTMvUUciZ/cd6yv7jqq5+Y9hdSJkB40p8S+Zx\nzG+IUtL55ei3JIXXG5hzwkEw819BTGGsdgbaDK+UcAM/4o9cApfm3TrNIbycjXbS\nXTER4xhtpbQbtsR1BJjQNp4VEIf3ZVSVoWXaMX2ez+kDZEurMB4VZYQv4TCVcphw\nBw8T/xkpEWE4Lx7uLCCHbvjpbVOyaFgYOEtQ7KI5znfO9Lme3C2fFl1wGKAZnbve\nrygWGrdusACzcWMom6daJPiO3Ol780x+7R8tsAY37r37d1Egwym3rndT2EVdcOUt\nUAdTA5D473XeWQKTkYyjXhE8QyO1M5lXbX2G7NQR05aiKUtu+EMjz5BfEc8xxbfD\nkfYuKD6RH2VHlnMzyUovIo9Vyzvb6WXjvKWDaV4ARS8x3U/EtKXNToDzIMrOMTLU\npELoGBTwl8a/px1Tcf4eDa28ry/gWy+72SEn9+MT08+4hDMfk+tcjOKFpQptUSGT\n+kwMwY+O3DV9Ol00PXpyX3kUDayKd47CNPI+Ev8y25yghT5RprXh1DgODu/7Fxg0\nLkgKGYdQi9BUBhPuYuBK8txJd9sMOxXLoxWnQkPnbsSgr93jyKz7dztnoYgMC5nR\n/xodCv/JnWQbloy4STvBvC/ptNjPhpKN61FOjBsLAAo27MgzgtZHFgyjTys5WpYX\nABZfM+RfStbG9bLV3Ev49pHuFXHTSyXGfLnLyUqY2GDCd5ZFaLGcAGp3D+tZT+vt\nV+XmfmPSRbl1dN1ZRRpF9HRMj9SGz4kJi9I9PVF3V5QWb66Tbnj6K9ixAs/Rxxor\nTxFOyql/bKpoYZUxPtIgs35/mIAmMNnFIHRI2jdc/F79leKh6cTN/xZJ/I7ikVw6\nKBinvYgH1Rg1PzvFbNivNt8vJLdl8qgzTTlsfgi1SH+SiXANQGuuZUbMD+bQdV0+\nPgO6fJYEvsWklClhjGh3ZyO85evzE7MP/RQhf2y3XgihpB9dCvMlKA2uSn1mKEMR\n3KqOoXvgX04sIpTLWdyY3NttIJ6K7jbT0rvnGNaeVRuXV8XRo41GEQFTNecaD7N1\ny96Ehsa4X4sp8Ql42rksZvf64bWH3vWWoZgXX6JxdzAQoMmB7eYVXlDg9XQ+TMVS\n7odaHk+l+hLFgUwzmgS1SrsPWrixuMu85a7iiJxv0uEitHHTcB6cKwnWlvgo0Dz1\nCXjztxwQPQc0umm95maeWcZaP2VwdZUBOgjKU8rwh1B79MutMHdLobARIWxtcbC+\n2aV/eUaXulgsRQmkmsA6ndUGBHFCWQ==\n=a3AM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
          "sha": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1bfc1ca9b6b68c6356ffc23ecf01e417152ade95"
        }
      ],
      "message": "net: split CConnman::BindListenPort() off CConnman\n\nIntroduce a new low-level socket managing class `SockMan`\nand move the `CConnman::BindListenPort()` method to it.\n\nAlso, separate the listening socket from the permissions -\nthey were coupled in `struct ListenSocket`, but the socket\nis protocol agnostic, whereas the permissions are specific\nto the application of the Bitcoin P2P protocol.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:33Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-23T13:36:40Z"
      },
      "sha": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1MzYyYjczZWNlZjUzYmJmYjJlYzUxNWJkYWU5OWU1ZmQ5M2ExYjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1",
      "tree": {
        "sha": "6acca94b8e3fc1c8def6adb8d8fc22d57bb95b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6acca94b8e3fc1c8def6adb8d8fc22d57bb95b72"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6acca94b8e3fc1c8def6adb8d8fc22d57bb95b72\nparent 41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2\nauthor Vasil Dimov <vd@FreeBSD.org> 1726578346 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449357 +0200\n\nstyle: modernize the style of SockMan::BindListenPort()\n\nIt was copied verbatim from `CConnman::BindListenPort()` in the previous\ncommit. Modernize its variables and style and log the error messages\nfrom the caller.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yQ0ACgkQVN8G9ktV\ny7+EtyAAov97vPTj2Rf7ffkqZe9APeYxej3CIExS05Xyd4vf3BVlB/5bB5xMEUfg\nAOD8rmhaLFOr71hx609ooINtZhAnDPGPVpj2vQ82Kf4wclJuR/ypRO874z8vU61M\nmqUFoAL088clF1/6Whq/S+iw0F9gu/rPIJpRF+HLjN8TxUQ4G0sN8a5BluoGmFUD\nBwFzv4bORj7soUZYoun2EwEhbEfFQeSmrazBoTVm9CGy6oquc4GId9feARzFcxwG\n7TLfGkqk0MX3Lx3fMFdEirqYzssL1JBv54opruk/aUG022h5B1xrOmBy+SY1vNd2\nqMVjEduY3Lc9f7NgsBsK5Mc7Joz58vFoyoYs/OHV4KAuFzVABXjiLHHbdCAc+S7N\nrHJ3HrCYqykgMo0VUt0/MSPQ7PRJsy49l325sajneya2ddySK0jQq3yfpSuqUhR2\n/rS2dtXovYOqpvTyJHaEz2DjYJIRg2rBNY7wn6h5/Kd8tpTlqh+w30wb8SCe21hS\nfEssLO7vjP44QKbYWmbR6A5i/e1QnWjg1vKs7bzfCPuWpq2qMkQodKgIm909+mme\nyOitjcl/hZFeNQROjh8N6SbmtQWdqodoWhQ7+ZE47Bx+WieegXPpBa4VEJq6rF+m\nliS2QUdCwHOkvnyP9W87sChK39PQ2P9ogBdtWxFXe9KVOzvEKq1VDvKnRWLezo54\nLldZCw0QCIIQvAK902Wj2I1jnGDEmeYfLFfpCUfM0t+m1yphN4QjusOOUM9C2fBD\nWamYizlWqv2aP8buNF3+8BITMOI4uOjcwsuJ4yp2EQngTHjxtHubNAOfJ0wpg9ez\n5N/NvjMc8V30q/6grhMAF1obcoWe04v9dkj+Fqv+HscGiMM/IjfNfy0/KGC9eLTB\nwxp6rYo7Y6MeDndxyWzjcIL9xg59g+5p1DBqN63knrLkVu40OXeWrTaKyG1DpS9Q\noIfgzb01HEEE5YeCt6wtCKt97J5XeS/Ol8eLG/mxa5+DUpDAUWdLrPh3mDkf/XtL\nMozDz+osKcJEEffbVxg2KIZixvzWtSh2zogV8cBxKEUSE2dPNGjwSyu6kcQlKoN7\nWVrDlc+5HUkXoVWDsaPrj9l7KSjMb1NPNz/2ImiADtuUP/R1dA6Ks2HKkgS6dRkz\nIB4HPkW94MbWzU2W+e8ULSxd8JT9kEcG7iFl6gFM63s7OjZZP8Ec6PZTDaImdVnj\nAjy3dBHiGpxWzpvr7uhGgqnddKRg8ff2W4UlRzRS/3t8jznBSlwSmCXWDtOEVK7X\nuyz1XhpAbnga5G1TEkZKDdil/c8MDieCsVWNd7B0ZeSvxrPbOdfLvtNJjdK7NDe+\n/Epjr3nH3O6b2tjHDCsniI76br51Gg==\n=vxB7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
          "sha": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2"
        }
      ],
      "message": "style: modernize the style of SockMan::BindListenPort()\n\nIt was copied verbatim from `CConnman::BindListenPort()` in the previous\ncommit. Modernize its variables and style and log the error messages\nfrom the caller.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:37Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-17T13:05:46Z"
      },
      "sha": "b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwODM5OGNiZTg3MDU1MWZjMWMwMTllNDMwNWZmZDQ1YjAwOThhYWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/708398cbe870551fc1c019e4305ffd45b0098aab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/708398cbe870551fc1c019e4305ffd45b0098aab",
      "tree": {
        "sha": "6435622ca937e12e49c98405163b1b9987c7713e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6435622ca937e12e49c98405163b1b9987c7713e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6435622ca937e12e49c98405163b1b9987c7713e\nparent b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1\nauthor Vasil Dimov <vd@FreeBSD.org> 1724670893 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449357 +0200\n\nnet: split CConnman::AcceptConnection() off CConnman\n\nMove the `CConnman::AcceptConnection()` method to `SockMan` and split\nparts of it:\n* the flip-to-CJDNS part: to just after the `AcceptConnection()` call\n* the permissions part: at the start of `CreateNodeFromAcceptedSocket()`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yQ4ACgkQVN8G9ktV\ny79W6yAAk0Jul0qsSa8IP2FE2lTAh1m9XaXOule7aGEErTMI+FkMwOXCYqY/yRix\nrA8wnOQeOqzHzSuGjlmrtchtGnkXIayPYVE2lWIcIan/CN//nm5ISD0Qw4cgYC3m\n/qmIkhH1XugfEJzUIgrt8vYZwbMACnrR1mWyySLycXrkvzJddX7rMBh1KHFv3xEq\njZv7YuPrpdjnRmrbmYbPQD1v2Wz47Nh9WbOqzL+HG5iSu3w7tXqPOg7/+ulK1CuE\n69Abn2IQ93kre38nmPfwoflWh8FopqluafsnI1DJRmoCEY+Wppy9cfFodr5X4mcu\n2e1WapXm86oQxHnwCRCtf5idOnkOs5xjK7H73qyQVgixMBlBTP7rxRhehmHsFPbj\nx8w8XkZaUGlTu0qIgPiCx9MhmvO4FHOg/6pq76w9tEtc5GMfLmO8ju7ab8dDFox6\nx37mu2/zOK9x7jxLe1agF6c9kmzsc337d7gFS0Cy68BhEDGSuUhgUw+qrLsToqeO\nrj6H5gaQEiM+hZSbAO4hakmTXoj9DrJXCGRnmCU+/LsZ0g5CBC0aJbHoHNGT3k7A\ndrTNuo7sNXW6y+ID9wnION+qyOiynIv+zYJ76YwHiCilwfRujcjt/ujg+qujzxP3\nof/4hK8LjKzWbzgXuspjJCSEilFm1k+5bCbGMMVVeGTPMgOAMYqQYbaP4J5G2dq+\nID3iUwd3n6gbc8QqO+h9x3ryrkN1jI8cydejT6cH1BdOV48gVnf2BqwEC6zKReAa\nhYXJRQpHRJ93HYgDaJflBPEiCh93hI5sNHzlELAMJqu4FO43iEf6iLqjMdphI0ru\nxMnoos30NAShXdQxLICYUW83H0BZb9scr81IjuJmR7XtIeC1iW0PNx3+giJOayGJ\nnQjQ95HXNw22hl5q2XjohWACxaNgtD223R5JyfvvcTrtxmmByld5yYOU1NTr7Yli\nNqCzX2rf+m0OCokEOJy8nfb1230MB6br4w9+hOPbvKgBXg4oovpt1jwje+xOpsCN\nl8tuPQe5484KWqYE6eN6ZNeFN8unXh/DCvV9rcSj6jHPFw7PBpxwl/h0tIQ6bILy\nU25lteMvdDm/OL108PAJQbaMHL/vxgbKEnMh9H5G1GjnSZCj7jx+qnr0qTcRL05h\nmngnHnw8xyKpMAAHi32na94Bf1e+/9lY7U4qCuumzYX6CUYZMMMR36VRPC1H3lfr\nvdHDGkuAwwt4XV7g69ws5clXgRWBRg0jFijGPTtASNrmbwFm5k7MH6ioh31XSNsA\ntsJaA2APp1RKl+lsIIa44OQMCy6tQJTCoha+VQImJL2lXnmfmrypaSKKLPIMOv6A\nL1weJPtAfRaX0RibvW9LkOqcT8FZ4A==\n=8f1E\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1",
          "sha": "b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5362b73ecef53bbfb2ec515bdae99e5fd93a1b1"
        }
      ],
      "message": "net: split CConnman::AcceptConnection() off CConnman\n\nMove the `CConnman::AcceptConnection()` method to `SockMan` and split\nparts of it:\n* the flip-to-CJDNS part: to just after the `AcceptConnection()` call\n* the permissions part: at the start of `CreateNodeFromAcceptedSocket()`",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:37Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-26T11:14:53Z"
      },
      "sha": "708398cbe870551fc1c019e4305ffd45b0098aab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzOThhOGEwMTc3NmNkNTg3YjM5MGUzZmViNTJhZTNmZTZlM2ZhNmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0398a8a01776cd587b390e3feb52ae3fe6e3fa6e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0398a8a01776cd587b390e3feb52ae3fe6e3fa6e",
      "tree": {
        "sha": "57bb55566121cf0091b1004db832fc6949be036c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57bb55566121cf0091b1004db832fc6949be036c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 57bb55566121cf0091b1004db832fc6949be036c\nparent 708398cbe870551fc1c019e4305ffd45b0098aab\nauthor Vasil Dimov <vd@FreeBSD.org> 1726586947 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449358 +0200\n\nstyle: modernize the style of SockMan::AcceptConnection()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yQ4ACgkQVN8G9ktV\ny7+ariAAoLPUL44oemfFm8Ok8poA5sEB0LPgL2LBaQr4vC3GHSAHrEBq9eI9IFUi\nyeuslu/RvPBWZ+Bla/gWefwAwPKNBIsftqsxzDnZ/NDOBwk0Y8azMs+FktTbJEzy\nX2rKJfnvyc1tM2jDC8EsrGTpSh0i8mBnmC+yplG0i/qzoRbUgdwtuMb4JirU8vBa\nYk/GV1qOQLY7d0gojSZA9wBtcsjnH+dSiHWiMFYfsYV9BRSdDCcRvVWarQOBq9aW\nJ483UB//gvAeUgReKE/sKgpqp89yBM8u+7XIBrMWDt1CH5khuXcgcNB5I9A+ION/\nctsI5yQVbg4ygxkz0S6MIyEc6RVAPMz3WG4FAJjytoZXUqqbcndMr8XYP0Y6970q\nI6Zkn8fzvjZNm7K6SL6TK0/Y9o7QiO5UPD9kKrFf0cdswUkvMbBXl9aGdTUXeS96\nfebmJGWv2lVADyO7Rtf2Lh+tDoHj+o/uYw4FXr+41cRIV5GHbnnW+j0l56ylyopZ\n9DI0UOP3ZCp3LLRnwn1cFE7JbX5bWBTxEGvOBGB78gm4CQ/S8H6WkWJ+ZJEDqzzG\nb2pBkok7prAtMtI77EWcCAflBX4CgATYz1D8SyssFZZyDpAIBd3O1j82oc4tpQrv\n8vA/twAYkWHHzH47jKaUQepE3bs1EV8mr7fRfwmHJLqGJmLSxjKlOr96MWYRd0MX\nImL1TiR3/OwA8CybHkwlbI3PlBdLKEC7oFhnqQ1zU2YreGYZxl6SD4r7B45GQdcK\nhD1jBm6rgsC3bFK3q8V8IE0Tk7rtHji8Kc2oZoXrhju/lD+PP2UP+ehnxK9jzB3r\n5sewfpwbvEkWRDOgOCZnrE9tYKO8oea5qWTQzZ47Ch3K6MZkKgSb0iZjbtqeiVk7\nYt6gQhEFew2i2bThCE/yHKR8g338sl5I7tZKHpAm1CgtdcbqCP9NC2N5ziJmfbyl\n/LoXt3pg+u30pTozFBOS7/578pPT58iIeH5l89DYc6Ayc/WW+46vH+JuX1d4Rteu\n5BRVCC/ldwTH6lijetWrVhmR0dQp+1rCXYBjvjnSo4kLmlfwdzCbGCKNVQBeRu32\nw+otcVMSx/Gnfro5Iz/hMbfTSAwI+9dTOobcrSz96R8AMLWCCld+JhFK/zZJAMq5\nVpkg6moPA5XcnRRYsd2ZeqizR20MREPI5P4kmXeM1EWj3shKJ6DVL0BwFwyhz5jZ\n0vdrLNV8YrL+JNiFVkqqKZ8rjuEW4rtYXm775HOfC5BIIHXQNzppwHT5uOZXSHkg\nY0kgp/uGf0admq9jftBWXiTeQCTVd4o7wmf2kBfNZ5jHDDQcXqCnwv//GjmBoTEu\ninXYpvHxlvm3rvcgFN786yUYdSTFPg==\n=UgFO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/708398cbe870551fc1c019e4305ffd45b0098aab",
          "sha": "708398cbe870551fc1c019e4305ffd45b0098aab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/708398cbe870551fc1c019e4305ffd45b0098aab"
        }
      ],
      "message": "style: modernize the style of SockMan::AcceptConnection()",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-17T15:29:07Z"
      },
      "sha": "0398a8a01776cd587b390e3feb52ae3fe6e3fa6e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkNDkyMGY2MzA0MTdjZWVlZTFjNzkzMDRmYWFjNjgwMzc5NWNkNjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d4920f630417ceeee1c79304faac6803795cd64",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d4920f630417ceeee1c79304faac6803795cd64",
      "tree": {
        "sha": "8d307eb0cb72f50ac8b9b3eccc7abf5d7e4c1d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d307eb0cb72f50ac8b9b3eccc7abf5d7e4c1d25"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8d307eb0cb72f50ac8b9b3eccc7abf5d7e4c1d25\nparent 0398a8a01776cd587b390e3feb52ae3fe6e3fa6e\nauthor Vasil Dimov <vd@FreeBSD.org> 1724750724 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449358 +0200\n\nnet: move the generation of ids for new nodes from CConnman to SockMan\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yQ8ACgkQVN8G9ktV\ny79dOSAAjJAnu0+noRhWs3wNTqDjzk816ZrMo0v5MBJrpixxDwSQa6dPPKT1iO5Q\nQjiriHeZ2V+To0BBTZWLzTiTZES4SNWcFw5JomHSAxOV7H1gUGNtpwA0cpAtdUu8\n9uyu7a/2HQSuz358ZtunSlo55akISd+9Zo0xgCTkNPm4jHGxVUZz4S2C4R8pxNJT\nUYn3Q3ArUu+/A+VR44FtnY7A9UKIfWLe67/MiOzIa+OZ1RmW9KyL02i6wOITTfGw\nh1X4NPk0e9XvTULq10HIN15E7xjB7MOtbj4sF8/JOuhDFJFyoPeJMxUjqGXGNtma\nlxhBzCQgiz+Wn2iK42SI7nP9dPZMc2Qw5k4dI1lIGN47Qm8nBvysarueVFt2EZco\nALkAuAtBs4LpxTlPqtpFtV2JDTq+J7V7IL92HgtnWJiX4QggOT5cgyzQmFG3TZlM\nxHbBke4KfBr4ysWSLOspf8/YFLkclznvl1miV0FlBsH1ofi4LFn7KHtvQfxfkDAJ\nYo0f3eKgdF6DI3I4f0/eVzS+z5YV9n/7PN0fheD2mv4XfxCMr+Iu7eQySdRdFkHU\nMfpYOznyBoQoMzMCZ1+gRpALJttV1QzzhTCMILMnJjLlme5KKgBXXKrANuqtG0OF\nshsR8W3nDGqxR/EyACOqrvjWBnSQk5UIe8Z9DafYM9xLgDnEOj06BOIW0nxQ0S0o\nvsrQkS+kcu0LZkBNcUDfhOe4gHP9iZpPQ7V+aGaSbuU/HYpKZkhcClkSKBoKyAgy\nHnFiMR1mq8vga1Mfs441g3NgWJgo8J5ssUNngH/TC2I2JbzH3sgPhc3wVZWqnHnG\nl6ec36zeVNbSl9bClNzR6mvrBLvrcLUDHbthZQhVNskMzP5BojRo9516HZSfAZq5\nmC2cOHzud4GNWHGFXz7PEuxTGseAzFV6KCxmfpmP3kte6tZMaN8Z6Rg2cJTmZMtO\nciqgEstPeV9DX2BVoFIunXBeQkt04Z++wU9xdOWPNDCoWdV1+4tVhC0VnfXYKU7a\nAg8TXUR9pxzTGDZa3cE72IT55iTd4WxA6ioR8TxiUYJs7ToyfBQ5O2QLpQUESNqu\nfx9Oa6XRCFA8H8MAsyv69gtq/4/KQelY/ZtNC91CxXcD14wKiht0e2o1iDZ3ZEKp\n5lmh7eHOxGYEhLN5EbRPTQUhbJLfeS3mWWnvl5WLiEwezXw4QA6x4bpAfTOPiB9K\ni2udjZDQbM/wgRvGjaE63kMQmMmuS+WR09mCIEiEcrYt4xP+bSO0HQ6g2+GbqPyc\nL4XmqdZRaQ7zAe+SR2ht2rFb7ARV2Spy44OieaPQ3DCWQWCx/VOifyoArRzZmbFN\ndr8OCK1XWY/y2gqEgpluQPJ9PDRe1g==\n=Dx1M\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0398a8a01776cd587b390e3feb52ae3fe6e3fa6e",
          "sha": "0398a8a01776cd587b390e3feb52ae3fe6e3fa6e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0398a8a01776cd587b390e3feb52ae3fe6e3fa6e"
        }
      ],
      "message": "net: move the generation of ids for new nodes from CConnman to SockMan",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T09:25:24Z"
      },
      "sha": "5d4920f630417ceeee1c79304faac6803795cd64"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4OTgyNzc4NWI2ZDMxOTAwOGRjYjBmOWQxZGM3ZjcyYTZhMDc0MzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/189827785b6d319008dcb0f9d1dc7f72a6a07434",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/189827785b6d319008dcb0f9d1dc7f72a6a07434",
      "tree": {
        "sha": "92c9e4ad0134ef1395043ccc5cd9f449254f5811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92c9e4ad0134ef1395043ccc5cd9f449254f5811"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 92c9e4ad0134ef1395043ccc5cd9f449254f5811\nparent 5d4920f630417ceeee1c79304faac6803795cd64\nauthor Vasil Dimov <vd@FreeBSD.org> 1724767895 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449359 +0200\n\nnet: move CConnman-specific parts away from ThreadI2PAcceptIncoming()\n\nCConnman-specific or in other words, Bitcoin P2P specific. Now\nthe `ThreadI2PAcceptIncoming()` method is protocol agnostic and\ncan be moved to `SockMan`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRAACgkQVN8G9ktV\ny7+7tx//Q80e/QPdk3b8zrddMj7cl+K3owPqxvCoGG6kctM2GOQMwbcZQfwoPzDR\nFmKax/SPtYrtbjjflyHUEsJTCecA5ouWADd8g9aVowQ1hTSE56MYjmWVlUOPYX2U\nU3al/DakTxnHe9csHLP2HOfHfufhQBCyKY0JOM5woVbUtIc/JBoxrQ9NEIxf+Axk\n/mUEoRy/zkNX2m61rLcMl6Ht2uOBpgK/2KieSgeX7Vf1l6lH3jU+zKOqB/CS4dR8\nrR4dksPXF0d75mQYM3c8HOr4pODFBsCaPtDZJDQW8PO2OPMpwO7cTyln0PuHRye2\njC8dIyAB53gj2P+ZAZP7pQ3lLEnzR+mpg1eK4y0fPA4IaXO7dxn1VV8SOwSxkm/1\n03KI1hqi/B1nZ7JyXTNxHGtmeUBbyiEHMT0rmetm9rJ1LcevrlACqQoNCfuo6CQb\nKO/62x1rE8h16jkV3lFO/LaShTJ8CthM+tf5O8P6E3W64pFAURqXJdsfSz7JB9B6\nUh3luRJCK4fBlHeznks/NyFikcHeSunWRl6jxft3UGHC5adH4WTHekak9X/TA+5L\nnrM2X/ABMyg6oY/MJ+/RbMVCZi7o2DuAVyhqXIyXizQmEuCOYN46ZQrcFPP0yHXi\nsQudaNf4Exqnf6frljx1ThrMhx73yiVRq+8Y5JbbrhxdYWqKB7Z72c3CxInsSPML\nk2VKbJMGi+RJ6utzdQcJcl4tiqCcH1GBkcExIHR/0g2HgIvjBeir+aHLcIqj0lKg\npAXKwNIn7L+sk6LWqS4frMltPoANrgMgr/peu4SPhe0tH8EW8nAK4LTo2EszD/On\n+iqb3jY4eLeb4LCQaT7VOOYIWLHoIT2VJhtlHGlsZkccrG8EEtJC1ceooE8dUDRQ\njGeX+l50FFni4L5vGmgO+cBKorGBztGtv+H533nhrap3u8RHdqC0CksPZEMI7kfD\njAWGBtw7g2ry2eMax7t07pLB/Yj6KEXZFzChDWe0UGhNutNk0oxn9hmJkJDCUf+T\nadjNQlflsUx7u6Iq+JVTH7+A2/ae+NMvwm9GHRda3l1HdGZ2ANcwQVLDD9gPrSYl\nrktEeGbs1kKU6iKt6ugenU1gw3MJvZNdQ4QfgAKzZIBlmmVquySjsImkqVg/NYG2\n6n7xjiksUzy+0+qgeaipmS/jC3RTXhpzEqPl2jAsmuAuHw+ciefqSuYKIDrl39L/\nimNpaaI3/2k7x5urqYFLL+1xhMQOYeiPviEMzRqOgY7CJtIxPi0MJ0KMCiOvBfKr\nHkpr4HNXAPbD7X2BSyt+LDe6i/HP2cVr7t/287wYU763gzsuKM1UMoUXOZ4fXJvp\nLoaQIrKtrN4jgJwUIwJC4hoRP7XV6Q==\n=+goe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d4920f630417ceeee1c79304faac6803795cd64",
          "sha": "5d4920f630417ceeee1c79304faac6803795cd64",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d4920f630417ceeee1c79304faac6803795cd64"
        }
      ],
      "message": "net: move CConnman-specific parts away from ThreadI2PAcceptIncoming()\n\nCConnman-specific or in other words, Bitcoin P2P specific. Now\nthe `ThreadI2PAcceptIncoming()` method is protocol agnostic and\ncan be moved to `SockMan`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T14:11:35Z"
      },
      "sha": "189827785b6d319008dcb0f9d1dc7f72a6a07434"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI5NGY5ZDMzOGZkMGQzYjQ3YTRlYTYxNjVjZTljZGU0OGYzYjE5YmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "tree": {
        "sha": "8388a1f8000ad818ebd718c550b6cea542b717e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8388a1f8000ad818ebd718c550b6cea542b717e6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8388a1f8000ad818ebd718c550b6cea542b717e6\nparent 189827785b6d319008dcb0f9d1dc7f72a6a07434\nauthor Vasil Dimov <vd@FreeBSD.org> 1724768611 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449360 +0200\n\nnet: move I2P-accept-incoming code from CConnman to SockMan\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRAACgkQVN8G9ktV\ny7+4/R//bXS5DhJM+6BTtmJ71zVSvi3ZY8GrRjpmpZo4eF6Y2MYeR//oGtvp0A7E\nuML8HFtwEebxOfnPVl5SRhnqzJb+FlE61UEkOT6to4NYLFLki4w6DXYyhquPC47J\nnPdG+M05cHhp8Cbe1fUTA49xnjQjrCNape84xq6KyG7NvF+wSRxoxE0jRwvE75sb\nVgUeOp4JOzLKkO0sTvl3Z6wSqNHnFSZxXi9c7pyREtKr3dBjD4zsmEtTmYgI2wry\n5tctL6bjDH3H2T5fsPGMscEAruZXWimE8+qo3bbmJS9tV2wMhTfUQ5xsryB5Ng9m\nOkW8aklIrv4UDAMUX+Klp2GSG65BEMnMhBiVK0IXmyl3KsQgpTmH5A6bmCJ05u9m\nv31RgNqzHnV2QF3kuSwDy78fWNsZwqxnbmZ6izHArc04qJtiO8XFKnPbF3ZqE0Ya\nL8i5BnWEns/TCp4I28oK+q/+dKTn7+BU9EMJjMhYCKDvmFFMYRzSyDmSz2eYUCJz\nGzHAQo3Z9t6KNAUB1KVfdPAKZjqA8+EIxI1y45d4qeW8qGOa/wWYMFQ0PtqkOiVM\nHq1r6V2Yq4Shz3PBVTUxR16fWH7B2pzzKq4Vx1Tcfs85AVA5qjITcLfJCyrL6S3p\nZfWoEAv/60htp9OBpqkG3Xf6eJ3tL+osfEeMrOokAJFhLBEZhsfo5i8xesoU4Kjt\nTgPvhnCqOwbjqI2YbnznYMKnenQsAx0SnQV0pEdlvdf1vhc4MZzBMYyGjqiCys/S\nAL/p632NwKbcISp+ZeMy/rjbUWRSl6MWe/beKCb/9Mu24gq3wkJYAs2KQZ/RCXxQ\nTtJrGtVZSKvXTQZXZ3uOmK+ia1hinbxe4OuZrkrHO/3fZtyuqYM6NGiyMeTiI4gq\nCqx6zYCfZF270y7WA+n0lGaYyzjA4peF0AWwWzi1fbEdzfg4GkbIL9wCNKrzmAD5\n1OdNJUfBXRmDezCSF9wNfAE2+vNi54q5yKp8E3BjhJVQ6ihJSiCe7Tj2codIB8w9\nC/8PElRCAO1qdpkjCU9O+YSW4bexo/By0GKBJheAyK7mL+jLSqU1C2GRhSCaDxHD\nb4qXcZRXT3hbe1CYVcdq9AIqPTQr9+mJQi8cLJZVVDSO0Tdm+Q7qJctJMseQNlKu\nOi+hWpdJXeFN+8wJqckWQciyAbbn8C0V/BN0fHuqYXyrEDqgr9ioz8gvICEm/CTA\nenljPWx9U/fuL711raoedJaam/yMAJ+wzdEprpTY+uFI+qPVP9/0G29INHjdMRh/\nUBBE0ewI0+wx26bS5CF0GmEDEGN49wLMi1slhjurkIwnqnrOzOdVdld/MumIIFKY\n4EDvKnHqwBRnPwoLLP/MaZv7/XMlfA==\n=byAk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/189827785b6d319008dcb0f9d1dc7f72a6a07434",
          "sha": "189827785b6d319008dcb0f9d1dc7f72a6a07434",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/189827785b6d319008dcb0f9d1dc7f72a6a07434"
        }
      ],
      "message": "net: move I2P-accept-incoming code from CConnman to SockMan",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T14:23:31Z"
      },
      "sha": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI5NmJlYjI3ZDJiM2QwNmE0NTY0NGM1MzdjMTE0YTA4ZjBjY2QyODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "tree": {
        "sha": "bbf7300a6bcf6d4ed13e759b5d4ff13ee8c0299d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbf7300a6bcf6d4ed13e759b5d4ff13ee8c0299d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bbf7300a6bcf6d4ed13e759b5d4ff13ee8c0299d\nparent b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\nauthor Vasil Dimov <vd@FreeBSD.org> 1726831648 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449360 +0200\n\nnet: index nodes in CConnman by id\n\nChange `CConnman::m_nodes` from `std::vector<CNode*>` to\n`std::unordered_map<NodeId, CNode*>` because interaction\nbetween `CConnman` and `SockMan` is going to be based on\n`NodeId` and finding a node by its id would better be fast.\n\nAs a nice side effect the existent search-by-id operations in\n`CConnman::AttemptToEvictConnection()`,\n`CConnman::DisconnectNode()` and\n`CConnman::ForNode()` now become `O(1)` (were `O(number of nodes)`),\nas well as the erase in `CConnman::DisconnectNodes()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yREACgkQVN8G9ktV\ny79IhB/9GrLXm4YZJpS3I0eWhFj+NvqGjG0XLlNVRFcsAFpACiTPv90v5mMwSe1j\nntC9NN+cSVpC9nsOpUd+xktIPkaNocMcR+NJF0kTzsaUCwy37f/l+9PipUKZd6MS\n4h0OZFuBcM23Iu5D2H1htrKogJIoQC7cHvRYyuP1gJbO6WvBcmteujZLH67oXLG6\ndsLi/H8dMyc07Yx7bHgLQ0jn/hXj2U7zrmDXXdbudZvfXt7G23fpbTToIKk1rcKK\nvJE3Mmeyh7X6Ju/7OP1fUOLStSVxjweJlwpLvD2MV38tV9GM62x/X+M7+Ci7TbB2\ncPU3Bi3XB7jlMOmPGz1LTSNYayOG2lUvZZG24/7ohp8H6sdAiUBP4hCyolhGmQoa\nz0Lw7ijqWSMJG1uhiy1DWibAp3kE17Y7Pp6YIJIkpoF1ZFO0RZduOXG2lYmOz1wH\nTI9ycgBWgAGJN4MclcoGuAYglYr+7UGaHFveau1o12g2oLGEcyaoNiT+o70yjjWR\neRPUBwEJsdWe07CTinf4tZTyDr7zTpxZMsmcIBytTJb2MZ3NuPtlDfseUo06iQQh\naJSgQJA08eIQ3BjLiiPhzlOnCpOUjzKNadk+/mwBxRsfUMi4aU/Wrq6py9xOfIUu\nyduONv1XmXbr15S5SyQ5SH79If+afhxb6cajY1ay8VDKMjvrgGdL59sPW/pUi5ju\nCx+2NmrkWIad9kRs9EQh1w7DIPvjQ6E12ZhOZpzZwKGtZ+mPJEzVDiLhOr+cc5wQ\n52LQNYuOzyCEat+GjJt8wdy+ApLeT52AWjL3O8Cbj/onhOC7/Qh/YGHV46+pKdfC\nIVbgr5xGmTAKPXpi41KUY2igeVODnhY7ul4Dc6pONvlFjaIRWze4/Z1OfchmbF4k\nsTxWxihMQzqtCrtu3eS+Fj5GOJV98STTzGGb8YGsvUW5/fjAxmAYzwZNo6JLQTKg\nM6fFdb1meqe5pTrutcwtviDFGMvTezVxgrJxlSqIF0KOwvB2A7HcrQ0L8FsFhLte\nfm5mF/KAzrLSo/c5E5HcuTJm39mQNvywMaCvVL3r+c5dLfHbpT9mPlwmQ6dU7Nic\n7IZ5IIS6V+NfzdjAgHUh0xd8QluucOtJ18QvCT9YpfFaghLu2oeNceBU44FUUJf0\n9smcDJCVwtIfdSvfMjaits+RgxLmt7PB/jTveUFsqp6GRBEAwDA3uhxJ7Dk98DeS\nxPjfpGvtl3TKsC/jx5matYfRcxK5rlL6NDzXdIM8G/tJidVWyFcT5VeQWPtT7hVU\nNedS0vStPggPvv4QKUK6yCpHwXEMkNt2fEwSO7LN6zqsct85Lt4vV2dtPlNyly+f\n/2n2tCKla+/gVY/Yo5Os8dRpAD4UIw==\n=uyBs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
          "sha": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc"
        }
      ],
      "message": "net: index nodes in CConnman by id\n\nChange `CConnman::m_nodes` from `std::vector<CNode*>` to\n`std::unordered_map<NodeId, CNode*>` because interaction\nbetween `CConnman` and `SockMan` is going to be based on\n`NodeId` and finding a node by its id would better be fast.\n\nAs a nice side effect the existent search-by-id operations in\n`CConnman::AttemptToEvictConnection()`,\n`CConnman::DisconnectNode()` and\n`CConnman::ForNode()` now become `O(1)` (were `O(number of nodes)`),\nas well as the erase in `CConnman::DisconnectNodes()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-20T11:27:28Z"
      },
      "sha": "b96beb27d2b3d06a45644c537c114a08f0ccd285"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJiNWI5MWQ0MzAwMjZjNDgyNmEyMTA3YzhjMWEzMTE1MThjYzk3Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb5b91d430026c4826a2107c8c1a311518cc97ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb5b91d430026c4826a2107c8c1a311518cc97ce",
      "tree": {
        "sha": "af7dc104086fc12f197a42c9dc71a4a70fc44d6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af7dc104086fc12f197a42c9dc71a4a70fc44d6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree af7dc104086fc12f197a42c9dc71a4a70fc44d6c\nparent b96beb27d2b3d06a45644c537c114a08f0ccd285\nauthor Vasil Dimov <vd@FreeBSD.org> 1726905934 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449361 +0200\n\nnet: isolate P2P specifics from GenerateWaitSockets()\n\nMove the parts of `CConnman::GenerateWaitSockets()` that are specific to\nthe Bitcoin-P2P protocol to dedicated methods:\n`ShouldTryToSend()` and `ShouldTryToRecv()`.\n\nThis brings us one step closer to moving `GenerateWaitSockets()` to the\nprotocol agnostic `SockMan` (which would call `ShouldTry...()` from\n`CConnman`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yREACgkQVN8G9ktV\ny78Qix/7B6+0qeSow8XVidPMo/0DciTdTNnMg3A2B4nVZkRKfMX4bCUlzKt2TVom\nquN4oBaJurZu3YHT/aNkEWcv640JrlN/D45mri7dTp8ySnOvoXvSvj1hTeL45dNY\nX6wO85h59/bkena9iEF4CYiWSSZBU0/aN9dOS2zq6BR6Lti6JNB6+VQ8ewHLCQXB\nVXlqGIdBP1JHxBQm331PdKQ3JeYUc5GkvHiEn/M6Xvubo4LpwQBFLSiEuJS70/YQ\nG65Gitw9PYPZjIK6Qf2UzabtiXSgvgrwKbIxl9hEB1PfaWPrn+/w1FP86s1nt4+U\nluuGcc8pM7htgviUybhBuV8M8n6hPqDQU4zXuDe5S585vmnCvXxbeVekm3T7F8Co\nCrps49t9EdAPsICCWMAdc/kFTw7+aiN3zuvuHnaBUdeN/S/bUaGVFXdh97eiRfl9\nJt+gGUwB3jOG/AqWkVYRqWCAx2iJcHgiLSu5zRxqswEbJ0xWHF9EV/2uXoZ3uMMZ\neUU0HgLTaTLlMW7A5AQ/gURjWWo92zIwJq+INp/C3/gsyZT1v5bh5Zsgam5r6WT8\nMZ19jJExkTV98x+vAyPc1qmoIWSYlZre+fIURae+qPdO+jBi3ZWwPYjCPm73YqYI\nZQ446gsA1UtRm4YFHcw3ky3gbrxFBY/kuCwVvzUATdnqutB4NFxyBA7JbiFLgCrk\nX1wdlabTinDGmZRXafJnqZTLN+vmO1CTzWhG5DNvFhaypj7qT45r2nqhDIzy06S8\nDY6aaoK35DTSDQ+NXwEEryQJAgtbelcg8HwGu8wPzGK/Mv08jYuju0+34KdYv636\nlbp5uPJn8SxUGLEuEmcRo0av6o4k58jCVALwMXFlzVhkcbviRCVoznCMVQO5y4O4\nM0MUpnxfFiEywGUiA1TNsM9gbcDmwbyr5cMdacwzFKYqMQwjeur3+rceCFpgd3j/\nJQ1c9uBOUmw2S8nuuzL0BgLxzz+4NZ+WgFkjXGuP8qkEkqDAEedzx6gUtLhs8W8a\nM5A+RSBTFE3OEi4+rQ4GIBcD2IYxJhRXhDwPhP34ovrigk+L1ISSXctN03zOrI34\nZpg5kfSl23QgDrg8T6s90a+qGBPaNr83MAa8DfpxgVWBdhWCJLZ3u9Op/vjxA1eO\nlPvUlsM2aBxkd7mWiUaJ+Jx/28nsGkcIYehdRhLutfHcOvrlwSSjdLcbwYMsneV+\nU2SNHS3WW6ag9Ii/vKfZZgzoWBi5SCn7XWlV9UjOUOJ7VuOsOmSsmXfKtkFCNFBo\nSCOB75/n2z0kFovDbGLlTJ+aYLvYRduuseNMWDSSmtytRF+RIGTZ9gX7nfdF/JJX\n0Fy3o2WJoagD8o9nmsd5K4As2BBLaA==\n=lAnW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b96beb27d2b3d06a45644c537c114a08f0ccd285",
          "sha": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b96beb27d2b3d06a45644c537c114a08f0ccd285"
        }
      ],
      "message": "net: isolate P2P specifics from GenerateWaitSockets()\n\nMove the parts of `CConnman::GenerateWaitSockets()` that are specific to\nthe Bitcoin-P2P protocol to dedicated methods:\n`ShouldTryToSend()` and `ShouldTryToRecv()`.\n\nThis brings us one step closer to moving `GenerateWaitSockets()` to the\nprotocol agnostic `SockMan` (which would call `ShouldTry...()` from\n`CConnman`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:41Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-21T08:05:34Z"
      },
      "sha": "bb5b91d430026c4826a2107c8c1a311518cc97ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwY2I1MjQ3MGVhNmNjNGRlNWE1ZTUyNjBiOGYzMDgzNTM5NDJlYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "tree": {
        "sha": "9d3e872283c27f6bfa3bf73e6732a7f59d8b288b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d3e872283c27f6bfa3bf73e6732a7f59d8b288b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9d3e872283c27f6bfa3bf73e6732a7f59d8b288b\nparent bb5b91d430026c4826a2107c8c1a311518cc97ce\nauthor Vasil Dimov <vd@FreeBSD.org> 1726907513 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449362 +0200\n\nnet: isolate P2P specifics from SocketHandlerConnected() and ThreadSocketHandler()\n\nMove some parts of `CConnman::SocketHandlerConnected()` and\n`CConnman::ThreadSocketHandler()` that are specific to the Bitcoin-P2P\nprotocol to dedicated methods:\n`EventIOLoopCompletedForNode()` and `EventIOLoopCompletedForAllPeers()`.\n\nThis brings us one step closer to moving `SocketHandlerConnected()` and\n`ThreadSocketHandler()` to the protocol agnostic `SockMan` (which would\ncall `EventIOLoopCompleted...()` from `CConnman`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRIACgkQVN8G9ktV\ny78PgR/9HF2ETw7sg3CR2d18oYcYM/BHaYYJKJSqp2G2GXw2+ezLDsKsVGwngrN5\nzt0SvOjmrQn2YGhPmD8yjFf2ITJ7dwkZ/jqkTytN6Y2Z2pUmS77C8n0bgNDzzc/v\nq05nBW2jZnr8fzaN32WC2VAtDlhGGptn2IZQ443y+7zpKK63y9qZqHkNaJjewwqe\nd/X/gwzId7dpipjvfOc6wiN9CfE6ehOWuAhqHIgNl7rbrVq8HooJ4lqFBvcdBDAa\npg5G467py7pF1UiYbT3abOie0H/mjAwwCBUtglD8+3kvt4Y8xv16lrX7WT52Q8Oo\nEDe+ZYqczyYrzlyfnqMKA1eSD0hT/qknomO1Hn8Sl6MbWGzmc14jrQLJfYg/QjNT\nrkRkxLRhTHKTFtwrvSNSUl9ivSYW4BLJyZ7DOrazjau559xA6BEQFQKVIEWWnJco\nD/ePLOaprDuHhwwrv/WAe5m5yk0n+eaqHOk/XnMhdKLvuKfWPpzEx53jXR408ps8\ncicxxzEAVpfYzwqWMnaTPL9uHOlNwPJnFrA3v9kPCAqsI5QLQsdmnzsLfEkMl5HH\nF5d9w1kPwqBjHtAz2B4Mj1EU82QqaEcRWizri1udecmxSUFjyXrkD92rrGSwGRYq\naXz3p+3YMZ/cH/wswFA6MlMaTWVdUz5tPIs7Qxua9TfLnrzh2sgxHd6CS4udxuAG\nkitMhqRK/wXjUsN0IMpremYLa7q7RhGtLL5Qb8o6AOgvwliWteCPlPuG0rwyCf1J\nYbltbdyfXlPfAieIJ1E+/TqqFSrzIZTNFgLMnwrEfgPoKvwOUUeEd/YeWZTzB/EG\nCNZ/E6hVDcWFEzl2ysqcO4nJ9JYpk6g59jSR6yXgqhlkjdB8afMzcV0yb5jjx31U\nAHGf+1etiFUzV0tIutA+HwQquhnN1h6QOuqPkRcLM3sJHHkxZBcEbQN+22meqDzL\neFv01ZfbTkJxaCjDBDt3DzK5BSc1aIFCSuk8m2SK14n0DXdFRvsF1vo7FtOMQQIR\ntuasyuQkWdNZiRqOgtWPRLXHRrqaG+6QBlBriATTBYiMtpMyodxYG0B4plxSSg0c\nBehxbXM0MdtkopQQ/8GhMjDfXl6+tN5V0Qz/zOsZt5sFDXCPtJv+N3jTWflLRr59\npwE8YzuHE89GBHLLcYu3ifO3wT45S5oCcbuZlHDMn+ytdzT4gpRQK5QqjKhyMDJR\nzZELFgmCDINwsKft4oL6ffq4iZu5aABHCgBR5B1ySLnAlEX8uWVi182diD/ce4R2\n6J8Qelxg9wAGq6h6nvt+OP0EbkV/SNWSglFckebNVN2DOi1V5XhT6XPbQXBjftRH\nj7S8tHLIQowUbszinNeKqSP7S/uHXg==\n=nyEh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb5b91d430026c4826a2107c8c1a311518cc97ce",
          "sha": "bb5b91d430026c4826a2107c8c1a311518cc97ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb5b91d430026c4826a2107c8c1a311518cc97ce"
        }
      ],
      "message": "net: isolate P2P specifics from SocketHandlerConnected() and ThreadSocketHandler()\n\nMove some parts of `CConnman::SocketHandlerConnected()` and\n`CConnman::ThreadSocketHandler()` that are specific to the Bitcoin-P2P\nprotocol to dedicated methods:\n`EventIOLoopCompletedForNode()` and `EventIOLoopCompletedForAllPeers()`.\n\nThis brings us one step closer to moving `SocketHandlerConnected()` and\n`ThreadSocketHandler()` to the protocol agnostic `SockMan` (which would\ncall `EventIOLoopCompleted...()` from `CConnman`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:42Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-21T08:31:53Z"
      },
      "sha": "50cb52470ea6cc4de5a5e5260b8f308353942ec0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2OTc0ZmZiM2IyZTZlYTk1MmZkMzZkMjkzZDlmY2U1YThkZjZiYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb",
      "tree": {
        "sha": "b16db4f40bd2b078335e383a12de4daccebbfb66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b16db4f40bd2b078335e383a12de4daccebbfb66"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b16db4f40bd2b078335e383a12de4daccebbfb66\nparent 50cb52470ea6cc4de5a5e5260b8f308353942ec0\nauthor Vasil Dimov <vd@FreeBSD.org> 1726999902 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449362 +0200\n\nnet: isolate all remaining P2P specifics from SocketHandlerConnected()\n\nIntroduce 4 new methods for the interaction between `CConnman` and\n`SockMan`:\n\n* `EventReadyToSend()`:\n  called when there is readiness to send and do the actual sending of data.\n\n* `EventGotData()`, `EventGotEOF()`, `EventGotPermanentReadError()`:\n  called when the corresponing recv events occur.\n\nThese methods contain logic that is specific to the Bitcoin-P2P protocol\nand move it away from `CConnman::SocketHandlerConnected()` which will\nbecome a protocol agnostic method of `SockMan`.\n\nAlso, move the counting of sent bytes to `CConnman::SocketSendData()` -\nboth callers of that method called `RecordBytesSent()` just after the\ncall, so move it from the callers to inside\n`CConnman::SocketSendData()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRMACgkQVN8G9ktV\ny7/GnB/9EeIwmFI+lKvMSjkGvQWvxAY0GRBteME0U3EgvAn3ORI+rAV7a8j5LarO\n5PGRp1KtB0lOlCeyRRHoPzoj6jsU2s5hdZuKnFXkLVVr3O368OV00M/lwSP5Ia0d\nuiZbmI5oStwA0OSVvuZE5tWZTEFynJ2L6FfFdyOlDj1h6lhc8cn/CT0Gmr8KPa8p\n5mg6BTE6U2qc+8P4+c7M23TCDzZRKL0Q7GKuPbcaVQ8oIG+IvGj2v/htS10wWAxU\n2p4/bMXOrm9aL7Zxt/VqR8s/jQ8acSBtyzpAC+FyfgptyQVTqk8yo1cIaSsPk9MG\nkArjAl/GWZJN12mZAsesvSISE5p46a+ihXdBTrytsYjzEIJq4bBz9U6vCqGXxVFm\nz9fScNwaibJy7Ga6q0AUz0bJbp/OrwqLWTU9Ehj6AbuQdFJm8YHYGP0Kg8oZfKbR\nqkpfp7SjMnzBqToz7dTUBYxAf5i4as4VSLGcCUZuj/+4Cvt5zlix6X39bGaX+5d9\nMRMvRqXw8lMy2jPt4oO424wnUlftTrHUvxvFXP8bzxukQnAYxsnQQS4NaCw2irVi\niCMaTvpPCECx8LHEZt4aZUtJPrxpyNPdH19lhrzGK7zs0iRMQGN6fKPn5accpx4C\ncdXTe+I4+yw0yXqWl1DehtxcIrW+nSe/KWmd3bSVFW81ryZDtcr9iGKGB40pNj4M\nN/OaxLHsj/hfL6suLRfw6GsENloAYKeXSdQ2bte0G661fSM+FEfyTqUDGHshBJNT\nFdtstWM72gKDeHuOnUfM7n9a7dGVdwJaPsiTZi/qKLzgaj197U5TQfj6az1dZGr8\nk+rdADo5+nqsbr2JV0a929HZS5eNYRl/VfQUUnTpd1Py7RlEYXRS1zYK4Awb8CwM\n+83NHjx1EvpmANntIw+p/7h8wiI0kByJ+WcN3SNPJ7CVG78gHcZQFLnDaxw3RWqb\nB0DgNpU7FP2tDs55qUSweeeXcoHTx1N8rmQGsbrXaK6Wg5nhpvBe4Mf5AL6qsLw3\npHxVK8ubzGWjaaxNitYuZvlEDgEO+EwTCQbqLB6CjxG706UCbhBsSBOhULDeRkck\nQCk+vWhbWa52JuB5i2OetIrKDjZrC4DKsbJ5vW8nRaqPXcIwsuQOgMh+eiMGGuhD\nVWu9P0tYxyj4gM65l3fIBy8DDMBV9U1cxLbCFbk1bzFEeeFoD+fpkhMsfmf7kS0e\nHpq9oL7CEQHwEnJYJDkBcdA+5JVTqvwjJ2EMZX+NkLnS56dc8CzaEwazQwZA/UdY\nMf55SsVTrhauFWnQLIu4EPvihSuL8ye/ExFeKJmKSgSa6F+4Aytus7ePIH5OO6xS\njfzNWQaxpywkN1kla9Kk3Pf8ZIxCJw==\n=yzAe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50cb52470ea6cc4de5a5e5260b8f308353942ec0",
          "sha": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/50cb52470ea6cc4de5a5e5260b8f308353942ec0"
        }
      ],
      "message": "net: isolate all remaining P2P specifics from SocketHandlerConnected()\n\nIntroduce 4 new methods for the interaction between `CConnman` and\n`SockMan`:\n\n* `EventReadyToSend()`:\n  called when there is readiness to send and do the actual sending of data.\n\n* `EventGotData()`, `EventGotEOF()`, `EventGotPermanentReadError()`:\n  called when the corresponing recv events occur.\n\nThese methods contain logic that is specific to the Bitcoin-P2P protocol\nand move it away from `CConnman::SocketHandlerConnected()` which will\nbecome a protocol agnostic method of `SockMan`.\n\nAlso, move the counting of sent bytes to `CConnman::SocketSendData()` -\nboth callers of that method called `RecordBytesSent()` just after the\ncall, so move it from the callers to inside\n`CConnman::SocketSendData()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:42Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-22T10:11:42Z"
      },
      "sha": "96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiYjAxNDU1MTQ5NzgwOTJhZTk2NmUzMDY5M2NmNjE5ZTQwMzQ4Mzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bb0145514978092ae966e30693cf619e4034837",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3bb0145514978092ae966e30693cf619e4034837",
      "tree": {
        "sha": "2cfffa21088b5658e80f7dc80be73df9b53f824f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cfffa21088b5658e80f7dc80be73df9b53f824f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2cfffa21088b5658e80f7dc80be73df9b53f824f\nparent 96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb\nauthor Vasil Dimov <vd@FreeBSD.org> 1727088625 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449363 +0200\n\nnet: split CConnman::ConnectNode()\n\nMove the protocol agnostic parts of `CConnman::ConnectNode()` into\n`SockMan::ConnectAndMakeNodeId()` and leave the Bitcoin-P2P specific\nstuff in `CConnman::ConnectNode()`.\n\nMove the protocol agnostic `CConnman::m_unused_i2p_sessions`, its mutex\nand `MAX_UNUSED_I2P_SESSIONS_SIZE` to `SockMan`.\n\nMove `GetBindAddress()` from `net.cpp` to `sockman.cpp`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRMACgkQVN8G9ktV\ny79odh/7B5UtnSuzPVFBX3u6SiMVTs9S8nTZOuh5+eDqmprOkj1PMwlgFKeNYN6/\nxNqS12d7CE/i0GG+koTdVXmcV7YRYqzMznmB4wYlsnW4HBwZRVijqrnH6Nexpy3s\nfNYkX+mvBViNUJ04rbzcTsMoMxZLPY9g9heqSgAYgZ320A3f1GN6XZLcSGNkhgs1\nUYsg9vZ9D63ihhhNiTcNpr0KznP3yrCCRtjhtmTVwfWcbb58AFJijXo0clMZM8Gh\ngvVEA/K2lE+3ZAdE475BVgeliwXioc3SOBuiahoZYmjqduHwbJx4es23POOV+nzp\nv1u7cvk2jYYzd4fS/MQSGiG3DdTqt2jwHnlpnb/x05//83+jqslKgJ5d035E8kma\nK/kp4dUTESfezgObVCzkLvIkBxTts6lZZQMLAyBFiZeYe6D+7I1+vIVw36H0RxZc\n41t8Ps+dAmuLiFd3DNN7xOaZF+K6HMrj2v/VfSz9otLDEHpBRwKsFV1jYFHQTn2O\ngaSKPlJS9YRKj7ckJVa9M0VLoddtb5CAh/S20WFL9IXDIAiOZar7tzMLBlbXB0U1\n53gHU2vg/boiJGcfGENGAPmZ087afNtN6xFM+t5HfdD5kdu7gmN5TS4fvkxZoCFk\nsU5U314np8NS4gkIHRBJWTo40FV7xPONZ4ZAsMW6Ny2WWAG3+LTWFZb8+yphRfjg\nIZKBCKFzfPay4utK24u59P+lmoZ0hvYz0QKP7rB0VxPYRiRnQeH+aaFk0Ar0UqtT\nSUvwOCnttzUYitCMW2PnxprSiR4EPXx7zW8vxn1iutzXRD1Sh8dVfaBcl2UAJodm\ndxwhvDqQbY5vmjdQUb0PefnEx9gqql/NLl58L5GbI/MqlVxk674pu5guMGEpGvu9\nAHru+NXm1rjs/qlZPJ1y3M64zuntSeKqCtC7+LFUJSpyZwJjZ8uT42+U0jUgS+Uo\negoyu8b6Zno2+iTcH0eq0ZEPbgPFFo555kvRrGO9X4YEz0YsW7TaTEbPXBHvS8IU\nsT+IcG4dXFjTfc+iugDLWxZHm8fBjnJKeXVwT9p32raAfIsLcKKDVKs6dFQ5cxao\ncdP2nP6HnOjRIcgLBBV0Lh65jr7FOZZ2ba2wfrB7jW0qEGMPKkTUwjMnQo3a09fk\n9CwKLilVfCQQqRnDJs8Ku7gJY4ypLBpq+EvRElkO75J5GExvNvCbbljTudfybgbP\nZDstGduIDVOmYCDy9YhsRawG82noc3V5sluP07hDnidrzv4EbSMHVbCFQex2+3cT\n1//9sT+QWMco0P3JpM1iad3iy/WDfmy8CDYS7wdjGHOTe2SxxfNaqj6Zk1A4MnuE\nYHwG6sbaqoMXgnLr37ZprjyFqpVP3w==\n=oHZH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb",
          "sha": "96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/96974ffb3b2e6ea952fd36d293d9fce5a8df6bbb"
        }
      ],
      "message": "net: split CConnman::ConnectNode()\n\nMove the protocol agnostic parts of `CConnman::ConnectNode()` into\n`SockMan::ConnectAndMakeNodeId()` and leave the Bitcoin-P2P specific\nstuff in `CConnman::ConnectNode()`.\n\nMove the protocol agnostic `CConnman::m_unused_i2p_sessions`, its mutex\nand `MAX_UNUSED_I2P_SESSIONS_SIZE` to `SockMan`.\n\nMove `GetBindAddress()` from `net.cpp` to `sockman.cpp`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T10:50:25Z"
      },
      "sha": "3bb0145514978092ae966e30693cf619e4034837"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkMWIzNTJhNGQwNTBlYzg4YjU5Y2RmNTkyMDljMGYwODZmZWE0ZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
      "tree": {
        "sha": "2f6f311f0167dca2043f79b0ac15e5e92b5ac4ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f6f311f0167dca2043f79b0ac15e5e92b5ac4ab"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2f6f311f0167dca2043f79b0ac15e5e92b5ac4ab\nparent 3bb0145514978092ae966e30693cf619e4034837\nauthor Vasil Dimov <vd@FreeBSD.org> 1727163707 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449363 +0200\n\nnet: tweak EventNewConnectionAccepted()\n\nMove `MaybeFlipIPv6toCJDNS()`, which is Bitcoin P2P specific from the\ncallers of `CConnman::EventNewConnectionAccepted()` to inside that\nmethod.\n\nMove the IsSelectable check, the `TCP_NODELAY` option set and the\ngeneration of new node id out of `CConnman::EventNewConnectionAccepted()`\nbecause those are protocol agnostic. Move those to a new method\n`SockMan::NewSockAccepted()` which is called instead of\n`CConnman::EventNewConnectionAccepted()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRQACgkQVN8G9ktV\ny7/8JiAAjkMey7BAhirrLdj/Mqrtr2+RRlnpL9op0HFFx09qe/EQ2ortz2UyR01C\nyLVQjtFsr0JolLK+/Qisl/o9eLA/nDSh8cCLyWeat4o9+YTb+E6A1BAJsa4+8o2Z\nvt+JYGIwEmH/km+UARcawGcjplv81PMMqQxULEuNSCoIhBa+s6F7LquyZMoU+GTM\n6VTtMOanmqJajNtnt45jQUe4Eas3cTgIplLSWdtE9mAyVqjonQoriCyAgQO02XEk\nL0xmU82o6ZeZlvHBQCEza15iPA3Z5/Wuoq/WIKKm4TrZBVVTYj2hbrSTU9AK5mcO\n6mMw/EK08nlRN70tCovkrRzNt1Ax1AXyOrRASKVHpBIfBAgvbEwGzYta4XpHt44J\nqv6Wf4LzEeuJ7qsc1TBLTf1CpP8E/sAwAofYdcCDSiacMawGDqrwgglfTszC+1cN\nocYXEv4I39FG+LYYwLj73r5WWO39srtmXmSq5rtHKxQVhQ28dYgTBBHaBWTCC8CY\neMfGGW9P+Ry36C4Rre0iFLwsrLAoD9ybHS956XoXUsmLySrSgv2js8Aje2NAB1Os\nNrYnXHH0uwfdnoV/FvnryimHMvpPTSDGa+9MCSFsxgiYUJR58ThviB3yz4zhS0LK\nAXMjd/0d5e4WXiWoHY5CPwPKKrVqf6P6UyxXpQ+M1LSo/QJogIv3NOano1TDX570\nZkBlap1QDwoF2PlFSqItKs4pyIZSP334iu0mMmpT+jtMhd6W6UECTF5f1A03FhWi\nqRYwRrUa2NQqnRfmgf56gCFld9FP58d6NCzfdbBfGOLp8ckDpHfiur799ymToRQf\nOJd1MbaAIeKXv3BOmp9JowEPr4BbDp8Rc362T4H88TNfZ29UY1I5cjO0uwz6lT3z\nOWtY4OdwAuDsJbZIF5oplU4KN646oH7rAkWxRf/TRmkAGnRK465mSmoVvoPlfm6R\nhmj8De0jjuGYQJhxUnc4lQgJxOrGqXiW2x20ISUzJhW7G7BCymQ9HwTRv+ryBGG2\nKhIOSsekIaBQUMs2iuhqRFAAKvrfnkd4b6swa6/EjgMbV4oUm2U+ETzRW6hxa5XQ\nOKyLg1s91bIQHxUZ1atpncOdUy4b6Hg+D4XSvbqMwLoNnmIJRDPsmy7KrwUOe90k\nXyS/S6No8BnUq+WtwvSR+3dwbFppFTN0aknck5xjlQQL/f9I7Su6LOxmNUR7VlVf\nd3woA1OG7j89jxWQMtbOfCI4PMxPZR07N12LQL7I2NdTC4ogD/kZInFpECmFEaSj\nEOpfzBKxg9vYxLgSxpGQ5jVn971KE+dtlcnORksWPXGdMa2BahYfqhRxR5YG1qUY\ne6oIJGaQstaVMIdlslzpILZX+flX2A==\n=qn4f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bb0145514978092ae966e30693cf619e4034837",
          "sha": "3bb0145514978092ae966e30693cf619e4034837",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3bb0145514978092ae966e30693cf619e4034837"
        }
      ],
      "message": "net: tweak EventNewConnectionAccepted()\n\nMove `MaybeFlipIPv6toCJDNS()`, which is Bitcoin P2P specific from the\ncallers of `CConnman::EventNewConnectionAccepted()` to inside that\nmethod.\n\nMove the IsSelectable check, the `TCP_NODELAY` option set and the\ngeneration of new node id out of `CConnman::EventNewConnectionAccepted()`\nbecause those are protocol agnostic. Move those to a new method\n`SockMan::NewSockAccepted()` which is called instead of\n`CConnman::EventNewConnectionAccepted()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-24T07:41:47Z"
      },
      "sha": "9d1b352a4d050ec88b59cdf59209c0f086fea4e6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxMzNhNjM0ZDEwZTE3MjY1MmViYmYwNWNhMTE0MDM3YzhlNTUxYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c133a634d10e172652ebbf05ca114037c8e551b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c133a634d10e172652ebbf05ca114037c8e551b9",
      "tree": {
        "sha": "b83080184cb33ba57f8d1d10b064aac53cc6f0ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b83080184cb33ba57f8d1d10b064aac53cc6f0ac"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b83080184cb33ba57f8d1d10b064aac53cc6f0ac\nparent 9d1b352a4d050ec88b59cdf59209c0f086fea4e6\nauthor Vasil Dimov <vd@FreeBSD.org> 1727082212 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449364 +0200\n\nnet: move sockets from CNode to SockMan\n\nMove `CNode::m_sock` and `CNode::m_i2p_sam_session` to `SockMan::m_connected`.\nAlso move all the code that handles sockets to `SockMan`.\n\n`CNode::CloseSocketDisconnect()` becomes\n`CConnman::MarkAsDisconnectAndCloseConnection()`.\n\n`CConnman::SocketSendData()` is renamed to\n`CConnman::SendMessagesAsBytes()` and its sockets-touching bits are moved to\n`SockMan::SendBytes()`.\n\n`CConnman::GenerateWaitSockets()` goes to\n`SockMan::GenerateWaitSockets()`.\n\n`CConnman::ThreadSocketHandler()` and\n`CConnman::SocketHandler()` are combined into\n`SockMan::ThreadSocketHandler()`.\n\n`CConnman::SocketHandlerConnected()` goes to\n`SockMan::SocketHandlerConnected()`.\n\n`CConnman::SocketHandlerListening()` goes to\n`SockMan::SocketHandlerListening()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRQACgkQVN8G9ktV\ny79EKiAAhgds5Bs+3nB1NcDqSud+LhbTQI3GzVzBvvziR8cfSASFz4jtgCI0q0m6\nN063y7GE//8D1ie+JmAEqm7jLi2qGWSDDLtPzEVGoLU+1PczVA2/MpqZmRjpDd2Z\nkbJuxPWKbDdhRJGUSGSeZmOmRkBF70A+YmlkTfi/YXOxOs3jXusW1G6CXR+h/guI\no4fXBHS40b1IWkSpkqX5g/D3QtRNKeLs97TcssN7hl/Jxu+rZrEeOFTUoowGl5Tv\nAMZ4BSSxawimiQzQe3RBR6sfjCDlTtuKHbHvLFtg9ywIzDN2ncGTe09mviEhyWck\n5WerbS10rc9zV2PaG4C+kM3lXfoYbXgNXu0622hhT6/lN/jVR1oXs7Tkn9RIHx+v\nCS74rpVhM28vTq9JOW/TfjxbNsQ5Z+2Wr2IgS6V2VOTRMRyt58u9sPJlcw/UO2yR\nIYZsrfrBj3udoeX+CUT/n8OApZlW1QOsvxlGDZUIF9RjvMs3MTxMa19GGGw/9O9a\npSNvV3EzS/1S9RQp0hDrqZ8LUK6ZE/AyDoQglUcua5oGNCTb7zsMNZq4lBGwEokp\nxptFyadhatG8hF4iX8aK0mN0io9OoM1SmrMC5h9oYtWbHx6o7PeOPGisHBYTANRt\ncOP+n2Y82sBpMh6Fn4IpXnEdOZaPYlEwaMpKCMDKdXvYen0OASXDWlK0iEt6AK2k\nG1bSJE950hZiCOERYyfK9IkiDyEdMmRLPcpkzTExmL8/knxixvwCPvYsi+7ded+V\nBWnp+0M/11tUTA1YWRngDBiIKRUyAIszEdReeuJljlqhzGgbD5aZTfQeqz8G0r3D\n1LYyo2MIxmuHmkUpHRweoNCLYdIuU5iD3CpUhmpxOiJHyvIdPfnUyHoh5c33B2B/\nH08Fvbxx8I1K56RIhaVd5Yuhyx2AGa3jM7K2uAUVR7BezKocJPaRAjmqph86+oxj\nYarQrjp9wdkPIUTnnPxL/xjiQhSqcFNEbWTqitBM/ofk+Esjd939huczENoKozUr\nqaIJt/xGJx/7eP68Nsp8s4WVRJyvXI5aHy405Z1TwuI9zGXipyvZ6vdO8m/Sgyh/\n3S01+zOESLm+Dvho4N8x9aG57wnwPG267YKKqpoTJqUANSfUTlMxewDJ/I2EDSTx\nQAl67C5A36kamJz5Ky4CLJ9qW+JZGAvoHjT7ie3TsKwWZdNxR+dlEC4QVWpUCmqD\nouTyon6/yfc1EA3JLd0WkAh/pepwLSrYFkkuhp0kd3XfhjvPOeIcjNO15MVXHk7L\n0+bJND7DRDjxw2MsSr0Wnt0T7I+R8bz7sF5UEgzZ7KviuLtgvrb481t9ZKEcCaX+\nXrH+VdvR3s9/57aU9wUQDakuRUkC7A==\n=W/8f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
          "sha": "9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d1b352a4d050ec88b59cdf59209c0f086fea4e6"
        }
      ],
      "message": "net: move sockets from CNode to SockMan\n\nMove `CNode::m_sock` and `CNode::m_i2p_sam_session` to `SockMan::m_connected`.\nAlso move all the code that handles sockets to `SockMan`.\n\n`CNode::CloseSocketDisconnect()` becomes\n`CConnman::MarkAsDisconnectAndCloseConnection()`.\n\n`CConnman::SocketSendData()` is renamed to\n`CConnman::SendMessagesAsBytes()` and its sockets-touching bits are moved to\n`SockMan::SendBytes()`.\n\n`CConnman::GenerateWaitSockets()` goes to\n`SockMan::GenerateWaitSockets()`.\n\n`CConnman::ThreadSocketHandler()` and\n`CConnman::SocketHandler()` are combined into\n`SockMan::ThreadSocketHandler()`.\n\n`CConnman::SocketHandlerConnected()` goes to\n`SockMan::SocketHandlerConnected()`.\n\n`CConnman::SocketHandlerListening()` goes to\n`SockMan::SocketHandlerListening()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T09:03:32Z"
      },
      "sha": "c133a634d10e172652ebbf05ca114037c8e551b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwYzJmMTNmODNhNWNjNzQwMzMwZDBiNGFmOWNiZDc0NTE1YmU2YjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "tree": {
        "sha": "547203b4f0fd2d5329e05d35c8cfae0f1de09998",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/547203b4f0fd2d5329e05d35c8cfae0f1de09998"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 547203b4f0fd2d5329e05d35c8cfae0f1de09998\nparent c133a634d10e172652ebbf05ca114037c8e551b9\nauthor Vasil Dimov <vd@FreeBSD.org> 1727082359 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1727449365 +0200\n\nnet: move-only: improve encapsulation of SockMan\n\n`SockMan` members\n\n`AcceptConnection()`\n`NewSockAccepted()`\n`GetNewNodeId()`\n`m_i2p_sam_session`\n`m_listen private`\n\nare now used only by `SockMan`, thus make them private.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmb2yRUACgkQVN8G9ktV\ny78PUCAAiCdh8i6DJeypcBl55z18UriUsJkl5aiOna/phh57EJlyg8uhBLCgE/7y\nrLIGKFKxLVa+5T1Vqh5buxsGiyu03cYG0TrScLlT4/5Mf86c5MblkbU4zitXxsSE\npHbH4/VhNBuXyag/4JAum47OON3U71FL2HKnXVwB6rgOoCDfJ1XgrUzZBCXkoA4g\nG86AL0HjQCL2gH0oOEDPdvhXIJMU5XysJKihTI7a6zQI3AG5fLUqtUyDnuildvAY\nfiJdj+7sCmWJUksG9khn5RbTKW+YIFbFKECdwhzUES7OpFSIxbwE1c+W7jfIMz7M\nyuyWKkT7Ca7JS3/F0SKNDEbtLmDJSZ7oLoPwdK7PKg9qFP2A7ezm8hA0jZW0C6k4\nTLvGhgDcqvQ+t/+zOwhaVsi21ucfd+N0BjgKdy7cNJXgXjY9u7/EunkZpl6FXG3p\nqUlwoTN7BlMteumdTMwvdfBMsDhM2Vlnxstr3cQ0v/fTt6UH4SeP/1WoS9LEK+3Q\nI1Tjg2Nyd1wWPFfJj9Vc40Ew2N75AugB1zxUUS/FvlBm7xQMulOxOB+EXT6HtzBz\nuQhVJTysqiS8aeHbwEiM2TxVTlXKwb0sELBdV0rTv3aABwZPhV58BcNbNMYYz4yp\nkiEuuIo9X2rRbV+B4kQsp40oXv0HI6pF/vpzVNxbPEnDuDcBm0eUFuYBqcFThOym\nGP2ZNbOWsX93vPW3OrGq/4gKzwKnRYTypKqDO5UwQ5iLHC1Uv9hmBnes91OtqkE3\n/K+KgxClGasjz18k7AtHNdt15Hmzz3edNzM9G04rWpTaMtXktd8Nh1YElbTILD8q\naL18bEsxrNYv/ar/NOEeowgobM90zoPOunYoDKyX99mefrZZsGZlKoxTCTmb6HPO\nfzh5NMOgZBMyDs+Ym6fUBDi4ig3MgWFQ0cZq/BBPr4bJmodCVdVAeeUOfrDQKLOk\nPhtwLj1k3CLzMu6vCFPM+8U0VQMae88UWeI/NDTFRe73RHXEnz12FjgKxFExudr/\nAYYaKIYEC5pLoR9+sw/4msFLNdpsaIREUBWehfZFnfMNsL80h0jyGvs6VPxzSItB\nrFhdMbZco15P1wkh7Ikj3N+jFaq/fD1E5tldZV+x6yGhrzpT2MTuXxc1sTQebhmS\nPgQs5tSvTVsC74BoxnOWSk9znhVniJzezcCzcsOxYGtiZdW78D76bNNrBTy6Kx08\nBHeOg2Bql0wvmWrUisCMB64w7v9fkPiJwy4RaIVMzggrsWuhMyoRCuXbmbC4Kw4B\n/KzuqGgoiFBYDVL+Bc84piuL5EJATbvKF+PM2ZnNnkP8jc69QntfN1UaQ0A5jlsS\nqIV1sWo4LiyutgUe29S78GehWUfUww==\n=tJQw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c133a634d10e172652ebbf05ca114037c8e551b9",
          "sha": "c133a634d10e172652ebbf05ca114037c8e551b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c133a634d10e172652ebbf05ca114037c8e551b9"
        }
      ],
      "message": "net: move-only: improve encapsulation of SockMan\n\n`SockMan` members\n\n`AcceptConnection()`\n`NewSockAccepted()`\n`GetNewNodeId()`\n`m_i2p_sam_session`\n`m_listen private`\n\nare now used only by `SockMan`, thus make them private.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-27T15:02:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T09:05:59Z"
      },
      "sha": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14432633095,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAANcQIEH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14432633095",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T15:05:31Z"
    },
    {
      "event": "commented",
      "id": 2379495804,
      "node_id": "IC_kwDOABII586N1Dl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379495804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T15:07:28Z",
      "updated_at": "2024-09-27T15:07:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "`03f6cc2b4a...70c2f13f83`: fix CI failure, and address suggestions\r\n\r\n> Can you put sockman.h in libbitcoin_common\r\n\r\nDone.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379495804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "unlabeled",
      "id": 14433585567,
      "node_id": "UNLE_lADOABII586YIJemzwAAAANcTwmf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14433585567",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T16:23:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2379691000,
      "node_id": "IC_kwDOABII586N1zP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379691000",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T16:51:49Z",
      "updated_at": "2024-09-27T16:52:05Z",
      "author_association": "MEMBER",
      "body": "Here's an initial sketch of making `Sv2Connman` a subclass of `SockMan`. The test gets through the handshake but fails later on, so I'll need to study it a bit more closely.\r\n\r\nhttps://github.com/Sjors/bitcoin/pull/64",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379691000",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 14443182181,
      "node_id": "LE_lADOABII586YIJemzwAAAANc4Xhl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14443182181",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T01:02:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14445040755,
      "node_id": "UNLE_lADOABII586YIJemzwAAAANc_dRz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14445040755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T11:27:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2336026243,
      "node_id": "PRR_kwDOABII586LPO6D",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2336026243",
      "submitted_at": "2024-09-29T22:05:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "commented",
      "id": 2383223911,
      "node_id": "IC_kwDOABII586ODRxn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2383223911",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T13:38:34Z",
      "updated_at": "2024-09-30T13:38:34Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThis looks great and the API in the header looks easy, thanks.\r\n\r\nI'm in the process of cleaning up my HTTP branch for a pull request and then I can start reviewing this and rebasing on top. \r\n\r\nOne element of libevent I'm not immediately seeing here is timed events. Really the only thing HTTP needs it for is `walletpassphrase` which calls `RPCRunLater()` which interacts with `HTTPRPCTimerInterface()`. I don't think Conman has a specific mechanism for this because timed things are attached directly to nodes like `m_last_getheaders_timestamp` etc. The current `HTTPRPCTimerInterface` uses libevent `event_new()`  and `evtimer_add()`, I accomplish this with a map of timestamps and callback functions in my event loop: https://github.com/pinheadmz/bitcoin/commit/42b7240378ffc4890ab4ba1453623e5986ea2a71",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2383223911",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "commented",
      "id": 2383313791,
      "node_id": "IC_kwDOABII586ODnt_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2383313791",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T14:07:19Z",
      "updated_at": "2024-09-30T14:07:19Z",
      "author_association": "MEMBER",
      "body": "> I accomplish this with a map of timestamps and callback functions in my event loop\r\n\r\nI wonder why the existing scheduler can't be used for re-locking the wallet? I know there is https://github.com/bitcoin/bitcoin/issues/18488 and https://github.com/bitcoin/bitcoin/issues/14289, but the thread is already filled with random stuff such as `BerkeleyDatabase::PeriodicFlush()`, and relocking the wallet seems(?) fast (I haven't benchmarked), so should be fine to put in there as well, at least from that perspective?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2383313791",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "commented",
      "id": 2391022009,
      "node_id": "IC_kwDOABII586OhBm5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2391022009",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:55Z",
      "updated_at": "2024-10-03T10:16:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz, I think that the functionality of \"execute this code after some time\", is not much related to the sockets handling and better be implemented at some higher level, not inside `SockMan`. Maybe the scheduler, like @maflcko suggested, or in the `EventIOLoopCompletedForAllPeers()` method which will be called periodically by `SockMan`:\r\n\r\n```cpp\r\n    /**\r\n     * SockMan has completed send+recv for all nodes.\r\n     * Can be used to execute periodic tasks for all nodes.\r\n     * The implementation in SockMan does nothing.\r\n     */\r\n    virtual void EventIOLoopCompletedForAllPeers();\r\n```\r\n\r\nEdit: I guess `TriggerEvents()` from https://github.com/pinheadmz/bitcoin/commit/42b7240378ffc4890ab4ba1453623e5986ea2a71 can be called from `EventIOLoopCompletedForAllPeers()` or from the scheduler.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2391022009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14501959506,
      "node_id": "MEE_lADOABII586YIJemzwAAAANgYldS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959506",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "subscribed",
      "id": 14501959523,
      "node_id": "SE_lADOABII586YIJemzwAAAANgYldj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959523",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "mentioned",
      "id": 14501959538,
      "node_id": "MEE_lADOABII586YIJemzwAAAANgYldy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959538",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "subscribed",
      "id": 14501959552,
      "node_id": "SE_lADOABII586YIJemzwAAAANgYleA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959552",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "commented",
      "id": 2393768768,
      "node_id": "IC_kwDOABII586OrgNA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2393768768",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:41Z",
      "updated_at": "2024-10-04T13:56:44Z",
      "author_association": "MEMBER",
      "body": "@vasild if you rebase past #31011, tidy might point out that `sockman.cpp.o depends on i2p.cpp`. So you probably need to either move `i2p.cpp` to common as well, or remove the dependency.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2393768768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14519676585,
      "node_id": "MEE_lADOABII586YIJemzwAAAANhcK6p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14519676585",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:43Z"
    },
    {
      "event": "subscribed",
      "id": 14519676599,
      "node_id": "SE_lADOABII586YIJemzwAAAANhcK63",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14519676599",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:43Z"
    },
    {
      "event": "reviewed",
      "id": 2349481835,
      "node_id": "PRR_kwDOABII586MCj9r",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Jacksonearl2468",
        "id": 180059160,
        "node_id": "U_kgDOCrt8GA",
        "avatar_url": "https://avatars.githubusercontent.com/u/180059160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jacksonearl2468",
        "html_url": "https://github.com/Jacksonearl2468",
        "followers_url": "https://api.github.com/users/Jacksonearl2468/followers",
        "following_url": "https://api.github.com/users/Jacksonearl2468/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Jacksonearl2468/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Jacksonearl2468/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Jacksonearl2468/subscriptions",
        "organizations_url": "https://api.github.com/users/Jacksonearl2468/orgs",
        "repos_url": "https://api.github.com/users/Jacksonearl2468/repos",
        "events_url": "https://api.github.com/users/Jacksonearl2468/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Jacksonearl2468/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2349481835",
      "submitted_at": "2024-10-05T04:02:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "labeled",
      "id": 14537194486,
      "node_id": "LE_lADOABII586YIJemzwAAAANie_v2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14537194486",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-07T09:27:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2372105727,
      "node_id": "PRR_kwDOABII586NY3X_",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2372105727",
      "submitted_at": "2024-10-16T11:15:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "reviewed",
      "id": 2373476515,
      "node_id": "PRR_kwDOABII586NeGCj",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 70c2f13f83a5cc740330d0b4af9cbd74515be6b2\r\n\r\nBuilt and ran tests on macos/arm as well as debian/x86.\r\n\r\nSynced to signet with this build on a debian server, then synced from that node locally using the macos build.\r\n\r\nI left a lot of comments below but most are for myself to track during rebases, indicate to the maintainers the depth that I'm actually reviewing, and also some notes for myself -- I'll be rebaing my non-libevent http server on this banch and consuming the new SockMan.\r\n\r\nI have a working branch with my own sock handler for http, so I was able to compare that work to the code in this PR to follow along.\r\n\r\nThere are two areas I am not entirely clear on that I will review more closely in the coming weeks which is I2P stuff, and reviewing all the mutex stuff.\r\n\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 70c2f13f83a5cc740330d0b4af9cbd74515be6b2\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmcSeTIACgkQ5+KYS2KJ\r\nyTp/1A//ZzhksZzWlBbV6rcfIXnUVQS0SIgmY7sZCN8AN0RoiN4ECALWyrXz9Rdg\r\nfONCWiQSTyxE5u2TnFo7os+o0Z+3ybxApufAx/OzqHaJwR8d5wnZPHU/uFTPYm/z\r\nqArPT3SHQgKb1sftt8S5ve7j37RW7IbshiJ+6bq8+DNMY1Ep1DX4BBzZgwbzx2ek\r\nqMcRFQkOkTbJg3/yOT1Vz361qCPLmbKjvbRyjYgYYG7oxtdwb5r/ezeagSCWKDJo\r\nYx/DJ2cwZ3uMWDvfnhNJOeql4MhOLZcU5hKyGGTRT3B5ER7ELNye5+Sz+pv0cJuP\r\nR+zfoxAfYV3opqB/ewTD1sM+gtFZFUiLNHigPgKFmK5GerLguXUqY+vgQ/4VIEpg\r\nXD2tHOCwwDULsekVLZ+hXJPSTBDmZAlHmJvcCBQgzLkjCMvrlmxJR8KpKg3lDgKM\r\nGwFcYoIWubyFKgRCAQL6vc1qFnGc7PJ1TWJLoKxpjXeyE6igHquSK0KE3flhCJ97\r\nCpWhZflrHwcaomSf9bDYsSaNvMN2MiFUzC4lbmLRWTzeOCS9oMFRMcIayQ+psUqC\r\n0gmbZzi+Qcf32gCNYvhxYwKqTeAlKih9x+vurTuK8831AZoUYwusetGaTsklwvOn\r\nbDpgEGoqFPdPIB8yHAiFBwQPcGmn7tVmTbVhck59B3HvdS/wOr4=\r\n=rnjt\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2373476515",
      "submitted_at": "2024-10-18T15:14:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "review_requested",
      "id": 14722788692,
      "node_id": "RRE_lADOABII586YIJemzwAAAANti-1U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14722788692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-18T15:14:31Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "subscribed",
      "id": 14728527368,
      "node_id": "SE_lADOABII586YIJemzwAAAANt434I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14728527368",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T00:27:08Z"
    },
    {
      "event": "commented",
      "id": 2426964142,
      "node_id": "IC_kwDOABII586QqIiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2426964142",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:15Z",
      "updated_at": "2024-10-21T15:09:15Z",
      "author_association": "MEMBER",
      "body": "cc @theuni any takes?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2426964142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14766693192,
      "node_id": "MEE_lADOABII586YIJemzwAAAANwKdtI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14766693192",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:17Z"
    },
    {
      "event": "subscribed",
      "id": 14766693210,
      "node_id": "SE_lADOABII586YIJemzwAAAANwKdta",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14766693210",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:17Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778257807",
      "pull_request_review_id": 2333138089,
      "id": 1778257807,
      "node_id": "PRRC_kwDOABII585p_g-P",
      "diff_hunk": "@@ -203,6 +203,15 @@ static RPCHelpMan getpeerinfo()\n     std::vector<CNodeStats> vstats;\n     connman.GetNodeStats(vstats);\n \n+    // An undocumented side effect of how CConnman previously stored nodes was\n+    // that they were returned ordered by id. At least some functional tests\n+    // rely on that, so keep it that way. An alternative is to remove this sort\n+    // and fix the tests and take the risk of breaking other users of the\n+    // \"getpeerinfo\" RPC.",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Arrays are ordered data structures and I don't think it is user-friendly to shuffle them by ID. I think this comment can just be removed.",
      "created_at": "2024-09-27T08:41:33Z",
      "updated_at": "2024-09-27T11:52:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1778257807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778257807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767304",
      "pull_request_review_id": 2333986678,
      "id": 1778767304,
      "node_id": "PRRC_kwDOABII585qBdXI",
      "diff_hunk": "@@ -203,6 +203,15 @@ static RPCHelpMan getpeerinfo()\n     std::vector<CNodeStats> vstats;\n     connman.GetNodeStats(vstats);\n \n+    // An undocumented side effect of how CConnman previously stored nodes was\n+    // that they were returned ordered by id. At least some functional tests\n+    // rely on that, so keep it that way. An alternative is to remove this sort\n+    // and fix the tests and take the risk of breaking other users of the\n+    // \"getpeerinfo\" RPC.",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "in_reply_to_id": 1778257807,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed, thanks!",
      "created_at": "2024-09-27T15:05:41Z",
      "updated_at": "2024-09-27T15:05:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1778767304",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802901394",
      "pull_request_review_id": 2372105727,
      "id": 1802901394,
      "node_id": "PRRC_kwDOABII585rdheS",
      "diff_hunk": "@@ -0,0 +1,528 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/common/sockman.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Silent merge conflict with #30937",
      "created_at": "2024-10-16T11:15:53Z",
      "updated_at": "2024-10-16T11:15:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1802901394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802901394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803679987",
      "pull_request_review_id": 2373476515,
      "id": 1803679987,
      "node_id": "PRRC_kwDOABII585rgfjz",
      "diff_hunk": "@@ -1796,10 +1796,10 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\n \n     CNode* pnode = new CNode(id,\n                              std::move(sock),\n-                             addr,\n+                             CAddress{addr, NODE_NONE},\n                              CalculateKeyedNetGroup(addr),\n                              nonce,\n-                             addr_bind,\n+                             CAddress{addr_bind, NODE_NONE},",
      "path": "src/net.cpp",
      "position": 466,
      "original_position": 45,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95\r\n\r\nWhy do CNode .addr and .addrBind still need to be CAddress? maybe it makes some sense for .addr if that's where we also store the service flags for easier gossiping, but why would the local bind address need anything besides an IP and port?",
      "created_at": "2024-10-16T19:27:15Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1803679987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803679987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": 1707,
      "original_start_line": 1799,
      "start_side": "RIGHT",
      "line": 1710,
      "original_line": 1802,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803692315",
      "pull_request_review_id": 2373476515,
      "id": 1803692315,
      "node_id": "PRRC_kwDOABII585rgikb",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 86,
      "original_position": 57,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2\r\n\r\nMaybe these are expected to be set by callers in future commits, so I'm just leaving myself a note to look for `SO_KEEPALIVE` and `TCP_NODELAY`",
      "created_at": "2024-10-16T19:38:45Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1803692315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803692315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804940161",
      "pull_request_review_id": 2373476515,
      "id": 1804940161,
      "node_id": "PRRC_kwDOABII585rlTOB",
      "diff_hunk": "@@ -9,9 +9,12 @@\n #include <util/sock.h>\n #include <util/translation.h>\n \n+#include <atomic>\n #include <memory>\n #include <vector>\n \n+typedef int64_t NodeId;",
      "path": "src/common/sockman.h",
      "position": 22,
      "original_position": 8,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "5d4920f630417ceeee1c79304faac6803795cd64",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5d4920f630417ceeee1c79304faac6803795cd64\r\n\r\nI don't really have any better suggestion for this but the term \"node\" is now a higher-level ConnMan context, for HTTP and StratumV2 I'd probably refer to them as \"client\".",
      "created_at": "2024-10-17T14:53:34Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804940161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804940161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804970448",
      "pull_request_review_id": 2373476515,
      "id": 1804970448,
      "node_id": "PRRC_kwDOABII585rlanQ",
      "diff_hunk": "@@ -124,3 +143,39 @@ void SockMan::CloseSockets()\n }\n \n void SockMan::EventI2PListen(const CService&, bool) {}\n+\n+void SockMan::ThreadI2PAccept()\n+{\n+    static constexpr auto err_wait_begin = 1s;\n+    static constexpr auto err_wait_cap = 5min;\n+    auto err_wait = err_wait_begin;\n+\n+    i2p::Connection conn;\n+\n+    auto SleepOnFailure = [&]() {\n+        interruptNet.sleep_for(err_wait);\n+        if (err_wait < err_wait_cap) {\n+            err_wait += 1s;\n+        }\n+    };\n+\n+    while (!interruptNet) {\n+\n+        if (!m_i2p_sam_session->Listen(conn)) {\n+            EventI2PListen(conn.me, /*success=*/false);",
      "path": "src/common/sockman.cpp",
      "position": 305,
      "original_position": 56,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nReminding myself to check for a test that covers a child class with i2p true but no Event listener",
      "created_at": "2024-10-17T15:11:34Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804970448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804970448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 305,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804983489",
      "pull_request_review_id": 2373476515,
      "id": 1804983489,
      "node_id": "PRRC_kwDOABII585rldzB",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 86,
      "original_position": 57,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": 1803692315,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok I see NODELAY set  by ConnMan in EventNewConnectionAccepted in b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nI'm guessing we dont use KEEPALIVE for bitcoin p2p because we have out own ping/pong protocol",
      "created_at": "2024-10-17T15:19:48Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804983489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804983489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804998403",
      "pull_request_review_id": 2373476515,
      "id": 1804998403,
      "node_id": "PRRC_kwDOABII585rlhcD",
      "diff_hunk": "@@ -63,6 +96,16 @@ class SockMan\n     // Pure virtual functions must be implemented by children classes.\n     //\n \n+    /**\n+     * Be notified when a new connection has been accepted.\n+     * @param[in] sock Connected socket to communicate with the peer.\n+     * @param[in] me The address and port at our side of the connection.\n+     * @param[in] them The address and port at the peer's side of the connection.\n+     */\n+    virtual void EventNewConnectionAccepted(std::unique_ptr<Sock>&& sock,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 77,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nSeems weird to me to move the unique pointer to a connected socket out of sockman, implying that sockman itself doesn't own the connections. Peeking ahead at future commits though I think this gets resolved.",
      "created_at": "2024-10-17T15:29:01Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804998403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804998403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805112369",
      "pull_request_review_id": 2373476515,
      "id": 1805112369,
      "node_id": "PRRC_kwDOABII585rl9Qx",
      "diff_hunk": "@@ -1410,7 +1411,7 @@ class CConnman : private SockMan\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n+    std::unordered_map<NodeId, CNode*> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 302,
      "original_position": 31,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b96beb27d2b3d06a45644c537c114a08f0ccd285\r\n\r\nLove this, great optimization and makes a lot of sense.",
      "created_at": "2024-10-17T16:52:54Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805112369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805112369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1394,
      "original_line": 1414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805115729",
      "pull_request_review_id": 2373476515,
      "id": 1805115729,
      "node_id": "PRRC_kwDOABII585rl-FR",
      "diff_hunk": "@@ -45,12 +45,13 @@ FUZZ_TARGET(connman, .init = initialize_connman)\n     connman.Init(options);\n \n     CNetAddr random_netaddr;\n-    CNode random_node = ConsumeNode(fuzzed_data_provider);\n+    NodeId node_id{0};\n+    CNode random_node = ConsumeNode(fuzzed_data_provider, node_id++);",
      "path": "src/test/fuzz/connman.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b96beb27d2b3d06a45644c537c114a08f0ccd285\r\n\r\nWhy not use `GetNewNodeId()` here? (and below) Don't you have a Connman with its own `m_next_node_id`?",
      "created_at": "2024-10-17T16:55:41Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805115729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805115729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 48,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805124507",
      "pull_request_review_id": 2373476515,
      "id": 1805124507,
      "node_id": "PRRC_kwDOABII585rmAOb",
      "diff_hunk": "@@ -111,6 +111,22 @@ class SockMan\n     // alone to use the default implementation from SockMan.\n     //\n \n+    /**\n+     * SockMan would only call EventReadyToSend() if this returns true.\n+     * Can be used to temporary pause sends for a node.\n+     * The implementation in SockMan always returns true.\n+     * @param[in] node_id Node for which to confirm or cancel a call to EventReadyToSend().\n+     */\n+    virtual bool ShouldTryToSend(NodeId node_id) const;\n+\n+    /**\n+     * SockMan would only call Recv() on a node's socket if this returns true.\n+     * Can be used to temporary pause receives for a node.",
      "path": "src/common/sockman.h",
      "position": 203,
      "original_position": 14,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "bb5b91d430026c4826a2107c8c1a311518cc97ce",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bb5b91d430026c4826a2107c8c1a311518cc97ce\r\n\r\nnit s/temporary/temporarily\r\n\r\nand above",
      "created_at": "2024-10-17T17:03:08Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805124507",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805124507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 203,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805134391",
      "pull_request_review_id": 2373476515,
      "id": 1805134391,
      "node_id": "PRRC_kwDOABII585rmCo3",
      "diff_hunk": "@@ -127,6 +127,22 @@ class SockMan\n      */\n     virtual bool ShouldTryToRecv(NodeId node_id) const;\n \n+    /**\n+     * SockMan has completed the current send+recv iteration for a node.\n+     * It will do another send+recv for this node after processing all other nodes.\n+     * Can be used to execute periodic tasks for a given node.\n+     * The implementation in SockMan does nothing.\n+     * @param[in] node_id Node for which send+recv has been done.\n+     */\n+    virtual void EventIOLoopCompletedForNode(NodeId node_id);\n+\n+    /**\n+     * SockMan has completed send+recv for all nodes.\n+     * Can be used to execute periodic tasks for all nodes.\n+     * The implementation in SockMan does nothing.\n+     */\n+    virtual void EventIOLoopCompletedForAllPeers();",
      "path": "src/common/sockman.h",
      "position": 223,
      "original_position": 18,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "50cb52470ea6cc4de5a5e5260b8f308353942ec0\r\n\r\nThis is great, can be used for timed actions (like locking the wallet) we used to depend on libevent for",
      "created_at": "2024-10-17T17:12:00Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805134391",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805134391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 223,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805142536",
      "pull_request_review_id": 2373476515,
      "id": 1805142536,
      "node_id": "PRRC_kwDOABII585rmEoI",
      "diff_hunk": "@@ -2013,6 +2013,29 @@ bool CConnman::ShouldTryToRecv(NodeId node_id) const\n     return !node->fPauseRecv;\n }\n \n+void CConnman::EventIOLoopCompletedForNode(NodeId node_id)\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+\n+    CNode* node{GetNodeById(node_id)};\n+    if (node == nullptr) {\n+        return;\n+    }\n+\n+    if (InactivityCheck(*node)) {\n+        node->fDisconnect = true;\n+    }\n+}\n+\n+void CConnman::EventIOLoopCompletedForAllPeers()\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+    AssertLockNotHeld(m_reconnections_mutex);\n+\n+    DisconnectNodes();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "50cb52470ea6cc4de5a5e5260b8f308353942ec0\r\n\r\nInteresting that the parent class handles accepting connections but the child is expected to handle disconnections, and inside the utility event loop function. Of course only the derived class would know when disconnection is appropriate, I wonder if anything it makes sense just to add a comment in `sockman.h` that `EventIOLoopCompletedForAllPeers()` is expected to handle that, erasing items from `m_nodes`",
      "created_at": "2024-10-17T17:19:06Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805142536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805142536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805157675",
      "pull_request_review_id": 2373476515,
      "id": 1805157675,
      "node_id": "PRRC_kwDOABII585rmIUr",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)\n+{\n+    CService addr_bind;\n+    struct sockaddr_storage sockaddr_bind;\n+    socklen_t sockaddr_bind_len = sizeof(sockaddr_bind);\n+    if (!sock.GetSockName((struct sockaddr*)&sockaddr_bind, &sockaddr_bind_len)) {",
      "path": "src/common/sockman.cpp",
      "position": 22,
      "original_position": 9,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nthe `else {error}` looked backwards to me here at first, might be more clear to use `== 0` instead of `!` but i dunno what the official style is for this.",
      "created_at": "2024-10-17T17:32:07Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805157675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805157675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805160999",
      "pull_request_review_id": 2373476515,
      "id": 1805160999,
      "node_id": "PRRC_kwDOABII585rmJIn",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nWould this make more sense as a direct method of `Sock` ? Especially now that it returns the simpler `CService` instead of `CAddress`",
      "created_at": "2024-10-17T17:35:04Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805160999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805160999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805171602",
      "pull_request_review_id": 2373476515,
      "id": 1805171602,
      "node_id": "PRRC_kwDOABII585rmLuS",
      "diff_hunk": "@@ -74,6 +79,37 @@ class SockMan\n      */\n     void JoinSocketsThreads();\n \n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @param[out] sock Connected socket, if the operation is successful.\n+     * @param[out] i2p_transient_session I2P session, if the operation is successful.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,",
      "path": "src/common/sockman.h",
      "position": 102,
      "original_position": 50,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nThis is great. Won't be needed immediately for HTTP or StratumV2 but means we can more easily remove libevent from `bitcoin-cli` !",
      "created_at": "2024-10-17T17:44:51Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805171602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805171602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805205812",
      "pull_request_review_id": 2373476515,
      "id": 1805205812,
      "node_id": "PRRC_kwDOABII585rmUE0",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 86,
      "original_position": 57,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": 1803692315,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved to `NewSockAccepted()` in 9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
      "created_at": "2024-10-17T18:04:36Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805205812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805205812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805233524",
      "pull_request_review_id": 2373476515,
      "id": 1805233524,
      "node_id": "PRRC_kwDOABII585rma10",
      "diff_hunk": "@@ -63,6 +96,16 @@ class SockMan\n     // Pure virtual functions must be implemented by children classes.\n     //\n \n+    /**\n+     * Be notified when a new connection has been accepted.\n+     * @param[in] sock Connected socket to communicate with the peer.\n+     * @param[in] me The address and port at our side of the connection.\n+     * @param[in] them The address and port at the peer's side of the connection.\n+     */\n+    virtual void EventNewConnectionAccepted(std::unique_ptr<Sock>&& sock,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 77,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": 1804998403,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "resolved in b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "created_at": "2024-10-17T18:22:07Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805233524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805233524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806645938",
      "pull_request_review_id": 2373476515,
      "id": 1806645938,
      "node_id": "PRRC_kwDOABII585rrzqy",
      "diff_hunk": "@@ -262,8 +335,16 @@ void SockMan::EventIOLoopCompletedForAllPeers() {}\n \n void SockMan::EventI2PListen(const CService&, bool) {}\n \n+void SockMan::TestOnlyAddExistentNode(NodeId node_id, std::unique_ptr<Sock>&& sock)\n+{\n+    LOCK(m_connected_mutex);\n+    m_connected.emplace(node_id, std::make_shared<NodeSockets>(std::move(sock)));",
      "path": "src/common/sockman.cpp",
      "position": 282,
      "original_position": 149,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c133a634d10e172652ebbf05ca114037c8e551b9\r\n\r\nI know this is for testing only, but what happens if there is a NodeId collision (An existing node is inserted with a duplicate ID, replacing a connected node in sockman)?",
      "created_at": "2024-10-18T14:57:30Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1806645938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806645938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 282,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806666862",
      "pull_request_review_id": 2373476515,
      "id": 1806666862,
      "node_id": "PRRC_kwDOABII585rr4xu",
      "diff_hunk": "@@ -297,3 +378,151 @@ void SockMan::ThreadI2PAccept()\n         err_wait = err_wait_begin;\n     }\n }\n+\n+void SockMan::ThreadSocketHandler()\n+{\n+    AssertLockNotHeld(m_connected_mutex);\n+\n+    while (!interruptNet) {\n+        EventIOLoopCompletedForAllPeers();\n+\n+        // Check for the readiness of the already connected sockets and the\n+        // listening sockets in one call (\"readiness\" as in poll(2) or\n+        // select(2)). If none are ready, wait for a short while and return\n+        // empty sets.\n+        auto io_readiness{GenerateWaitSockets()};\n+        if (io_readiness.events_per_sock.empty() ||\n+            !io_readiness.events_per_sock.begin()->first->WaitMany(SELECT_TIMEOUT,",
      "path": "src/common/sockman.cpp",
      "position": 336,
      "original_position": 177,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c133a634d10e172652ebbf05ca114037c8e551b9\r\n\r\nYou might want to add another comment here - when I was trying to handle socks myself I found this a bit weird and wrote:\r\n\r\n```\r\n    // WaitMany() mine as well be a static function, the context\r\n    // of the first Sock in the vector is not relevant.\r\n```",
      "created_at": "2024-10-18T15:13:32Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1806666862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806666862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": 335,
      "original_start_line": 394,
      "start_side": "RIGHT",
      "line": 336,
      "original_line": 395,
      "side": "RIGHT"
    }
  ]
}