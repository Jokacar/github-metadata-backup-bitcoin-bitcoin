{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409",
    "id": 1717651443,
    "node_id": "PR_kwDOABII585mYUfz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29409",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29409.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29409.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/eec0d31850aa1f7c520a46c417320f480f23fb1c",
    "number": 29409,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add capnp wrapper for Chain interface",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changes making it possible to call `interface::Chain` over a socket.\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [],
    "created_at": "2024-02-08T13:54:40Z",
    "updated_at": "2024-07-26T16:46:07Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "102a9f938b04bbe90755e0edc71bdfc66e73889c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/ipc-chain",
      "ref": "pr/ipc-chain",
      "sha": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 12,
        "watchers_count": 12,
        "size": 260563,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-26T16:05:15Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-01-25T23:52:08Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "30cef53707fb62ab1c9e73c2b5bc8b006e0613d3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35665,
        "stargazers_count": 77344,
        "watchers_count": 77344,
        "size": 263928,
        "default_branch": "master",
        "open_issues_count": 665,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-26T16:48:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-26T15:29:24Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 765,
    "deletions": 6,
    "changed_files": 12,
    "commits": 6,
    "review_comments": 9,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 1934172101,
      "node_id": "IC_kwDOABII585zSR_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934172101",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T13:54:43Z",
      "updated_at": "2024-07-26T02:25:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29409).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [cbergqvist](https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906789449) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30510](https://github.com/bitcoin/bitcoin/pull/30510) (multiprocess: Add IPC wrapper for Mining interface by ryanofsky)\n* [#30437](https://github.com/bitcoin/bitcoin/pull/30437) (multiprocess: add bitcoin-mine test program by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-1934172101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "ready_for_review",
      "id": 11746250909,
      "node_id": "RFRE_lADOABII585-rKJvzwAAAAK8IZCd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11746250909",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T14:04:44Z"
    },
    {
      "event": "labeled",
      "id": 11747665340,
      "node_id": "LE_lADOABII585-rKJvzwAAAAK8NyW8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11747665340",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T15:41:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1934397410,
      "node_id": "IC_kwDOABII585zTI_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934397410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T15:41:22Z",
      "updated_at": "2024-02-08T15:41:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21365328047</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-1934397410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11751095144,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAK8a3to",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11751095144",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T20:45:31Z"
    },
    {
      "event": "unlabeled",
      "id": 11752383222,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAK8fyL2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11752383222",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T23:41:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1901881088,
      "node_id": "PRR_kwDOABII585xXGcA",
      "url": null,
      "actor": null,
      "commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I'm eager for multiprocess to get in, but unable to do in-depth reviews in tolerable time due to lack of domain-knowledge. Did a surface level review of 2fd1042. Hope you don't mind.",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1901881088",
      "submitted_at": "2024-02-28T13:56:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11953976031,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAALIgzLf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11953976031",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T16:08:29Z"
    },
    {
      "event": "reviewed",
      "id": 1906565161,
      "node_id": "PRR_kwDOABII585xo-Ap",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review!\r\n\r\nUpdated 2fd10424c04397e50c6683a82db8a0bb68e0f6cc -> 41831abe06d388ed18b5dbed739bc8fe76457f86 ([`pr/ipc-chain.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.2) -> [`pr/ipc-chain.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.2..pr/ipc-chain.3)) with suggested changes.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906565161",
      "submitted_at": "2024-02-28T16:14:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "reviewed",
      "id": 1906789449,
      "node_id": "PRR_kwDOABII585xp0xJ",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for incorporating some of my suggestions. Surface-level ACK of 41831ab. :)",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906789449",
      "submitted_at": "2024-02-28T16:58:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "labeled",
      "id": 11955115762,
      "node_id": "LE_lADOABII585-rKJvzwAAAALIlJby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955115762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T17:36:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1921347149,
      "node_id": "PRR_kwDOABII585yhW5N",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "being able to work with any socket (TCP or UNIX) makes a lot of sense.\r\nyou could have `bitcoin-node` on some secure computing host.\r\nand then one or more `bitcoin-walet` on over-the-network hosts.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1921347149",
      "submitted_at": "2024-03-07T02:57:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "convert_to_draft",
      "id": 12511833238,
      "node_id": "CTDE_lADOABII585-rKJvzwAAAALpw2yW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12511833238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T17:34:24Z"
    },
    {
      "event": "labeled",
      "id": 12823719760,
      "node_id": "LE_lADOABII585-rKJvzwAAAAL8Wm9Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12823719760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T21:05:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13109400594,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMNYZQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109400594",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T01:53:09Z"
    },
    {
      "event": "ready_for_review",
      "id": 13109423298,
      "node_id": "RFRE_lADOABII585-rKJvzwAAAAMNYezC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109423298",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T01:55:50Z"
    },
    {
      "event": "unlabeled",
      "id": 13109435143,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAMNYhsH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109435143",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T01:57:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13121645459,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMOHGuT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13121645459",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T19:10:50Z"
    },
    {
      "event": "unlabeled",
      "id": 13124717029,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAMOS0nl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13124717029",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T01:55:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2210605752,
      "node_id": "IC_kwDOABII586Dwyq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2210605752",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T10:14:06Z",
      "updated_at": "2024-07-05T10:14:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure what a good approach for reviewing this might be. How can I validate the changes without tests? Should I be running this as part of a parent pull request? The first two commits seem fairly mechanical, but the last one less so. The comments in the code are helpful, but some pointers in the PR description for what to look out for, or a broad description of the approaches taken would be helpful too. E.g. why is so much custom functionality introduced for `findBlock`? ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2210605752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "commented",
      "id": 2214655675,
      "node_id": "IC_kwDOABII586EAPa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2214655675",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T16:38:44Z",
      "updated_at": "2024-07-08T16:38:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2210605752\r\n\r\nThanks for the questions.\r\n\r\n> I'm not sure what a good approach for reviewing this might be. How can I validate the changes without tests? Should I be running this as part of a parent pull request?\r\n\r\nYou could test this as part of #10102, and I should probably add some unit test code to [ipc_test.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/test/ipc_test.cpp) to make sure new runtime code in [capnp/chain.cpp](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-chain/src/ipc/capnp/chain.cpp) and [capnp/common-types.h](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-chain/src/ipc/capnp/common-types.h) functions has test coverage.\r\n\r\nMost of the code in the PR is evaluated at compile time though, so for example, if there is a mismatch in any of the interface declarations there will be build errors.\r\n\r\n> The first two commits seem fairly mechanical, but the last one less so. The comments in the code are helpful, but some pointers in the PR description for what to look out for, or a broad description of the approaches taken would be helpful too.\r\n\r\nThis is helpful feedback, and I will try to add more comments. I know it needs more comments, but it's hard for me to know where to add them without being asked because I'm too familiar with everything here. This PR is a case where [\"Don't spend more than a few seconds trying to understand it\"](https://www.googblogs.com/code-health-understanding-code-in-review/) review really advice applies, so if something doesn't make sense, you should just ask so I can clarify. If something doesn't make sense to you, it probably doesn't make sense to other people either.\r\n\r\n> E.g. why is so much custom functionality introduced for `findBlock`?\r\n\r\nWill add a comment, but `Chain::findBlock` and the handful of other `Chain` methods taking [`FoundBlock`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/interfaces/chain.h#L50-L81) input/output arguments need custom code because these are converted to [`FoundBlockParam`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L150-L159) and [`FoundBlockResult`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L161-L171) Cap'n Proto structs to make IPC calls, and these structs are recursive. Libmultiprocess has decent support for converting back and forth between C++ classes and capnp structs generally, but it would be hard for it support recursive structs. It also might have a hard time in this case because there is a not 1:1 mapping between fields in the c++ class and capnp structs. So the conversion for these types is completely custom.\r\n\r\nSimilar custom code also exists for the [C++ `BlockInfo`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/interfaces/chain.h#L83-L97) struct which is complicated to translate to the [Capnp `BlockInfo`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L173-L184) struct, because it has internal pointers and references, so it has [custom code](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.cpp#L113-L164) because it can't really be converted automatically.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2214655675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2NzhkZGFlNjY2Y2NjZjY1NTNkYThhNzc0MTRkYjU3Nzc5YThlZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8678ddae666cccf6553da8a77414db57779a8ed9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8678ddae666cccf6553da8a77414db57779a8ed9",
      "tree": {
        "sha": "de3a593238f61a4b3837f9c4e6de9371a3b709b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de3a593238f61a4b3837f9c4e6de9371a3b709b2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec700f0a7648378ec99b151840928de3e76c7788",
          "sha": "ec700f0a7648378ec99b151840928de3e76c7788",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ec700f0a7648378ec99b151840928de3e76c7788"
        }
      ],
      "message": "depends: Update libmultiprocess library for CustomMessage functions\n\nThis update brings in the following change which allows simplifying the\nmultiprocess code in bitcoin:\n\nhttps://github.com/chaincodelabs/libmultiprocess/pull/105 types: Add Custom{Build,Read,Pass}Message hooks",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-26T10:51:46Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "sha": "8678ddae666cccf6553da8a77414db57779a8ed9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0MTU4YzE5MDU0Zjk3MzY3YmU3ZjFmYWMzMmZmNzJhMmEwOWJmNWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4158c19054f97367be7f1fac32ff72a2a09bf5d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4158c19054f97367be7f1fac32ff72a2a09bf5d",
      "tree": {
        "sha": "ae60b3b762f3a1707884526c5ed731d7d1a448f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae60b3b762f3a1707884526c5ed731d7d1a448f7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8678ddae666cccf6553da8a77414db57779a8ed9",
          "sha": "8678ddae666cccf6553da8a77414db57779a8ed9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8678ddae666cccf6553da8a77414db57779a8ed9"
        }
      ],
      "message": "multiprocess: Add serialization code for CTransaction\n\nAdd support for passing CTransaction and CTransactionRef types to IPC\nfunctions.\n\nThese types can't be passed currently because IPC serialization code currently\nonly supports deserializing types that have an Unserialize() method, which\nCTransaction does not, because it is supposed to represent immutable\ntransactions. Work around this by adding a CustomReadField overload that will\ncall CTransaction's deserialize_type constructor.\n\nThese types also can't be passed currently because serializing transactions\nrequires TransactionSerParams to be set. Fix this by setting TX_WITH_WITNESS as\ndefault serialization parameters for IPC code.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-26T10:51:46Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "f4158c19054f97367be7f1fac32ff72a2a09bf5d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5OGZiZDI5NWJlMDYwYjQyMWIzNGI2M2YwZGJmOTU0ZGQ1MjhmNzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/198fbd295be060b421b34b63f0dbf954dd528f76",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/198fbd295be060b421b34b63f0dbf954dd528f76",
      "tree": {
        "sha": "2171d21e1eb52ed6711ea511721e676e2da36baf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2171d21e1eb52ed6711ea511721e676e2da36baf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4158c19054f97367be7f1fac32ff72a2a09bf5d",
          "sha": "f4158c19054f97367be7f1fac32ff72a2a09bf5d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f4158c19054f97367be7f1fac32ff72a2a09bf5d"
        }
      ],
      "message": "Add capnp serialization code for bitcoin types\n\n- Add capnp ToBlob, ToArray, Wrap, Serialize, and Unserialize helper functions\n- Add support for std::chrono::seconds capnp serialization\n- Add support for util::Result capnp serialization",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "sha": "198fbd295be060b421b34b63f0dbf954dd528f76"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3MWViMjcyZjI5Zjk0YzFhZTdjMjQ1Yzk5ZjhmZDZjZWQwMjM5ZDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/071eb272f29f94c1ae7c245c99f8fd6ced0239d5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/071eb272f29f94c1ae7c245c99f8fd6ced0239d5",
      "tree": {
        "sha": "4e0bc739dcd6bbbab12af50bc086016040f4319d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e0bc739dcd6bbbab12af50bc086016040f4319d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/198fbd295be060b421b34b63f0dbf954dd528f76",
          "sha": "198fbd295be060b421b34b63f0dbf954dd528f76",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/198fbd295be060b421b34b63f0dbf954dd528f76"
        }
      ],
      "message": "multiprocess: Add serialization code for vector<char>",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "071eb272f29f94c1ae7c245c99f8fd6ced0239d5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNlZDY1YWYxYTM4ZjUwMmIyNzdjMGE5YTBhNDAzMzVlZGIzMDk2MTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ed65af1a38f502b277c0a9a0a40335edb309610",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed65af1a38f502b277c0a9a0a40335edb309610",
      "tree": {
        "sha": "63b4b1a41e0fc23ac34b24cfc3b70e888d5321bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63b4b1a41e0fc23ac34b24cfc3b70e888d5321bc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/071eb272f29f94c1ae7c245c99f8fd6ced0239d5",
          "sha": "071eb272f29f94c1ae7c245c99f8fd6ced0239d5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/071eb272f29f94c1ae7c245c99f8fd6ced0239d5"
        }
      ],
      "message": "Add capnp wrapper for Handler interface",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "3ed65af1a38f502b277c0a9a0a40335edb309610"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlYzBkMzE4NTBhYTFmN2M1MjBhNDZjNDE3MzIwZjQ4MGYyM2ZiMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "tree": {
        "sha": "b1f0e9cb408024b533e21f94b184df983757250f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1f0e9cb408024b533e21f94b184df983757250f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ed65af1a38f502b277c0a9a0a40335edb309610",
          "sha": "3ed65af1a38f502b277c0a9a0a40335edb309610",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed65af1a38f502b277c0a9a0a40335edb309610"
        }
      ],
      "message": "Add capnp wrapper for Chain interface",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "eec0d31850aa1f7c520a46c417320f480f23fb1c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13663263105,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMuZNmB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663263105",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T16:05:16Z"
    },
    {
      "event": "reviewed",
      "id": 2202254574,
      "node_id": "PRR_kwDOABII586DQ7zu",
      "url": null,
      "actor": null,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated ab6b795f218b2074a9c9c05fcc94ec37eccca5a5 -> eec0d31850aa1f7c520a46c417320f480f23fb1c ([`pr/ipc-chain.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.5) -> [`pr/ipc-chain.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.5-rebase..pr/ipc-chain.6)), rebasing and dropping no longer needed code after libmultiprocess update, adding comments and tests, and splitting up commits. There is still more to do to splitting up commits and adding tests, however.\r\n\r\nThis PR now shares a little bit of code with #30510, so will get smaller if #30510 is merged. #30510 is also simpler and should be easier to review, so will mark this as a draft, although feedback is still welcome on this PR especially if there are questions or things that need more explanation.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1921347149\r\n\r\n> being able to work with any socket (TCP or UNIX) makes a lot of sense. you could have `bitcoin-node` on some secure computing host. and then one or more `bitcoin-walet` on over-the-network hosts\r\n\r\nYes this PR does not actually expose a socket but #30509 does, and #19460 uses it for the wallet (and #19461 uses it for the gui, and https://github.com/Sjors/bitcoin/pull/48 and https://github.com/bitcoin/bitcoin/pull/30437 use it for the mining interface\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2202254574",
      "submitted_at": "2024-07-26T16:34:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "convert_to_draft",
      "id": 13663543780,
      "node_id": "CTDE_lADOABII585-rKJvzwAAAAMuaSHk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663543780",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T16:35:11Z"
    },
    {
      "event": "reviewed",
      "id": 2202166099,
      "node_id": "PRR_kwDOABII586DQmNT",
      "url": null,
      "actor": null,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2202166099",
      "submitted_at": "2024-07-26T16:46:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503377237",
      "pull_request_review_id": 1901881088,
      "id": 1503377237,
      "node_id": "PRRC_kwDOABII585Zm7dV",
      "diff_hunk": "@@ -103,6 +197,65 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                               Input&& input, ReadDest&& read_dest)\n+{\n+    read_dest.construct(ReadField(TypeList<std::string>(), invoke_context, input, mp::ReadDestTemp<std::string>()));\n+}\n+\n+//! Overload CustomBuildField and CustomReadField to serialize util::Result\n+//! return values as common.capnp Result and ResultVoid structs\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<util::Result<LocalType>>, Priority<1>, InvokeContext& invoke_context, Value&& value,\n+                      Output&& output)\n+{\n+    auto result = output.init();\n+    if (value) {",
      "path": "src/ipc/capnp/common-types.h",
      "position": 174,
      "original_position": 174,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: compiles with `value.has_value()` here, which is clearer than `operator bool()`. But maybe you were intending to support types which don't have `.has_value()`?",
      "created_at": "2024-02-26T22:12:50Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503377237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503377237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503832875",
      "pull_request_review_id": 1901881088,
      "id": 1503832875,
      "node_id": "PRRC_kwDOABII585Zoqsr",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+#define BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+\n+#include <ipc/capnp/chain.capnp.proxy.h>\n+#include <ipc/capnp/common.capnp.proxy-types.h>\n+#include <ipc/capnp/handler.capnp.proxy-types.h>\n+#include <interfaces/chain.h>\n+#include <policy/fees.h>\n+#include <rpc/server.h>\n+\n+#include <any>",
      "path": "src/ipc/capnp/chain-types.h",
      "position": null,
      "original_position": 15,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Builds fine without `#include <any>` using `g++` on Linux?",
      "created_at": "2024-02-27T08:33:47Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503832875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503832875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505998416",
      "pull_request_review_id": 1901881088,
      "id": 1505998416,
      "node_id": "PRRC_kwDOABII585Zw7ZQ",
      "diff_hunk": "@@ -256,6 +256,146 @@ decltype(auto) CustomReadField(TypeList<util::Result<LocalType>>, Priority<1>, I\n         }\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize other types of\n+//! objects that have CustomBuildMessage and CustomReadMessage overloads.\n+//! Defining BuildMessage and ReadMessage overloads is simpler than defining\n+//! BuildField and ReadField overloads because these overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+                      decltype(CustomBuildMessage(invoke_context, value, std::move(output.get())))* enable = nullptr)\n+{\n+    CustomBuildMessage(invoke_context, value, std::move(output.init()));\n+}\n+\n+template <typename LocalType, typename Reader, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Reader&& reader,\n+                               ReadDest&& read_dest,\n+                               decltype(CustomReadMessage(invoke_context, reader.get(),\n+                                                          std::declval<LocalType&>()))* enable = nullptr)\n+{\n+    return read_dest.update([&](auto& value) { CustomReadMessage(invoke_context, reader.get(), value); });\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::get method if it has one,\n+//! otherwise return capnp::Void.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeGet(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::get(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeGet(...)\n+{\n+    return {};\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::init method if it has one,\n+//! otherwise do nothing.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeInit(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::init(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeInit(...)\n+{\n+    return {};\n+}\n+\n+//! Overload CustomPassField to serialize types of objects that have\n+//! CustomPassMessage overloads. Defining PassMessage overloads is simpler than\n+//! defining PassField overloads, because PassMessage overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+//!\n+//! Defining a PassField or PassMessage overload is useful for input/output\n+//! parameters. If an overload is not defined these parameters will just be\n+//! deserialized on the server side with ReadField into a temporary variable,\n+//! then the server method will be called passing the temporary variable as a\n+//! parameter, then the temporary variable will be serialized and sent back to\n+//! the client with BuildField. But if a PassField or PassMessage overload is\n+//! defined, the overload is called with a callback to invoke and pass\n+//! parameters to the server side function, and run arbitrary code before and\n+//! after invoking the function.\n+template <typename Accessor, typename... LocalTypes, typename ServerContext, typename Fn, typename... Args>\n+auto CustomPassField(TypeList<LocalTypes...>, ServerContext& server_context, Fn&& fn, Args&&... args)\n+    -> decltype(CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                                  MaybeGet<Accessor>(server_context.call_context.getResults()), nullptr))\n+{\n+    CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                      MaybeInit<Accessor>(server_context.call_context.getResults()),\n+                      [&](LocalTypes... param) { fn.invoke(server_context, std::forward<Args>(args)..., param...); });\n+}\n+\n+//! Generic ::capnp::Data field builder for any class that a Span can be\n+//! constructed from, particularly BaseHash and base_blob classes and\n+//! subclasses. It's also used to serialize vector<unsigned char>\n+//! GCSFilter::ElementSet set elements.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 83,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this say ...\"vector\\<unsigned char\\> *and* GCSFilter::ElementSet set elements.\"?",
      "created_at": "2024-02-28T13:51:28Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1505998416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505998416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": 337,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146321",
      "pull_request_review_id": 1906565161,
      "id": 1506146321,
      "node_id": "PRRC_kwDOABII585ZxfgR",
      "diff_hunk": "@@ -103,6 +197,65 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                               Input&& input, ReadDest&& read_dest)\n+{\n+    read_dest.construct(ReadField(TypeList<std::string>(), invoke_context, input, mp::ReadDestTemp<std::string>()));\n+}\n+\n+//! Overload CustomBuildField and CustomReadField to serialize util::Result\n+//! return values as common.capnp Result and ResultVoid structs\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<util::Result<LocalType>>, Priority<1>, InvokeContext& invoke_context, Value&& value,\n+                      Output&& output)\n+{\n+    auto result = output.init();\n+    if (value) {",
      "path": "src/ipc/capnp/common-types.h",
      "position": 174,
      "original_position": 174,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": 1503377237,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503377237\r\n\r\n> Nit: compiles with `value.has_value()` here, which is clearer than `operator bool()`. But maybe you were intending to support types which don't have `.has_value()`?\r\n\r\nI mostly just don't agree it is clearer and I like the \"if value, use value\" pattern from c++ and python. I think it removes noise and makes code easier to read, also makes it easier for code to evolve, for example updating code using a plain pointer to switch to smart pointer.\r\n\r\nIn this case I am looking forward to this code working with `ResultPtr` from #26022, where operator bool and has_value have different meanings. Operator bool in that case is true if a pointer is contained AND the pointer value is not null. has_value is true in that case if a pointer is contained, whether or not it is null. After #26022, this code would look something like:\r\n\r\n```c++\r\nif (value) {\r\n     BuildField(..., ValueAccessor, *value);\r\n}\r\nif (!value.has_value()) {\r\n    BuildField(..., FailureAccessor, value.GetFailure());\r\n}\r\nBuildField(..., ErrorsAccessor, value.GetErrors());\r\nBuildField(..., WarningsAccessor, value.GetWarnings());\r\n```\r\n\r\nAnd if `value` is a `ResultPtr` the first line would need to be `if (value)` not `if value.has_value()` to work.",
      "created_at": "2024-02-28T15:25:51Z",
      "updated_at": "2024-02-28T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506146321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146538",
      "pull_request_review_id": 1906565161,
      "id": 1506146538,
      "node_id": "PRRC_kwDOABII585Zxfjq",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+#define BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+\n+#include <ipc/capnp/chain.capnp.proxy.h>\n+#include <ipc/capnp/common.capnp.proxy-types.h>\n+#include <ipc/capnp/handler.capnp.proxy-types.h>\n+#include <interfaces/chain.h>\n+#include <policy/fees.h>\n+#include <rpc/server.h>\n+\n+#include <any>",
      "path": "src/ipc/capnp/chain-types.h",
      "position": null,
      "original_position": 15,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": 1503832875,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503832875\r\n\r\n> Builds fine without `#include <any>` using `g++` on Linux?\r\n\r\nGood catch, I think this must have been left over from a previous version of this file. Removed now.",
      "created_at": "2024-02-28T15:26:01Z",
      "updated_at": "2024-02-28T16:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506146538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506153142",
      "pull_request_review_id": 1906565161,
      "id": 1506153142,
      "node_id": "PRRC_kwDOABII585ZxhK2",
      "diff_hunk": "@@ -256,6 +256,146 @@ decltype(auto) CustomReadField(TypeList<util::Result<LocalType>>, Priority<1>, I\n         }\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize other types of\n+//! objects that have CustomBuildMessage and CustomReadMessage overloads.\n+//! Defining BuildMessage and ReadMessage overloads is simpler than defining\n+//! BuildField and ReadField overloads because these overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+                      decltype(CustomBuildMessage(invoke_context, value, std::move(output.get())))* enable = nullptr)\n+{\n+    CustomBuildMessage(invoke_context, value, std::move(output.init()));\n+}\n+\n+template <typename LocalType, typename Reader, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Reader&& reader,\n+                               ReadDest&& read_dest,\n+                               decltype(CustomReadMessage(invoke_context, reader.get(),\n+                                                          std::declval<LocalType&>()))* enable = nullptr)\n+{\n+    return read_dest.update([&](auto& value) { CustomReadMessage(invoke_context, reader.get(), value); });\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::get method if it has one,\n+//! otherwise return capnp::Void.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeGet(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::get(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeGet(...)\n+{\n+    return {};\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::init method if it has one,\n+//! otherwise do nothing.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeInit(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::init(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeInit(...)\n+{\n+    return {};\n+}\n+\n+//! Overload CustomPassField to serialize types of objects that have\n+//! CustomPassMessage overloads. Defining PassMessage overloads is simpler than\n+//! defining PassField overloads, because PassMessage overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+//!\n+//! Defining a PassField or PassMessage overload is useful for input/output\n+//! parameters. If an overload is not defined these parameters will just be\n+//! deserialized on the server side with ReadField into a temporary variable,\n+//! then the server method will be called passing the temporary variable as a\n+//! parameter, then the temporary variable will be serialized and sent back to\n+//! the client with BuildField. But if a PassField or PassMessage overload is\n+//! defined, the overload is called with a callback to invoke and pass\n+//! parameters to the server side function, and run arbitrary code before and\n+//! after invoking the function.\n+template <typename Accessor, typename... LocalTypes, typename ServerContext, typename Fn, typename... Args>\n+auto CustomPassField(TypeList<LocalTypes...>, ServerContext& server_context, Fn&& fn, Args&&... args)\n+    -> decltype(CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                                  MaybeGet<Accessor>(server_context.call_context.getResults()), nullptr))\n+{\n+    CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                      MaybeInit<Accessor>(server_context.call_context.getResults()),\n+                      [&](LocalTypes... param) { fn.invoke(server_context, std::forward<Args>(args)..., param...); });\n+}\n+\n+//! Generic ::capnp::Data field builder for any class that a Span can be\n+//! constructed from, particularly BaseHash and base_blob classes and\n+//! subclasses. It's also used to serialize vector<unsigned char>\n+//! GCSFilter::ElementSet set elements.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 83,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": 1505998416,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1505998416\r\n\r\n> Should this say ...\"vector<unsigned char> _and_ GCSFilter::ElementSet set elements.\"?\r\n\r\nI think it's technically correct because the the vectors _are_ the set elements but I changed the comment to make it clearer.",
      "created_at": "2024-02-28T15:30:02Z",
      "updated_at": "2024-02-28T16:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506153142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506153142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": 337,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515411394",
      "pull_request_review_id": 1921347149,
      "id": 1515411394,
      "node_id": "PRRC_kwDOABII585aU1fC",
      "diff_hunk": "@@ -6,16 +6,63 @@\n #define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n \n #include <clientversion.h>\n+#include <protocol.h>\n #include <streams.h>\n #include <univalue.h>\n+#include <util/result.h>\n+#include <util/translation.h>\n \n #include <cstddef>\n #include <mp/proxy-types.h>\n #include <type_traits>\n+#include <unordered_set>\n #include <utility>\n \n namespace ipc {\n namespace capnp {\n+//! Convert kj::ArrayPtr to base_blob.\n+template <typename T>\n+inline T ToBlob(const kj::ArrayPtr<const kj::byte>& array)\n+{\n+    return T({array.begin(), array.begin() + array.size()});\n+}\n+\n+//! Convert base_blob to kj::ArrayPtr.\n+template <typename T>\n+inline kj::ArrayPtr<const kj::byte> ToArray(const T& blob)\n+{\n+    return {reinterpret_cast<const kj::byte*>(blob.data()), blob.size()};\n+}\n+\n+//! Construct a ParamStream wrapping data stream with serialization parameters\n+//! needed to pass transaction and address objects between bitcoin processes.\n+template<typename S>\n+auto Wrap(S& s)\n+{\n+    return ParamsStream{s, TX_WITH_WITNESS, CAddress::V2_NETWORK};",
      "path": "src/ipc/capnp/common-types.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i think `Wrap` could be parameterized with any `CAddress` version.\r\ne.g useful if someone wanna test the native crypto noise framework between bitcoin processes.\r\nor in the future experiment with better crypto-primitives for bip324.",
      "created_at": "2024-03-07T02:54:34Z",
      "updated_at": "2024-03-07T02:57:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1515411394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515411394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693315482",
      "pull_request_review_id": 2202166099,
      "id": 1693315482,
      "node_id": "PRRC_kwDOABII585k7fGa",
      "diff_hunk": "@@ -143,6 +197,64 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,",
      "path": "src/ipc/capnp/common-types.h",
      "position": 161,
      "original_position": 103,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "198fbd295be060b421b34b63f0dbf954dd528f76",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a question: From what I gathered so far `UniValue` is required in these interfaces for error handling (like here) and to pass around the ban map. Is that correct? It seems unfortunate to me that `UniValue` types end up in the interfaces and need to be handled here. Is the intention to eventually refactor this?",
      "created_at": "2024-07-26T16:19:38Z",
      "updated_at": "2024-07-26T16:46:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693315482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693315482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693325216",
      "pull_request_review_id": 2202254574,
      "id": 1693325216,
      "node_id": "PRRC_kwDOABII585k7heg",
      "diff_hunk": "@@ -6,16 +6,63 @@\n #define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n \n #include <clientversion.h>\n+#include <protocol.h>\n #include <streams.h>\n #include <univalue.h>\n+#include <util/result.h>\n+#include <util/translation.h>\n \n #include <cstddef>\n #include <mp/proxy-types.h>\n #include <type_traits>\n+#include <unordered_set>\n #include <utility>\n \n namespace ipc {\n namespace capnp {\n+//! Convert kj::ArrayPtr to base_blob.\n+template <typename T>\n+inline T ToBlob(const kj::ArrayPtr<const kj::byte>& array)\n+{\n+    return T({array.begin(), array.begin() + array.size()});\n+}\n+\n+//! Convert base_blob to kj::ArrayPtr.\n+template <typename T>\n+inline kj::ArrayPtr<const kj::byte> ToArray(const T& blob)\n+{\n+    return {reinterpret_cast<const kj::byte*>(blob.data()), blob.size()};\n+}\n+\n+//! Construct a ParamStream wrapping data stream with serialization parameters\n+//! needed to pass transaction and address objects between bitcoin processes.\n+template<typename S>\n+auto Wrap(S& s)\n+{\n+    return ParamsStream{s, TX_WITH_WITNESS, CAddress::V2_NETWORK};",
      "path": "src/ipc/capnp/common-types.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": 1515411394,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1515411394\r\n\r\n> i think `Wrap` could be parameterized with any `CAddress` version. e.g useful if someone wanna test the native crypto noise framework between bitcoin processes. or in the future experiment with better crypto-primitives for bip324.\r\n\r\nFor now the Wrap function is basically a workaround for not having a serialization option that says \"serialize all the data in this object to a stream, I don't care about the specific serialization format.\" So the formats here just chosen to preserve all data, and don't really matter otherwise.\r\n\r\nBut I could imagine use-cases like you are suggesting where we may want to customize which serialization format is used depending on the IPC connection. I think it would not be that hard to do by adding parameters to Wrap, which is not called many places, or by writing different CustomReadField/BuildField overloads which do not call Wrap. For now though the easiest thing is for the wrapped stream to just hardcode parameters that serialize all the data.",
      "created_at": "2024-07-26T16:29:15Z",
      "updated_at": "2024-07-26T16:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693325216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693325216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    }
  ]
}