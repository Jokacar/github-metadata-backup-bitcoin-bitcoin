{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31356",
    "id": 2196126736,
    "node_id": "PR_kwDOABII586C5jwQ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31356",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31356.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31356.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31356",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31356/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31356/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31356/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/632766aee684e9dde6e13b1dc240a041ce0206bc",
    "number": 31356,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add and use `satToBtc` and `btcToSat` util functions",
    "user": {
      "login": "andremralves",
      "id": 71379045,
      "node_id": "MDQ6VXNlcjcxMzc5MDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/71379045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andremralves",
      "html_url": "https://github.com/andremralves",
      "followers_url": "https://api.github.com/users/andremralves/followers",
      "following_url": "https://api.github.com/users/andremralves/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andremralves/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andremralves/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andremralves/subscriptions",
      "organizations_url": "https://api.github.com/users/andremralves/orgs",
      "repos_url": "https://api.github.com/users/andremralves/repos",
      "events_url": "https://api.github.com/users/andremralves/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andremralves/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Introduce utility functions `satToBtc` and `btcToSat` to simplify and standardize conversions between satoshis and bitcoins in functional tests\r\n\r\n#closes #31345\r\n\r\n## Number of updates\r\n```bash\r\n➜  bitcoin git:(btc-to-sat) ✗ git grep -n \"satToBtc(\" -- '*.py' | wc -l\r\n22\r\n➜  bitcoin git:(btc-to-sat) ✗ git grep -n \"btcToSat(\" -- '*.py' | wc -l\r\n152\r\n```\r\n\r\n<details>\r\n<summary>Satoshis to BTC conversion instances</summary>\r\n\r\n```bash\r\ntest/functional/feature_fee_estimation.py:130:        fee_rate=satToBtc(Decimal(feerate * 1000)),\r\ntest/functional/feature_fee_estimation.py:303:        high_feerate_kvb = satToBtc(Decimal(high_feerate)) * 10 ** 3\r\ntest/functional/feature_rbf.py:212:            fee=(satToBtc(Decimal(fee))) * n,\r\ntest/functional/feature_rbf.py:221:            fee=satToBtc(Decimal(fee)) * n + Decimal(\"0.1\"),\r\ntest/functional/feature_rbf.py:241:                fee=2 * (satToBtc(Decimal(fee))) * n,\r\ntest/functional/feature_rbf.py:357:                fee=satToBtc(Decimal(fee)),\r\ntest/functional/interface_usdt_mempool.py:172:        tx = self.wallet.send_self_transfer(from_node=node, fee=satToBtc(fee))\r\ntest/functional/interface_usdt_mempool.py:209:        tx = self.wallet.send_self_transfer(from_node=node, fee=satToBtc(fee))\r\ntest/functional/interface_usdt_mempool.py:258:            from_node=node, utxo_to_spend=utxo, fee=satToBtc(original_fee)\r\ntest/functional/interface_usdt_mempool.py:265:            from_node=node, utxo_to_spend=utxo, fee=satToBtc(replacement_fee)\r\ntest/functional/mempool_ephemeral_dust.py:41:        result[\"new_utxos\"][0][\"value\"] = satToBtc(Decimal(result[\"tx\"].vout[0].nValue))\r\ntest/functional/mempool_ephemeral_dust.py:50:        result[\"new_utxos\"].append({\"txid\": new_txid, \"vout\": len(result[\"tx\"].vout) - 1, \"value\": satToBtc(Decimal(output_value)), \"height\": 0, \"coinbase\": False, \"confirmations\": 0})\r\ntest/functional/mempool_package_rbf.py:167:        incremental_sats_required = satToBtc(Decimal(package_3_size))\r\ntest/functional/mining_prioritisetransaction.py:99:        fee_delta_b = satToBtc(Decimal(9999))\r\ntest/functional/mining_prioritisetransaction.py:100:        fee_delta_c_1 = satToBtc(Decimal(-1234))\r\ntest/functional/mining_prioritisetransaction.py:101:        fee_delta_c_2 = satToBtc(Decimal(8888))\r\ntest/functional/p2p_ibd_txrelay.py:32:MAX_FEE_FILTER = satToBtc(Decimal(9170997))\r\ntest/functional/p2p_ibd_txrelay.py:33:NORMAL_FEE_FILTER = satToBtc(Decimal(100))\r\ntest/functional/test_framework/messages.py:237:def satToBtc(sat_value):\r\ntest/functional/test_framework/wallet.py:328:        fee = satToBtc(Decimal(inputs_value_total - outputs_value_total))\r\ntest/functional/test_framework/wallet.py:347:                value=satToBtc(Decimal(tx.vout[i].nValue)),\r\ntest/functional/wallet_import_rescan.py:280:            variant.initial_amount = get_rand_amount(min_amount=(satToBtc(500 * 20) + AMOUNT_DUST))\r\n```\r\n</details>\r\n\r\n<details>\r\n  <summary>BTC to Satoshis conversion instances</summary>\r\n\r\n```bash\r\ntest/functional/feature_bip68_sequence.py:94:        value = int(btcToSat(utxo[\"value\"] - self.relayfee))\r\ntest/functional/feature_bip68_sequence.py:115:        tx2.vout = [CTxOut(int(value - btcToSat(self.relayfee)), SCRIPT_W0_SH_OP_TRUE)]\r\ntest/functional/feature_bip68_sequence.py:200:                value += btcToSat(utxos[j][\"value\"])\r\ntest/functional/feature_bip68_sequence.py:203:            tx.vout.append(CTxOut(int(value - btcToSat(self.relayfee * tx_size) / 1000), SCRIPT_W0_SH_OP_TRUE))\r\ntest/functional/feature_bip68_sequence.py:233:        tx2.vout = [CTxOut(int(tx1.vout[0].nValue - btcToSat(self.relayfee)), SCRIPT_W0_SH_OP_TRUE)]\r\ntest/functional/feature_bip68_sequence.py:253:            tx.vout = [CTxOut(int(orig_tx.vout[0].nValue - btcToSat(relayfee)), SCRIPT_W0_SH_OP_TRUE)]\r\ntest/functional/feature_bip68_sequence.py:270:        self.nodes[0].prioritisetransaction(txid=tx2.hash, fee_delta=int(btcToSat(-self.relayfee)))\r\ntest/functional/feature_bip68_sequence.py:283:        self.nodes[0].prioritisetransaction(txid=tx2.hash, fee_delta=int(btcToSat(self.relayfee)))\r\ntest/functional/feature_bip68_sequence.py:310:        tx5.vout[0].nValue += int(btcToSat(utxo[\"value\"]))\r\ntest/functional/feature_bip68_sequence.py:365:        tx2.vout = [CTxOut(int(tx1.vout[0].nValue - btcToSat(self.relayfee)), SCRIPT_W0_SH_OP_TRUE)]\r\ntest/functional/feature_bip68_sequence.py:383:        tx3.vout = [CTxOut(int(tx2.vout[0].nValue - btcToSat(self.relayfee)), SCRIPT_W0_SH_OP_TRUE)]\r\ntest/functional/feature_block.py:812:        tx = self.create_and_sign_transaction(out[17], btcToSat(51))\r\ntest/functional/feature_block.py:1162:        tx77 = self.create_and_sign_transaction(out[24], btcToSat(10))\r\ntest/functional/feature_block.py:1168:        tx78 = self.create_tx(tx77, 0, btcToSat(9))\r\ntest/functional/feature_block.py:1173:        tx79 = self.create_tx(tx78, 0, btcToSat(8))\r\ntest/functional/feature_coinstatsindex.py:155:            amount=btcToSat(21),\r\ntest/functional/feature_coinstatsindex.py:164:        tx2.vout = [CTxOut(int(btcToSat(Decimal(tx2_val))), CScript([OP_RETURN] + [OP_FALSE] * 30))]\r\ntest/functional/feature_coinstatsindex.py:192:        cb.vout.append(CTxOut(btcToSat(5), CScript([OP_FALSE])))\r\ntest/functional/feature_dbcrash.py:192:            input_amount = int(btcToSat(sum([utxo['value'] for utxo in utxos_to_spend])))\r\ntest/functional/feature_fee_estimation.py:62:    tx.vout[0].nValue = int(btcToSat((total_in - amount - fee)))\r\ntest/functional/feature_fee_estimation.py:64:    tx.vout[1].nValue = int(btcToSat(amount))\r\ntest/functional/feature_rbf.py:117:        tx.vout[0].nValue -= int(btcToSat(0.1))\r\ntest/functional/feature_rbf.py:132:        initial_nValue = btcToSat(5)\r\ntest/functional/feature_rbf.py:138:        while remaining_value > btcToSat(1):\r\ntest/functional/feature_rbf.py:139:            remaining_value -= int(btcToSat(0.1))\r\ntest/functional/feature_rbf.py:161:        dbl_tx.vout[0].nValue = int(btcToSat(0.1))\r\ntest/functional/feature_rbf.py:172:        initial_nValue = btcToSat(5)\r\ntest/functional/feature_rbf.py:175:        def branch(prevout, initial_value, max_txs, tree_width=5, fee=btcToSat(0.00001), _total_txs=None):\r\ntest/functional/feature_rbf.py:203:        fee = int(btcToSat(0.00001))\r\ntest/functional/feature_rbf.py:233:            fee = int(btcToSat(0.00001))\r\ntest/functional/feature_rbf.py:251:        tx0_outpoint = self.make_utxo(self.nodes[0], int(btcToSat(1.1)))\r\ntest/functional/feature_rbf.py:274:        utxo1 = self.make_utxo(self.nodes[0], int(btcToSat(1.2)))\r\ntest/functional/feature_rbf.py:275:        utxo2 = self.make_utxo(self.nodes[0], btcToSat(3))\r\ntest/functional/feature_rbf.py:288:            amount_per_output=int(btcToSat(tx1a_utxo[\"value\"])),\r\ntest/functional/feature_rbf.py:305:            amount_per_output=int(btcToSat(tx1a_utxo[\"value\"])),\r\ntest/functional/feature_rbf.py:313:        confirmed_utxo = self.make_utxo(self.nodes[0], int(btcToSat(1.1)))\r\ntest/functional/feature_rbf.py:314:        unconfirmed_utxo = self.make_utxo(self.nodes[0], int(btcToSat(0.1)), confirmed=False)\r\ntest/functional/feature_rbf.py:326:            amount_per_output=btcToSat(1),\r\ntest/functional/feature_rbf.py:338:        initial_nValue = btcToSat(10)\r\ntest/functional/feature_rbf.py:340:        fee = int(btcToSat(0.0001))\r\ntest/functional/feature_rbf.py:467:        tx0_outpoint = self.make_utxo(self.nodes[0], int(btcToSat(1.1)))\r\ntest/functional/feature_rbf.py:481:            amount_per_output=int(btcToSat(0.00001)),\r\ntest/functional/feature_rbf.py:488:        self.nodes[0].prioritisetransaction(txid=tx1a_txid, fee_delta=int(btcToSat(-0.1)))\r\ntest/functional/feature_rbf.py:496:        tx1_outpoint = self.make_utxo(self.nodes[0], int(btcToSat(1.1)))\r\ntest/functional/feature_rbf.py:517:        self.nodes[0].prioritisetransaction(txid=tx2b[\"txid\"], fee_delta=int(btcToSat(0.1)))\r\ntest/functional/feature_rbf.py:558:        confirmed_utxo = self.make_utxo(self.nodes[0], int(btcToSat(2)))\r\ntest/functional/feature_segwit.py:279:        tx.vout.append(CTxOut(int(btcToSat(49.99)), CScript([OP_TRUE, OP_DROP] * 15 + [OP_TRUE])))\r\ntest/functional/feature_segwit.py:295:        tx.vout.append(CTxOut(int(btcToSat(49.95)), CScript([OP_TRUE, OP_DROP] * 15 + [OP_TRUE])))  # Huge fee\r\ntest/functional/interface_rest.py:99:        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=int(btcToSat(0.1)))[\"txid\"]\r\ntest/functional/interface_rest.py:176:        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=int(btcToSat(0.1)))[\"txid\"]\r\ntest/functional/interface_usdt_utxocache.py:195:                assert_equal(btcToSat(50), event.value)\r\ntest/functional/interface_usdt_utxocache.py:301:                        \"value\": int(btcToSat(prevout_tx[\"vout\"][vin[\"vout\"]][\"value\"])),\r\ntest/functional/interface_usdt_utxocache.py:310:                        \"value\": int(btcToSat(vout[\"value\"])),\r\ntest/functional/mempool_accept.py:92:        tx.vout[0].nValue = int(btcToSat(0.3))\r\ntest/functional/mempool_accept.py:93:        tx.vout[1].nValue = int(btcToSat(49))\r\ntest/functional/mempool_accept.py:121:        tx.vout[0].nValue = int(btcToSat((Decimal('0.3') - fee)))\r\ntest/functional/mempool_accept.py:135:        tx.vout[0].nValue = int(btcToSat(output_amount))\r\ntest/functional/mempool_accept.py:157:        tx.vout[0].nValue -= int(btcToSat(fee))  # Double the fee\r\ntest/functional/mempool_accept.py:185:        tx.vout[0].nValue = int(btcToSat(0.1))\r\ntest/functional/mempool_accept.py:203:        tx.vout[0].nValue = int(btcToSat(0.05))\r\ntest/functional/mempool_accept.py:390:        anchor_nonempty_wit_spend.vout.append(CTxOut(anchor_value - int(btcToSat(fee)), script_to_p2wsh_script(CScript([OP_TRUE]))))\r\ntest/functional/mempool_accept.py:410:        anchor_spend.vout.append(CTxOut(anchor_value - int(btcToSat(fee)), script_to_p2wsh_script(CScript([OP_TRUE]))))\r\ntest/functional/mempool_accept.py:430:        nested_anchor_spend.vout.append(CTxOut(nested_anchor_tx.vout[0].nValue - int(btcToSat(fee)), script_to_p2wsh_script(CScript([OP_TRUE]))))\r\ntest/functional/mempool_accept.py:450:        tx_spend.vout.append(CTxOut(tx.vout[0].nValue - int(btcToSat(fee)), script_to_p2wsh_script(CScript([OP_TRUE]))))\r\ntest/functional/mempool_accept_wtxid.py:59:        parent.vout.append(CTxOut(int(btcToSat(9.99998)), script_pubkey))\r\ntest/functional/mempool_accept_wtxid.py:76:        child_one.vout.append(CTxOut(int(btcToSat(9.99996)), child_script_pubkey))\r\ntest/functional/mempool_dust.py:53:            dust_threshold = int(btcToSat(get_fee(tx_size, dust_relay_fee)))\r\ntest/functional/mempool_ephemeral_dust.py:139:        assert_equal(int(btcToSat(dusty_tx[\"fee\"])), sats_fee) # has fees\r\ntest/functional/mempool_limit.py:254:        cpfp_satoshis = int(btcToSat(cpfp_fee)) + magic_satoshis\r\ntest/functional/mempool_limit.py:323:        child = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_utxos, fee_per_output=int(btcToSat(cpfp_fee)))\r\ntest/functional/mempool_limit.py:372:        node.prioritisetransaction(tx_rich[\"txid\"], 0, int(btcToSat(DEFAULT_FEE)))\r\ntest/functional/mempool_package_rbf.py:66:            fee_per_output=int(btcToSat(child_fee) // num_child_outputs),\r\ntest/functional/mempool_package_rbf.py:282:            fee_per_output=int(btcToSat(DEFAULT_CHILD_FEE)),\r\ntest/functional/mempool_package_rbf.py:315:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:322:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:368:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:375:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:413:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:421:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:428:            fee_per_output=int(btcToSat(DEFAULT_FEE)),\r\ntest/functional/mempool_package_rbf.py:492:            fee_per_output=int(btcToSat(DEFAULT_CHILD_FEE)),\r\ntest/functional/mempool_package_rbf.py:580:            fee_per_output=int(btcToSat(DEFAULT_CHILD_FEE)),\r\ntest/functional/mempool_persist.py:233:        self.nodes[0].prioritisetransaction(tx_node01_secret[\"txid\"], 0, btcToSat(2))\r\ntest/functional/mempool_persist.py:234:        self.nodes[1].prioritisetransaction(tx_node01_secret[\"txid\"], 0, btcToSat(3))\r\ntest/functional/mempool_truc.py:551:        fee_to_beat = max(int(btcToSat(tx_v3_child_2[\"fee\"])), int(btcToSat(tx_unrelated_replacee[\"fee\"])))\r\ntest/functional/mining_prioritisetransaction.py:50:        assert_equal(self.nodes[0].getprioritisedtransactions(), { tx_replacee[\"txid\"] : { \"fee_delta\" : 100, \"in_mempool\" : True, \"modified_fee\": int(btcToSat(tx_replacee[\"fee\"]) + 100)}})\r\ntest/functional/mining_prioritisetransaction.py:58:        assert_equal(self.nodes[0].getprioritisedtransactions(), { tx_replacee[\"txid\"] : { \"fee_delta\" : COIN + 100, \"in_mempool\" : True, \"modified_fee\": int(btcToSat(tx_replacee[\"fee\"]) + COIN + 100)}})\r\ntest/functional/mining_prioritisetransaction.py:102:        self.nodes[0].prioritisetransaction(txid=txid_b, fee_delta=int(btcToSat(fee_delta_b)))\r\ntest/functional/mining_prioritisetransaction.py:103:        self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(btcToSat(fee_delta_c_1)))\r\ntest/functional/mining_prioritisetransaction.py:104:        self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(btcToSat(fee_delta_c_2)))\r\ntest/functional/mining_prioritisetransaction.py:116:        assert_equal(self.nodes[0].getprioritisedtransactions(), {txid_b: {\"fee_delta\" : btcToSat(fee_delta_b), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(fee_delta_b) + btcToSat(tx_o_b[\"fee\"]))}, txid_c: {\"fee_delta\" : btcToSat((fee_delta_c_1 + fee_delta_c_2)), \"in_mempool\" : True, \"modified_fee\": int(btcToSat((fee_delta_c_1 + fee_delta_c_2 )) + btcToSat(tx_o_c[\"fee\"]))}})\r\ntest/functional/mining_prioritisetransaction.py:126:        self.nodes[0].prioritisetransaction(txid=txid_b, fee_delta=int(btcToSat(fee_delta_b)))\r\ntest/functional/mining_prioritisetransaction.py:127:        self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(btcToSat(fee_delta_c_1)))\r\ntest/functional/mining_prioritisetransaction.py:128:        self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(btcToSat(fee_delta_c_2)))\r\ntest/functional/mining_prioritisetransaction.py:129:        assert_equal(self.nodes[0].getprioritisedtransactions(), {txid_b: {\"fee_delta\" : btcToSat(fee_delta_b), \"in_mempool\" : False}, txid_c: {\"fee_delta\" : btcToSat(fee_delta_c_1 + fee_delta_c_2), \"in_mempool\" : False}})\r\ntest/functional/mining_prioritisetransaction.py:135:        assert_equal(self.nodes[0].getprioritisedtransactions(), {txid_b: {\"fee_delta\" : btcToSat(fee_delta_b), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(fee_delta_b) + btcToSat(tx_o_b[\"fee\"]))}, txid_c: {\"fee_delta\" : btcToSat(fee_delta_c_1 + fee_delta_c_2), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(fee_delta_c_1 + fee_delta_c_2 ) + btcToSat(tx_o_c[\"fee\"]))}})\r\ntest/functional/mining_prioritisetransaction.py:215:        self.nodes[0].prioritisetransaction(txid=txids[0][0], fee_delta=int(btcToSat(3*base_fee)))\r\ntest/functional/mining_prioritisetransaction.py:216:        assert_equal(self.nodes[0].getprioritisedtransactions(), {txids[0][0] : { \"fee_delta\" : btcToSat(3*base_fee), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(3*base_fee) + btcToSat(1 * base_fee))}})\r\ntest/functional/mining_prioritisetransaction.py:219:        self.nodes[0].prioritisetransaction(txid=txids[0][0], fee_delta=int(btcToSat(-3*base_fee)))\r\ntest/functional/mining_prioritisetransaction.py:222:        self.nodes[0].prioritisetransaction(txid=txids[0][0], fee_delta=int(btcToSat(3*base_fee)))\r\ntest/functional/mining_prioritisetransaction.py:242:        self.nodes[0].prioritisetransaction(txid=high_fee_tx, fee_delta=-int(btcToSat(2*base_fee)))\r\ntest/functional/mining_prioritisetransaction.py:243:        assert_equal(self.nodes[0].getprioritisedtransactions()[high_fee_tx], { \"fee_delta\" : btcToSat(-2*base_fee), \"in_mempool\" : False})\r\ntest/functional/mining_prioritisetransaction.py:263:        assert_equal(self.nodes[0].getprioritisedtransactions()[high_fee_tx], { \"fee_delta\" : btcToSat(-2*base_fee), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(-2*base_fee) + btcToSat(3 * base_fee))})\r\ntest/functional/mining_prioritisetransaction.py:286:        self.nodes[0].prioritisetransaction(txid=tx_id, fee_delta=int(btcToSat(self.relayfee)))\r\ntest/functional/mining_prioritisetransaction.py:287:        assert_equal(self.nodes[0].getprioritisedtransactions()[tx_id], { \"fee_delta\" : btcToSat(self.relayfee), \"in_mempool\" : False})\r\ntest/functional/mining_prioritisetransaction.py:292:        assert_equal(self.nodes[0].getprioritisedtransactions()[tx_id], { \"fee_delta\" : btcToSat(self.relayfee), \"in_mempool\" : True, \"modified_fee\": int(btcToSat(self.relayfee)+ btcToSat(tx_res[\"fee\"]))})\r\ntest/functional/mining_prioritisetransaction.py:299:        self.nodes[0].prioritisetransaction(txid=tx_id, fee_delta=-int(btcToSat(self.relayfee)))\r\ntest/functional/p2p_filter.py:141:        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=btcToSat(1))[\"txid\"]\r\ntest/functional/p2p_filter.py:142:        irr_result = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=btcToSat(2))\r\ntest/functional/p2p_filter.py:160:        self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=btcToSat(9))\r\ntest/functional/p2p_filter.py:189:        self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=btcToSat(7))\r\ntest/functional/p2p_filter.py:196:        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=btcToSat(9))[\"txid\"]\r\ntest/functional/p2p_filter.py:203:            txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=btcToSat(7))[\"txid\"]\r\ntest/functional/p2p_invalid_block.py:72:        tx1 = create_tx_with_script(block1.vtx[0], 0, script_sig=bytes([OP_TRUE]), amount=btcToSat(50))\r\ntest/functional/p2p_invalid_block.py:73:        tx2 = create_tx_with_script(tx1, 0, script_sig=bytes([OP_TRUE]), amount=btcToSat(50))\r\ntest/functional/p2p_invalid_block.py:120:        tx3 = create_tx_with_script(tx2, 0, script_sig=bytes([OP_TRUE]), amount=btcToSat(50))\r\ntest/functional/p2p_invalid_tx.py:95:        tx_withhold.vout = [CTxOut(nValue=btcToSat(25) - 12000, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE)] * 2\r\ntest/functional/p2p_invalid_tx.py:101:        tx_orphan_1.vout = [CTxOut(nValue=btcToSat(8), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE)] * 3\r\ntest/functional/p2p_invalid_tx.py:107:        tx_orphan_2_no_fee.vout.append(CTxOut(nValue=btcToSat(8), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:112:        tx_orphan_2_valid.vout.append(CTxOut(nValue=btcToSat(8) - 12000, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:118:        tx_orphan_2_invalid.vout.append(CTxOut(nValue=btcToSat(11), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:154:            orphan_tx_pool[i].vout.append(CTxOut(nValue=btcToSat(11), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:162:        rejected_parent.vout.append(CTxOut(nValue=btcToSat(11), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:174:        tx_withhold_until_block_A.vout = [CTxOut(nValue=btcToSat(12), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE)] * 2\r\ntest/functional/p2p_invalid_tx.py:179:        tx_orphan_include_by_block_A.vout.append(CTxOut(nValue=btcToSat(12) - 12000, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:199:        tx_withhold_until_block_B.vout.append(CTxOut(nValue=btcToSat(11), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:204:        tx_orphan_include_by_block_B.vout.append(CTxOut(nValue=btcToSat(10), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/p2p_invalid_tx.py:209:        tx_orphan_conflict_by_block_B.vout.append(CTxOut(nValue=btcToSat(9), scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\r\ntest/functional/rpc_blockchain.py:679:        tx = create_tx_with_script(block.vtx[0], 0, script_sig=bytes([OP_TRUE]), amount=btcToSat(50))\r\ntest/functional/rpc_createmultisig.py:159:        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(btcToSat(value)))\r\ntest/functional/rpc_packages.py:248:            fee_per_output=int(btcToSat(DEFAULT_FEE * 5)),\r\ntest/functional/rpc_rawtransaction.py:362:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_RETURN] + [OP_FALSE] * 30))]\r\ntest/functional/rpc_rawtransaction.py:369:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_FALSE] * 10001))]\r\ntest/functional/rpc_rawtransaction.py:376:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_INVALIDOPCODE]))]\r\ntest/functional/rpc_rawtransaction.py:383:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_RETURN] + [OP_FALSE] * 30))]\r\ntest/functional/rpc_rawtransaction.py:390:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_RETURN] + [OP_FALSE] * 30))]\r\ntest/functional/rpc_rawtransaction.py:397:        tx.vout = [CTxOut(int(btcToSat(Decimal(tx_val))), CScript([OP_RETURN] + [OP_FALSE] * 30))]\r\ntest/functional/rpc_scanblocks.py:34:        wallet.send_to(from_node=node, scriptPubKey=spk_1, amount=btcToSat(1))\r\ntest/functional/rpc_scanblocks.py:41:                       amount=btcToSat(1))\r\ntest/functional/rpc_signrawtransactionwithkey.py:53:        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=script_pub_key, amount=int(btcToSat(amount)))\r\ntest/functional/test_framework/blocktools.py:137:    coinbaseoutput.nValue = btcToSat(nValue)\r\ntest/functional/test_framework/messages.py:241:def btcToSat(btc_value):\r\ntest/functional/test_framework/messages.py:673:            if tout.nValue < 0 or tout.nValue > btcToSat(21000000):\r\ntest/functional/test_framework/wallet.py:323:        inputs_value_total = sum([int(btcToSat(utxo['value'])) for utxo in utxos_to_spend])\r\ntest/functional/test_framework/wallet.py:387:            amount_per_output=int(btcToSat(send_value)),\r\ntest/functional/wallet_assumeutxo.py:122:                self.mini_wallet.send_to(from_node=n0, scriptPubKey=w_skp, amount=btcToSat(1))\r\ntest/functional/wallet_assumeutxo.py:123:                self.mini_wallet.send_to(from_node=n0, scriptPubKey=w2_skp, amount=btcToSat(10))\r\ntest/functional/wallet_basic.py:817:            assert_equal(this_unspent['ancestorfees'], btcToSat(ancestor_fees))\r\ntest/functional/wallet_fundrawtransaction.py:167:        tx.vout = [CTxOut(btcToSat(1), bytearray(address_to_scriptpubkey(address)))] * 2\r\ntest/functional/wallet_fundrawtransaction.py:1304:        assert_equal(btcToSat(fundedtx['fee']), tx_size * 10)\r\ntest/functional/wallet_fundrawtransaction.py:1312:        assert_equal(btcToSat(fundedtx['fee']), tx_size * 10)\r\ntest/functional/wallet_listtransactions.py:198:        tx3_b.vout[0].nValue -= int(btcToSat(Decimal(\"0.004\")))  # bump the fee\r\n```\r\n</details>\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-11-23T07:13:34Z",
    "updated_at": "2024-11-23T07:37:16Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "2bd2d2d0e5f5100475a707355b7555b7d8edf847",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andremralves:btc-to-sat",
      "ref": "btc-to-sat",
      "sha": "632766aee684e9dde6e13b1dc240a041ce0206bc",
      "user": {
        "login": "andremralves",
        "id": 71379045,
        "node_id": "MDQ6VXNlcjcxMzc5MDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/71379045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andremralves",
        "html_url": "https://github.com/andremralves",
        "followers_url": "https://api.github.com/users/andremralves/followers",
        "following_url": "https://api.github.com/users/andremralves/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andremralves/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andremralves/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andremralves/subscriptions",
        "organizations_url": "https://api.github.com/users/andremralves/orgs",
        "repos_url": "https://api.github.com/users/andremralves/repos",
        "events_url": "https://api.github.com/users/andremralves/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andremralves/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 863760802,
        "node_id": "R_kgDOM3vxog",
        "name": "bitcoin",
        "full_name": "andremralves/bitcoin",
        "owner": {
          "login": "andremralves",
          "id": 71379045,
          "node_id": "MDQ6VXNlcjcxMzc5MDQ1",
          "avatar_url": "https://avatars.githubusercontent.com/u/71379045?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andremralves",
          "html_url": "https://github.com/andremralves",
          "followers_url": "https://api.github.com/users/andremralves/followers",
          "following_url": "https://api.github.com/users/andremralves/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andremralves/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andremralves/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andremralves/subscriptions",
          "organizations_url": "https://api.github.com/users/andremralves/orgs",
          "repos_url": "https://api.github.com/users/andremralves/repos",
          "events_url": "https://api.github.com/users/andremralves/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andremralves/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/andremralves/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/andremralves/bitcoin",
        "archive_url": "https://api.github.com/repos/andremralves/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andremralves/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andremralves/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andremralves/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andremralves/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andremralves/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andremralves/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andremralves/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andremralves/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andremralves/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/andremralves/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/andremralves/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/andremralves/bitcoin/events",
        "forks_url": "https://api.github.com/repos/andremralves/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/andremralves/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andremralves/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andremralves/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andremralves/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/andremralves/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andremralves/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andremralves/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andremralves/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andremralves/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andremralves/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/andremralves/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/andremralves/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andremralves/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andremralves/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andremralves/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:andremralves/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/andremralves/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/andremralves/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andremralves/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/andremralves/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/andremralves/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/andremralves/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/andremralves/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andremralves/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/andremralves/bitcoin/hooks",
        "svn_url": "https://github.com/andremralves/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 231388,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-23T07:37:15Z",
        "created_at": "2024-09-26T21:34:18Z",
        "updated_at": "2024-11-20T16:34:40Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2638fdb4f934be96b7c798dbac38ea5ab8a6374a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36450,
        "stargazers_count": 79727,
        "watchers_count": 79727,
        "size": 272662,
        "default_branch": "master",
        "open_issues_count": 659,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-22T00:11:35Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-11-23T07:27:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31356"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 225,
    "deletions": 203,
    "changed_files": 37,
    "commits": 1,
    "review_comments": 0,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2495377870,
      "node_id": "IC_kwDOABII586UvHHO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2495377870",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-23T07:13:38Z",
      "updated_at": "2024-11-23T07:13:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31356.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31356#issuecomment-2495377870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31356"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15407160637,
      "node_id": "HRFPE_lADOABII586gEkc8zwAAAAOWVp09",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15407160637",
      "actor": {
        "login": "andremralves",
        "id": 71379045,
        "node_id": "MDQ6VXNlcjcxMzc5MDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/71379045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andremralves",
        "html_url": "https://github.com/andremralves",
        "followers_url": "https://api.github.com/users/andremralves/followers",
        "following_url": "https://api.github.com/users/andremralves/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andremralves/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andremralves/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andremralves/subscriptions",
        "organizations_url": "https://api.github.com/users/andremralves/orgs",
        "repos_url": "https://api.github.com/users/andremralves/repos",
        "events_url": "https://api.github.com/users/andremralves/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andremralves/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8ef68116504236cefabb898856bdaf74ec07009c",
      "commit_url": "https://api.github.com/repos/andremralves/bitcoin/commits/8ef68116504236cefabb898856bdaf74ec07009c",
      "created_at": "2024-11-23T07:24:53Z"
    },
    {
      "event": "labeled",
      "id": 15407160757,
      "node_id": "LE_lADOABII586gEkc8zwAAAAOWVp21",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15407160757",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-23T07:24:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2495380971,
      "node_id": "IC_kwDOABII586UvH3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2495380971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-23T07:24:59Z",
      "updated_at": "2024-11-23T07:24:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33416833622</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31356#issuecomment-2495380971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31356"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzMjc2NmFlZTY4NGU5ZGRlNmUxM2IxZGMyNDBhMDQxY2UwMjA2YmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/632766aee684e9dde6e13b1dc240a041ce0206bc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/632766aee684e9dde6e13b1dc240a041ce0206bc",
      "tree": {
        "sha": "9476a40a4ead6bea05da202683964a97d580fb2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9476a40a4ead6bea05da202683964a97d580fb2b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2638fdb4f934be96b7c798dbac38ea5ab8a6374a",
          "sha": "2638fdb4f934be96b7c798dbac38ea5ab8a6374a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2638fdb4f934be96b7c798dbac38ea5ab8a6374a"
        }
      ],
      "message": "Add and use `satToBtc` and `btcToSat` util functions\n\nIntroduce utility functions `satToBtc` and `btcToSat` to\nsimplify and standardize conversions between satoshis and bitcoins\nin functional tests",
      "committer": {
        "name": "Andre",
        "email": "andremralves@gmail.com",
        "date": "2024-11-23T07:35:25Z"
      },
      "author": {
        "name": "Andre",
        "email": "andremralves@gmail.com",
        "date": "2024-11-23T06:34:12Z"
      },
      "sha": "632766aee684e9dde6e13b1dc240a041ce0206bc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15407181802,
      "node_id": "HRFPE_lADOABII586gEkc8zwAAAAOWVu_q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15407181802",
      "actor": {
        "login": "andremralves",
        "id": 71379045,
        "node_id": "MDQ6VXNlcjcxMzc5MDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/71379045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andremralves",
        "html_url": "https://github.com/andremralves",
        "followers_url": "https://api.github.com/users/andremralves/followers",
        "following_url": "https://api.github.com/users/andremralves/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andremralves/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andremralves/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andremralves/subscriptions",
        "organizations_url": "https://api.github.com/users/andremralves/orgs",
        "repos_url": "https://api.github.com/users/andremralves/repos",
        "events_url": "https://api.github.com/users/andremralves/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andremralves/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "632766aee684e9dde6e13b1dc240a041ce0206bc",
      "commit_url": "https://api.github.com/repos/andremralves/bitcoin/commits/632766aee684e9dde6e13b1dc240a041ce0206bc",
      "created_at": "2024-11-23T07:37:16Z"
    }
  ],
  "comments": []
}