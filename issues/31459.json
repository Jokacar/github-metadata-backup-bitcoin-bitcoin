{
  "type": "issue",
  "issue": {
    "id": 2730306923,
    "node_id": "I_kwDOABII586ivS1r",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31459",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31459/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31459/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31459/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31459",
    "number": 31459,
    "state": "closed",
    "state_reason": "completed",
    "title": "Quantum-Resistant Addresses and Signatures (QRAS)",
    "body": "**Status:** Draft  \r\n**Created:** 20241210\r\n\r\n### Motivation\r\nAs quantum computing advances, the security of classical cryptographic primitives—especially those relying on discrete logarithms and factoring—may diminish over time. Bitcoin's current reliance on ECDSA for signatures is expected to remain secure against foreseeable quantum computers, but preparing preemptively for a smooth transition to post-quantum (PQ) algorithms avoids rushed changes later. Introducing quantum-resistant signatures now provides long-term resilience.\r\n\r\n### Abstract\r\nThis BIP proposes a new witness version and script rules enabling quantum-resistant signature schemes, starting with a well-studied, standardized scheme like SPHINCS+. It maintains backward compatibility, allowing legacy addresses and signatures to coexist. Over time, users may voluntarily migrate funds to PQ addresses as quantum threats materialize. The design supports multiple PQ schemes and can adapt if a particular PQ algorithm is compromised, ensuring Bitcoin's long-term security.\r\n\r\n### Specification\r\n\r\n#### New Witness Version and Script Structure\r\n- Introduce a new witness version to signal that the output requires a PQ signature.\r\n- For example, use `OP_1Q` in `ScriptPubKey` to indicate a PQ public key and the associated verification operation:\r\n\r\n```math\r\n\\text{ScriptPubKey} = OP_1Q \\; <PK> \\; OP_CHECKPQSIGN\r\n```\r\n  \r\nHere, `<PK>` is a public key compatible with the chosen PQ scheme. `OP_CHECKPQSIGN` is a new opcode that verifies a provided PQ signature against `<PK>` and the transaction message.\r\n\r\n#### Supported PQ Schemes\r\n- Start with SPHINCS+, a hash-based signature scheme standardized by NIST and backed by well-understood security properties (collision-resistant hash functions).\r\n- The framework allows for future extension:\r\n  - Define a `<SchemeID>` field to support multiple PQ schemes, e.g.:\r\n```math\r\n\\text{ScriptPubKey} = OP_1Q \\; <SchemeID> <PK> \\; OP_CHECKPQSIGN\r\n```\r\n  - Additional schemes (e.g., CRYSTALS-Dilithium) can be introduced via new `<SchemeID>` values.\r\n\r\n#### PQ Signature Verification\r\nThe transaction message $M$ (a hash of the input and output data) is verified against a PQ signature $\\sigma$ and public key $PK$.\r\n\r\n```math\r\n\\text{Verify}_{PQ}(PK, \\sigma, M) = \r\n\\begin{cases}\r\n\\text{True}, & \\text{if $\\sigma$ is a valid PQ signature on $M$ w.r.t. $PK$}\\\\\r\n\\text{False}, & \\text{otherwise}\r\n\\end{cases}\r\n```\r\n\r\nFor SPHINCS+, this involves hashing-based verification. If $\\text{Verify}_{PQ}(PK, \\sigma, M)$ returns True, the input is valid.\r\n\r\n#### Parameter and Size Considerations\r\n- Let the underlying hash function be:\r\n```math\r\nH: \\{0,1\\}^* \\to \\{0,1\\}^{256}\r\n```\r\n- SPHINCS+ typically uses parameters ensuring classical and quantum security at standardized levels.  \r\n- Signatures are larger than ECDSA, often tens of kilobytes, which impacts bandwidth and block space. Future PQ schemes may reduce size and improve performance.\r\n\r\n#### Attack Vectors and Mitigations\r\n- **Quantum Attacks:**  \r\n  SPHINCS+ resists known quantum attacks by relying on hard-to-find hash collisions, which remain infeasible even for powerful quantum adversaries.\r\n  \r\n- **Side-Channel Attacks:**  \r\n  Wallets should implement PQ operations using constant-time methods to prevent key leaks.\r\n\r\n- **Parameter Backdoors and Broken Schemes:**  \r\n  Only deploy schemes vetted by the cryptographic community and standardized by reputable bodies. If a scheme weakens, introduce a new `<SchemeID>` and encourage migration.\r\n\r\n- **Multiple PQ Schemes (Chess Moves Against the Future):**  \r\n  By supporting multiple schemes, Bitcoin can pivot quickly if one scheme is compromised. This future-proofing ensures no single point of cryptographic failure.\r\n\r\n#### Backward Compatibility and Deployment\r\n- Legacy addresses and transaction types remain valid. Non-upgraded nodes treat PQ outputs as anyone-can-spend, incentivizing them to upgrade to retain full validation security.\r\n- Introduce the feature as a soft fork (e.g., using methods like BIP9 or BIP8). Miners signal support, and after activation, upgraded nodes begin enforcing PQ signatures on PQ-designated outputs.\r\n- Users can initially create hybrid outputs that accept ECDSA or PQ signatures, allowing a gradual transition.\r\n\r\n#### Testing and Rollout\r\n- Test the PQ changes on Signet/Testnet to gather performance data and confirm compatibility.\r\n- Benchmark verification speeds, block size impacts, and confirm no consensus splits occur among upgraded nodes.\r\n- Provide reference implementations, test vectors, and developer tools.\r\n\r\n### Example PQ Transaction\r\n1. Alice generates a PQ key pair using SPHINCS+ and produces an address `bc1q_pq...` referencing `OP_1Q <PK> OP_CHECKPQSIGN`.\r\n2. Bob sends BTC to Alice's PQ address.\r\n3. When spending, Alice includes a PQ signature $\\sigma$ in the witness:\r\n```math\r\n\\text{Verify}_{PQ}(PK, \\sigma, M) = \\text{True} \\implies \\text{Spend allowed.}\r\n```\r\n\r\n### Conclusion\r\nThis BIP ensures Bitcoin can smoothly adapt to a post-quantum world. By introducing PQ signatures preemptively, the network stays secure against potential future quantum attacks. The flexible design allows multiple PQ schemes, continual cryptanalysis, and incremental user adoption. This future-proofs Bitcoin's cryptographic foundation, maintaining trust and stability in the decades ahead.",
    "user": {
      "login": "tgaeta",
      "id": 9040988,
      "node_id": "MDQ6VXNlcjkwNDA5ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9040988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgaeta",
      "html_url": "https://github.com/tgaeta",
      "followers_url": "https://api.github.com/users/tgaeta/followers",
      "following_url": "https://api.github.com/users/tgaeta/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/tgaeta/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/tgaeta/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/tgaeta/subscriptions",
      "organizations_url": "https://api.github.com/users/tgaeta/orgs",
      "repos_url": "https://api.github.com/users/tgaeta/repos",
      "events_url": "https://api.github.com/users/tgaeta/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/tgaeta/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 1,
    "closed_at": "2024-12-10T14:45:16Z",
    "closed_by": {
      "login": "willcl-ark",
      "id": 6606587,
      "node_id": "MDQ6VXNlcjY2MDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willcl-ark",
      "html_url": "https://github.com/willcl-ark",
      "followers_url": "https://api.github.com/users/willcl-ark/followers",
      "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
      "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
      "repos_url": "https://api.github.com/users/willcl-ark/repos",
      "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "created_at": "2024-12-10T14:37:47Z",
    "updated_at": "2024-12-10T14:45:16Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 2531839992,
      "node_id": "IC_kwDOABII586W6M_4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531839992",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:45:16Z",
      "updated_at": "2024-12-10T14:45:16Z",
      "author_association": "MEMBER",
      "body": "Hey @tgaeta. Thanks for opening this discussion. \r\n\r\nI am going to close this issue in *this* repository as this type of protocol specification will need to go through some review on  the bitcoindev mailing list and/or Delving Bitcoin.\r\n\r\nIt would likely also want to be opened in the [BIPS repo](https://github.com/bitcoin/bips) before we can consider it useful in this repository. \r\n\r\nThe mailing list can be found here: [bitcoindev mailing list](https://groups.google.com/g/bitcoindev) \r\nand Delving Bitcoin here: [Delving Bitcoin](https://delvingbitcoin.org/).\r\n\r\nPlease re-open this spec in another one of those forums to gather technical review for your proposed BIP.\r\n\r\nThanks again!",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31459#issuecomment-2531839992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31459"
    },
    {
      "event": "closed",
      "id": 15602108970,
      "node_id": "CE_lADOABII586ivS1rzwAAAAOh9Uoq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15602108970",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:45:16Z"
    },
    {
      "event": "mentioned",
      "id": 15602109508,
      "node_id": "MEE_lADOABII586ivS1rzwAAAAOh9UxE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15602109508",
      "actor": {
        "login": "tgaeta",
        "id": 9040988,
        "node_id": "MDQ6VXNlcjkwNDA5ODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9040988?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgaeta",
        "html_url": "https://github.com/tgaeta",
        "followers_url": "https://api.github.com/users/tgaeta/followers",
        "following_url": "https://api.github.com/users/tgaeta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tgaeta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tgaeta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tgaeta/subscriptions",
        "organizations_url": "https://api.github.com/users/tgaeta/orgs",
        "repos_url": "https://api.github.com/users/tgaeta/repos",
        "events_url": "https://api.github.com/users/tgaeta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tgaeta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:45:18Z"
    },
    {
      "event": "subscribed",
      "id": 15602109522,
      "node_id": "SE_lADOABII586ivS1rzwAAAAOh9UxS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15602109522",
      "actor": {
        "login": "tgaeta",
        "id": 9040988,
        "node_id": "MDQ6VXNlcjkwNDA5ODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9040988?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgaeta",
        "html_url": "https://github.com/tgaeta",
        "followers_url": "https://api.github.com/users/tgaeta/followers",
        "following_url": "https://api.github.com/users/tgaeta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tgaeta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tgaeta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tgaeta/subscriptions",
        "organizations_url": "https://api.github.com/users/tgaeta/orgs",
        "repos_url": "https://api.github.com/users/tgaeta/repos",
        "events_url": "https://api.github.com/users/tgaeta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tgaeta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:45:18Z"
    }
  ]
}