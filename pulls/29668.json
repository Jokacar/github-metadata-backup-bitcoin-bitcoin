{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668",
    "id": 1776120732,
    "node_id": "PR_kwDOABII585p3XOc",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29668",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29668.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29668.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/edbb6a3eb18c43ff20574a534143c40e0a84befe",
    "number": 29668,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "prune, rpc: Check undo data when finding pruneheight",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The function `GetFirstStoredBlock()` helps us find the first block for which we have data. So far this function only looked for a block with `BLOCK_HAVE_DATA`. However, this doesn't mean that we also have the undo data of that block, and undo data might be required for what a user would like to do with those blocks. One example of how this might happen is if some blocks were fetched using the `getblockfrompeer` RPC. Blocks fetched from a peer will have data but no undo data.\r\n\r\nThe first commit here allows `GetFirstStoredBlock()` to check for undo data as well by passing a parameter. This alone is useful for #29553 and I would use it there.\r\n\r\nIn the second commit I am applying the undo check to the RPCs that report `pruneheight` to the user. I find this much more intuitive because I think the user expects to be able to do all operations on blocks up until the `pruneheight` but that is not the case if undo data is missing. I personally ran into this once before and now again when testing for assumeutxo when I had used `getblockfrompeer`. The following commit adds test coverage for this change of behavior.\r\n\r\nThe last commit adds a note in the docs of `getblockfrompeer` that undo data will not be available.\r\n",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-03-17T16:42:40Z",
    "updated_at": "2024-04-28T22:44:19Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "703d0a53ba7603e157ae8c9ac1664966a23d863e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:2024-03-first-stored-undo",
      "ref": "2024-03-first-stored-undo",
      "sha": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 243339,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-28T22:44:18Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-04-27T19:57:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3aaf7328eb656b642e5f0f74f3e4d51645a1d0ab",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35313,
        "stargazers_count": 76037,
        "watchers_count": 76037,
        "size": 255131,
        "default_branch": "master",
        "open_issues_count": 699,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-28T22:44:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-04-28T19:21:09Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 71,
    "deletions": 14,
    "changed_files": 5,
    "commits": 4,
    "review_comments": 17,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 2002534384,
      "node_id": "IC_kwDOABII5853XD_w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002534384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T16:42:43Z",
      "updated_at": "2024-03-27T17:01:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29668).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1958325955) |\n| Stale ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1949117498) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#issuecomment-2002534384",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668"
    },
    {
      "event": "renamed",
      "id": 12143426386,
      "node_id": "RTE_lADOABII586ClE1ezwAAAALTzftS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12143426386",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T16:43:04Z",
      "rename": {
        "from": "prune, rpc: Check undo data when finding for pruneheight",
        "to": "prune, rpc: Check undo data when finding pruneheight"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T16:46:31Z",
      "updated_at": "2024-03-17T16:46:31Z",
      "source": {
        "issue": {
          "id": 2167184322,
          "node_id": "PR_kwDOABII585om7vm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29553",
          "number": 29553,
          "state": "open",
          "state_reason": null,
          "title": "assumeutxo: Add dumptxoutset height param, remove shell scripts",
          "body": "This adds a height parameter to the `dumptxoutset` RPC. This internalizes the workflow that was previously done by scripts: roll back the chain to the height we actually want the snapshot from, create the snapshot, roll forward to the real tip again.\r\n\r\nThe nice thing about internalizing this functionality is that we can write tests for the code and it gives us more options to make the functionality robust. The shell scripts we have so far will be more cumbersome to maintain in the long run, especially since we will only notice later when we have broken them. I think it's safe to remove these `test_utxo_snapshots.sh` as well when we have this option in `dumptxoutset` because we have also added some good additional functional test coverage for this functionality.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29553",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29553.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29553.patch"
          },
          "created_at": "2024-03-04T15:58:11Z",
          "updated_at": "2024-04-24T09:35:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 12143569624,
      "node_id": "LE_lADOABII586ClE1ezwAAAALT0CrY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12143569624",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T17:52:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12143935060,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALT1b5U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12143935060",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T20:13:55Z"
    },
    {
      "event": "unlabeled",
      "id": 12144099099,
      "node_id": "UNLE_lADOABII586ClE1ezwAAAALT2D8b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12144099099",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T21:36:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1949117498,
      "node_id": "PRR_kwDOABII5850LSw6",
      "url": null,
      "actor": null,
      "commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1949117498",
      "submitted_at": "2024-03-20T14:47:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
    },
    {
      "event": "reviewed",
      "id": 1958325955,
      "node_id": "PRR_kwDOABII5850ua7D",
      "url": null,
      "actor": null,
      "commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nI think this approach works well, but I think I'd prefer passing a mask instead of a bool, which prevents combinatorial explosion of params if we want to add more filtering options in the future. I personally find that a bit easier to quickly understand too. What do you think about something like this (didn't add static asserts and doc updates etc yet):\r\n\r\n<details>\r\n<summary>git diff on 296243c315</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex 74a233f43b..eaefa602d3 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -595,16 +595,12 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\r\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\r\n }\r\n \r\n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)\r\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, uint32_t status_mask)\r\n {\r\n     AssertLockHeld(::cs_main);\r\n-    uint32_t check_status{BLOCK_HAVE_DATA};\r\n-    if (check_undo) {\r\n-        check_status |= BLOCK_HAVE_UNDO;\r\n-    }\r\n     const CBlockIndex* last_block = &upper_block;\r\n-    assert((last_block->nStatus & check_status) == check_status); // 'upper_block' must have data\r\n-    while (last_block->pprev && ((last_block->pprev->nStatus & check_status) == check_status)) {\r\n+    assert((last_block->nStatus & status_mask) == status_mask); // 'upper_block' must have data\r\n+    while (last_block->pprev && ((last_block->pprev->nStatus & status_mask) == status_mask)) {\r\n         if (lower_block) {\r\n             // Return if we reached the lower_block\r\n             if (last_block == lower_block) return lower_block;\r\n@@ -617,7 +613,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_bl\r\n     assert(last_block != nullptr);\r\n     // In the special case that all blocks up to the Genesis block are not\r\n     // pruned, we return the Genesis block instead of block 1, even though\r\n-    // it can not have any undo data, since it is properly handled as an\r\n+    // it may be missing (e.g. undo) data, since it is properly handled as an\r\n     // exception everywhere.\r\n     if (last_block->nHeight == 1) {\r\n         return last_block->pprev;\r\ndiff --git a/src/node/blockstorage.h b/src/node/blockstorage.h\r\nindex 33d78259e6..766a170946 100644\r\n--- a/src/node/blockstorage.h\r\n+++ b/src/node/blockstorage.h\r\n@@ -338,7 +338,7 @@ public:\r\n     //! Find the first stored ancestor of start_block immediately after the last\r\n     //! pruned ancestor. Return value will never be null. Caller is responsible\r\n     //! for ensuring that start_block has data.\r\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, const bool check_undo=false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, uint32_t status_mask=BLOCK_HAVE_DATA) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n     /** True if any block files have ever been pruned. */\r\n     bool m_have_pruned = false;\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 3cd9421343..88ed7ed964 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -836,7 +836,8 @@ static RPCHelpMan pruneblockchain()\r\n \r\n     PruneBlockFilesManual(active_chainstate, height);\r\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\r\n-    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, nullptr, true)->nHeight - 1 : block.nHeight;\r\n+    const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\r\n+    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, nullptr, has_undo)->nHeight - 1 : block.nHeight;\r\n },\r\n     };\r\n }\r\n@@ -1290,7 +1291,8 @@ RPCHelpMan getblockchaininfo()\r\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\r\n     if (chainman.m_blockman.IsPruneMode()) {\r\n         bool has_tip_data = tip.nStatus & BLOCK_HAVE_MASK;\r\n-        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip, nullptr, true)->nHeight : tip.nHeight + 1);\r\n+        const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\r\n+        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip, nullptr, has_undo)->nHeight : tip.nHeight + 1);\r\n \r\n         const bool automatic_pruning{chainman.m_blockman.GetPruneTarget() != BlockManager::PRUNE_TARGET_MANUAL};\r\n         obj.pushKV(\"automatic_pruning\",  automatic_pruning);\r\n\r\n```\r\n</details>\r\n\r\n\r\nCode LGTM 296243c3153e996d1626b8eabc8f8bce845ce3ad, and I verified that the (updated) `feature_pruning.py` test fails on master as expected. I'm happy to proceed with your approach too if you don't like mine.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1958325955",
      "submitted_at": "2024-03-25T20:12:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12269015551,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALbSlH_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12269015551",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:01:55Z"
    },
    {
      "event": "commented",
      "id": 2023324076,
      "node_id": "IC_kwDOABII5854mXms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023324076",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:03:26Z",
      "updated_at": "2024-03-27T17:03:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@stickies-v thanks for the feedback! I don't have strong feelings between the approaches but I agree yours is more flexible and maybe a bit more expressive, so I applied that. I also addressed the rest of the feedback and added some more detail to the docs.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#issuecomment-2023324076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668"
    },
    {
      "event": "mentioned",
      "id": 12269036208,
      "node_id": "MEE_lADOABII586ClE1ezwAAAALbSqKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12269036208",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:03:28Z"
    },
    {
      "event": "subscribed",
      "id": 12269036221,
      "node_id": "SE_lADOABII586ClE1ezwAAAALbSqK9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12269036221",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:03:28Z"
    },
    {
      "event": "labeled",
      "id": 12274966434,
      "node_id": "LE_lADOABII586ClE1ezwAAAALbpR-i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12274966434",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T01:49:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2024255644,
      "node_id": "IC_kwDOABII5854p7Cc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2024255644",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T01:49:59Z",
      "updated_at": "2024-03-28T01:49:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23163769501</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#issuecomment-2024255644",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12281954148,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALcD79k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12281954148",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T13:50:59Z"
    },
    {
      "event": "reviewed",
      "id": 1966493859,
      "node_id": "PRR_kwDOABII5851NlCj",
      "url": null,
      "actor": null,
      "commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "q: doesn't this mean that if we generate a chain, prune half of it, then fetch the pruned blocks through `getblockfrompeer`, any fresh indexes sync will throw a different init error after this changes? (`StartIndexBackgroundSync()` should fail at `CheckBlockDataAvailability()` now).\r\n\r\nIf this is correct, it would be nice to introduce a test presenting the behavior change.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1966493859",
      "submitted_at": "2024-03-28T15:08:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
    },
    {
      "event": "unlabeled",
      "id": 12283777777,
      "node_id": "UNLE_lADOABII586ClE1ezwAAAALcK5Lx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12283777777",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:49:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-30T22:55:20Z",
      "updated_at": "2024-03-30T22:55:20Z",
      "source": {
        "issue": {
          "id": 2216692234,
          "node_id": "PR_kwDOABII585rPF6F",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29770",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29770/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29770/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29770/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29770",
          "number": 29770,
          "state": "open",
          "state_reason": null,
          "title": "index: Check all necessary block data is available before starting to sync",
          "body": "This is based on #29668 and will be taken out of draft status once that is merged.\r\n\r\nCurrently, we check that `BLOCK_HAVE_DATA` is available for all blocks an index needs to sync during startup. However, for `coinstatsindex` and `blockfilterindex` we also need the undo data for these blocks. If that data is missing in the blocks, we are currently still starting to sync each of these indices and then crash later when we encounter the missing data.\r\n\r\nThis PR adds explicit knowledge of which block data is needed for each index and then checks its availability during startup before initializing the sync process on them.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29770",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29770",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29770.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29770.patch"
          },
          "created_at": "2024-03-30T22:55:19Z",
          "updated_at": "2024-04-28T16:05:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 2028489071,
      "node_id": "IC_kwDOABII58546Elv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2028489071",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-30T22:57:10Z",
      "updated_at": "2024-03-30T22:57:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> q: doesn't this mean that if we generate a chain, prune half of it, then fetch the pruned blocks through `getblockfrompeer`, any fresh indexes sync will throw a different init error after this changes? (`StartIndexBackgroundSync()` should fail at `CheckBlockDataAvailability()` now).\r\n> \r\n> If this is correct, it would be nice to introduce a test presenting the behavior change.\r\n\r\nGood question but no, `CheckBlockDataAvailability()` does not change the default mask (`HAVE_DATA`), so it shouldn't change behavior there for now. But your question made me realize that we should check for undo data for some indices because they need it. I have implemented that in a follow-up here: #29770 and I also implemented the test there that shows the behavior change you had in mind I think.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#issuecomment-2028489071",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668"
    },
    {
      "event": "reviewed",
      "id": 1970253804,
      "node_id": "PRR_kwDOABII5851b6_s",
      "url": null,
      "actor": null,
      "commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for incorporating the mask suggestion. Had a deeper look at the code, I think this logic maybe warrants a bit more cleaning up, because with the status_mask, using `GetFirstStoredBlock` is not very intuitive anymore and potentially a bit footgunny.\r\n- `GetFirstStoredBlock`: rename to `GetFirstBlock` since the `Stored` bit depends on the `status_mask` now. Consequently, make `status_mask` required to avoid footguns.\r\n- let callsites handle genesis block exceptions, because it depends on the status_mask. As a bonus, everything is a bit more explicit?\r\n- some other tidying up, e.g. make parameter naming consistent between header and implementation, improve documentation\r\n\r\nWdyt about this further iteration? I understand it's quite a bit of overhaul compared to your first proposal for what should be a relatively simple change. I'm just hesitant about introducing new boolean parameters when we can avoid it, and I think it's worth improving overall code robustness?\r\n\r\n<details>\r\n<summary>git diff on 23ac56177d</summary>\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 1a4fce4678..a8a5ff0dfd 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -2032,7 +2032,7 @@ bool StartIndexBackgroundSync(NodeContext& node)\r\n     if (indexes_start_block) {\r\n         LOCK(::cs_main);\r\n         const CBlockIndex* start_block = *indexes_start_block;\r\n-        if (!start_block) start_block = chainman.ActiveChain().Genesis();\r\n+        if (!start_block) start_block = chainman.ActiveChain()[1];\r\n         if (!chainman.m_blockman.CheckBlockDataAvailability(*index_chain.Tip(), *Assert(start_block))) {\r\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), older_index_name));\r\n         }\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex eaefa602d3..8556504453 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -595,11 +595,12 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\r\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\r\n }\r\n \r\n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, uint32_t status_mask)\r\n+const CBlockIndex* BlockManager::GetFirstBlock(const CBlockIndex& upper_block, uint32_t status_mask,\r\n+                                               const CBlockIndex* lower_block)\r\n {\r\n     AssertLockHeld(::cs_main);\r\n     const CBlockIndex* last_block = &upper_block;\r\n-    assert((last_block->nStatus & status_mask) == status_mask); // 'upper_block' must have data\r\n+    assert((last_block->nStatus & status_mask) == status_mask); // 'upper_block' must satisfy the status mask\r\n     while (last_block->pprev && ((last_block->pprev->nStatus & status_mask) == status_mask)) {\r\n         if (lower_block) {\r\n             // Return if we reached the lower_block\r\n@@ -610,21 +611,13 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_bl\r\n         }\r\n         last_block = last_block->pprev;\r\n     }\r\n-    assert(last_block != nullptr);\r\n-    // In the special case that all blocks up to the Genesis block are not\r\n-    // pruned, we return the Genesis block instead of block 1, even though\r\n-    // it may be missing (e.g. undo) data, since it is properly handled as an\r\n-    // exception everywhere.\r\n-    if (last_block->nHeight == 1) {\r\n-        return last_block->pprev;\r\n-    }\r\n-    return last_block;\r\n+    return Assert(last_block);\r\n }\r\n \r\n bool BlockManager::CheckBlockDataAvailability(const CBlockIndex& upper_block, const CBlockIndex& lower_block)\r\n {\r\n     if (!(upper_block.nStatus & BLOCK_HAVE_DATA)) return false;\r\n-    return GetFirstStoredBlock(upper_block, &lower_block) == &lower_block;\r\n+    return GetFirstBlock(upper_block, BLOCK_HAVE_DATA, &lower_block) == &lower_block;\r\n }\r\n \r\n // If we're using -prune with -reindex, then delete block files that will be ignored by the\r\ndiff --git a/src/node/blockstorage.h b/src/node/blockstorage.h\r\nindex 8f83b68558..8f309c31b6 100644\r\n--- a/src/node/blockstorage.h\r\n+++ b/src/node/blockstorage.h\r\n@@ -335,13 +335,29 @@ public:\r\n     //! (part of the same chain).\r\n     bool CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex& lower_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n-    //! Find the first stored ancestor of start_block immediately after the last\r\n-    //! ancestor that does not match the status mask. Return value will never be\r\n-    //! null. Caller is responsible for ensuring that start_block has the status\r\n-    //! mask data. If the whole chain matched the status mask the genesis block\r\n-    //! will be returned regardless of it's status match because, for example,\r\n-    //! it can not have undo data by nature.\r\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, uint32_t status_mask=BLOCK_HAVE_DATA) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    /**\r\n+     * @brief Finds the furthest away ancestor of `upper_block` of which the nStatus matches the `status_mask`\r\n+     * \r\n+     * Starts from `upper_block` and iterates backwards through its ancestors for as long as the block's\r\n+     * nStatus keeps matching the `status_mask` mask, or until it encounters `lower_block`.\r\n+     *\r\n+     * @pre `upper_block` must match the `status_mask`.\r\n+     * \r\n+     * @param upper_block The block from which to start the search, must meet the `status_mask` criteria.\r\n+     * @param status_mask A bitmask representing the conditions to check against each block's nStatus.\r\n+     * @param lower_block An optional pointer to the `CBlockIndex` that serves as the lower boundary of\r\n+     *                    the search (inclusive). If `nullptr`, the search includes up to the genesis\r\n+     *                    block.\r\n+     * @return A (non-null) pointer to the `CBlockIndex` of the furthest away ancestor (including\r\n+     *         `upper_block` itself) that matches the `status_mask`, up to and including\r\n+     *         `lower_block` if it is part of the ancestry.\r\n+     */\r\n+    const CBlockIndex* GetFirstBlock(\r\n+        const CBlockIndex& upper_block LIFETIMEBOUND, \r\n+        uint32_t status_mask,\r\n+        const CBlockIndex* lower_block = nullptr\r\n+    ) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+\r\n \r\n     /** True if any block files have ever been pruned. */\r\n     bool m_have_pruned = false;\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex fa83d2e397..15d6f9e9b9 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -94,6 +94,18 @@ double GetDifficulty(const CBlockIndex& blockindex)\r\n     return dDiff;\r\n }\r\n \r\n+//! Return height of highest block that has been pruned, or -1 if no blocks have been pruned\r\n+static int GetPruneHeight(const Chainstate& active_chainstate) EXCLUSIVE_LOCKS_REQUIRED(!cs_main) {\r\n+    AssertLockHeld(cs_main);\r\n+\r\n+    const CBlockIndex& chain_tip{*CHECK_NONFATAL(active_chainstate.m_chain.Tip())};\r\n+    if (!(chain_tip.nStatus & BLOCK_HAVE_MASK)) return chain_tip.nHeight;\r\n+    const auto first_pruned{active_chainstate.m_blockman.GetFirstBlock(chain_tip, BLOCK_HAVE_MASK)->nHeight - 1};\r\n+\r\n+    // special case: genesis block is never pruned\r\n+    return first_pruned == 0 ? -1 : first_pruned;\r\n+}\r\n+\r\n static int ComputeNextBlockAndDepth(const CBlockIndex& tip, const CBlockIndex& blockindex, const CBlockIndex*& next)\r\n {\r\n     next = tip.GetAncestor(blockindex.nHeight + 1);\r\n@@ -835,9 +847,7 @@ static RPCHelpMan pruneblockchain()\r\n     }\r\n \r\n     PruneBlockFilesManual(active_chainstate, height);\r\n-    const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\r\n-    const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\r\n-    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, /*lower_block=*/nullptr, /*status_mask=*/has_undo)->nHeight - 1 : block.nHeight;\r\n+    return GetPruneHeight(active_chainstate);\r\n },\r\n     };\r\n }\r\n@@ -1290,10 +1300,7 @@ RPCHelpMan getblockchaininfo()\r\n     obj.pushKV(\"size_on_disk\", chainman.m_blockman.CalculateCurrentUsage());\r\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\r\n     if (chainman.m_blockman.IsPruneMode()) {\r\n-        bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;\r\n-        const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\r\n-        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip, /*lower_block=*/nullptr, /*status_mask=*/has_undo)->nHeight : tip.nHeight + 1);\r\n-\r\n+        obj.pushKV(\"pruneheight\", GetPruneHeight(active_chainstate) + 1);\r\n         const bool automatic_pruning{chainman.m_blockman.GetPruneTarget() != BlockManager::PRUNE_TARGET_MANUAL};\r\n         obj.pushKV(\"automatic_pruning\",  automatic_pruning);\r\n         if (automatic_pruning) {\r\ndiff --git a/src/test/blockmanager_tests.cpp b/src/test/blockmanager_tests.cpp\r\nindex d7ac0bf823..12f3257700 100644\r\n--- a/src/test/blockmanager_tests.cpp\r\n+++ b/src/test/blockmanager_tests.cpp\r\n@@ -2,6 +2,7 @@\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n+#include <chain.h>\r\n #include <chainparams.h>\r\n #include <clientversion.h>\r\n #include <node/blockstorage.h>\r\n@@ -113,7 +114,7 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_block_data_availability, TestChain100Setup)\r\n     };\r\n \r\n     // 1) Return genesis block when all blocks are available\r\n-    BOOST_CHECK_EQUAL(blockman.GetFirstStoredBlock(tip), chainman->ActiveChain()[0]);\r\n+    BOOST_CHECK_EQUAL(blockman.GetFirstBlock(tip, BLOCK_HAVE_DATA), chainman->ActiveChain()[0]);\r\n     BOOST_CHECK(blockman.CheckBlockDataAvailability(tip, *chainman->ActiveChain()[0]));\r\n \r\n     // 2) Check lower_block when all blocks are available\r\n@@ -127,7 +128,7 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_block_data_availability, TestChain100Setup)\r\n     func_prune_blocks(last_pruned_block);\r\n \r\n     // 3) The last block not pruned is in-between upper-block and the genesis block\r\n-    BOOST_CHECK_EQUAL(blockman.GetFirstStoredBlock(tip), first_available_block);\r\n+    BOOST_CHECK_EQUAL(blockman.GetFirstBlock(tip, BLOCK_HAVE_DATA), first_available_block);\r\n     BOOST_CHECK(blockman.CheckBlockDataAvailability(tip, *first_available_block));\r\n     BOOST_CHECK(!blockman.CheckBlockDataAvailability(tip, *last_pruned_block));\r\n }\r\n\r\n```\r\n</details>\r\n",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#pullrequestreview-1970253804",
      "submitted_at": "2024-03-31T22:14:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12635651379,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALxJL0z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635651379",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T19:28:27Z"
    },
    {
      "event": "commented",
      "id": 2081618206,
      "node_id": "IC_kwDOABII5858Evke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2081618206",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T19:34:03Z",
      "updated_at": "2024-04-28T19:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@stickies-v Thank you, I mostly took your suggestions with some minor tweaks and made you co-author of the refactoring commit. I was a bit torn about letting the caller handle the Genesis block issue but since this was actually the previous behavior I guess it's better to not change it if you like it the way it is. I have adapted `GetPruneHeight` to return `std::optional` which I found a good fit and avoids the `-1` return value. And I think the change in `init.cpp` isn't needed here (yet). But I think we will need it in #29770 later.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#issuecomment-2081618206",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29668"
    },
    {
      "event": "mentioned",
      "id": 12635668446,
      "node_id": "MEE_lADOABII586ClE1ezwAAAALxJP_e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635668446",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T19:34:04Z"
    },
    {
      "event": "subscribed",
      "id": 12635668450,
      "node_id": "SE_lADOABII586ClE1ezwAAAALxJP_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635668450",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T19:34:04Z"
    },
    {
      "event": "labeled",
      "id": 12635821265,
      "node_id": "LE_lADOABII586ClE1ezwAAAALxJ1TR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635821265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T20:39:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12635948991,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALxKUe_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635948991",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T21:30:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12636063152,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALxKwWw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12636063152",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T22:06:01Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkNzY5NmI5N2YyMGQ3NTZkZjFhZmE1MjNhOGY5ZTdiZjM5MjRjN2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd7696b97f20d756df1afa523a8f9e7bf3924c7d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd7696b97f20d756df1afa523a8f9e7bf3924c7d",
      "tree": {
        "sha": "ba501e3972840844900df48a4cc1f94d99ad0e39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba501e3972840844900df48a4cc1f94d99ad0e39"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ba501e3972840844900df48a4cc1f94d99ad0e39\nparent 3aaf7328eb656b642e5f0f74f3e4d51645a1d0ab\nauthor Fabian Jahr <fjahr@protonmail.com> 1710686284 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1714344250 +0200\n\nrefactor, blockstorage: Generalize GetFirstStoredBlock\n\nGetFirstStoredBlock is generalized to check for any data status with a\nstatus mask that needs to be passed as a parameter. To reflect this the\nfunction is also renamed to GetFirstBlock.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmYu0TsVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNaGAP/j8MzDBWi/ix8o6KzMDXTjw/84d4\n8pds+kKrlEDFqHGM1PKxnElIi4iWQYGD5+MqjjM5L6DSK6S+SyfXkiWHaNGcW7sc\nA776FVVMmYodJBWzmDV/iK0tIhWNCQIbcxhcyfvTcmLLLMgvqy0IYEYVmJK000i/\nr+UyIdGahqeCrBXZwkYqhpg4deE8WV8mAOvn/AjkeyERoTyU4MyfSEWXIAp1rmh9\nSWJqjiB7JMDbTpsLG2DVyRJgGQQ6vjhe/Tw+4zsgUlH9lsNN/Om7xDC9UFjjxbrM\nRUFsRVzh1c0jGGuFVq3Vsph0Tw/j7ygINvzq27R3/L7cb4NL452SRNE4AwyhfQzX\naYxRMLhFTZDoYUcDbFeIx7E+pcDUtA2Bd7cg0Ss8h5XULvhqSO+htVajC2m0FjSW\nS8T3c1MlUD+7pu632IQNirHq+6HI5n5w2liCMzb2cbztuXkXV33ojuCkZdEwZpG+\nFt6hePA7UnQL2QzjfI7fYfwpDAnpfOy8ST8KJsa6AkrnoRrd3OwQdRJC6r0dn0wR\nUod0T9jUGXrvhDkGfOhDBs6rP21TVM4UFVfWygj2rr8h4CEPybrUeVexO3t8ComP\n5kRjgzJdZ31h9uP+2E5OSWbGdvnK/27SnMBgIAy3YNiJGHsqy27lKEXDQpechGWB\ns4nYSqaZzTUsyVKF\n=TKFP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3aaf7328eb656b642e5f0f74f3e4d51645a1d0ab",
          "sha": "3aaf7328eb656b642e5f0f74f3e4d51645a1d0ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3aaf7328eb656b642e5f0f74f3e4d51645a1d0ab"
        }
      ],
      "message": "refactor, blockstorage: Generalize GetFirstStoredBlock\n\nGetFirstStoredBlock is generalized to check for any data status with a\nstatus mask that needs to be passed as a parameter. To reflect this the\nfunction is also renamed to GetFirstBlock.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-04-28T22:44:10Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-17T14:38:04Z"
      },
      "sha": "dd7696b97f20d756df1afa523a8f9e7bf3924c7d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyYjUwNmM5MjBhNTIzNGM1Nzg3NWFkODA5MjMyYTkxMjBmNmYxZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2b506c920a5234c57875ad809232a9120f6f1e1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2b506c920a5234c57875ad809232a9120f6f1e1",
      "tree": {
        "sha": "32542a1c57073652c42871d14fefa439ce394823",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32542a1c57073652c42871d14fefa439ce394823"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 32542a1c57073652c42871d14fefa439ce394823\nparent dd7696b97f20d756df1afa523a8f9e7bf3924c7d\nauthor Fabian Jahr <fjahr@protonmail.com> 1710687458 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1714344252 +0200\n\nrpc: Make pruneheight also reflect undo data presence\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmYu0TwVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN0QoQAJyPweH+1RfNrDv+zy77iimkHFwF\nka+KW0Z0ZpYCr4MIM1wlKDgl3Uo7MAzjBD9RaP5BYUt6aGAtwPRswltfkFL+ozVZ\nd47oyhxq5FIZlCfZB5W6vnpW34m5AB8fb9cZDvunJAfktNyJfyFthOCnIHLj5xci\nwcFjsm/smI64/nsnRTsKMAf7kiUOn0ZUCJdBf81MIMw3UmSXOaOwUzeTTQkgaPLM\nfqEbP6cg71D3Cs/vMT4c7ZxD6YrVu5suaMLvOBJKH0H3MQyS0MCmzZDAG5FzAmSl\nWRcG3FvE9t5BM90wSdR6Bq+W/UmJ+evnR/1h1nSFP3WnPTEr7pfOTTqLVAIQ1M8/\nKlmPkuC7HebNEg6+42mUZK7IX8vYsXNty7PP14F458Cq6UDnP887sehIYeUV01YY\najbpx8Wt6iM8PkKsLDzq2RjP7UremLxb4m6oKqND2/yBWwMVtmMWOPlKwVD4ALY3\nfZXV+eqrOtbbRFFGH+cMG3erOp1kH/dlYiXkX/SmITDmM0krlYZctIO2Nsd0XdSz\niITGDRx+C37LW1HVhJrCiHnT9RFO+pGhCtQsGBwPn7PvXZeuDmNJzJLHluX7/tRR\nExTpoqCIvlmF/X56/KCIuy83n/Dw1iD5UmPPsUue+2kh8AkkPQOwflJt+KdJxH2s\nyV7HCUNLU+BVjrj2\n=3MvE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd7696b97f20d756df1afa523a8f9e7bf3924c7d",
          "sha": "dd7696b97f20d756df1afa523a8f9e7bf3924c7d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd7696b97f20d756df1afa523a8f9e7bf3924c7d"
        }
      ],
      "message": "rpc: Make pruneheight also reflect undo data presence",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-04-28T22:44:12Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-17T14:57:38Z"
      },
      "sha": "d2b506c920a5234c57875ad809232a9120f6f1e1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNmMDJjZjA5Y2ViMDY2ZjcwODJmMTIwMjhmODFmZjVjYTZmNjMxNzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f02cf09ceb066f7082f12028f81ff5ca6f63171",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3f02cf09ceb066f7082f12028f81ff5ca6f63171",
      "tree": {
        "sha": "5d630164c94d628aae9183ba666f0e67a8e10c94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d630164c94d628aae9183ba666f0e67a8e10c94"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5d630164c94d628aae9183ba666f0e67a8e10c94\nparent d2b506c920a5234c57875ad809232a9120f6f1e1\nauthor Fabian Jahr <fjahr@protonmail.com> 1710692536 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1714344252 +0200\n\ntest: Test that pruneheight requires undo data\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmYu0TwVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNExcQAJ/8/CP6W88zOgv33z8qofgYN/fE\nC0T37MvP0j7u+/usYDhcdylkrQu1t+2+SFuS6pefWc0KwsgzKbcRD6fQwA0pPl4f\nyXXAif7zvvLYGC4PvdsISoRzPqdGQtrv1GCjX/5vvidXWOvEZuclRlFh81TmPgze\ndQ564MFvaVhHBZRmSjiDPDKRMDtR5qSnRBLgVEllO7M5jaGbbs9VFaOKWolSjNYy\n5hno0ZeNZt6sOeqnugozN9U8Ilrr2dGTfznwuwhYZTu9EsbS2UzxU0QxCNX0YPzY\nsIBVRu3n6TKq5a99cPlmS927X6/hGIyuxwRBlcwuFKExX0JvZmELGrVLhk2uW2W6\nBCI6o+YXF6xEDUEIX2xxhMyZWGd5Bo11GmvxNOFoPEwUUCl5CPUDm8QIemxLIsWA\ndzVJ0sOSYE1GRohPpvJvkNiAbLtBlm22PyELaHLKR6E2k/xp2etop0m62V64jo3O\n6W+E2Fb/dA/vs76X9A/ZzaTdjyOkXGZPc4kV3Icuc/osUfyGQuDe4rtweZzFnta8\n0vrKjScGO/kwqGhmAKVEZRqlwuC6HkDo8YD8FYKZzA3Mv7QeP3sANUD6zaALGoM+\nRwIIZB1qZE8hPMJQLDKus40p/cu5lB/IHxL6fNLF8ObRQDlz+O2LHWa0J0h3irHi\nVkrW/3QptI3sRnht\n=Azon\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2b506c920a5234c57875ad809232a9120f6f1e1",
          "sha": "d2b506c920a5234c57875ad809232a9120f6f1e1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2b506c920a5234c57875ad809232a9120f6f1e1"
        }
      ],
      "message": "test: Test that pruneheight requires undo data",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-04-28T22:44:12Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-17T16:22:16Z"
      },
      "sha": "3f02cf09ceb066f7082f12028f81ff5ca6f63171"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkYmI2YTNlYjE4YzQzZmYyMDU3NGE1MzQxNDNjNDBlMGE4NGJlZmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "tree": {
        "sha": "1902f4ecc9b28ad809aadfdac676abefb1c5e11c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1902f4ecc9b28ad809aadfdac676abefb1c5e11c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1902f4ecc9b28ad809aadfdac676abefb1c5e11c\nparent 3f02cf09ceb066f7082f12028f81ff5ca6f63171\nauthor Fabian Jahr <fjahr@protonmail.com> 1710693677 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1714344252 +0200\n\ndoc: Add note to getblockfrompeer on missing undo data\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmYu0TwVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNoocP/jZrj0TgB0zUBaLSsOr2SV0b0bdK\nzuzg3saEg3ucQD5rE4NmFvwb1zg7p6/MsNR82MAEIq/DQfBl2ASfvY5KB0qEFQKp\nkRMR4Hrq2dv8UP2oNFGR2nULO4x/27ECwnzoa1Rd8gBkdUY/JQRrubUDeECOMjRx\njDcWVLEc9MFOhPvZOJl3hwzo+zYQrthKI/oJL+NCQyvRQJCyQx++gR+SpUnR3NL9\nx26GHiDxU02YzL7SYRxVEj9+eAGyutbtSa4Qetw1yP0sgK8KheszHA9GBc/IdvOY\nIJPP2WMEdyZtGUyd3tkJwkXOlF4XPGctFqu7RuiDwrqGpf5Ygs5BpMq+SlMNoC97\nXQwZuC6Fi6E+FbTtwYz90LjdvVRdLZajNUeWBAdu3W1RPQxhcxo0shjwo9I0bKlZ\nYhi/9ufrvjdRoKlujCG/gR2y69YncJtTFgQ1YqCSgQeqn+Uti1KWrysu1zavQFQS\nGAQSzexP3qwJxDEKiLv1MFtjkvuGdzTdojzoTLP0Xf2/0QpS89GZr/74gHFoFj/b\nBXeN6zulCZYGbudp2X9HNXXgDgkSLM8z2fvEy2i+IYWLsiPZyfGBwisFtdr9FluE\nYsPQnE5Sl6mwPX89QCz9R4UUWZzJ1xoAmypaAK6zg9Wx8zDvOqARdtkfxjEKRr14\nTCvlNyGEKb7qvEdd\n=0OEO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f02cf09ceb066f7082f12028f81ff5ca6f63171",
          "sha": "3f02cf09ceb066f7082f12028f81ff5ca6f63171",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3f02cf09ceb066f7082f12028f81ff5ca6f63171"
        }
      ],
      "message": "doc: Add note to getblockfrompeer on missing undo data",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-04-28T22:44:12Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-17T16:41:17Z"
      },
      "sha": "edbb6a3eb18c43ff20574a534143c40e0a84befe"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12636147486,
      "node_id": "HRFPE_lADOABII586ClE1ezwAAAALxLE8e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12636147486",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T22:44:19Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537942918",
      "pull_request_review_id": 1958325955,
      "id": 1537942918,
      "node_id": "PRRC_kwDOABII585bqyWG",
      "diff_hunk": "@@ -595,12 +595,16 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I find `has_undo` more to the point\r\n```suggestion\r\nconst CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool has_undo)\r\n```",
      "created_at": "2024-03-25T17:14:30Z",
      "updated_at": "2024-03-25T20:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537942918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537942918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537955721",
      "pull_request_review_id": 1958325955,
      "id": 1537955721,
      "node_id": "PRRC_kwDOABII585bq1eJ",
      "diff_hunk": "@@ -595,12 +595,16 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)\n {\n     AssertLockHeld(::cs_main);\n+    uint32_t check_status{BLOCK_HAVE_DATA};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think highlighting that this is a mask improves readability\r\n```suggestion\r\n    uint32_t status_mask{BLOCK_HAVE_DATA};\r\n```",
      "created_at": "2024-03-25T17:24:51Z",
      "updated_at": "2024-03-26T10:39:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537955721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537955721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537962499",
      "pull_request_review_id": 1958325955,
      "id": 1537962499,
      "node_id": "PRRC_kwDOABII585bq3ID",
      "diff_hunk": "@@ -595,12 +595,16 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)\n {\n     AssertLockHeld(::cs_main);\n+    uint32_t check_status{BLOCK_HAVE_DATA};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537955721,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: also, perhaps good to add a type `static_assert` here to ensure this doesn't silently introduce bugs when `nStatus` changes type?\r\n\r\n```\r\nstatic_assert(std::is_same<decltype(check_status), decltype(last_block->nStatus)>::value);\r\n\r\n```",
      "created_at": "2024-03-25T17:29:45Z",
      "updated_at": "2024-03-25T20:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537962499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537962499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537973016",
      "pull_request_review_id": 1958325955,
      "id": 1537973016,
      "node_id": "PRRC_kwDOABII585bq5sY",
      "diff_hunk": "@@ -337,8 +337,8 @@ class BlockManager\n \n     //! Find the first stored ancestor of start_block immediately after the last\n     //! pruned ancestor. Return value will never be null. Caller is responsible\n-    //! for ensuring that start_block has data is not pruned.\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! for ensuring that start_block has data.\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, const bool check_undo=false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: unnecessary `const`\r\n```suggestion\r\n    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, bool check_undo=false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n```",
      "created_at": "2024-03-25T17:35:03Z",
      "updated_at": "2024-03-25T20:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537973016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537973016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537985109",
      "pull_request_review_id": 1958325955,
      "id": 1537985109,
      "node_id": "PRRC_kwDOABII585bq8pV",
      "diff_hunk": "@@ -337,8 +337,8 @@ class BlockManager\n \n     //! Find the first stored ancestor of start_block immediately after the last\n     //! pruned ancestor. Return value will never be null. Caller is responsible\n-    //! for ensuring that start_block has data is not pruned.\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! for ensuring that start_block has data.\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, const bool check_undo=false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537973016,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: also, would be nice to update the docs for the `check_undo` param, and include the exception made for genesis block so new callers are made aware to look out for that?",
      "created_at": "2024-03-25T17:42:49Z",
      "updated_at": "2024-03-25T20:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537985109",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537985109"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537989270",
      "pull_request_review_id": 1958325955,
      "id": 1537989270,
      "node_id": "PRRC_kwDOABII585bq9qW",
      "diff_hunk": "@@ -835,7 +836,7 @@ static RPCHelpMan pruneblockchain()\n \n     PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n-    return block.nStatus & BLOCK_HAVE_DATA ? active_chainstate.m_blockman.GetFirstStoredBlock(block)->nHeight - 1 : block.nHeight;\n+    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, nullptr, true)->nHeight - 1 : block.nHeight;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit (+ a few lines down)\r\n```suggestion\r\n    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, /*last_block=*/nullptr, /*check_undo=*/true)->nHeight - 1 : block.nHeight;\r\n```",
      "created_at": "2024-03-25T17:45:26Z",
      "updated_at": "2024-03-25T20:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1537989270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537989270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505540",
      "pull_request_review_id": 1963955472,
      "id": 1541505540,
      "node_id": "PRRC_kwDOABII585b4YIE",
      "diff_hunk": "@@ -835,7 +836,7 @@ static RPCHelpMan pruneblockchain()\n \n     PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n-    return block.nStatus & BLOCK_HAVE_DATA ? active_chainstate.m_blockman.GetFirstStoredBlock(block)->nHeight - 1 : block.nHeight;\n+    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, nullptr, true)->nHeight - 1 : block.nHeight;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537989270,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-03-27T17:03:31Z",
      "updated_at": "2024-03-27T17:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1541505540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505629",
      "pull_request_review_id": 1963955617,
      "id": 1541505629,
      "node_id": "PRRC_kwDOABII585b4YJd",
      "diff_hunk": "@@ -337,8 +337,8 @@ class BlockManager\n \n     //! Find the first stored ancestor of start_block immediately after the last\n     //! pruned ancestor. Return value will never be null. Caller is responsible\n-    //! for ensuring that start_block has data is not pruned.\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! for ensuring that start_block has data.\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, const bool check_undo=false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537973016,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-03-27T17:03:34Z",
      "updated_at": "2024-03-27T17:03:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1541505629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505765",
      "pull_request_review_id": 1963955807,
      "id": 1541505765,
      "node_id": "PRRC_kwDOABII585b4YLl",
      "diff_hunk": "@@ -595,12 +595,16 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)\n {\n     AssertLockHeld(::cs_main);\n+    uint32_t check_status{BLOCK_HAVE_DATA};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537955721,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not needed due to approach change",
      "created_at": "2024-03-27T17:03:40Z",
      "updated_at": "2024-03-27T17:03:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1541505765",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505876",
      "pull_request_review_id": 1963955981,
      "id": 1541505876,
      "node_id": "PRRC_kwDOABII585b4YNU",
      "diff_hunk": "@@ -595,12 +595,16 @@ bool BlockManager::IsBlockPruned(const CBlockIndex& block)\n     return m_have_pruned && !(block.nStatus & BLOCK_HAVE_DATA) && (block.nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\n+const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& upper_block, const CBlockIndex* lower_block, const bool check_undo)",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "296243c3153e996d1626b8eabc8f8bce845ce3ad",
      "in_reply_to_id": 1537942918,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not needed due to approach change",
      "created_at": "2024-03-27T17:03:44Z",
      "updated_at": "2024-03-27T17:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1541505876",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541505876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545671827",
      "pull_request_review_id": 1970253804,
      "id": 1545671827,
      "node_id": "PRRC_kwDOABII585cIRST",
      "diff_hunk": "@@ -835,7 +836,8 @@ static RPCHelpMan pruneblockchain()\n \n     PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n-    return block.nStatus & BLOCK_HAVE_DATA ? active_chainstate.m_blockman.GetFirstStoredBlock(block)->nHeight - 1 : block.nHeight;\n+    const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\n+    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, /*lower_block=*/nullptr, /*status_mask=*/has_undo)->nHeight - 1 : block.nHeight;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    return block.nStatus & has_undo ? active_chainstate.m_blockman.GetFirstStoredBlock(block, /*lower_block=*/nullptr, /*status_mask=*/has_undo)->nHeight - 1 : block.nHeight;\r\n```",
      "created_at": "2024-03-31T13:35:54Z",
      "updated_at": "2024-03-31T22:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1545671827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545671827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 840,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545672055",
      "pull_request_review_id": 1970253804,
      "id": 1545672055,
      "node_id": "PRRC_kwDOABII585cIRV3",
      "diff_hunk": "@@ -1289,7 +1291,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n         bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should check for `has_undo` too",
      "created_at": "2024-03-31T13:36:34Z",
      "updated_at": "2024-03-31T22:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1545672055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545672055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545690307",
      "pull_request_review_id": 1970253804,
      "id": 1545690307,
      "node_id": "PRRC_kwDOABII585cIVzD",
      "diff_hunk": "@@ -1289,7 +1291,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n         bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": 1545672055,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, it seems like we can just use `BLOCK_HAVE_MASK          =   BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO,`",
      "created_at": "2024-03-31T14:13:13Z",
      "updated_at": "2024-03-31T22:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1545690307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545690307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545720878",
      "pull_request_review_id": 1970253804,
      "id": 1545720878,
      "node_id": "PRRC_kwDOABII585cIdQu",
      "diff_hunk": "@@ -336,9 +336,12 @@ class BlockManager\n     bool CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex& lower_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Find the first stored ancestor of start_block immediately after the last\n-    //! pruned ancestor. Return value will never be null. Caller is responsible\n-    //! for ensuring that start_block has data is not pruned.\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! ancestor that does not match the status mask. Return value will never be\n+    //! null. Caller is responsible for ensuring that start_block has the status\n+    //! mask data. If the whole chain matched the status mask the genesis block\n+    //! will be returned regardless of it's status match because, for example,\n+    //! it can not have undo data by nature.\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, uint32_t status_mask=BLOCK_HAVE_DATA) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 12,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it's called `upper_block` in the implementation, which I think is a better name too (cfr `lower_block`)\r\n```suggestion\r\n    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, uint32_t status_mask=BLOCK_HAVE_DATA) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n```",
      "created_at": "2024-03-31T15:35:19Z",
      "updated_at": "2024-03-31T22:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1545720878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545720878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311337",
      "pull_request_review_id": 2027256874,
      "id": 1582311337,
      "node_id": "PRRC_kwDOABII585eUCep",
      "diff_hunk": "@@ -336,9 +336,12 @@ class BlockManager\n     bool CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex& lower_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Find the first stored ancestor of start_block immediately after the last\n-    //! pruned ancestor. Return value will never be null. Caller is responsible\n-    //! for ensuring that start_block has data is not pruned.\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! ancestor that does not match the status mask. Return value will never be\n+    //! null. Caller is responsible for ensuring that start_block has the status\n+    //! mask data. If the whole chain matched the status mask the genesis block\n+    //! will be returned regardless of it's status match because, for example,\n+    //! it can not have undo data by nature.\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr, uint32_t status_mask=BLOCK_HAVE_DATA) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 12,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": 1545720878,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-28T19:28:29Z",
      "updated_at": "2024-04-28T19:28:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1582311337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311605",
      "pull_request_review_id": 2027257309,
      "id": 1582311605,
      "node_id": "PRRC_kwDOABII585eUCi1",
      "diff_hunk": "@@ -1289,7 +1291,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n         bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": 1545672055,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done, I liked that `BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO` is more expressive because we don't use `BLOCK_HAVE_MASK` much I feel like people would need to look it up more, but I have just added a comment instead now.",
      "created_at": "2024-04-28T19:28:35Z",
      "updated_at": "2024-04-28T19:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1582311605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311745",
      "pull_request_review_id": 2027257574,
      "id": 1582311745,
      "node_id": "PRRC_kwDOABII585eUClB",
      "diff_hunk": "@@ -835,7 +836,8 @@ static RPCHelpMan pruneblockchain()\n \n     PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n-    return block.nStatus & BLOCK_HAVE_DATA ? active_chainstate.m_blockman.GetFirstStoredBlock(block)->nHeight - 1 : block.nHeight;\n+    const uint32_t has_undo{BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO};\n+    return block.nStatus & BLOCK_HAVE_MASK ? active_chainstate.m_blockman.GetFirstStoredBlock(block, /*lower_block=*/nullptr, /*status_mask=*/has_undo)->nHeight - 1 : block.nHeight;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbb6a3eb18c43ff20574a534143c40e0a84befe",
      "original_commit_id": "23ac56177df6888f9ede370092f26b1cf6bebf26",
      "in_reply_to_id": 1545671827,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-28T19:28:40Z",
      "updated_at": "2024-04-28T19:28:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29668#discussion_r1582311745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582311745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29668"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 840,
      "side": "RIGHT"
    }
  ]
}