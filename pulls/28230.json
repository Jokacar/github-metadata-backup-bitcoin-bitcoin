{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
    "id": 1465043969,
    "node_id": "PR_kwDOABII585XUswB",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28230",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28230.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28230.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/faac216d48b81a07c85c6185af237d7bfd57e23c",
    "number": 28230,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rpc: Add Arg() default helper",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently the RPC method implementations have many issues:\r\n\r\n* Default RPC argument values (and their optionality state) are duplicated in the documentation and the C++ code, with no checks to prevent them from going out of sync.\r\n* Getting an optional RPC argument is verbose, using a ternary operator, or worse, a multi-line `if`.\r\n\r\nFix all issues by adding default helper that can be called via `self.Arg<int>(0)`. The helper needs a few lines of code in the `src/rpc/util.h` header file. Everything else will be implemented in the cpp file once and if an RPC method needs it.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2023-08-07T11:14:00Z",
    "updated_at": "2023-08-21T16:27:36Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "05e460dbe3530ec83a921d7f0595502b4c18cc7d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "MarcoFalke:2308-rpc-default-",
      "ref": "2308-rpc-default-",
      "sha": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 208365,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-21T12:49:20Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ce5e8f4758e6fccf59b3980af417ec6c75e383e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35567,
        "stargazers_count": 71003,
        "watchers_count": 71003,
        "size": 236690,
        "default_branch": "master",
        "open_issues_count": 668,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-21T15:59:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-21T16:08:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 112,
    "deletions": 8,
    "changed_files": 5,
    "commits": 1,
    "review_comments": 73,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 1667663404,
      "node_id": "IC_kwDOABII585jZoYs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667663404",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T11:14:03Z",
      "updated_at": "2023-08-21T16:27:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1684692589), [stickies-v](https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1587417235) |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1670237772) |\n| Approach ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1577001175) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28172](https://github.com/bitcoin/bitcoin/pull/28172) (refactor: use string_view for passing string literals to Parse{Hash,Hex} by jonatack)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#24963](https://github.com/bitcoin/bitcoin/pull/24963) (RPC/Wallet: Convert walletprocesspsbt to use options parameter by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1667663404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "labeled",
      "id": 10022758567,
      "node_id": "LE_lADOABII585toHAezwAAAAJVZyin",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10022758567",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T11:14:05Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T11:17:07Z",
      "updated_at": "2023-08-07T11:17:07Z",
      "source": {
        "issue": {
          "id": 709209433,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDkzMzExNTEw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20017",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20017/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20017/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20017/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20017",
          "number": 20017,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add RPCContext",
          "body": "This change allows to do\r\n```cpp\r\n[&](const RPCContext& ctx) -> UniValue\r\n```\r\ninstead of\r\n```cpp\r\n[&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n```\r\nSo `RPCContext` ties `RPCHelpMan` and `JSONRPCRequest`. Then `ctx` is used to get actual parameter values. For instance, before:\r\n```cpp\r\nint timeout = 0;\r\nif (!request.params[0].isNull())\t\r\n    timeout = request.params[0].get_int();\r\n```\r\nand now\r\n```cpp\r\nint timeout = ctx.param<int>(0);\r\n```\r\nNot that the default value defined in the RPC spec is used.\r\n\r\nIt is also possible to iterate an array parameter:\r\n```cpp\r\n    std::set<std::string> stats;\r\n    ctx.param(1).forEach([&](const UniValue& stat) {\r\n        stats.insert(stat.get_str());\r\n    });\r\n```\r\nOr even do custom parameter handling:\r\n```cpp\r\n    int verbosity = ctx.param(1, [](const UniValue& param) -> int {\r\n        if (param.isNull()) return 1;\r\n        if (param.isNum()) return param.get_int();\r\n        return param.get_bool() ? 1 : 0;\r\n    });\r\n```\r\n",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20017",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20017",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20017.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20017.patch"
          },
          "closed_at": "2022-10-21T08:49:39Z",
          "created_at": "2020-09-25T18:54:49Z",
          "updated_at": "2023-08-07T11:28:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T11:17:14Z",
      "updated_at": "2023-08-07T11:17:14Z",
      "source": {
        "issue": {
          "id": 1666222511,
          "node_id": "PR_kwDOABII585OOKuf",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27460",
          "number": 27460,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add importmempool RPC",
          "body": "Currently it is possible to import a mempool by placing it in the datadir and starting the node. However this has many issues:\r\n\r\n* Users aren't expected to fiddle with the datadir, possibly corrupting it\r\n* An existing mempool file in the datadir may be overwritten\r\n* The node needs to be restarted\r\n* Importing an untrusted file this way is dangerous, because it can corrupt the mempool\r\n\r\nFix all issues by adding a new RPC.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27460.patch"
          },
          "closed_at": "2023-08-15T14:15:41Z",
          "created_at": "2023-04-13T11:19:15Z",
          "updated_at": "2023-08-15T14:26:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1667726750,
      "node_id": "IC_kwDOABII585jZ32e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667726750",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:02:04Z",
      "updated_at": "2023-08-07T12:02:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1667726750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10023404668,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJVcQR8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10023404668",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:21:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10023417751,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJVcTeX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10023417751",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:22:54Z"
    },
    {
      "event": "reviewed",
      "id": 1565233492,
      "node_id": "PRR_kwDOABII585dS5FU",
      "url": null,
      "actor": null,
      "commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1565233492",
      "submitted_at": "2023-08-07T13:14:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "renamed",
      "id": 10024325306,
      "node_id": "RTE_lADOABII585toHAezwAAAAJVfxC6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10024325306",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T13:44:40Z",
      "rename": {
        "from": "rpc: Add Param() default helper",
        "to": "rpc: Add Arg() default helper"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10024368224,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJVf7hg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10024368224",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T13:48:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10024374392,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJVf9B4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10024374392",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T13:48:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10024538810,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJVglK6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10024538810",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T14:02:46Z"
    },
    {
      "event": "reviewed",
      "id": 1565750058,
      "node_id": "PRR_kwDOABII585dU3Mq",
      "url": null,
      "actor": null,
      "commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK fa6b2da57ef7ff125a493c7835cb15935255ff8c\r\n\r\nThis makes for a much more elegant interface throughout the RPC methods, with minimal overhead.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1565750058",
      "submitted_at": "2023-08-07T18:37:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "reviewed",
      "id": 1566099524,
      "node_id": "PRR_kwDOABII585dWMhE",
      "url": null,
      "actor": null,
      "commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1566099524",
      "submitted_at": "2023-08-07T20:24:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10032806470,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJWAHpG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10032806470",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T08:47:17Z"
    },
    {
      "event": "reviewed",
      "id": 1567815521,
      "node_id": "PRR_kwDOABII585dcvdh",
      "url": null,
      "actor": null,
      "commit_id": "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125, really like this!",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1567815521",
      "submitted_at": "2023-08-08T17:34:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "commented",
      "id": 1670237772,
      "node_id": "IC_kwDOABII585jjc5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670237772",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T20:07:12Z",
      "updated_at": "2023-08-08T20:07:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1670237772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10043705458,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJWpshy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10043705458",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T08:04:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10043752523,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJWp4BL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10043752523",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T08:09:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10043760002,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJWp52C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10043760002",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T08:09:46Z"
    },
    {
      "event": "reviewed",
      "id": 1569717230,
      "node_id": "PRR_kwDOABII585dj_vu",
      "url": null,
      "actor": null,
      "commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1569717230",
      "submitted_at": "2023-08-09T14:18:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T17:09:18Z",
      "updated_at": "2023-08-09T17:09:18Z",
      "source": {
        "issue": {
          "id": 1843493325,
          "node_id": "PR_kwDOABII585XjLWx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28246",
          "number": 28246,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Use CTxDestination in CRecipient instead of just scriptPubKey",
          "body": "For silent payments, we want to provide a `SilentPaymentsDestination` to be used as the recipient, which requires `CRecipient` to use something other than just the `scriptPubKey` as we cannot know the output script for a silent payment prior to transaction creation. `CTxDestination` seems like the obvious place to add a `SilentPaymentsDestination` as it is our internal representation of an address.\r\n\r\nIn order to still allow paying to arbitrary scriptPubKeys (e.g. for data carrier outputs, or the user hand crafted a raw transaction that they have given to `fundrawtransaction`), `CNoDestination` is changed to contain raw scripts.\r\n\r\nAdditionally, P2PK scripts are now interpreted as a new `PubKeyDestination` rather than `PKHash`. This results in some things that would have given an address for P2PK scripts to no longer do so. This is arguably more correct.\r\n\r\n`ExtractDestination`'s behavior is slightly changed for the above. It now returns `true` for those destinations that have addresses, so P2PK scripts now result in `false`. Even though it returns false for `CNoDestination`, the script will now be included in that `CNoDestination`.\r\n\r\nBuilds on #28244",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28246",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28246",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28246.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28246.patch"
          },
          "created_at": "2023-08-09T15:16:28Z",
          "updated_at": "2023-08-21T12:36:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T17:14:36Z",
      "updated_at": "2023-08-09T17:14:36Z",
      "source": {
        "issue": {
          "id": 1843062887,
          "node_id": "PR_kwDOABII585XhuK3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28244",
          "number": 28244,
          "state": "closed",
          "state_reason": null,
          "title": "Break up script/standard.{h/cpp}",
          "body": "Some future work needs to touch things in script/standard.{h/cpp}, however it is unclear if it is safe to do so as they are included in several different places that could effect standardness and consensus. It contains a mix of policy parameters, consensus parameters, and utilities only used by the wallet. This PR breaks up the various components and renames the files to clearly separate everything.\r\n\r\n* `CTxDestination` is moved to a new file `src/addresstype.{cpp/h}`\r\n* `TaprootSpendData` and `TaprootBuilder` (and their utility functions and structs) are moved to `SigningProvider` as these are used only during signing.\r\n* `CScriptID` is moved to `script/script.h` to be next to `CScript`.\r\n* `MANDATORY_SCRIPT_VERIFY_FLAGS` is moved to `interpreter.h`\r\n* The parameters `DEFAULT_ACCEPT_DATACARRIER` and `MAX_OP_RETURN_RELAY` are moved to `policy.h`\r\n* `standard.{cpp/h}` is renamed to `solver.{cpp/h}` since that's all that's left in the file after the above moves",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28244",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28244",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28244.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28244.patch"
          },
          "closed_at": "2023-08-17T11:54:27Z",
          "created_at": "2023-08-09T11:43:57Z",
          "updated_at": "2023-08-17T14:03:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T19:02:43Z",
      "updated_at": "2023-08-09T19:02:43Z",
      "source": {
        "issue": {
          "id": 1825110070,
          "node_id": "PR_kwDOABII585WldSH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28172",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28172/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28172/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28172/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28172",
          "number": 28172,
          "state": "open",
          "state_reason": null,
          "title": "refactor: use string_view for passing string literals to Parse{Hash,Hex}",
          "body": "as `string_view` is optimized to be trivially copiable, whereas the current code creates a `std::string` copy at each call.\r\n\r\nThese utility methods are called by quite a few RPCs and tests, as well as by each other.\r\n\r\n```\r\n$ git grep \"ParseHashV\\|ParseHashO\\|ParseHexV\\|ParseHexO\" | wc -l\r\n61\r\n```\r\n\r\nAlso remove an out-of-date external link.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28172",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28172",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28172.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28172.patch"
          },
          "created_at": "2023-07-27T19:54:21Z",
          "updated_at": "2023-08-18T00:55:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T00:01:46Z",
      "updated_at": "2023-08-10T00:01:46Z",
      "source": {
        "issue": {
          "id": 1584692334,
          "node_id": "PR_kwDOABII585J-QiA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27101",
          "number": 27101,
          "state": "open",
          "state_reason": null,
          "title": "Support JSON-RPC 2.0 when requested by client",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/2960\r\n\r\nBitcoin Core's JSONRPC server behaves with a special blend of 1.0, 1.1 and 2.0 behaviors. This introduces compliance issues with more strict clients. There are the major misbehaviors that I found:\r\n- returning non-200 HTTP codes for RPC errors like \"Method not found\" (this is not a server error or an HTTP error)\r\n- returning both `\"error\"` and `\"result\"` fields together in a response object.\r\n- different behavior for single and batched RPC requests\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/15495 added regression tests after a discussion in https://github.com/bitcoin/bitcoin/pull/15381 to kinda lock in our RPC behavior to preserve backwards compatibility. \r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/12435 was an attempt to allow strict 2.0 compliance behind a flag, but was abandoned. \r\n\r\nThe approach in this PR is not strict and preserves backwards compatibility in a familiar bitcoin-y way: all old behavior is preserved, but new rules are applied to clients that opt in. One of the rules in the [JSON RPC 2.0 spec](https://www.jsonrpc.org/specification#request_object) is that the kv pair `\"jsonrpc\": \"2.0\"` must be present in the request. Well, let's just use that to trigger strict 2.0 behavior! When that kv pair is included in a request object, the [response will adhere to strict JSON-RPC 2.0 rules](https://www.jsonrpc.org/specification#response_object), essentially:\r\n\r\n- always return HTTP 200 \"OK\" unless there really is a server error or malformed request\r\n- either return `\"error\"` OR `\"result\"` but never both\r\n- same behavior for single and batch requests\r\n\r\nIf this is merged next steps can be:\r\n\r\n- Refactor bitcoin-cli to always use strict 2.0\r\n- Refactor the python test framework to always use strict 2.0 for everything\r\n- Begin deprecation process for 1.0/1.1 behavior (?)\r\n\r\nIf we can one day remove the old 1.0/1.1 behavior we can clean up the rpc code quite a bit.\r\n\r\nThis patch does NOT implement JSON RPC 2.0 [\"notifications\"](https://www.jsonrpc.org/specification#notification) which are requests that the server should not respond to.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27101",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27101",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27101.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27101.patch"
          },
          "created_at": "2023-02-14T19:13:42Z",
          "updated_at": "2023-08-17T13:51:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T03:07:56Z",
      "updated_at": "2023-08-10T03:07:56Z",
      "source": {
        "issue": {
          "id": 1320033494,
          "node_id": "PR_kwDOABII5848NBt5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
          "number": 25722,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Use util::Result class for wallet loading",
          "body": "**This is based on #25665.** The non-base commits are:\r\n\r\n- [`1a540b591c74` refactor: Use util::Result class for wallet loading](https://github.com/bitcoin/bitcoin/pull/25722/commits/1a540b591c742594cca285ef9b8b16c6d8507d58)\r\n\r\n---\r\n\r\nWallet loading functions up and down the stack have lots of error and warning parameters, and return error information in different ways. This PR makes them uniformly return `util::Result`, without changing behavior.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25722.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25722.patch"
          },
          "created_at": "2022-07-27T19:26:58Z",
          "updated_at": "2023-08-18T08:47:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T03:36:37Z",
      "updated_at": "2023-08-10T03:36:37Z",
      "source": {
        "issue": {
          "id": 1213857595,
          "node_id": "PR_kwDOABII5842sX1K",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24963",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24963/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24963/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24963/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24963",
          "number": 24963,
          "state": "open",
          "state_reason": null,
          "title": "RPC/Wallet: Convert walletprocesspsbt to use options parameter",
          "body": "`walletprocesspsbt` has a single logical positional argument and a bunch that only make sense as named options. Convert them to an actual options Object for a better positional API.\r\n\r\nRetains backward compatibility for now.",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24963",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24963",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24963.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24963.patch"
          },
          "created_at": "2022-04-25T02:03:07Z",
          "updated_at": "2023-08-10T03:36:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1572750860,
      "node_id": "PRR_kwDOABII585dvkYM",
      "url": null,
      "actor": null,
      "commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1572750860",
      "submitted_at": "2023-08-10T22:03:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "reviewed",
      "id": 1572794322,
      "node_id": "PRR_kwDOABII585dvu_S",
      "url": null,
      "actor": null,
      "commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for extending this to cover all kinds of argument types, I think this will make it much more straightforward for users to add in their own template instantiations where needed.\r\n\r\nI still [don't really have a clear preference](https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287432683) for std::optional vs pointer, and I think it's not that important, so ACK fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1572794322",
      "submitted_at": "2023-08-10T22:04:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T03:21:23Z",
      "updated_at": "2023-08-11T03:21:23Z",
      "source": {
        "issue": {
          "id": 1816230792,
          "node_id": "PR_kwDOABII585WHu-Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28122",
          "number": 28122,
          "state": "open",
          "state_reason": null,
          "title": "Silent Payments: Implement BIP352",
          "body": "UPDATE: Rather than having a special encoder and decoder for silent payments, it makes more sense to have `CTxDestination` include a `V0SilentPaymentDestination` type. Some pre-work to make this easier is done in https://github.com/bitcoin/bitcoin/pull/28244 and https://github.com/bitcoin/bitcoin/pull/28246 , which this PR now depends on. If you want to review this PR, please review these two first. One is a move-only refactor, and the other a fairly light refactor with minimal behavior changes.\r\n\r\n<hr/>\r\n\r\nThis PR is a child of https://github.com/bitcoin/bitcoin/pull/27827 and only implements the BIP logic without the wallet code. For the wallet implementations:\r\n* #28201 - implements sending\r\n* #28202 - implements receiving\r\n* #27827 - all three PRs together - this PR is meant for tracking progress and is useful for reviewers who want to compile all three PRs at once for testing\r\n\r\n## BIP352\r\n\r\nThis PR focuses strictly on the BIP logic and attempts to separate it from the wallet and transaction implementation details. This is accomplished by working directly with public and private keys, instead of needing a wallet backend and transactions for testing. Labels for the receiver are optional and thus deferred for a later PR.\r\n\r\nTest vectors from the BIP are included as unit tests.\r\n\r\nBefore reviewing, it is strongly recommended you read https://github.com/bitcoin/bips/pull/1458 and take a look at the reference python implementation on the BIP.\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28122",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28122.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28122.patch"
          },
          "created_at": "2023-07-21T18:36:37Z",
          "updated_at": "2023-08-21T11:53:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1572976655,
      "node_id": "PRR_kwDOABII585dwbgP",
      "url": null,
      "actor": null,
      "commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nHere's a branch demoing alternatives for the comments below: https://github.com/ajtowns/bitcoin/commits/202308-rpchelpfulreq",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1572976655",
      "submitted_at": "2023-08-11T05:37:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10086044867,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJZLNTD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10086044867",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T12:27:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10086789647,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJZODIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10086789647",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T13:35:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10086876994,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJZOYdC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10086876994",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T13:43:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10087027244,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJZO9Is",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10087027244",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T13:57:17Z"
    },
    {
      "event": "commented",
      "id": 1677389241,
      "node_id": "IC_kwDOABII585j-u25",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677389241",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T14:08:36Z",
      "updated_at": "2023-08-14T14:08:36Z",
      "author_association": "MEMBER",
      "body": "Sorry for the repeated force-pushes, but I think I've addressed/replied to all feedback for now.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1677389241",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "reviewed",
      "id": 1577001175,
      "node_id": "PRR_kwDOABII585d_yDX",
      "url": null,
      "actor": null,
      "commit_id": "fa6ef16c5687e9b3e8cbfe75ec53bac86ac2104f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK. I wouldn't say the API here is perfectly ideal because it doesn't check everything at compile time that could theoretically be checked at compile time. But it is a strict improvement that cuts verbosity and will only make other improvements easier in the future.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1577001175",
      "submitted_at": "2023-08-14T14:42:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10094737709,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJZsXkt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10094737709",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T08:08:05Z"
    },
    {
      "event": "unsubscribed",
      "id": 10095783393,
      "node_id": "UE_lADOABII585toHAezwAAAAJZwW3h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10095783393",
      "actor": {
        "login": "dellroy979",
        "id": 135130941,
        "node_id": "U_kgDOCA3vPQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/135130941?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dellroy979",
        "html_url": "https://github.com/dellroy979",
        "followers_url": "https://api.github.com/users/dellroy979/followers",
        "following_url": "https://api.github.com/users/dellroy979/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dellroy979/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dellroy979/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dellroy979/subscriptions",
        "organizations_url": "https://api.github.com/users/dellroy979/orgs",
        "repos_url": "https://api.github.com/users/dellroy979/repos",
        "events_url": "https://api.github.com/users/dellroy979/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dellroy979/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T10:33:53Z"
    },
    {
      "event": "commented",
      "id": 1679417885,
      "node_id": "IC_kwDOABII585kGeId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1679417885",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T18:39:41Z",
      "updated_at": "2023-08-15T18:39:41Z",
      "author_association": "MEMBER",
      "body": "> Approach ACK. I wouldn't say the API here is perfectly ideal because it doesn't check everything at compile time that could theoretically be checked at compile time.\r\n\r\nI don't think any API changes will be required, assuming C++20 const(expr/init/eval), to turn run-time checks into compile-time checks, but I haven't confirmed this.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1679417885",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "reviewed",
      "id": 1581691765,
      "node_id": "PRR_kwDOABII585eRrN1",
      "url": null,
      "actor": null,
      "commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1581691765",
      "submitted_at": "2023-08-17T04:07:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10115567787,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJa71Cr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10115567787",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T06:53:26Z"
    },
    {
      "event": "commented",
      "id": 1681764096,
      "node_id": "IC_kwDOABII585kPa8A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681764096",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T07:18:45Z",
      "updated_at": "2023-08-17T07:18:45Z",
      "author_association": "MEMBER",
      "body": "Force pushed to allow `MaybeArg` in all contexts.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1681764096",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "reviewed",
      "id": 1582339621,
      "node_id": "PRR_kwDOABII585eUJYl",
      "url": null,
      "actor": null,
      "commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1582339621",
      "submitted_at": "2023-08-17T10:46:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    },
    {
      "event": "review_requested",
      "id": 10117944752,
      "node_id": "RRE_lADOABII585toHAezwAAAAJbE5Ww",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10117944752",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T10:46:58Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10118314259,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJbGTkT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10118314259",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T11:28:49Z"
    },
    {
      "event": "labeled",
      "id": 10119758626,
      "node_id": "LE_lADOABII585toHAezwAAAAJbL0Mi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10119758626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T13:49:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10120550361,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJbO1fZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10120550361",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T14:56:57Z"
    },
    {
      "event": "unlabeled",
      "id": 10121190765,
      "node_id": "UNLE_lADOABII585toHAezwAAAAJbRR1t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10121190765",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T15:53:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10124912981,
      "node_id": "LE_lADOABII585toHAezwAAAAJbfelV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10124912981",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T00:28:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhYWMyMTZkNDhiODFhMDdjODVjNjE4NWFmMjM3ZDdiZmQ1N2UyM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faac216d48b81a07c85c6185af237d7bfd57e23c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faac216d48b81a07c85c6185af237d7bfd57e23c",
      "tree": {
        "sha": "1cc877e6bc2bacd4ff4124350e8f2c6aa53d8308",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cc877e6bc2bacd4ff4124350e8f2c6aa53d8308"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 1cc877e6bc2bacd4ff4124350e8f2c6aa53d8308\nparent 6ce5e8f4758e6fccf59b3980af417ec6c75e383e\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1691412781 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1692348220 +0200\n\nrpc: Add Arg() default helper\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMid3MkhUuGwqjpAIIjGV9Lyh7RNAIL1Ct138GrSZ0JCvmbYp6T6xImKQJ1wXKYemo\nTLVoyshMkHJoYbwMKbwAY=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ce5e8f4758e6fccf59b3980af417ec6c75e383e",
          "sha": "6ce5e8f4758e6fccf59b3980af417ec6c75e383e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ce5e8f4758e6fccf59b3980af417ec6c75e383e"
        }
      ],
      "message": "rpc: Add Arg() default helper",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-08-18T08:43:40Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-08-07T12:53:01Z"
      },
      "sha": "faac216d48b81a07c85c6185af237d7bfd57e23c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10127578153,
      "node_id": "HRFPE_lADOABII585toHAezwAAAAJbppQp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10127578153",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T08:44:37Z"
    },
    {
      "event": "unlabeled",
      "id": 10130762071,
      "node_id": "UNLE_lADOABII585toHAezwAAAAJb1ylX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10130762071",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T14:40:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1684037736,
      "node_id": "IC_kwDOABII585kYGBo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684037736",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T14:52:56Z",
      "updated_at": "2023-08-18T14:52:56Z",
      "author_association": "MEMBER",
      "body": "Addressed all (style) feedback so far, I think :sweat_smile: ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1684037736",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "commented",
      "id": 1684692589,
      "node_id": "IC_kwDOABII585kal5t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684692589",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-19T02:24:21Z",
      "updated_at": "2023-08-19T02:24:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK faac216d48b81a07c85c6185af237d7bfd57e23c",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#issuecomment-1684692589",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230"
    },
    {
      "event": "reviewed",
      "id": 1587417235,
      "node_id": "PRR_kwDOABII585enhCT",
      "url": null,
      "actor": null,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK faac216d48b81a07c85c6185af237d7bfd57e23c\r\n\r\nnit: pull description & title have gotten a bit outdated as the PR changed quite a bit since its initial version. I think a brief mention of `MaybeArg` and the optionality of arguments could be helpful to include here?\r\n\r\nAs a nice bonus, it seems adding the `RPCHelpMan::m_req` pointer also makes it quite trivial to get an argument by name and builds nicely on this pull. I quickly pulled something together in https://github.com/stickies-v/bitcoin/commit/d89b519789d968cf14318c294dadc5bdb479b3e1 just as a PoC that passes functional tests and (the delta to this PR) seems significantly less work than #27788 (but I've not properly tested/dug into this, just something I thought of).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#pullrequestreview-1587417235",
      "submitted_at": "2023-08-21T16:27:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285806857",
      "pull_request_review_id": 1565233492,
      "id": 1285806857,
      "node_id": "PRRC_kwDOABII585Mo9sJ",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would be helpful to specify what it throws, and perhaps use `@throws` to make it structured?",
      "created_at": "2023-08-07T12:38:20Z",
      "updated_at": "2023-08-07T13:14:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285806857",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285806857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285831220",
      "pull_request_review_id": 1565233492,
      "id": 1285831220,
      "node_id": "PRRC_kwDOABII585MpDo0",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can\n+     * not represent the default value.\n+     */\n+    template <typename R>\n+    R Param(size_t i) const;",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 10,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: as we're getting the parameter value, would `Arg` be a better name? Perhaps it's too similar to `RPCArg` though (which unfortunately would have been more appropriately named `RPCParam`, I think, but that's not relevant to this PR).",
      "created_at": "2023-08-07T12:57:20Z",
      "updated_at": "2023-08-07T13:14:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285831220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285831220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285838697",
      "pull_request_review_id": 1565233492,
      "id": 1285838697,
      "node_id": "PRRC_kwDOABII585MpFdp",
      "diff_hunk": "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we also want to set this to nullptr in the many cases where we throw early in this function?",
      "created_at": "2023-08-07T13:02:01Z",
      "updated_at": "2023-08-07T13:14:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285838697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285838697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285851447",
      "pull_request_review_id": 1565233492,
      "id": 1285851447,
      "node_id": "PRRC_kwDOABII585MpIk3",
      "diff_hunk": "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this is threadsafe with our `g_work_queue`. Will we not have race conditions here when multiple requests on the same `RPCHelpMan` are in the queue at the same time?",
      "created_at": "2023-08-07T13:13:42Z",
      "updated_at": "2023-08-07T13:14:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285851447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285862343",
      "pull_request_review_id": 1565323369,
      "id": 1285862343,
      "node_id": "PRRC_kwDOABII585MpLPH",
      "diff_hunk": "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285851447,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`RPCHelpMan` are constructed and allocated fresh for each RPC call.",
      "created_at": "2023-08-07T13:22:59Z",
      "updated_at": "2023-08-07T13:23:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285862343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285862343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285865972",
      "pull_request_review_id": 1565329017,
      "id": 1285865972,
      "node_id": "PRRC_kwDOABII585MpMH0",
      "diff_hunk": "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285838697,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why? `throw` can only happen on internal bugs. Not sure if it makes sense to write additional code to cover unreachable code.\r\n\r\nAlso, how? This can be done in the destructor, but then the point of setting it is moot.",
      "created_at": "2023-08-07T13:25:55Z",
      "updated_at": "2023-08-07T13:25:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285865972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285865972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285870318",
      "pull_request_review_id": 1565335806,
      "id": 1285870318,
      "node_id": "PRRC_kwDOABII585MpNLu",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285806857,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am leaning toward removing the \"throws\". This only happens on internal bugs. For example if a dev writes `self.Param<int>(99999999)` (or switches `int` to `bool` by accident).\r\n\r\nIt is the requirement of the dev to pass the correct index and the tests will check it (if they call the RPC at least once).",
      "created_at": "2023-08-07T13:29:20Z",
      "updated_at": "2023-08-07T13:29:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285870318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285870318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285892111",
      "pull_request_review_id": 1565370659,
      "id": 1285892111,
      "node_id": "PRRC_kwDOABII585MpSgP",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can\n+     * not represent the default value.\n+     */\n+    template <typename R>\n+    R Param(size_t i) const;",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 10,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285831220,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thx, done",
      "created_at": "2023-08-07T13:47:12Z",
      "updated_at": "2023-08-07T13:47:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285892111",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285892111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285912365",
      "pull_request_review_id": 1565402763,
      "id": 1285912365,
      "node_id": "PRRC_kwDOABII585MpXct",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285806857,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The only check it does is, that if the default value is used, the return type must be able to represent it. (The other checks were already done before.\r\n\r\nHowever, I think it is an implementation detail of `RPCHelpMan` when to check for internal bugs. Developers should just avoid writing bugs in the first place. And if they do, they'll get a helpful error message (in the tests) and they shouldn't care where it is from.\r\n\r\nThus, I've removed this from the docs completely.",
      "created_at": "2023-08-07T14:03:02Z",
      "updated_at": "2023-08-07T14:03:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285912365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285912365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286133078",
      "pull_request_review_id": 1565750058,
      "id": 1286133078,
      "node_id": "PRRC_kwDOABII585MqNVW",
      "diff_hunk": "@@ -399,6 +406,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of HandleRequest()",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 18,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285851447,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, you're right. I always assumed they were instantiated along with `CRPCTable`, but as you say they're freshly created on every `CRPCTable::execute()` call because of [this line](https://github.com/bitcoin/bitcoin/blob/624333455a5745a7f184d0df531dc348d0ac48dd/src/rpc/server.h#L109d). Can be marked as resolved.",
      "created_at": "2023-08-07T16:33:01Z",
      "updated_at": "2023-08-07T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286133078",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286133078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286137440",
      "pull_request_review_id": 1565750058,
      "id": 1286137440,
      "node_id": "PRRC_kwDOABII585MqOZg",
      "diff_hunk": "@@ -631,9 +632,25 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n                           PACKAGE_BUGREPORT)};\n         }\n     }\n+    m_req = nullptr;",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285838697,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like how you changed this in your latest force push, can be marked as resolved",
      "created_at": "2023-08-07T16:37:01Z",
      "updated_at": "2023-08-07T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286137440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286137440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286146628",
      "pull_request_review_id": 1565750058,
      "id": 1286146628,
      "node_id": "PRRC_kwDOABII585MqQpE",
      "diff_hunk": "@@ -383,6 +383,12 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun().",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: While correct, I think this could benefit from a useability hint, e.g.:\r\n\r\n```\r\n     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.",
      "created_at": "2023-08-07T16:45:41Z",
      "updated_at": "2023-08-07T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286146628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286146628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286256642",
      "pull_request_review_id": 1565750058,
      "id": 1286256642,
      "node_id": "PRRC_kwDOABII585MqrgC",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This implementation only supports being called on parameters with a `RPCArg::Default` fallback. Do you envision this being extended to also support `RPCArg::DefaultHint` and `RPCArg::Optional::OMITTED` fallbacks, and if so, how?\r\n\r\nI think one way is with a `std::optional<int> RPCHelpMan::Arg<std::optional<int>>(size_t i) const` specialization. I tinkered around with it a bit and this is what I came up with:\r\n\r\n<details>\r\n<summary>git diff on fa6b2da57ef7ff125a493c7835cb15935255ff8c</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/server.cpp b/src/rpc/server.cpp\r\nindex daf751111f..fd1d6c6a63 100644\r\n--- a/src/rpc/server.cpp\r\n+++ b/src/rpc/server.cpp\r\n@@ -180,8 +180,8 @@ static RPCHelpMan stop()\r\n     // Event loop will exit after current HTTP requests have been handled, so\r\n     // this reply will get back to the client.\r\n     StartShutdown();\r\n-    if (jsonRequest.params[0].isNum()) {\r\n-        UninterruptibleSleep(std::chrono::milliseconds{jsonRequest.params[0].getInt<int>()});\r\n+    if (const auto wait{self.Arg<std::optional<int>>(0)}) {\r\n+        UninterruptibleSleep(std::chrono::milliseconds{*wait});\r\n     }\r\n     return RESULT;\r\n },\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 4e0bace96f..c1e626eeaa 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -636,19 +636,37 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     return ret;\r\n }\r\n \r\n-static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n+static const std::optional<UniValue> ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n {\r\n     CHECK_NONFATAL(i < params.size());\r\n     const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\r\n     const RPCArg::Fallback& fallback{params.at(i).m_fallback};\r\n-    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\r\n-    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\r\n+    const bool has_default{std::holds_alternative<RPCArg::Default>(fallback)};\r\n+\r\n+    if (arg.isNull()) {\r\n+        if (has_default) {\r\n+            return std::get<RPCArg::Default>(fallback);\r\n+        } else { \r\n+            return std::nullopt;\r\n+        }\r\n+    }\r\n+    return arg;\r\n }\r\n \r\n template <>\r\n int RPCHelpMan::Arg<int>(size_t i) const\r\n {\r\n-    return ArgOrDefault(m_args, m_req, i).getInt<int>();\r\n+    return CHECK_NONFATAL(ArgOrDefault(m_args, m_req, i)).value().getInt<int>();\r\n+}\r\n+\r\n+template <>\r\n+std::optional<int> RPCHelpMan::Arg<std::optional<int>>(size_t i) const\r\n+{\r\n+    if (const auto result{ArgOrDefault(m_args, m_req, i)}) {\r\n+        return result.value().getInt<int>();\r\n+    } else {\r\n+        return std::nullopt;\r\n+    }\r\n }\r\n \r\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\r\n\r\n```\r\n</details>\r\n\r\nI like the limited scope of this PR to implement just `int` types, but perhaps it would be useful to extend it a bit and implement the helper for non-default parameters too? At the very least we get a sense of what we want the interface to look like?\r\n\r\nIf we don't extend it, perhaps the documentation for `template <typename R> R Arg(size_t i) const;` in `rpc/util.h` needs to be updated to reflect where it can safely be used?",
      "created_at": "2023-08-07T18:29:50Z",
      "updated_at": "2023-08-07T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286256642",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286256642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286262199",
      "pull_request_review_id": 1565750058,
      "id": 1286262199,
      "node_id": "PRRC_kwDOABII585Mqs23",
      "diff_hunk": "@@ -383,6 +383,13 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request param or the default value.\n+     * Throws if the fallback has no default value, or if the return type can",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa8cb8bfd96be1b016162405ff17c8b756843617",
      "in_reply_to_id": 1285806857,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense, thanks for the explanation. Resolved.",
      "created_at": "2023-08-07T18:35:57Z",
      "updated_at": "2023-08-07T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286262199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286262199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286352893",
      "pull_request_review_id": 1566099524,
      "id": 1286352893,
      "node_id": "PRRC_kwDOABII585MrC_9",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"rpc: Add Arg() default helper\" (fa6b2da57ef7ff125a493c7835cb15935255ff8c)\r\n\r\nAny reason to not just drop const from `HandleRequest` instead of making this variable mutable? Keeping the const there seems a little misleading",
      "created_at": "2023-08-07T20:24:33Z",
      "updated_at": "2023-08-07T20:24:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286352893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286352893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809420",
      "pull_request_review_id": 1566813302,
      "id": 1286809420,
      "node_id": "PRRC_kwDOABII585MsydM",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286352893,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought it would be more fun for reviewers if they could ACK the first use of the `mutable const` keyword in this codebase. Also, the value will be `nullptr` before and after the call to `HandleRequest`, so it seems *almost* `const` to me, but happy to change.",
      "created_at": "2023-08-08T08:47:26Z",
      "updated_at": "2023-08-08T08:47:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809802",
      "pull_request_review_id": 1566813912,
      "id": 1286809802,
      "node_id": "PRRC_kwDOABII585MsyjK",
      "diff_hunk": "@@ -383,6 +383,12 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun().",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 6,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286146628,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, used your doc string. Thanks",
      "created_at": "2023-08-08T08:47:46Z",
      "updated_at": "2023-08-08T08:47:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286809802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286809802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 388,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286811085",
      "pull_request_review_id": 1566815878,
      "id": 1286811085,
      "node_id": "PRRC_kwDOABII585Msy3N",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This implementation only supports being called on parameters with a RPCArg::Default fallback.\r\n\r\nsorry, I was missing the early return `if (!arg.isNull()) return arg;`. Fixed now. Good catch!",
      "created_at": "2023-08-08T08:48:51Z",
      "updated_at": "2023-08-08T08:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286811085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286811085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286815104",
      "pull_request_review_id": 1566821993,
      "id": 1286815104,
      "node_id": "PRRC_kwDOABII585Msz2A",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `std::optional`\r\n\r\nNot sure. This requires all args to be copied again, which can be expensive, if the arg is a hex-encoded block. (https://github.com/bitcoin/bitcoin/pull/20017/files) had the same issue, btw.\r\n\r\nI wrote some code to implement `std::string` as well (without a copy).",
      "created_at": "2023-08-08T08:52:05Z",
      "updated_at": "2023-08-08T08:52:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1286815104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286815104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287432683",
      "pull_request_review_id": 1567794071,
      "id": 1287432683,
      "node_id": "PRRC_kwDOABII585MvKnr",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Big fan of this rewrite, makes it pretty extensible without too much code duplication. Nice!\r\n\r\nBuilding on your new approach, the non-default parameters could potentially be handled with pointers, to avoid unnecessary copy operations. For example, I think these 2 lines: https://github.com/bitcoin/bitcoin/blob/b565485c24c0feacae559a7f6f7b83d7516ca58d/src/wallet/rpc/spend.cpp#L274-L275 \r\n\r\ncan be rewritten as: \r\n```cpp\r\n    if (auto comment{self.Arg<const std::string*>(2)}; comment && !(comment->empty())) {\r\n        mapValue[\"comment\"] = *comment;\r\n    }\r\n```\r\n\r\nNot necessarily shorter, but much more idiomatic imo? I've implemented it like this - can probably be cleaned up quite a bit more:\r\n\r\n<details>\r\n<summary>git diff on fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 0db66ec1b1..1f7bdac609 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -636,27 +636,47 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     return ret;\r\n }\r\n \r\n-static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n+static const UniValue* ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\r\n {\r\n     CHECK_NONFATAL(i < params.size());\r\n     const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\r\n-    if (!arg.isNull()) return arg;\r\n+    if (!arg.isNull()) return &arg;\r\n     const RPCArg::Fallback& fallback{params.at(i).m_fallback};\r\n-    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\r\n-    return std::get<RPCArg::Default>(fallback);\r\n+    if (std::holds_alternative<RPCArg::Default>(fallback)) {\r\n+        return &(std::get<RPCArg::Default>(fallback));\r\n+    }\r\n+    return nullptr;\r\n }\r\n \r\n-#define TMPL_INST(ret_type, get_arg, get_type)            \\\r\n-    template <>                                           \\\r\n-    ret_type RPCHelpMan::get_arg(size_t i) const          \\\r\n-    {                                                     \\\r\n-        return ArgOrDefault(m_args, m_req, i).get_type(); \\\r\n-    }                                                     \\\r\n+#define TMPL_INST(ret_type, get_arg, get_type)        \\\r\n+    template <>                                       \\\r\n+    ret_type RPCHelpMan::get_arg(size_t i) const      \\\r\n+    {                                                 \\\r\n+        return CHECK_NONFATAL(ArgOrDefault(m_args, m_req, i))->get_type(); \\\r\n+    }                                                 \\\r\n+    void force_semicolon()\r\n+\r\n+#define TMPL_INST_PTR(ret_type, get_arg, get_type)    \\\r\n+    template <>                                       \\\r\n+    std::shared_ptr<ret_type> RPCHelpMan::get_arg(size_t i) const \\\r\n+    {                                                 \\\r\n+        auto result {ArgOrDefault(m_args, m_req, i)}; \\\r\n+        if (!result) return nullptr;                  \\\r\n+        auto&& ref = result->get_type();               \\\r\n+        if constexpr (std::is_lvalue_reference_v<decltype(ref)>) { \\\r\n+            return std::shared_ptr<ret_type>(&ref, [](ret_type*) {}); \\\r\n+        } else { \\\r\n+            return std::make_shared<ret_type>(std::move(ref)); \\\r\n+        } \\\r\n+    }                                                 \\\r\n     void force_semicolon()\r\n \r\n+\r\n+\r\n TMPL_INST(int, ArgValue<int>, getInt<int>);\r\n TMPL_INST(uint64_t, ArgValue<uint64_t>, getInt<uint64_t>);\r\n TMPL_INST(const std::string&, ArgRef<std::string>, get_str);\r\n+TMPL_INST_PTR(const std::string, ArgPtr<const std::string>, get_str);\r\n \r\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\r\n {\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0ef019a780..563a619208 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -18,6 +18,7 @@\r\n #include <util/check.h>\r\n \r\n #include <string>\r\n+#include <type_traits>\r\n #include <variant>\r\n #include <vector>\r\n \r\n@@ -392,6 +393,8 @@ public:\r\n     {\r\n         if constexpr (std::is_integral_v<R>) {\r\n             return ArgValue<R>(i);\r\n+        } else if constexpr (std::is_pointer_v<R>) {\r\n+            return ArgPtr<std::remove_pointer_t<R>>(i);\r\n         } else {\r\n             return ArgRef<R>(i);\r\n         }\r\n@@ -417,6 +420,8 @@ private:\r\n     R ArgValue(size_t i) const;\r\n     template <typename R>\r\n     const R& ArgRef(size_t i) const;\r\n+    template <typename R>\r\n+    std::shared_ptr<R> ArgPtr(size_t i) const;\r\n };\r\n \r\n /**\r\ndiff --git a/src/wallet/rpc/spend.cpp b/src/wallet/rpc/spend.cpp\r\nindex b695d4bed3..420807bf1d 100644\r\n--- a/src/wallet/rpc/spend.cpp\r\n+++ b/src/wallet/rpc/spend.cpp\r\n@@ -271,8 +271,9 @@ RPCHelpMan sendtoaddress()\r\n \r\n     // Wallet comments\r\n     mapValue_t mapValue;\r\n-    if (!request.params[2].isNull() && !request.params[2].get_str().empty())\r\n-        mapValue[\"comment\"] = request.params[2].get_str();\r\n+    if (auto comment{self.Arg<const std::string*>(2)}; comment && !(comment->empty())) {\r\n+        mapValue[\"comment\"] = *comment;\r\n+    }\r\n     if (!request.params[3].isNull() && !request.params[3].get_str().empty())\r\n         mapValue[\"to\"] = request.params[3].get_str();\r\n\r\n```\r\n</details>\r\n\r\nI'm not married to this approach, and it doesn't need to be added in this PR either. But I think being able to use a consistent interface for `Arg` for all types of parameters would be nice.",
      "created_at": "2023-08-08T17:16:48Z",
      "updated_at": "2023-08-09T10:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287432683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287432683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287446839",
      "pull_request_review_id": 1567815521,
      "id": 1287446839,
      "node_id": "PRRC_kwDOABII585MvOE3",
      "diff_hunk": "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: using `.at(i)` here and `[i]` just a few lines up, when I think they both have the same preconditions, so staying consistent is probably better",
      "created_at": "2023-08-08T17:31:20Z",
      "updated_at": "2023-08-08T17:34:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287446839",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287446839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287941903",
      "pull_request_review_id": 1568724038,
      "id": 1287941903,
      "node_id": "PRRC_kwDOABII585MxG8P",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Building on your new approach, the non-default parameters could potentially be handled with pointers, to avoid unnecessary copy operations.\r\n\r\nI don't think your approach works. It is not possible to \"move\" a const reference into a shared_ptr. It will be a copy again.\r\n\r\nSimply using a raw pointer in your approach seems fine, though.",
      "created_at": "2023-08-09T05:04:07Z",
      "updated_at": "2023-08-09T05:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1287941903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287941903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288005314",
      "pull_request_review_id": 1568829438,
      "id": 1288005314,
      "node_id": "PRRC_kwDOABII585MxWbC",
      "diff_hunk": "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "in_reply_to_id": 1287446839,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One is a `std::vector`, the other is `UniValue`, no?",
      "created_at": "2023-08-09T06:25:10Z",
      "updated_at": "2023-08-09T06:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288005314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288005314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288037333",
      "pull_request_review_id": 1568877482,
      "id": 1288037333,
      "node_id": "PRRC_kwDOABII585MxePV",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or rather, `std::optional<number>` for stuff that is returned by value and `const String*` for stuff that is returned by reference?",
      "created_at": "2023-08-09T07:01:42Z",
      "updated_at": "2023-08-09T07:47:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288037333",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288037333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288073911",
      "pull_request_review_id": 1568932482,
      "id": 1288073911,
      "node_id": "PRRC_kwDOABII585MxnK3",
      "diff_hunk": "@@ -634,6 +636,28 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    if (!arg.isNull()) return arg;\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa5468dcf0109d11ddaeb4b3591e6e04b4ea6125",
      "in_reply_to_id": 1287446839,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Whoops yes sorry.",
      "created_at": "2023-08-09T07:36:39Z",
      "updated_at": "2023-08-09T07:36:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288073911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288073911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288266548",
      "pull_request_review_id": 1569218744,
      "id": 1288266548,
      "node_id": "PRRC_kwDOABII585MyWM0",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It is not possible to \"move\" a const reference into a shared_ptr. It will be a copy again.\r\n\r\nSorry, I messed up my git diff a bit, posting a slightly older version, `auto& ref = result->get_type();` has to be `auto&& ref = result->get_type();`  (updated in the above diff now). With that, I think `std::move(ref)` is only called in case of an rvalue, and we use the (from what I understand without copy) `std::shared_ptr` constructor in case of an lvalue ref. I think that avoids unnecessary copies?\r\n\r\n> Or rather, std::optional<number> for stuff that is returned by value and const String* for stuff that is returned by reference?\r\n\r\nThat was my initial idea too, but I thought having a uniform interface (i.e. pointer for everything where it's not guaranteed to get a value) is quite a bit nicer than having to switch between std::optional and pointer depending on how we've implemented UniValue to return the value?  Although I suspect most callsites will just be using the boolean and dereference operators, which are the same for both (ignoring optional's commonly used `.value()` and `.value_or()` operators).\r\n\r\n> Simply using a raw pointer in your approach seems fine, though.\r\n\r\nBut if `get_type()` returns by value, how would we use a raw pointer? Who owns the underlying? That's why I went for `shared_ptr`, but I'm still easily confused by memory management so apologies if I'm being dim.",
      "created_at": "2023-08-09T10:16:08Z",
      "updated_at": "2023-08-09T10:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288266548",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288266548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288269938",
      "pull_request_review_id": 1569223897,
      "id": 1288269938,
      "node_id": "PRRC_kwDOABII585MyXBy",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Sorry, I messed up my git diff a bit, posting a slightly older version, `auto& ref = result->get_type();` has to be `auto&& ref = result->get_type();` (updated in the above diff now). With that, I think `std::move(ref)` is only called in case of an rvalue, and we use the (from what I understand without copy) `std::shared_ptr` constructor in case of an lvalue ref. I think that avoids unnecessary copies?\r\n\r\nPretty sure it doesn't, when `get_type()` returns a `const std::string&`, both `auto&` and `auto&&` will just be a `const std::string&` as well. (It is not possible to remove const by using `auto`, `auto&`, or `auto&&`, or `std::move()`)",
      "created_at": "2023-08-09T10:19:16Z",
      "updated_at": "2023-08-09T10:19:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288269938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288269938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288270672",
      "pull_request_review_id": 1569225000,
      "id": 1288270672,
      "node_id": "PRRC_kwDOABII585MyXNQ",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But if `get_type()` returns by value, how would we use a raw pointer? Who owns the underlying? That's why I went for `shared_ptr`, but I'm still easily confused by memory management so apologies if I'm being dim.\r\n\r\n`std::optional` can be used to own optional memory, see my previous reply to the thread and the current version of the code :)",
      "created_at": "2023-08-09T10:19:58Z",
      "updated_at": "2023-08-09T10:19:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288270672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288270672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288286773",
      "pull_request_review_id": 1569249677,
      "id": 1288286773,
      "node_id": "PRRC_kwDOABII585MybI1",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Pretty sure it doesn't, when get_type() returns a const std::string&, both auto& and auto&& will just be a const std::string& as well.\r\n\r\nOh yes, I agree. So in that case, `ref` will be ` const std::string&` lvalue, and we'll use `std::shared_ptr<ret_type>(&ref, [](ret_type*) {});` where I don't think any copies happen?\r\n\r\n> `std::optional` can be used to own optional memory\r\n\r\nI know, I was answering your suggestion of using raw pointers instead of shared_ptr. `std::optional` solves the memory management issues, but I was just trying to avoid it to keep the interface consistent (i.e. not use optional for one thing and pointers for another) while avoiding unnecessary copies, which I think is only possible with pointers. ",
      "created_at": "2023-08-09T10:35:19Z",
      "updated_at": "2023-08-09T10:35:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288286773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288286773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288299967",
      "pull_request_review_id": 1569269718,
      "id": 1288299967,
      "node_id": "PRRC_kwDOABII585MyeW_",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I see you are only using shared_ptr to wrap a raw pointer without a deleter.\r\n\r\nHappy to switch to that, but I think it may be unintuitive, if sometimes a dev is allowed to keep the shared pointer around after the RPC, and sometimes not.",
      "created_at": "2023-08-09T10:48:26Z",
      "updated_at": "2023-08-09T10:48:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288299967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288299967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288309113",
      "pull_request_review_id": 1569284155,
      "id": 1288309113,
      "node_id": "PRRC_kwDOABII585Mygl5",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Enforcing/Documenting the lifetime behavior seems easier to understand with separate types (at least for me)",
      "created_at": "2023-08-09T10:57:10Z",
      "updated_at": "2023-08-09T10:57:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288309113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288309113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288338213",
      "pull_request_review_id": 1569332626,
      "id": 1288338213,
      "node_id": "PRRC_kwDOABII585Mynsl",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good point. To confirm my understanding: the lifecycles are identical for both the (1) hybrid std::optional/pointer and the (2) uniform pointer approach (i.e. in both cases, reference types can only be used during the RPC call, value types can be used whenever), but for (2) the developer (user) would have to dive into the implementation to figure out what the exact lifecycle is, whereas if we use different types it's obvious from just looking at the return type.\r\n\r\nI'm going to think about it a bit more, but currently I'm leaning towards agreeing that the interface \"inconsistency\"  as per the current implementation then actually becomes a good thing. Thanks.",
      "created_at": "2023-08-09T11:24:39Z",
      "updated_at": "2023-08-09T11:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288338213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288338213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288355467",
      "pull_request_review_id": 1569360454,
      "id": 1288355467,
      "node_id": "PRRC_kwDOABII585Myr6L",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I could also imagine a third alternative (3) std::shared_ptr/raw pointer, so that everything is a pointer, but there are still different types for each lifetime. (Basically only replacing std::optional in the current approach with std::shared_ptr)\r\n\r\nBut this also may be more confusing than it helping.",
      "created_at": "2023-08-09T11:42:06Z",
      "updated_at": "2023-08-09T11:42:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288355467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288355467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288565564",
      "pull_request_review_id": 1569717230,
      "id": 1288565564,
      "node_id": "PRRC_kwDOABII585MzfM8",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"rpc: Add Arg() default helper\" (fa56ad74160ba3c07a16a661fc14cded6deed9eb)\r\n\r\nHaven't really looked at implementation yet, but can documentation be updated to say what happens with type mismatches? E.g. if arg is an int and you request a bool? Is the value just ignored and is a default returned instead? Is there an exception?\r\n\r\nAlso might be nice to add a short examples here showing what equivalent low level code is so developers can know how to use this helper and interpret it. Like `Arg<int>(3)` is equivalent to `request.params[3].isNumber() ? request.params[3].getInt<int>() : default_value` (or whatever the equivalent is)\r\n\r\nOverall this seems like a nice improvement that should cut down on boilerplate. I am wondering if it might be possible later to extend this:\r\n\r\n- to support arrays/objects\r\n- to enforces only expected types are passed at compile time\r\n- to enforce default not requested when there is no default at compile time\r\n- to somehow be compatible with luke's #24963 which allows multiple types per parameter (if that is a good idea)",
      "created_at": "2023-08-09T14:18:41Z",
      "updated_at": "2023-08-09T14:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1288565564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288565564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289035093",
      "pull_request_review_id": 1570311272,
      "id": 1289035093,
      "node_id": "PRRC_kwDOABII585M1R1V",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286352893,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also, the value will be nullptr before and after the call to HandleRequest\r\n\r\nDoes this also hold if `m_fun` throws an exception?",
      "created_at": "2023-08-09T18:35:59Z",
      "updated_at": "2023-08-09T18:36:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1289035093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1289035093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290694437",
      "pull_request_review_id": 1572750860,
      "id": 1290694437,
      "node_id": "PRRC_kwDOABII585M7m8l",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I find affirmative names much easier to understand than negative ones. Event though there's no double negation used here (but it would in another suggestion I made), would you consider changing this to `has_default`? I find that much clearer on the template instantiation calls too.",
      "created_at": "2023-08-10T21:19:36Z",
      "updated_at": "2023-08-10T22:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290694437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290694437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290695286",
      "pull_request_review_id": 1572750860,
      "id": 1290695286,
      "node_id": "PRRC_kwDOABII585M7nJ2",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since we're calling `std::get<RPCArg::Default>(fallback);` later on, wouldn't it make more sense to call `if (has_default) CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));`?",
      "created_at": "2023-08-10T21:20:51Z",
      "updated_at": "2023-08-10T22:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290695286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290695286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290699614",
      "pull_request_review_id": 1572750860,
      "id": 1290699614,
      "node_id": "PRRC_kwDOABII585M7oNe",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: This phrasing seems to suggest that the developer is free to choose which `Arg` call to use. I would change that to be more explicit, along the lines of (I think this can be improved):\r\n\r\n```\r\nIf the argument has a `RPCArg::Default` specified, you must use `Arg<Type>` to get the argument or its default value.\r\nOtherwise, you must use Arg<Type*> to get a pointer or std::optional to get the argument, or a falsy value if it was not provided. A pointer is returned if the underlying is a reference type (e.g. std::string), a std::optional is returned if the underlying is a value type (e.g. int).\r\n```",
      "created_at": "2023-08-10T21:26:32Z",
      "updated_at": "2023-08-10T22:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290699614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290699614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 406,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290703491",
      "pull_request_review_id": 1572750860,
      "id": 1290703491,
      "node_id": "PRRC_kwDOABII585M7pKD",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));\n+\n+    if (!arg.isNull()) return &arg;\n+    if (no_default) return nullptr;\n+    return &std::get<RPCArg::Default>(fallback);\n+}\n+\n+#define TMPL_INST(no_default, ret_type, get_arg, return_code) \\",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could remove `no_default` from the function signature here, and deduce it from the `ret_type` being a std::optional or pointer type? I think both approaches have merit, so no very strong preference either way atm, but since we're already doing those deductions in `Arg` I think it would make sense here, too?",
      "created_at": "2023-08-10T21:31:31Z",
      "updated_at": "2023-08-10T22:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290703491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290703491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290725116",
      "pull_request_review_id": 1572750860,
      "id": 1290725116,
      "node_id": "PRRC_kwDOABII585M7ub8",
      "diff_hunk": "@@ -634,6 +636,21 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue& ArgOrDefault(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    CHECK_NONFATAL(std::holds_alternative<RPCArg::Default>(fallback));\n+    return arg.isNull() ? std::get<RPCArg::Default>(fallback) : arg;\n+}\n+\n+template <>\n+int RPCHelpMan::Arg<int>(size_t i) const",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286256642,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But this also may be more confusing than it helping.\r\n\r\nYeah, I don't really think that helps. Still no strong view, I like your current implementation, it's less complex than what I suggested, so barring strong conviction that's good enough reason for me to keep it as is. Perhaps useful to keep this convo open for future reference, but considered resolved from my end.",
      "created_at": "2023-08-10T22:03:31Z",
      "updated_at": "2023-08-10T22:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290725116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290725116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 649,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290875538",
      "pull_request_review_id": 1572976655,
      "id": 1290875538,
      "node_id": "PRRC_kwDOABII585M8TKS",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.\n+     */\n+    template <typename R>\n+    auto Arg(size_t i) const\n+    {\n+        if constexpr (std::is_pointer_v<R>) {\n+            // Return optional argument (without default).\n+            using U = std::remove_pointer_t<R>;\n+            if constexpr (std::is_integral_v<U> || std::is_floating_point_v<U>) {\n+                // Return numbers by value, wrapped in optional.\n+                return ArgValue<std::optional<U>>(i);",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Saying `Arg<int*>(5)` and getting back a `std::optional<int>` instead of an `int*` seems weird? Why not just have two functions: `ArgOrNot<int>(5)` and `ArgOrDefault<int>(5)` and drop the outer `if constexpr` ?",
      "created_at": "2023-08-11T04:12:11Z",
      "updated_at": "2023-08-11T05:37:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290875538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290875538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 422,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290879367",
      "pull_request_review_id": 1572976655,
      "id": 1290879367,
      "node_id": "PRRC_kwDOABII585M8UGH",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286352893,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't this buggy? We can have multiple RPC threads, making multiple requests to the same function, but that function only has a single `RPCHelpMan` which will simultaneously have different things assigned to `m_fun`?",
      "created_at": "2023-08-11T04:22:53Z",
      "updated_at": "2023-08-11T05:37:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290879367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290879367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290949477",
      "pull_request_review_id": 1573074066,
      "id": 1290949477,
      "node_id": "PRRC_kwDOABII585M8lNl",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> to enforces only expected types are passed at compile time\r\n\r\nDo we want to revisit #22978 first before doing compile time type checking for RPC?\r\n\r\nI think compile time RPC type checks would require templatising `RPCArg` by what is currently `m_type` (and `m_inner` perhaps), changing `RPCHelpMan` to be templatised based on a `std::tuple<...>` of `RPCArg<X>`s, and likewise for `RPCMethodImpl` which then gives the actual RPC implementation compile time access to its expected argument types.\r\n\r\nI don't think you could reasonably access params by name and get compile time type checking; for the named-only params via `options`, you *could* turn `options` into an ordered tuple and access named-only params by their position from when you defined the `options` object.\r\n\r\nFor multitype parameters, I think it'd be best to just have a `Type::ANY` placeholder.",
      "created_at": "2023-08-11T06:39:27Z",
      "updated_at": "2023-08-11T06:39:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1290949477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290949477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291125153",
      "pull_request_review_id": 1573336382,
      "id": 1291125153,
      "node_id": "PRRC_kwDOABII585M9QGh",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286352893,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns I raised a similar concern, but it looks like this is safe: https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447",
      "created_at": "2023-08-11T09:40:40Z",
      "updated_at": "2023-08-11T09:40:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291125153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291125153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291163628",
      "pull_request_review_id": 1573392386,
      "id": 1291163628,
      "node_id": "PRRC_kwDOABII585M9Zfs",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.\n+     */\n+    template <typename R>\n+    auto Arg(size_t i) const\n+    {\n+        if constexpr (std::is_pointer_v<R>) {\n+            // Return optional argument (without default).\n+            using U = std::remove_pointer_t<R>;\n+            if constexpr (std::is_integral_v<U> || std::is_floating_point_v<U>) {\n+                // Return numbers by value, wrapped in optional.\n+                return ArgValue<std::optional<U>>(i);",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290875538,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd be on board with that approach, too. A bit more explicit and reduces implementation complexity, while I think usability is as good, since we already require the user to distinguish between the arg having a default or not.\r\n\r\nnit/bikeshed: I'd prefer `Arg` over `ArgOrDefault`.",
      "created_at": "2023-08-11T10:15:51Z",
      "updated_at": "2023-08-11T10:15:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1291163628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291163628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 422,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293390811",
      "pull_request_review_id": 1576740031,
      "id": 1293390811,
      "node_id": "PRRC_kwDOABII585NF5Pb",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Haven't really looked at implementation yet, but can documentation be updated to say what happens with type mismatches?\r\n\r\nThis sound like a bug in the source code, so I don't think it makes sense to document unreachable or unexpected code paths. Generally, in the RPC server non-fatal bugs are expected to throw an internal bug message.\r\n\r\nI haven't looked at the code, but types of arguments passed in by the user should be checked before *m_fun* is run. *m_fun*, and thus, `Arg()` isn't run when the types passed in by the user mismatch the ones in the documentation. If `Arg()` specifies the wrong type, the getter will throw. Currently all getters are univalue getters, so they'll throw the univalue internal exception. (This is the current behavior and preserved)\r\n\r\nI think this is fine as-is, but I am happy to change it to something else, for example:\r\n\r\n* Re-implement the type check and throw a new, special exception. (This will be a change in \"behavior\", or rather \"bug behavior\")\r\n* Implement a compile-time json and use the compiler to avoid the case altogether, or alternatively, use clang-tidy to do it?\r\n\r\n> Also might be nice to add a short examples here showing what equivalent low level code is so developers can know how to use this helper and interpret it.\r\n\r\nThe diff in this commit should explain it. I've also added docs about the internals (`isNull` check and fallback to RPCArg::m_fallback)\r\n\r\n> to support arrays/objects\r\n\r\nYeah, it should be possible to return an object whose `operator[]` is defined. Would it be fine to do this in a follow-up?\r\n\r\n> to enforces only expected types are passed at compile time\r\n\r\nMaybe as follow-up, unless the patch is trivial?\r\n\r\n> to enforce default not requested when there is no default at compile time\r\n\r\nThis is already done, no?\r\n\r\n> to somehow be compatible with luke's\r\n\r\nNot sure about adding dead code, but once and if it is needed, it should be trivial to implement by mapping the types to a `Arg<std::variant<int, bool>>(1)` in C++ code. However, I am not sure if this is worth it, when it is only used once. Might as well use the \"legacy\" method for now?",
      "created_at": "2023-08-14T12:23:30Z",
      "updated_at": "2023-08-14T12:23:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293390811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293390811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293392813",
      "pull_request_review_id": 1576743075,
      "id": 1293392813,
      "node_id": "PRRC_kwDOABII585NF5ut",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think compile time RPC type checks would require templatising `RPCArg` by what is currently `m_type` (and `m_inner` perhaps), changing `RPCHelpMan` to be templatised based on a `std::tuple<...>` of `RPCArg<X>`s, and likewise for `RPCMethodImpl` which then gives the actual RPC implementation compile time access to its expected argument types.\r\n\r\nI haven't looked at this, but some `RPCHelpMan` have run-time inputs, so I am not sure if they can be trivially converted to compile-time inputs. Maybe this can be done in a follow-up? The diff should be a trivial change from `Arg<int>(0)` to `Arg<int, 0>()`, right? Or with future C++ versions no change in `m_fun` implementations is needed at all?",
      "created_at": "2023-08-14T12:25:39Z",
      "updated_at": "2023-08-14T12:25:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293392813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293392813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293454810",
      "pull_request_review_id": 1576840188,
      "id": 1293454810,
      "node_id": "PRRC_kwDOABII585NGI3a",
      "diff_hunk": "@@ -399,6 +405,7 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    mutable const JSONRPCRequest* m_req{nullptr}; // A pointer to the request for the duration of m_fun()",
      "path": "src/rpc/util.h",
      "position": 87,
      "original_position": 17,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa6b2da57ef7ff125a493c7835cb15935255ff8c",
      "in_reply_to_id": 1286352893,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > Also, the value will be nullptr before and after the call to HandleRequest\r\n> \r\n> Does this also hold if `m_fun` throws an exception?\r\n\r\nThe object does not exist after an exception. It will be destroyed/deallocated for each RPC call, see https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1285851447",
      "created_at": "2023-08-14T13:23:41Z",
      "updated_at": "2023-08-14T13:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293454810",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293454810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 457,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293469146",
      "pull_request_review_id": 1576862892,
      "id": 1293469146,
      "node_id": "PRRC_kwDOABII585NGMXa",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290694437,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've made `bool no_default` a function `CheckNoDefault`, because this is exactly what needs to be checked. Let me know if you still disagree.",
      "created_at": "2023-08-14T13:36:05Z",
      "updated_at": "2023-08-14T13:36:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293469146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293469146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293469639",
      "pull_request_review_id": 1576863650,
      "id": 1293469639,
      "node_id": "PRRC_kwDOABII585NGMfH",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290695286,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added more checks. (`CheckRequiredOrDefault`)",
      "created_at": "2023-08-14T13:36:29Z",
      "updated_at": "2023-08-14T13:36:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293469639",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293469639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293478254",
      "pull_request_review_id": 1576876638,
      "id": 1293478254,
      "node_id": "PRRC_kwDOABII585NGOlu",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290699614,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Left this as-is in the header, because the implementation already documents this :sweat_smile: \r\n\r\nHowever, I've added your docs to the new `Check*` functions.",
      "created_at": "2023-08-14T13:43:39Z",
      "updated_at": "2023-08-14T13:43:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293478254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293478254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 406,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293478970",
      "pull_request_review_id": 1576877777,
      "id": 1293478970,
      "node_id": "PRRC_kwDOABII585NGOw6",
      "diff_hunk": "@@ -634,6 +636,39 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+static const UniValue* MaybeArg(bool no_default, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg::Fallback& fallback{params.at(i).m_fallback};\n+    if (no_default) CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(fallback));\n+\n+    if (!arg.isNull()) return &arg;\n+    if (no_default) return nullptr;\n+    return &std::get<RPCArg::Default>(fallback);\n+}\n+\n+#define TMPL_INST(no_default, ret_type, get_arg, return_code) \\",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290703491,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, mind providing a patch that compiles, which I can take?",
      "created_at": "2023-08-14T13:44:16Z",
      "updated_at": "2023-08-14T13:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293478970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293478970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293509108",
      "pull_request_review_id": 1576922463,
      "id": 1293509108,
      "node_id": "PRRC_kwDOABII585NGWH0",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.\n+     */\n+    template <typename R>\n+    auto Arg(size_t i) const\n+    {\n+        if constexpr (std::is_pointer_v<R>) {\n+            // Return optional argument (without default).\n+            using U = std::remove_pointer_t<R>;\n+            if constexpr (std::is_integral_v<U> || std::is_floating_point_v<U>) {\n+                // Return numbers by value, wrapped in optional.\n+                return ArgValue<std::optional<U>>(i);",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 56,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1290875538,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> nit/bikeshed: I'd prefer `Arg` over `ArgOrDefault`.\r\n\r\nAgree. Also used `MaybeArg` over `ArgOrNot`.",
      "created_at": "2023-08-14T14:05:48Z",
      "updated_at": "2023-08-14T14:05:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293509108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293509108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 422,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293558584",
      "pull_request_review_id": 1576994800,
      "id": 1293558584,
      "node_id": "PRRC_kwDOABII585NGiM4",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This sound like a bug in the source code, so I don't think it makes sense to document unreachable or unexpected code paths.\r\n\r\nIf it's a bug to to call the the Arg function with an unexpected type, it's important for the documentation to at say what types it is allowed to be called with, because I don't think there's another way of knowing this without a having a pretty deep understanding of the RPCHelpMan framework and digging into template and macro code.\r\n\r\nIf you just want the documentation to say \"It is a bug to pass X type\" instead of \"Passing X type will throw an exception\" that is fine of course.",
      "created_at": "2023-08-14T14:39:26Z",
      "updated_at": "2023-08-14T14:39:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293558584",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293558584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293608139",
      "pull_request_review_id": 1577068118,
      "id": 1293608139,
      "node_id": "PRRC_kwDOABII585NGuTL",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it's important for the documentation to at say what types it is allowed to be called with\r\n\r\nI guess long term it could make sense to make `RPCArg::Type` an enum of C++ types and then have the documentation say that the type passed to `Arg<Type>(i)` must match exactly the corresponding `RPCArg::Type`.\r\n\r\nFor now, my recommendation would be to call `Arg<std::string>(i)` for `STR*` args, `Arg<bool>(i)` for `BOOL` args, and `Arg<double/(u)int${n}_t>(i)` for `NUM` args.",
      "created_at": "2023-08-14T15:11:33Z",
      "updated_at": "2023-08-14T15:11:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293608139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293608139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293610456",
      "pull_request_review_id": 1577071701,
      "id": 1293610456,
      "node_id": "PRRC_kwDOABII585NGu3Y",
      "diff_hunk": "@@ -383,6 +400,36 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument or its default value.\n+     * This function only works during m_fun(), i.e. it should only be used in RPC method implementations.\n+     * Use Arg<Type> to get the argument or its default value.\n+     * Use Arg<Type*> to get the argument or a falsy value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 46,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa56ad74160ba3c07a16a661fc14cded6deed9eb",
      "in_reply_to_id": 1288565564,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be fine to add \"The `Type` passed to this helper must match the corresponding `RPCArg::Type`\" to the doxygen of `Arg`?\r\n\r\nEdit: Done.",
      "created_at": "2023-08-14T15:13:35Z",
      "updated_at": "2023-08-15T08:12:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293610456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293610456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": 404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296625023",
      "pull_request_review_id": 1581691765,
      "id": 1296625023,
      "node_id": "PRRC_kwDOABII585NSO1_",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this only a named namespace because `MaybeArg` duplicates the function name in `RPCHelpMan`? I think either this should be an anonymous namespace (and use `::MaybeArg` to reference this func, or rename it), or `::MaybeArg` should be declared `static`.",
      "created_at": "2023-08-17T03:09:34Z",
      "updated_at": "2023-08-17T04:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296625023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296625023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296648899",
      "pull_request_review_id": 1581691765,
      "id": 1296648899,
      "node_id": "PRRC_kwDOABII585NSUrD",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {\n+const UniValue* MaybeArg(std::function<void(const RPCArg&)> check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No need for the `function` wrapper -- `MaybeArg(void(&check)(const RPCArg&), ..)`",
      "created_at": "2023-08-17T03:58:14Z",
      "updated_at": "2023-08-17T04:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296648899",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296648899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296651693",
      "pull_request_review_id": 1581691765,
      "id": 1296651693,
      "node_id": "PRRC_kwDOABII585NSVWt",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {\n+const UniValue* MaybeArg(std::function<void(const RPCArg&)> check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}\n+} // namespace detail\n+\n+static void CheckNoDefault(const RPCArg& param)\n+{\n+    // Must use `MaybeArg<Type>(i)` to get the argument.\n+    CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(param.m_fallback));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this be `!required && !holds_alternative` ? Why use `MaybeArg(1)` instead of `Arg(1)` for a required arg?\r\n\r\n(One reason: maybe we want to be able to change the `RPCHelpMan` definition for a call at runtime, eg based on `-deprecatedrpc` -- in that case if `deprecatedrpc` turns a required arg into an optional, being able to use `MaybeArg` might make the code simpler. But in that case `MaybeArg` should just always work, and not have a check, I think?)",
      "created_at": "2023-08-17T04:05:14Z",
      "updated_at": "2023-08-17T04:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296651693",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296651693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 656,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296736312",
      "pull_request_review_id": 1581872341,
      "id": 1296736312,
      "node_id": "PRRC_kwDOABII585NSqA4",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": 1296625023,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style-wise, I don't like to shadow global-namespace functions by name. I think it is better if every function has a unique name. I'll change it to `static DetailMaybeArg` without a namespace.",
      "created_at": "2023-08-17T06:32:43Z",
      "updated_at": "2023-08-17T06:32:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296736312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296736312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296736382",
      "pull_request_review_id": 1581872522,
      "id": 1296736382,
      "node_id": "PRRC_kwDOABII585NSqB-",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {\n+const UniValue* MaybeArg(std::function<void(const RPCArg&)> check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": 1296648899,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like the style of function pointers and I think `<void(const RPCArg&)> check` is easier to parse than `void(&check)(const RPCArg&)`. But I may change this in the next push, if there is one.",
      "created_at": "2023-08-17T06:32:48Z",
      "updated_at": "2023-08-17T06:32:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296736382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296736382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296740115",
      "pull_request_review_id": 1581879717,
      "id": 1296740115,
      "node_id": "PRRC_kwDOABII585NSq8T",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {\n+const UniValue* MaybeArg(std::function<void(const RPCArg&)> check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}\n+} // namespace detail\n+\n+static void CheckNoDefault(const RPCArg& param)\n+{\n+    // Must use `MaybeArg<Type>(i)` to get the argument.\n+    CHECK_NONFATAL(!std::holds_alternative<RPCArg::Default>(param.m_fallback));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": 1296651693,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I'll remove the check",
      "created_at": "2023-08-17T06:37:36Z",
      "updated_at": "2023-08-17T06:37:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296740115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296740115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 656,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296754116",
      "pull_request_review_id": 1581903255,
      "id": 1296754116,
      "node_id": "PRRC_kwDOABII585NSuXE",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {\n+const UniValue* MaybeArg(std::function<void(const RPCArg&)> check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": 1296648899,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah I guess I can use `using CheckFn = void(const RPCArg&);` to make it as easy to parse.",
      "created_at": "2023-08-17T06:54:01Z",
      "updated_at": "2023-08-17T06:54:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296754116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296754116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296805155",
      "pull_request_review_id": 1581982466,
      "id": 1296805155,
      "node_id": "PRRC_kwDOABII585NS60j",
      "diff_hunk": "@@ -634,6 +636,56 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+namespace detail {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fab5d7358d195c3dd8b6b9f7aaeeb9c522e17cd2",
      "in_reply_to_id": 1296625023,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "static in a named namespace would be fine too :shrug: ",
      "created_at": "2023-08-17T07:40:34Z",
      "updated_at": "2023-08-17T07:40:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1296805155",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296805155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 639,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297042546",
      "pull_request_review_id": 1582339621,
      "id": 1297042546,
      "node_id": "PRRC_kwDOABII585NT0xy",
      "diff_hunk": "@@ -634,6 +636,49 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+using CheckFn = void(const RPCArg&);\n+static const UniValue* DetailMaybeArg(CheckFn* check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    if (check) check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}",
      "path": "src/rpc/util.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With `MaybeArg` always working, could make this:\r\n\r\n```c++\r\nstatic const UniValue* DetailMaybeArg(const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i, bool null_ok)\r\n {\r\n...\r\n    if (!null_ok) CheckRequiredOrDefault(param);\r\n...\r\n}\r\n\r\n#define TMPL_INST_MAYBE(ret_type, get_arg, return_code, return_code_null) \\\r\n    template <>                                                \\\r\n    ret_type RPCHelpMan::get_arg(size_t i) const               \\\r\n    {                                                          \\\r\n        const UniValue* maybe_arg{                             \\\r\n            DetailMaybeArg(m_args, m_req, i, true),            \\\r\n        };                                                     \\\r\n        return maybe_arg ? return_code : return_code_null;     \\\r\n    }                                                          \\\r\n    void force_semicolon()\r\n\r\n#define TMPL_INST_REQ(ret_type, get_arg, return_code)          \\\r\n    template <>                                                \\\r\n    ret_type RPCHelpMan::get_arg(size_t i) const               \\\r\n    {                                                          \\\r\n        const UniValue* maybe_arg{                             \\\r\n            DetailMaybeArg(m_args, m_req, i, false),           \\\r\n        };                                                     \\\r\n        CHECK_NONFATAL(maybe_arg);                             \\\r\n        return return_code;                                    \\\r\n    }                                                          \\\r\n    void force_semicolon()\r\n \r\nTMPL_INST_MAYBE(std::optional<double>, ArgValue<std::optional<double>>, std::optional{maybe_arg->get_real()}, std::nullopt);\r\nTMPL_INST_REQ(int, ArgValue<int>, maybe_arg->getInt<int>());\r\n```",
      "created_at": "2023-08-17T10:42:33Z",
      "updated_at": "2023-08-17T10:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297042546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297042546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297043205",
      "pull_request_review_id": 1582339621,
      "id": 1297043205,
      "node_id": "PRRC_kwDOABII585NT08F",
      "diff_hunk": "@@ -383,6 +400,44 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument.\n+     * This function only works during m_fun(), i.e. it should only be used in\n+     * RPC method implementations. The helper internally checkes whether the",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 45,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"checks\" not \"checkes\"",
      "created_at": "2023-08-17T10:43:16Z",
      "updated_at": "2023-08-17T10:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297043205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297043205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 406,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297043961",
      "pull_request_review_id": 1582339621,
      "id": 1297043961,
      "node_id": "PRRC_kwDOABII585NT1H5",
      "diff_hunk": "@@ -383,6 +400,44 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument.\n+     * This function only works during m_fun(), i.e. it should only be used in\n+     * RPC method implementations. The helper internally checkes whether the\n+     * user-passed argument isNull() and parses (from JSON) and returns the\n+     * user-passed argument, or the default value derived from the RPCArg\n+     * documention, or a falsy value if no default was given.\n+     *\n+     * Use Arg<Type>(i) to get the argument or its default value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 50,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add \"should not be used for optional arguments that do not have a default error\" or similar?",
      "created_at": "2023-08-17T10:43:57Z",
      "updated_at": "2023-08-17T10:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297043961",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297043961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297075358",
      "pull_request_review_id": 1582389838,
      "id": 1297075358,
      "node_id": "PRRC_kwDOABII585NT8ye",
      "diff_hunk": "@@ -634,6 +636,49 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+using CheckFn = void(const RPCArg&);\n+static const UniValue* DetailMaybeArg(CheckFn* check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    if (check) check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}",
      "path": "src/rpc/util.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297042546,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like macros, so I'll leave as-is for now, because my version has less lines of code inside a macro",
      "created_at": "2023-08-17T11:16:22Z",
      "updated_at": "2023-08-17T11:16:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297075358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297075358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297087713",
      "pull_request_review_id": 1582408165,
      "id": 1297087713,
      "node_id": "PRRC_kwDOABII585NT_zh",
      "diff_hunk": "@@ -383,6 +400,44 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument.\n+     * This function only works during m_fun(), i.e. it should only be used in\n+     * RPC method implementations. The helper internally checkes whether the",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 45,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297043205,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thx, fixed",
      "created_at": "2023-08-17T11:28:48Z",
      "updated_at": "2023-08-17T11:28:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297087713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297087713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 406,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297088104",
      "pull_request_review_id": 1582408766,
      "id": 1297088104,
      "node_id": "PRRC_kwDOABII585NT_5o",
      "diff_hunk": "@@ -383,6 +400,44 @@ class RPCHelpMan\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n+    /**\n+     * Helper to get a request argument.\n+     * This function only works during m_fun(), i.e. it should only be used in\n+     * RPC method implementations. The helper internally checkes whether the\n+     * user-passed argument isNull() and parses (from JSON) and returns the\n+     * user-passed argument, or the default value derived from the RPCArg\n+     * documention, or a falsy value if no default was given.\n+     *\n+     * Use Arg<Type>(i) to get the argument or its default value.",
      "path": "src/rpc/util.h",
      "position": null,
      "original_position": 50,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297043961,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thx, I changed the doc a bit.",
      "created_at": "2023-08-17T11:29:11Z",
      "updated_at": "2023-08-17T11:29:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297088104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297088104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297864956",
      "pull_request_review_id": 1583661224,
      "id": 1297864956,
      "node_id": "PRRC_kwDOABII585NW9j8",
      "diff_hunk": "@@ -634,6 +636,49 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+using CheckFn = void(const RPCArg&);\n+static const UniValue* DetailMaybeArg(CheckFn* check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    if (check) check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}",
      "path": "src/rpc/util.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297042546,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay, you nerdsniped me successfully. https://github.com/ajtowns/bitcoin/blob/9f332c93bcf7c2a1a4796dda4d2304014b10037e/src/rpc/util.cpp#L684-L705",
      "created_at": "2023-08-18T00:11:15Z",
      "updated_at": "2023-08-18T00:11:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1297864956",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297864956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298184373",
      "pull_request_review_id": 1584128162,
      "id": 1298184373,
      "node_id": "PRRC_kwDOABII585NYLi1",
      "diff_hunk": "@@ -634,6 +636,49 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+using CheckFn = void(const RPCArg&);\n+static const UniValue* DetailMaybeArg(CheckFn* check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    if (check) check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}",
      "path": "src/rpc/util.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297042546,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "heh, but I don't like templates either. My preference would be to use `if constexpr (is_pointer||is_optional) { foo } else { bar }` or C++20 concepts. See also https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1293478970\r\n\r\n\r\nHowever, I've taken your idea to remove ArgRef. Thanks!",
      "created_at": "2023-08-18T08:44:15Z",
      "updated_at": "2023-08-18T08:44:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1298184373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298184373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298982663",
      "pull_request_review_id": 1585384529,
      "id": 1298982663,
      "node_id": "PRRC_kwDOABII585NbOcH",
      "diff_hunk": "@@ -634,6 +636,49 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     return ret;\n }\n \n+using CheckFn = void(const RPCArg&);\n+static const UniValue* DetailMaybeArg(CheckFn* check, const std::vector<RPCArg>& params, const JSONRPCRequest* req, size_t i)\n+{\n+    CHECK_NONFATAL(i < params.size());\n+    const UniValue& arg{CHECK_NONFATAL(req)->params[i]};\n+    const RPCArg& param{params.at(i)};\n+    if (check) check(param);\n+\n+    if (!arg.isNull()) return &arg;\n+    if (!std::holds_alternative<RPCArg::Default>(param.m_fallback)) return nullptr;\n+    return &std::get<RPCArg::Default>(param.m_fallback);\n+}",
      "path": "src/rpc/util.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "faac216d48b81a07c85c6185af237d7bfd57e23c",
      "original_commit_id": "fa0cbfc445fbbad4009833ad9f13fb56886111a5",
      "in_reply_to_id": 1297042546,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, pretty rare that a nerdsnipe results in anything productive. But you're not going to get me with C++20 features until #23363 is done...",
      "created_at": "2023-08-19T01:23:49Z",
      "updated_at": "2023-08-19T01:23:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28230#discussion_r1298982663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298982663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    }
  ]
}