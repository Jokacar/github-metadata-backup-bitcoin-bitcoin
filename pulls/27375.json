{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375",
    "id": 1296744977,
    "node_id": "PR_kwDOABII585NSsIR",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27375",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27375.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27375.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b6da3897f36547139b83abde486bddbf50dab54e",
    "number": 27375,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: support unix domain sockets for -proxy and -onion",
    "user": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Closes https://github.com/bitcoin/bitcoin/issues/27252\r\n\r\nUNIX domain sockets are a mechanism for inter-process communication that are faster than local TCP ports (because there is no need for TCP overhead) and potentially more secure because access is managed by the filesystem instead of serving an open port on the system.\r\n\r\nThere has been work on [unix domain sockets before](https://github.com/bitcoin/bitcoin/pull/9979) but for now I just wanted to start on this single use-case which is enabling unix sockets from the client side, specifically connecting to a local Tor proxy (Tor can listen on unix sockets and even enforces strict curent-user-only access permission before binding) configured by `-onion=` or `-proxy=`\r\n\r\nI copied the prefix `unix:` usage from Tor. With this patch built locally you can test with your own filesystem path (example):\r\n\r\n`tor --SocksPort unix:/Users/matthewzipkin/torsocket/x`\r\n\r\n`bitcoind -proxy=unix:/Users/matthewzipkin/torsocket/x`\r\n\r\nPrep work for this feature includes:\r\n- Moving where and how we create `sockaddr` and `Sock` to accommodate `AF_UNIX` without disturbing `CService`\r\n- Expanding `Proxy` class to represent either a `CService` or a UNIX socket (by its file path)\r\n\r\nFuture work:\r\n- Enable UNIX sockets for ZMQ (https://github.com/bitcoin/bitcoin/pull/27679)\r\n- Enable UNIX sockets for I2P SAM proxy (some code is included in this PR but not tested or exposed to user options yet)\r\n- Enable UNIX sockets on windows where supported\r\n- Update Network Proxies dialog in GUI to support UNIX sockets\r\n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-03-30T19:29:32Z",
    "updated_at": "2023-10-24T22:30:02Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "7415bbb1146acd88ef4da5f4546c66fa5bc8cedc",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "pinheadmz:tor-unix-domain-socket",
      "ref": "tor-unix-domain-socket",
      "sha": "b6da3897f36547139b83abde486bddbf50dab54e",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 61248407,
        "node_id": "MDEwOlJlcG9zaXRvcnk2MTI0ODQwNw==",
        "name": "bitcoin",
        "full_name": "pinheadmz/bitcoin",
        "owner": {
          "login": "pinheadmz",
          "id": 2084648,
          "node_id": "MDQ6VXNlcjIwODQ2NDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pinheadmz",
          "html_url": "https://github.com/pinheadmz",
          "followers_url": "https://api.github.com/users/pinheadmz/followers",
          "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
          "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
          "repos_url": "https://api.github.com/users/pinheadmz/repos",
          "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pinheadmz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pinheadmz/bitcoin",
        "archive_url": "https://api.github.com/repos/pinheadmz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pinheadmz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pinheadmz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pinheadmz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pinheadmz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pinheadmz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pinheadmz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pinheadmz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pinheadmz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pinheadmz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pinheadmz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pinheadmz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pinheadmz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pinheadmz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pinheadmz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pinheadmz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pinheadmz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pinheadmz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pinheadmz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pinheadmz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pinheadmz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pinheadmz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pinheadmz/bitcoin/hooks",
        "svn_url": "https://github.com/pinheadmz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 223209,
        "default_branch": "master2",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-24T18:30:29Z",
        "created_at": "2016-06-15T23:48:20Z",
        "updated_at": "2023-08-28T13:34:08Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "43704827b4c9c178f3651a005e26c09103cd4189",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35867,
        "stargazers_count": 71888,
        "watchers_count": 71888,
        "size": 243752,
        "default_branch": "master",
        "open_issues_count": 628,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-24T21:20:18Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-10-24T21:42:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 389,
    "deletions": 138,
    "changed_files": 17,
    "commits": 12,
    "review_comments": 83,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 1490826098,
      "node_id": "IC_kwDOABII585Y3DNy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1490826098",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-30T19:29:34Z",
      "updated_at": "2023-10-24T22:30:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27375).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [willcl-ark](https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1681893468), [vasild](https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1692266405) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1490826098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "labeled",
      "id": 8891135545,
      "node_id": "LE_lADOABII585iPWmwzwAAAAIR8_Y5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8891135545",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-30T19:29:36Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-30T19:29:48Z",
      "updated_at": "2023-03-30T19:29:48Z",
      "source": {
        "issue": {
          "id": 1621450204,
          "node_id": "I_kwDOABII585gpV3c",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27252",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27252/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27252/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27252/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27252",
          "number": 27252,
          "state": "open",
          "state_reason": null,
          "title": "Adding interprocess onion access instead local ip",
          "body": "### Please describe the feature you'd like to see added.\n\n- onion uses 127.0.0.1:9050 and i would like to set it to use unix:path_to_variable used by tor\n\n### Is your feature related to a problem, if so please describe it.\n\nAvoid people try access local ips or 127.0.0.1 with miss configured torcc. \n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe any alternatives you've considered\n\n_No response_\n\n### Please leave any additional context\n\n_No response_",
          "user": {
            "login": "red0bear",
            "id": 11351022,
            "node_id": "MDQ6VXNlcjExMzUxMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11351022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/red0bear",
            "html_url": "https://github.com/red0bear",
            "followers_url": "https://api.github.com/users/red0bear/followers",
            "following_url": "https://api.github.com/users/red0bear/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/red0bear/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/red0bear/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/red0bear/subscriptions",
            "organizations_url": "https://api.github.com/users/red0bear/orgs",
            "repos_url": "https://api.github.com/users/red0bear/repos",
            "events_url": "https://api.github.com/users/red0bear/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/red0bear/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignee": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "pinheadmz",
              "id": 2084648,
              "node_id": "MDQ6VXNlcjIwODQ2NDg=",
              "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/pinheadmz",
              "html_url": "https://github.com/pinheadmz",
              "followers_url": "https://api.github.com/users/pinheadmz/followers",
              "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
              "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
              "repos_url": "https://api.github.com/users/pinheadmz/repos",
              "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "NONE",
          "locked": false,
          "comments": 7,
          "created_at": "2023-03-13T13:04:45Z",
          "updated_at": "2023-10-18T13:48:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8893062914,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAISEV8C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8893062914",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T00:59:09Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T08:19:29Z",
      "updated_at": "2023-03-31T08:19:29Z",
      "source": {
        "issue": {
          "id": 1398072802,
          "node_id": "PR_kwDOABII585AOrOs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26261",
          "number": 26261,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: cleanup `LookupIntern`, `Lookup` and `LookupHost`",
          "body": "Continuation of #26078.\r\n\r\nTo improve readability instead of returning a bool and passing stuff by reference, this PR changes:\r\n\r\n- `LookupHost` to return `std::vector<CNetAddr>`\r\n- `LookupHost` to return `std::optional<CNetAddr>`\r\n- `Lookup` to return `std::vector<CService>`\r\n- `Lookup` to return `std::optional<CService>`.\r\n- `LookupIntern` to return `std::vector<CNetAddr>`\r\n\r\nAs discussed in #26078, it would be better to avoid using `optional` in some cases, but for specific `Lookup` and `LookupHost` functions it's necessary to use `optional` to verify if they were able to catch some data from their overloaded function.\r\n\r\n\r\n\r\n\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26261.patch"
          },
          "closed_at": "2023-05-30T15:40:23Z",
          "created_at": "2022-10-05T16:35:08Z",
          "updated_at": "2023-05-30T15:40:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1366408214,
      "node_id": "PRR_kwDOABII585RcbwW",
      "url": null,
      "actor": null,
      "commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nWith some light testing it seems to work pretty nicely:\r\n\r\n```fish\r\nwill@ubuntu in ~/src/bitcoin on  tor-unix-domain-socket [$?] via 🐍 3.7.16 took 6s\r\n₿ sudo exa -al /proc/(pidof bitcoind)/fd\r\nlrwx------  64 will 31 Mar 09:21 0 -> /dev/null\r\nlrwx------  64 will 31 Mar 09:21 1 -> /dev/null\r\nlrwx------  64 will 31 Mar 09:21 2 -> /dev/null\r\nlr-x------  64 will 31 Mar 09:21 3 -> pipe:[47084978]\r\nl-wx------  64 will 31 Mar 09:21 4 -> pipe:[47084978]\r\nlrwx------  64 will 31 Mar 09:21 5 -> /home/will/.bitcoin/signet/.lock\r\nl-wx------  64 will 31 Mar 09:21 6 -> /home/will/.bitcoin/signet/debug.log\r\nlrwx------  64 will 31 Mar 09:21 7 -> anon_inode:[eventpoll]\r\nlr-x------  64 will 31 Mar 09:21 8 -> pipe:[47101090]\r\nl-wx------  64 will 31 Mar 09:21 9 -> pipe:[47101090]\r\nlrwx------  64 will 31 Mar 09:21 10 -> anon_inode:[eventfd]\r\nlrwx------@ 64 will 31 Mar 09:21 11 -> socket:[47101093]\r\nlrwx------@ 64 will 31 Mar 09:21 12 -> socket:[47101095]\r\nlrwx------  64 will 31 Mar 09:21 13 -> /home/will/.bitcoin/signet/blocks/index/LOCK\r\nl-wx------  64 will 31 Mar 09:21 14 -> /home/will/.bitcoin/signet/blocks/index/000387.log\r\nl-wx------  64 will 31 Mar 09:21 15 -> /home/will/.bitcoin/signet/blocks/index/MANIFEST-000385\r\nlrwx------  64 will 31 Mar 09:21 16 -> /home/will/.bitcoin/signet/chainstate/LOCK\r\nl-wx------  64 will 31 Mar 09:21 17 -> /home/will/.bitcoin/signet/chainstate/002594.log\r\nl-wx------  64 will 31 Mar 09:21 18 -> /home/will/.bitcoin/signet/chainstate/MANIFEST-002593\r\nlrwx------  64 will 31 Mar 09:21 19 -> /home/will/.bitcoin/signet/wallets/legacy/.walletlock\r\nl-wx------  64 will 31 Mar 09:21 20 -> /home/will/.bitcoin/signet/wallets/legacy/db.log\r\nlrwx------  64 will 31 Mar 09:21 21 -> /home/will/.bitcoin/signet/wallets/legacy/wallet.dat\r\nlrwx------  64 will 31 Mar 09:21 22 -> /home/will/.bitcoin/signet/wallets/legacy/database/log.0000000001\r\nlrwx------  64 will 31 Mar 09:21 23 -> /home/will/.bitcoin/signet/wallets/test-descriptor/wallet.dat\r\nlrwx------  64 will 31 Mar 09:21 24 -> /home/will/.bitcoin/signet/wallets/test-descriptor/wallet.dat-journal\r\nlrwx------  64 will 31 Mar 09:21 25 -> anon_inode:[eventpoll]\r\nlr-x------  64 will 31 Mar 09:21 26 -> pipe:[47084995]\r\nl-wx------  64 will 31 Mar 09:21 27 -> pipe:[47084995]\r\nlrwx------  64 will 31 Mar 09:21 28 -> anon_inode:[eventfd]\r\nlrwx------@ 64 will 31 Mar 09:21 29 -> socket:[47099059]\r\nlrwx------@ 64 will 31 Mar 09:21 30 -> socket:[47084996]\r\nlrwx------@ 64 will 31 Mar 09:21 31 -> socket:[47084997]\r\nlrwx------@ 64 will 31 Mar 09:21 32 -> socket:[47099065]\r\nlrwx------@ 64 will 31 Mar 09:21 33 -> socket:[47084998]\r\nlrwx------@ 64 will 31 Mar 09:21 34 -> socket:[47100197]\r\nlrwx------@ 64 will 31 Mar 09:21 35 -> socket:[47099299]\r\nlrwx------@ 64 will 31 Mar 09:21 36 -> socket:[47099533]\r\nlrwx------@ 64 will 31 Mar 09:22 37 -> socket:[47099588]\r\nlrwx------@ 64 will 31 Mar 09:22 38 -> socket:[47085043]\r\nlrwx------@ 64 will 31 Mar 09:22 39 -> socket:[47085047]\r\n```\r\n\r\nWith new socket connections being opened for each connection.\r\n\r\nAs I mentioned in one of my comments, I am curious why you didn't go for the `-onion` case too, to reduce the scope of the change? \r\n\r\nEnabling `-onion` in the `PortErrorMessage` check loop did appear to also work nicely (although i did not check whether there were any other side-effects).\r\n\r\nThe info shown by `-netinfo 4` looked correct in both cases.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1366408214",
      "submitted_at": "2023-03-31T09:01:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T09:36:45Z",
      "updated_at": "2023-03-31T09:36:45Z",
      "source": {
        "issue": {
          "id": 1261819358,
          "node_id": "PR_kwDOABII5845Km3S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
          "number": 25284,
          "state": "closed",
          "state_reason": null,
          "title": "net: Use serialization parameters for CAddress serialization",
          "body": "It seems confusing that picking a wrong value for `ADDRV2_FORMAT` could have effects on consensus. (See the docstring of `ADDRV2_FORMAT`).\r\n\r\nFix this by implementing https://github.com/bitcoin/bitcoin/issues/19477#issuecomment-1147421608 .\r\n\r\nThis may also help with libbitcoinkernel, see https://github.com/bitcoin/bitcoin/pull/28327",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25284",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25284.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25284.patch"
          },
          "closed_at": "2023-09-07T10:34:48Z",
          "created_at": "2022-06-06T13:04:43Z",
          "updated_at": "2023-09-13T14:27:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T16:47:20Z",
      "updated_at": "2023-03-31T16:47:20Z",
      "source": {
        "issue": {
          "id": 1649191746,
          "node_id": "PR_kwDOEEET9c5NV-_z",
          "url": "https://api.github.com/repos/bitcoin-core/gui/issues/724",
          "repository_url": "https://api.github.com/repos/bitcoin-core/gui",
          "labels_url": "https://api.github.com/repos/bitcoin-core/gui/issues/724/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/724/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/724/events",
          "html_url": "https://github.com/bitcoin-core/gui/pull/724",
          "number": 724,
          "state": "closed",
          "state_reason": null,
          "title": "Update translation source file for v25.0 string freeze",
          "body": "This PR updates the `src/qt/locale/bitcoin_en.xlf` translation source file according to [Release schedule for 25.0](https://github.com/bitcoin/bitcoin/issues/26549).\r\n\r\nSome translation-related fixes have been picked from https://github.com/bitcoin-core/gui/pull/599 and https://github.com/bitcoin-core/gui/pull/716.\r\n\r\nNote for reviewers: it is expected to get a zero diff after running `make -C src translate` locally.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/724",
            "html_url": "https://github.com/bitcoin-core/gui/pull/724",
            "diff_url": "https://github.com/bitcoin-core/gui/pull/724.diff",
            "patch_url": "https://github.com/bitcoin-core/gui/pull/724.patch"
          },
          "closed_at": "2023-04-01T21:06:06Z",
          "created_at": "2023-03-31T11:27:11Z",
          "updated_at": "2023-04-13T10:43:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8900900236,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAISiPWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8900900236",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T18:47:23Z"
    },
    {
      "event": "reviewed",
      "id": 1367343663,
      "node_id": "PRR_kwDOABII585RgAIv",
      "url": null,
      "actor": null,
      "commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the feedback @willcl-ark. force-push to 2436b00f2231c52e6bee6d7f79690c5e709cd6f9 should address your notes. I'm still expecting some CI failures from platforms that don't support unix sockets, then I'll add configure options like wumpus did [here](https://github.com/bitcoin/bitcoin/pull/9979/files#diff-49473dca262eeab3b4a43002adb08b4db31020d190caaad1594b47f1d5daa810)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1367343663",
      "submitted_at": "2023-03-31T18:47:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8900909599,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAISiRof",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8900909599",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T18:48:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8900913277,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAISiSh9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8900913277",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T18:49:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-01T04:18:07Z",
      "updated_at": "2023-04-01T04:18:07Z",
      "source": {
        "issue": {
          "id": 1650131834,
          "node_id": "PR_kwDOABII585NZG7Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27385",
          "number": 27385,
          "state": "open",
          "state_reason": null,
          "title": "net, refactor: extract Network and BIP155Network logic to node/network",
          "body": "This extracts the `Network` and `BIP155Network` logic to `node/network`.  The code has been living between `netaddress` and `netbase` and some compilation units include these large files when they only need a `Network` enum or related method.  Separating the code to a standalone unit in `node` improves code separation and helps with using only what is needed.\r\n\r\nI verified the `include` headers with https://cirrus-ci.com/task/6749578737745920 generated by https://github.com/bitcoin/bitcoin/pull/27385/commits/8f647a65d3484c7acd2d97f4b055c582d7734b6f while this was in draft and carefully narrowed them down to the most relevant ones.\r\n\r\nPossible todos for a follow-up: upgrade `Network` to an `enum class`, e.g. `NET_I2P` becomes `Network::I2P` and https://github.com/bitcoin/bitcoin/pull/27385/commits/5cfa3fb8b5815aaf96483a63526e5f0bf3c0a06b.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27385",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27385",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27385.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27385.patch"
          },
          "created_at": "2023-03-31T22:40:50Z",
          "updated_at": "2023-10-23T17:45:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8905326757,
      "node_id": "LE_lADOABII585iPWmwzwAAAAISzICl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8905326757",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-01T23:05:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8906524870,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIS3sjG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8906524870",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-02T14:27:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8906529320,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIS3too",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8906529320",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-02T14:29:59Z"
    },
    {
      "event": "unlabeled",
      "id": 8906587127,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAIS37v3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8906587127",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-02T15:03:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8907390761,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIS6_8p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8907390761",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T00:21:47Z"
    },
    {
      "event": "renamed",
      "id": 8913668917,
      "node_id": "RTE_lADOABII585iPWmwzwAAAAITS8s1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8913668917",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T14:24:14Z",
      "rename": {
        "from": "net: support unix domain sockets for -proxy",
        "to": "net: support unix domain sockets for -proxy and -onion"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8913991437,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAITULcN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8913991437",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T14:53:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8914278819,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAITVRmj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8914278819",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T15:17:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8915325541,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAITZRJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8915325541",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T17:02:10Z"
    },
    {
      "event": "ready_for_review",
      "id": 8915952673,
      "node_id": "RFRE_lADOABII585iPWmwzwAAAAITbqQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8915952673",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T18:14:47Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T01:33:28Z",
      "updated_at": "2023-04-13T01:33:28Z",
      "source": {
        "issue": {
          "id": 1652681372,
          "node_id": "PR_kwDOABII585NhcBe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27411",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27411/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27411/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27411/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27411",
          "number": 27411,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Restrict self-advertisements with privacy networks to avoid fingerprinting",
          "body": "The current logic for self-advertisements works such that we detect as many local addresses as we can, and then, using the scoring matrix from `CNetAddr::GetReachabilityFrom()`, self-advertise with the address that fits best to our peer.\r\nIt is in general not hard for our peers to distinguish our self-advertisements from other addrs we send them, because we self-advertise every ~24h and because the first addr we send over a connection is likely our self-advertisement. \r\n\r\n`GetReachabilityFrom()` currently only takes into account actual reachability, but not whether we'd _want_ to announce our identity for one network to peers from other networks, which is not straightforward in connection with privacy networks. \r\n\r\nWhile the general approach is to prefer self-advertising with the address for the network our peer is on, there are several special situations in which we don't have one, and as a result could allow self-advertise other local addresses, for example:\r\n\r\nA) We run i2p and clearnet, use `-i2pacceptincoming=0` (so we have no local i2p address), and we have a local ipv4 address. In this case, we'd advertise the ipv4 address to our outbound i2p peers.\r\n\r\nB) Our `-discover` logic cannot detect any local clearnet addresses in our network environment, but we are actually reachable over clearnet. If we ran bitcoind clearnet-only, we'd always advertise the address our peer sees us with instead, and could get inbound peers this way. Now, if we also have an onion service running (but aren't using tor as a proxy for clearnet connections), we could advertise our onion address to clearnet peers, so that they would be able to connect our clearnet and onion identities. \r\n\r\nThis PR tries to avoid these situations by \r\n1.) never advertising our local Tor or I2P address to peers from other networks.\r\n2.) never advertising local addresses from non-anonymity networks to peers from Tor or I2P\r\n\r\nNote that this affects only our own self-advertisements, the rules to forward other people's addrs are not changed.\r\n\r\n[Edit] after Initial [discussion](https://github.com/bitcoin/bitcoin/pull/27411#issuecomment-1497176155): CJDNS is not being treated like Tor and I2P at least for now, because it has different privacy properties and for the practical reason that it has still very few bitcoin nodes.\r\n",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27411",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27411",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27411.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27411.patch"
          },
          "closed_at": "2023-07-13T17:51:24Z",
          "created_at": "2023-04-03T19:56:42Z",
          "updated_at": "2023-08-17T13:31:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1382786000,
      "node_id": "PRR_kwDOABII585Sa6PQ",
      "url": null,
      "actor": null,
      "commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, this would be nice to have.\r\n\r\nI do not like that the current approach expands `enum Network` and `CNetAddr` with the UNIX type, making it first-class-citizen network that has to be handled all over the networking code, whereas it is only needed to connect to the proxy. It is not like this PR adds support for connecting to other Bitcoin nodes over UNIX sockets (using the P2P protocol). This creates meaningless situations like having a `CService` on a UNIX socket (it is meaningless because `CService` has port, whereas UNIX sockets don't have port). Similarly `CSubNet` on a UNIX socket is meaningless.\r\n\r\nI will play a bit with this to see if it would be possible to constrain the logic in the `Proxy` class and hide from the rest of the code whether the proxy is at `addr:port` or `unix:/path`.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1382786000",
      "submitted_at": "2023-04-13T15:45:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9000949730,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIYf5fi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9000949730",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T20:29:11Z"
    },
    {
      "event": "commented",
      "id": 1507577994,
      "node_id": "IC_kwDOABII585Z29CK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1507577994",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T20:33:28Z",
      "updated_at": "2023-04-13T20:33:28Z",
      "author_association": "MEMBER",
      "body": "Thanks so much for the great review @vasild I think I addressed all your feedback up to the adding UNIX to CNetAddr. I understand your concerns there and we can chat about it, I'll look at alternatives as well. What I did do in this last push was mostly separate unix sockets from regular sockets, and adding `Proxy.GetSocket()` to decide which socket factory to call.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1507577994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9000980330,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAIYgA9q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9000980330",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T20:33:28Z"
    },
    {
      "event": "subscribed",
      "id": 9000980341,
      "node_id": "SE_lADOABII585iPWmwzwAAAAIYgA91",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9000980341",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T20:33:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9000992877,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIYgEBt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9000992877",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T20:35:19Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T23:36:10Z",
      "updated_at": "2023-04-13T23:36:10Z",
      "source": {
        "issue": {
          "id": 1579504924,
          "node_id": "PR_kwDOABII585Js_-Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
          "number": 27071,
          "state": "closed",
          "state_reason": null,
          "title": "Handle CJDNS from LookupSubNet()",
          "body": "`LookupSubNet()` would treat addresses that start with `fc` as IPv6 even if `-cjdnsreachable` is set. This creates the following problems where it is called:\r\n\r\n* `NetWhitelistPermissions::TryParse()`: otherwise `-whitelist=` fails to white list CJDNS addresses: when a CJDNS peer connects to us, it will be matched against IPv6 `fc...` subnet and the match will never succeed.\r\n\r\n* `BanMapFromJson()`: CJDNS bans are stored as just IPv6 addresses in `banlist.json`. Upon reading from disk they have to be converted back to CJDNS, otherwise, after restart, a ban entry like (`fc00::1`, IPv6) would not match a peer (`fc00::1`, CJDNS).\r\n    \r\n* `RPCConsole::unbanSelectedNode()`: in the GUI the ban entries go through `CSubNet::ToString()` and back via `LookupSubNet()`. Then it must match whatever is stored in `BanMan`, otherwise it is impossible to unban via the GUI.\r\n\r\nThese were uncovered by https://github.com/bitcoin/bitcoin/pull/26859.\r\n\r\nThus, flip the result of `LookupSubNet()` to CJDNS if the network base address starts with `fc` and `-cjdnsreachable` is set. Since subnetting/masking does not make sense for CJDNS (the address is \"random\" bytes, like Tor and I2P, there is no hierarchy) treat `fc.../mask` as an invalid `CSubNet`.\r\n\r\nTo achieve that, `MaybeFlipIPv6toCJDNS()` has to be moved from `net` to `netbase` and thus also `IsReachable()`. In the process of moving `IsReachable()`, `SetReachable()` and `vfLimited[]` encapsulate those in a class.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "open",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 101,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-10-24T09:32:59Z"
          },
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27071.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27071.patch"
          },
          "closed_at": "2023-10-19T16:49:02Z",
          "created_at": "2023-02-10T11:20:45Z",
          "updated_at": "2023-10-23T12:24:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9002110616,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIYkU6Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9002110616",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T23:45:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9009073723,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIY-447",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9009073723",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T15:33:24Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T01:11:22Z",
      "updated_at": "2023-04-21T01:11:22Z",
      "source": {
        "issue": {
          "id": 1677432252,
          "node_id": "PR_kwDOABII585Ozh_T",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27505",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27505",
          "number": 27505,
          "state": "closed",
          "state_reason": null,
          "title": "net: use interruptible async getaddrinfo wrapper from libevent for DNS",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/16778\r\n\r\nBitcoin uses `getaddrinfo` to make DNS requests for DNS seed servers and for adding peers with `-addnode`, `-seednode` and `-connect`. Depending on the platform this can be clunky and a system issue could prevent name resolution from completing at all, blocking the thread and in some cases preventing a clean shutdown.\r\n\r\nAn attempt was made to switch to the asynchronous `getaddrinfo_a` in https://github.com/bitcoin/bitcoin/pull/4421 but that was reverted in https://github.com/bitcoin/bitcoin/pull/9229 after discovering that function has a segfault!\r\n\r\nTaking BlueMatt's suggestion in https://github.com/bitcoin/bitcoin/pull/10215#issue-221886328, this PR modifies our `g_dns_lookup` function to use `evdns_getaddrinfo()` from [libevent](https://libevent.org/libevent-book/Ref9_dns.html). This is an asynchronous function but I've implemented it in a polling loop so it still blocks -- but now will timeout after 2 seconds.\r\n\r\nTODO:\r\n- [ ] We could make the polling loop interruptible but I'm not sure the best approach to that, since these functions don't live in a class with a flag like `interruptNet` \r\n- [ ] Is it possible to add functional tests that mess with DNS? Probably not.\r\n- [ ] The unit test I added makes a live DNS request for `nic.com` that test will fail the platform has no DNS\r\n\r\nFuture work:\r\n- libevent has more low-level DNS functions as well, we could ultimately use those to (for example) request `TXT` records with onion addresses from our DNS seeders\r\n\r\n",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27505",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27505",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27505.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27505.patch"
          },
          "closed_at": "2023-05-02T18:29:36Z",
          "created_at": "2023-04-20T21:07:11Z",
          "updated_at": "2023-05-02T18:29:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T03:09:29Z",
      "updated_at": "2023-04-26T03:09:29Z",
      "source": {
        "issue": {
          "id": 1683828214,
          "node_id": "PR_kwDOABII585PI2hl",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27530",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27530/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27530/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27530/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27530",
          "number": 27530,
          "state": "closed",
          "state_reason": null,
          "title": "Remove now-unnecessary poll, fcntl includes from net(base).cpp",
          "body": "As far as I can tell, the code calling for these includes was removed in:\r\n6e68ccbefea6509c61fc4405a391a517c6057bb0 #24356\r\n82d360b5a88d9057b6c09b61cd69e426c7a2412d #21387",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27530",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27530",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27530.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27530.patch"
          },
          "closed_at": "2023-06-29T09:33:00Z",
          "created_at": "2023-04-25T20:36:11Z",
          "updated_at": "2023-06-29T15:29:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T22:45:50Z",
      "updated_at": "2023-05-02T22:45:50Z",
      "source": {
        "issue": {
          "id": 1692901383,
          "node_id": "PR_kwDOABII585PnKTi",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27557",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27557/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27557/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27557/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27557",
          "number": 27557,
          "state": "open",
          "state_reason": null,
          "title": "net: call getaddrinfo() in detachable thread to prevent stalling",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/16778\r\nReplaces https://github.com/bitcoin/bitcoin/pull/27505\r\n\r\nThe library call `getaddrinfo()` has no internal timeout and depending on the user's system may wait indefinitely for a response when looking up a hostname in the DNS. By making that call in a separate thread, we can abandon it completely after some timeout (currently in this PR, 2 seconds).\r\n\r\nTODO:\r\n\r\n- [ ] We could make the polling loop interruptible but I'm not sure the best approach to that, since these functions don't live in a class with a flag like interruptNet\r\n\r\n\r\n",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27557",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27557",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27557.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27557.patch"
          },
          "created_at": "2023-05-02T18:28:32Z",
          "updated_at": "2023-10-19T18:31:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1385416057,
      "node_id": "PRR_kwDOABII585Sk8V5",
      "url": null,
      "actor": null,
      "commit_id": "77c02efdf551bce0d0a1ab462dd5c5da6a2a948c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1385416057",
      "submitted_at": "2023-05-16T06:18:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:08:15Z",
      "updated_at": "2023-05-16T20:08:15Z",
      "source": {
        "issue": {
          "id": 1712671682,
          "node_id": "PR_kwDOABII585QpmkI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27679",
          "number": 27679,
          "state": "open",
          "state_reason": null,
          "title": "ZMQ: Support UNIX domain sockets",
          "body": "This is a follow-up to https://github.com/bitcoin/bitcoin/pull/27375, allowing ZMQ notifications to be published to a UNIX domain socket, adding one more commit.\r\n\r\nFortunately, libzmq handles unix sockets already, all we really have to do to support it is allow the format in the actual option. libzmq uses the prefix `ipc://` as opposed to `unix:` which is used by Tor and by #27375 so, for now I'm testing with both being allowed. \r\n\r\nExample:\r\n\r\n`bitcoind -zmqpubhashblock=ipc:///tmp/subscriber_socket`",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27679",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27679",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27679.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27679.patch"
          },
          "created_at": "2023-05-16T20:08:15Z",
          "updated_at": "2023-07-27T21:16:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9272985620,
      "node_id": "LE_lADOABII585iPWmwzwAAAAIotogU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9272985620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:24:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9281206447,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAIpM_iv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9281206447",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T15:38:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9353769682,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIthzLS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353769682",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T18:56:38Z"
    },
    {
      "event": "commented",
      "id": 1564803705,
      "node_id": "IC_kwDOABII585dRQJ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564803705",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T18:58:28Z",
      "updated_at": "2023-05-26T18:58:28Z",
      "author_association": "MEMBER",
      "body": "@vasild did an overhaul of this PR and implemented more how we discussed on IRC. Edited the description to explain. I ended up not using `std::variant` because I felt it added uneeded complexity. Current approach is `Proxy` just has a `is_unix` flag and abstracts away the `CService` methods like `IsValid()` etc to support TCP or UNIX sockets",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1564803705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9353792000,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAIth4oA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353792000",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T18:58:28Z"
    },
    {
      "event": "subscribed",
      "id": 9353792014,
      "node_id": "SE_lADOABII585iPWmwzwAAAAIth4oO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353792014",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T18:58:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9353943263,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAItidjf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353943263",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T19:20:01Z"
    },
    {
      "event": "labeled",
      "id": 9353943808,
      "node_id": "LE_lADOABII585iPWmwzwAAAAItidsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353943808",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T19:20:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9353969144,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAItij34",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9353969144",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T19:24:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9354379432,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAItkICo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354379432",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T20:15:41Z"
    },
    {
      "event": "unlabeled",
      "id": 9354782727,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAItlqgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354782727",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T21:26:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T04:54:00Z",
      "updated_at": "2023-05-27T04:54:00Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2023-10-24T18:44:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T04:55:50Z",
      "updated_at": "2023-05-27T04:55:50Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2023-10-24T18:43:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T05:03:50Z",
      "updated_at": "2023-05-27T05:03:50Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28721.** The non-base commits are:\r\n\r\n- [`dc0a2a6726bb` depends: Update libmultiprocess library](https://github.com/bitcoin/bitcoin/pull/10102/commits/dc0a2a6726bbd3e197c64db93eaead76897e5fe3)\r\n- [`4a95a333717e` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/4a95a333717ed59b18de2759a4b5e6119c9efd9d)\r\n- [`debf07da817d` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/debf07da817dbfa60248a9527ba65a206799ab75)\r\n- [`21abaa9bba14` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/21abaa9bba1499a8134064a1ab31fbf789a43ef9)\r\n- [`12bbaf7c53f8` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/12bbaf7c53f84e49a7f7a1c79371dd6e347cdc4e)\r\n- [`82fdd6b35a7d` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/82fdd6b35a7d844a88194b1c1477144a5498bdf9)\r\n- [`4138a284cd68` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/4138a284cd68bfe9a6c3b39c584fb2443a54c44c)\r\n- [`69df67fee50d` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/69df67fee50dd396e9ae5354f499b4c879ae08e0)\r\n- [`0debb3a35abc` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/0debb3a35abce272de9c232bc1f8ede785ebe5c6)\r\n- [`c36072badafa` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/c36072badafaaebf1b29db6ee76536adc11e9bb2)\r\n- [`0d151661f3bf` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/0d151661f3bf04fc6a6ae1d9560770a74681653d)\r\n- [`75fa53129e8d` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/75fa53129e8dfae3b043329895014ee3ef82fcb1)\r\n- [`18d382f4f8a7` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/18d382f4f8a74612ae0e91efd8a2b83bb665e081)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 82,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-10-24T18:42:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9380244415,
      "node_id": "LE_lADOABII585iPWmwzwAAAAIvGyu_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9380244415",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:53:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9382722859,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIvQP0r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9382722859",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T20:30:35Z"
    },
    {
      "event": "commented",
      "id": 1569053476,
      "node_id": "IC_kwDOABII585dhdsk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1569053476",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T20:30:54Z",
      "updated_at": "2023-05-30T20:30:54Z",
      "author_association": "MEMBER",
      "body": "> 🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\r\n\r\n🕺 ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1569053476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "labeled",
      "id": 9383307258,
      "node_id": "LE_lADOABII585iPWmwzwAAAAIvSef6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9383307258",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T21:50:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9383522520,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAIvTTDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9383522520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T22:15:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9393256634,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAIv4bi6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9393256634",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T17:13:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9427638678,
      "node_id": "LE_lADOABII585iPWmwzwAAAAIx7lmW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9427638678",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:46:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1461645134,
      "node_id": "PRR_kwDOABII585XHu9O",
      "url": null,
      "actor": null,
      "commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 1a2095baf12b8f8995bed513a23d5faf16917fba",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1461645134",
      "submitted_at": "2023-06-05T09:48:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "unlabeled",
      "id": 9431305821,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAIyJk5d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9431305821",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T10:40:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9436426358,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAIydHB2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9436426358",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:34:01Z"
    },
    {
      "event": "commented",
      "id": 1577201958,
      "node_id": "IC_kwDOABII585eAjEm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577201958",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:35:05Z",
      "updated_at": "2023-06-05T17:35:05Z",
      "author_association": "MEMBER",
      "body": "@vasild thanks for the excellent detailed review! All comments addressed except where noted.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1577201958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9436435414,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAIydJPW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9436435414",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:35:06Z"
    },
    {
      "event": "subscribed",
      "id": 9436435448,
      "node_id": "SE_lADOABII585iPWmwzwAAAAIydJP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9436435448",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:35:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9607580252,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAI8qApc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9607580252",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:42:30Z"
    },
    {
      "event": "commented",
      "id": 1602766905,
      "node_id": "IC_kwDOABII585fiEg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1602766905",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:43:46Z",
      "updated_at": "2023-06-22T17:10:59Z",
      "author_association": "MEMBER",
      "body": "Rebased on master to pass CI (✅ ). @vasild and @willcl-ark would really love re-review from you handsome chaps when convenient!",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1602766905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9607595979,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAI8qEfL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9607595979",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:43:47Z"
    },
    {
      "event": "subscribed",
      "id": 9607596000,
      "node_id": "SE_lADOABII585iPWmwzwAAAAI8qEfg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9607596000",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:43:47Z"
    },
    {
      "event": "mentioned",
      "id": 9607596027,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAI8qEf7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9607596027",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:43:47Z"
    },
    {
      "event": "subscribed",
      "id": 9607596042,
      "node_id": "SE_lADOABII585iPWmwzwAAAAI8qEgK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9607596042",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-22T14:43:47Z"
    },
    {
      "event": "reviewed",
      "id": 1494066986,
      "node_id": "PRR_kwDOABII585ZDacq",
      "url": null,
      "actor": null,
      "commit_id": "64d0f234e9aac490b03a5c019e86f1da56e62e01",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1494066986",
      "submitted_at": "2023-06-22T22:14:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "labeled",
      "id": 9675699748,
      "node_id": "LE_lADOABII585iPWmwzwAAAAJAt3Yk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9675699748",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T11:25:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1505515197,
      "node_id": "PRR_kwDOABII585ZvFa9",
      "url": null,
      "actor": null,
      "commit_id": "64d0f234e9aac490b03a5c019e86f1da56e62e01",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "64d0f234e9 looks good, except there is some messup in the contents of these two commits:\r\n\r\n87064712899dacfac7f66f60c8ed1c0f4e65c24f `netbase: refactor CreateSock() to accept sa_family_t`\r\nbbff39d3619428df3745d884ea36d7febff337b1 `netbase: extend Proxy class to wrap UNIX socket as well as TCP`\r\n\r\nThe first one introduces one more `IsValid()` method, in addition to the existent one. The new method uses a variable that does not exist: `is_unix_socket`, thus it will not compile.\r\nThen the other commit removes one of the `IsValid()` methods, introduces `m_is_unix_socket` and changes usage from `is_unix_socket` to `m_is_unix_socket`.\r\n\r\nTo resolve this:\r\n\r\n<details>\r\n<summary>[patch] apply this to commit 87064712899dacfac7f66f60c8ed1c0f4e65c24f netbase: refactor CreateSock() to accept sa_family_t</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex a50807fb64..556c8a84e7 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -515,13 +515,13 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n \r\n             if (connected) {\r\n                 sock = std::move(conn.sock);\r\n                 addr_bind = CAddress{conn.me, NODE_NONE};\r\n             }\r\n         } else if (use_proxy) {\r\n-            sock = CreateSock(proxy.proxy.GetTCPFamily());\r\n+            sock = CreateSock(proxy.proxy.GetSAFamily());\r\n             if (!sock) {\r\n                 return nullptr;\r\n             }\r\n             LogPrintLevel(BCLog::PROXY, BCLog::Level::Debug, \"Using proxy: %s to connect to %s:%s\\n\", proxy.proxy.ToStringAddrPort(), addrConnect.ToStringAddr(), addrConnect.GetPort());\r\n             connected = ConnectThroughProxy(proxy, addrConnect.ToStringAddr(), addrConnect.GetPort(),\r\n                                             *sock, nConnectTimeout, proxyConnectionFailed);\r\n@@ -537,13 +537,13 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n         if (!proxyConnectionFailed) {\r\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\r\n             // the proxy, mark this as an attempt.\r\n             addrman.Attempt(addrConnect, fCountFailure);\r\n         }\r\n     } else if (pszDest && GetNameProxy(proxy)) {\r\n-        sock = CreateSock(proxy.proxy.GetTCPFamily());\r\n+        sock = CreateSock(proxy.proxy.GetSAFamily());\r\n         if (!sock) {\r\n             return nullptr;\r\n         }\r\n         std::string host;\r\n         uint16_t port{default_port};\r\n         SplitHostPort(std::string(pszDest), port, host);\r\ndiff --git a/src/netbase.h b/src/netbase.h\r\nindex 320496f73b..a9e1ea4c62 100644\r\n--- a/src/netbase.h\r\n+++ b/src/netbase.h\r\n@@ -52,30 +52,12 @@ public:\r\n     explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\r\n \r\n     bool IsValid() const { return proxy.IsValid(); }\r\n \r\n     CService proxy;\r\n     bool randomize_credentials;\r\n-\r\n-    bool IsValid() const\r\n-    {\r\n-        if (is_unix_socket) return IsUnixSocketPath(unix_socket_path);\r\n-        return proxy.IsValid();\r\n-    }\r\n-\r\n-    sa_family_t GetFamily() const\r\n-    {\r\n-        if (is_unix_socket) return AF_UNIX;\r\n-        return proxy.GetSAFamily();\r\n-    }\r\n-\r\n-    std::string ToStringAddrPort() const\r\n-    {\r\n-        if (is_unix_socket) return unix_socket_path;\r\n-        return proxy.ToStringAddrPort();\r\n-    }\r\n };\r\n \r\n /** Credentials for proxy authentication */\r\n struct ProxyCredentials\r\n {\r\n     std::string username;\r\n```\r\n</details>\r\n\r\nand make sure that the state of the tree after commit `netbase: extend Proxy class to wrap UNIX socket as well as TCP` is the same as it is now.\r\n\r\nIt is also here: https://github.com/vasild/bitcoin/tree/tor-unix-domain-socket\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1505515197",
      "submitted_at": "2023-06-29T16:12:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9712935280,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJC76Fw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9712935280",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:13:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9712976038,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJC8ECm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9712976038",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:16:40Z"
    },
    {
      "event": "commented",
      "id": 1619034666,
      "node_id": "IC_kwDOABII585ggIIq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1619034666",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:17:32Z",
      "updated_at": "2023-07-03T19:32:11Z",
      "author_association": "MEMBER",
      "body": "> [64d0f23](https://github.com/bitcoin/bitcoin/commit/64d0f234e9aac490b03a5c019e86f1da56e62e01) looks good, except there is some messup in the contents of these two commits:\r\n\r\nThanks @vasild sorry about the messy rebase there. I cleaned up the commits and fixed the `const` and `m_...` nits. Rebased on master for merge conflicts.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1619034666",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9712989051,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAJC8HN7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9712989051",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:17:32Z"
    },
    {
      "event": "subscribed",
      "id": 9712989072,
      "node_id": "SE_lADOABII585iPWmwzwAAAAJC8HOQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9712989072",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:17:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9713118268,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJC8mw8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9713118268",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:31:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9713192304,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJC841w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9713192304",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:40:52Z"
    },
    {
      "event": "labeled",
      "id": 9713192879,
      "node_id": "LE_lADOABII585iPWmwzwAAAAJC84-v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9713192879",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T19:40:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9713798446,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAJC_M0u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9713798446",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T20:47:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9714229243,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAJDA1_7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9714229243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T21:42:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T02:03:57Z",
      "updated_at": "2023-07-04T02:03:57Z",
      "source": {
        "issue": {
          "id": 1784615646,
          "node_id": "PR_kwDOABII585UcV3X",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28020",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28020/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28020/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28020/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28020",
          "number": 28020,
          "state": "closed",
          "state_reason": null,
          "title": "exclude ipc scheme from port check",
          "body": "Previous PR https://github.com/bitcoin/bitcoin/pull/22087 cause new error, makes it impossible to use ipc protocol using zmq, this patch will exclude port checking on ipc urls.",
          "user": {
            "login": "JayBitron",
            "id": 16558105,
            "node_id": "MDQ6VXNlcjE2NTU4MTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16558105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JayBitron",
            "html_url": "https://github.com/JayBitron",
            "followers_url": "https://api.github.com/users/JayBitron/followers",
            "following_url": "https://api.github.com/users/JayBitron/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JayBitron/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JayBitron/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JayBitron/subscriptions",
            "organizations_url": "https://api.github.com/users/JayBitron/orgs",
            "repos_url": "https://api.github.com/users/JayBitron/repos",
            "events_url": "https://api.github.com/users/JayBitron/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JayBitron/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28020",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28020",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28020.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28020.patch"
          },
          "closed_at": "2023-07-14T00:45:27Z",
          "created_at": "2023-07-02T12:25:21Z",
          "updated_at": "2023-07-14T00:45:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1516100277,
      "node_id": "PRR_kwDOABII585aXdq1",
      "url": null,
      "actor": null,
      "commit_id": "c3b0f137a9ccd894f2f1d287ccdab26310b3aaf2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK c3b0f137a9ccd894f2f1d287ccdab26310b3aaf2\r\n\r\nWould be an excellent addition, thank you!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1516100277",
      "submitted_at": "2023-07-06T09:09:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "commented",
      "id": 1630664257,
      "node_id": "IC_kwDOABII585hMfZB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1630664257",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T11:37:25Z",
      "updated_at": "2023-07-11T11:37:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's a tNACK from me currently @ c3b0f137a9 as I can no longer get this functionality to work in practice on Ubuntu 23.04 with Tor 0.4.7.13.\r\n\r\nThe send of the data in `vSocks5Init` seems to be failing, meaning the proxy cannot be used: https://github.com/pinheadmz/bitcoin/blob/c3b0f137a9ccd894f2f1d287ccdab26310b3aaf2/src/netbase.cpp#L372-L375\r\n\r\nI haven't yet totally ruled out issues with Tor, but I do get responses from the unix socket about it not being an HTTP proxy if I try to send an HTTP request over it, so I conclude that the Tor daemon is listening on the socket correctly waiting for SOCKS requests, and the issue may lie with Bitcoin Core.\r\n\r\nWill continue investigating and report back.\r\n\r\n<details>\r\n<summary>bitcoin.conf options set</summary>\r\n\r\n```log\r\n2023-07-11T11:12:35Z Config file: /home/will/.bitcoin/bitcoin.conf\r\n2023-07-11T11:12:35Z Config file arg: [main] addnode=\"xx.xx.xx.xx:8333\"\r\n2023-07-11T11:12:35Z Config file arg: [main] blockfilterindex=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] blocksdir=\"/media/will/crucial1/bitcoin\"\r\n2023-07-11T11:12:35Z Config file arg: [main] daemon=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] debug=\"net\"\r\n2023-07-11T11:12:35Z Config file arg: [main] debug=\"proxy\"\r\n2023-07-11T11:12:35Z Config file arg: [main] debug=\"tor\"\r\n2023-07-11T11:12:35Z Config file arg: [main] discover=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] externalip=\"xx.xx.xx.xx\"\r\n2023-07-11T11:12:35Z Config file arg: [main] i2pacceptincoming=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] i2psam=\"127.0.0.1:7656\"\r\n2023-07-11T11:12:35Z Config file arg: [main] listen=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] listenonion=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] maxconnections=\"125\"\r\n2023-07-11T11:12:35Z Config file arg: [main] mempoolfullrbf=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] onion=\"unix:/run/tor/socks\"\r\n2023-07-11T11:12:35Z Config file arg: [main] onlynet=\"onion\"\r\n2023-07-11T11:12:35Z Config file arg: [main] port=\"8833\"\r\n2023-07-11T11:12:35Z Config file arg: [main] rpcauth=****\r\n2023-07-11T11:12:35Z Config file arg: [main] rpcthreads=\"16\"\r\n2023-07-11T11:12:35Z Config file arg: [main] rpcworkqueue=\"64\"\r\n2023-07-11T11:12:35Z Config file arg: [main] server=\"1\"\r\n2023-07-11T11:12:35Z Config file arg: [main] txindex=\"1\"\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>torrc</summary>\r\n\r\n```\r\nSocksPort unix:/run/tor/socks WorldWritable\r\nControlPort 9051\r\nCookieAuthentication 1\r\nCookieAuthFileGroupReadable 1\r\nDataDirectoryGroupReadable 1\r\n```\r\n\r\n</details>",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1630664257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "referenced",
      "id": 9799587439,
      "node_id": "REFE_lADOABII585iPWmwzwAAAAJIGdZv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9799587439",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "af4eb52ff611342dbd285f218474649f16badbaf",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/af4eb52ff611342dbd285f218474649f16badbaf",
      "created_at": "2023-07-12T13:33:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9803851105,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJIWuVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803851105",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:44:45Z"
    },
    {
      "event": "commented",
      "id": 1633198398,
      "node_id": "IC_kwDOABII585hWKE-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1633198398",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:51:10Z",
      "updated_at": "2023-07-12T20:51:10Z",
      "author_association": "MEMBER",
      "body": "@willcl-ark wow thank you so much for catching that. After all the refactoring, we had forgotten to actually *connect to the unix socket!* I added a functional test to ensure that the proxy works now and I have also tested in production with Tor locally.\r\n\r\nThis required a fairly intense refactor that included inserting 2 new commits and rebasing several others:\r\n\r\n`git range-diff 32a5a20225 c3b0f137a9 b1199bce0f`\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1633198398",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9803898441,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAJIW55J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803898441",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:51:11Z"
    },
    {
      "event": "subscribed",
      "id": 9803898461,
      "node_id": "SE_lADOABII585iPWmwzwAAAAJIW55d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803898461",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:51:11Z"
    },
    {
      "event": "commented",
      "id": 1633199594,
      "node_id": "IC_kwDOABII585hWKXq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1633199594",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:52:15Z",
      "updated_at": "2023-07-12T20:52:15Z",
      "author_association": "MEMBER",
      "body": "@vasild Thanks for your work on this :-) I reorganized the extra commit you sent me. For now, still going without `variant` for `Proxy` just to keep the refator more simple, so leaving the i2p stuff mostly alone as well.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1633199594",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9803906315,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAJIW70L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803906315",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:52:15Z"
    },
    {
      "event": "subscribed",
      "id": 9803906321,
      "node_id": "SE_lADOABII585iPWmwzwAAAAJIW70R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803906321",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T20:52:15Z"
    },
    {
      "event": "labeled",
      "id": 9804467374,
      "node_id": "LE_lADOABII585iPWmwzwAAAAJIZEyu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9804467374",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T22:15:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T06:28:44Z",
      "updated_at": "2023-07-13T06:28:44Z",
      "source": {
        "issue": {
          "id": 1408975299,
          "node_id": "PR_kwDOABII585AzCJJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26312",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26312/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26312/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26312/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26312",
          "number": 26312,
          "state": "closed",
          "state_reason": null,
          "title": "Remove Sock::Get() and Sock::Sock()",
          "body": "_This is a piece of #21878, chopped off to ease review._\r\n\r\nPeeking at the underlying socket file descriptor of `Sock` and checkig if it is `INVALID_SOCKET` is bad encapsulation and stands in the way of testing/mocking/fuzzing.\r\n\r\nInstead use an empty `unique_ptr` to denote that there is no valid socket where appropriate or outright remove such checks where they are not necessary.\r\n\r\nThe default constructor `Sock::Sock()` is unnecessary now after recent changes, thus remove it.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26312",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26312",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26312.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26312.patch"
          },
          "closed_at": "2023-10-03T13:58:01Z",
          "created_at": "2022-10-14T08:28:59Z",
          "updated_at": "2023-10-04T11:42:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1527850665,
      "node_id": "PRR_kwDOABII585bESap",
      "url": null,
      "actor": null,
      "commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1527850665",
      "submitted_at": "2023-07-13T12:27:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9815194674,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJJB_wy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9815194674",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T20:10:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9824297414,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJJkuHG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9824297414",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-14T18:03:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9831205351,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJJ_Enn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9831205351",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-16T14:11:30Z"
    },
    {
      "event": "unlabeled",
      "id": 9831362458,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAJJ_q-a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9831362458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-16T15:54:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1637129953,
      "node_id": "IC_kwDOABII585hlJ7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1637129953",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-16T16:13:11Z",
      "updated_at": "2023-07-16T16:13:11Z",
      "author_association": "MEMBER",
      "body": "@vasild OK I got this branch passing all CI. ✅  I ran tests locally on Ubuntu and MacOS and also tested the feature in production on both platforms with `tor --SocksPort unix:/...` Everything is working! yay.\r\n\r\nThe real fix was here actually (diff below) Embarrassingly simple. This was a bug on Linux but NOT on macOS.\r\n\r\nI did not need the `SendComplete` changes or `Socks5` changes which is great because that keeps review simple and the branch focused. I will be happy to review those changes if you want to open a new PR for them (or I can open it if you like)\r\n\r\nThe only other new change to the branch besides this is adding a release note and explanation in help text for `-onion` and `-proxy`\r\n\r\n```diff\r\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\r\nindex a49f882130..044b0ba6c3 100644\r\n--- a/src/netbase.cpp\r\n+++ b/src/netbase.cpp\r\n@@ -638,7 +638,7 @@ std::unique_ptr<Sock> Proxy::Connect() const\r\n     addrun.sun_family = AF_UNIX;\r\n     // leave the last char in addrun.sun_path[] to be always '\\0'\r\n     memcpy(addrun.sun_path, path.c_str(), std::min(sizeof(addrun.sun_path) - 1, path.length()));\r\n-    socklen_t len = strlen(addrun.sun_path) + sizeof(addrun);\r\n+    socklen_t len = sizeof(addrun);\r\n \r\n     if(!ConnectToSocket(*sock, (struct sockaddr*)&addrun, len, path, /*manual_connection=*/true)) {\r\n         LogPrintf(\"Cannot connect to socket for %s\\n\", path);\r\n```",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1637129953",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 9831393425,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAJJ_yiR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9831393425",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-16T16:13:12Z"
    },
    {
      "event": "subscribed",
      "id": 9831393429,
      "node_id": "SE_lADOABII585iPWmwzwAAAAJJ_yiV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9831393429",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-16T16:13:12Z"
    },
    {
      "event": "reviewed",
      "id": 1537217507,
      "node_id": "PRR_kwDOABII585boBPj",
      "url": null,
      "actor": null,
      "commit_id": "f74da5eba9192e219567ab753c92b6cd2e66f73b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1537217507",
      "submitted_at": "2023-07-19T14:19:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9864732331,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJL-96r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9864732331",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T16:32:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T16:45:29Z",
      "updated_at": "2023-08-08T16:45:29Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Allow whitelisting outgoing connections",
          "body": "Revives #17167. It allows whitelisting outgoing connections.\r\n\r\nI previously revived it with #26441, however, some reviewers told me it's better to keep them splitted to facilitate reviews and probably having this one merged first since we need it to improve functional tests. \r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2023-10-24T16:15:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T18:55:27Z",
      "updated_at": "2023-08-17T18:55:27Z",
      "source": {
        "issue": {
          "id": 879275352,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjMzMDA2NDM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
          "number": 21878,
          "state": "closed",
          "state_reason": null,
          "title": "Make all networking code mockable",
          "body": "_This is a roadmap PR. It can be merged, but it can also be split into separate PRs and to get proper thorough review it is split._\r\n\r\nAdd wrapper methods to the syscalls `accept()`, `setsockopt()`, `getsockname()`, `bind()`, `listen()`  in the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class (e.g. `Sock::Accept()`). Those methods can be overriden (mocked) by unit tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/util/net.h#L75)) and by fuzz tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/fuzz/util.h#L561)).\r\n\r\nChange everybody to use [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) instead of [`SOCKET`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/compat.h#L41).\r\n\r\nMove the functionality of [`CConnman::SocketEvents()`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/net.cpp#L1334) to a mockable method of the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class.\r\n\r\n### Already merged pieces of this PR\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21943\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23601\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21879\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23604\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24357\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24356\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25428\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25426\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24378\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25421\r\n* [x] https://github.com/bitcoin/bitcoin/pull/26312\r\n\r\n### Current pieces of this for review\r\n\r\n* [ ] https://github.com/bitcoin/bitcoin/pull/28584",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 53,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21878",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21878.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21878.patch"
          },
          "closed_at": "2023-10-04T11:34:17Z",
          "created_at": "2021-05-07T16:04:35Z",
          "updated_at": "2023-10-04T11:35:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "review_requested",
      "id": 10425828665,
      "node_id": "RRE_lADOABII585iPWmwzwAAAAJtbYU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425828665",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:09:39Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10425829010,
      "node_id": "RRE_lADOABII585iPWmwzwAAAAJtbYaS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425829010",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:09:41Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 10539654185,
      "node_id": "LE_lADOABII585iPWmwzwAAAAJ0Nlwp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10539654185",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T14:56:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-13T14:35:51Z",
      "updated_at": "2023-10-13T14:35:51Z",
      "source": {
        "issue": {
          "id": 1942083878,
          "node_id": "PR_kwDOABII585cvxgi",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28649",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28649/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28649/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28649/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28649",
          "number": 28649,
          "state": "open",
          "state_reason": null,
          "title": "Do the SOCKS5 handshake reliably",
          "body": "The `Socks5()` function which does the SOCKS5 handshake with the SOCKS5 proxy sends bytes to the socket without retrying partial writes.\r\n\r\n`send(2)` may write only part of the provided data and return. In this case the caller is responsible for retrying the operation with the remaining data. Change `Socks5()` to do that. There is already a method `Sock::SendComplete()` which does exactly that, so use it in `Socks5()`.\r\n\r\nA minor complication for this PR is that `Sock::SendComplete()` takes `std::string` argument whereas `Socks5()` has `std::vector<uint8_t>`. Thus the necessity for the first commit. It is possible to do also in other ways - convert the data in `Socks5()` to `std::string` or have just one `Sock::SendComplete()` that takes `void*` and change the callers to pass `str.data(), str.size()` or `vec.data(), vec.size()`.\r\n\r\nThis came up while testing https://github.com/bitcoin/bitcoin/pull/27375.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28649",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28649",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28649.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28649.patch"
          },
          "created_at": "2023-10-13T14:35:50Z",
          "updated_at": "2023-10-20T12:09:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1676409183,
      "node_id": "PRR_kwDOABII585j6_lf",
      "url": null,
      "actor": null,
      "commit_id": "d8f993b77d2f0bad0e7a5659885ffbbd9f75dbec",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK d8f993b77d2f0bad0e7a5659885ffbbd9f75dbec (needs rebase)\r\n\r\nI tested this and it works. Got one unexpected failure to connect (it stalled for more than a minute after the first 4 lines):\r\n\r\n```\r\n2023-10-13T13:36:50Z [net:debug] trying connection <strip>.onion:8333 lastseen=0.0hrs\r\n2023-10-13T13:36:50Z [proxy:debug] Using proxy: unix:/var/run/tor/socks to connect to <strip>.onion:8333\r\n2023-10-13T13:36:50Z [net] SOCKS5 connecting <strip>.onion\r\n2023-10-13T13:36:50Z [proxy] SOCKS5 sending proxy authentication 0:0\r\n2023-10-13T13:38:11Z [net:debug] trying connection <strip>.onion:8333 lastseen=0.0hrs\r\n2023-10-13T13:38:11Z [proxy:debug] Using proxy: unix:/var/run/tor/socks to connect to <strip>.onion:8333\r\n2023-10-13T13:38:11Z [net] SOCKS5 connecting <strip>.onion\r\n2023-10-13T13:38:11Z [proxy] SOCKS5 sending proxy authentication 1:1\r\n2023-10-13T13:38:11Z [net] SOCKS5 connected <strip>.onion\r\n2023-10-13T13:38:11Z [net] Added connection to <strip>.onion:8333 peer=0\r\n2023-10-13T13:38:11Z [net] sending version (103 bytes) peer=0\r\n```\r\nIt could be some intermediate problem from the Tor network. The address it managed to connect later is the same.\r\n\r\nI have submitted the [discussed](https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1263941686) `Sock5()` improvement here: https://github.com/bitcoin/bitcoin/pull/28649",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1676409183",
      "submitted_at": "2023-10-13T14:44:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10666284663,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJ7wpZ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10666284663",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T14:29:47Z"
    },
    {
      "event": "commented",
      "id": 1764620194,
      "node_id": "IC_kwDOABII585pLfei",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1764620194",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T14:36:06Z",
      "updated_at": "2023-10-16T14:36:06Z",
      "author_association": "MEMBER",
      "body": "@vasild thanks again for your review! Nits addressed and rebased on master. I will help you review https://github.com/bitcoin/bitcoin/pull/28649",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1764620194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 10666369341,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAJ7w-E9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10666369341",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T14:36:06Z"
    },
    {
      "event": "subscribed",
      "id": 10666369416,
      "node_id": "SE_lADOABII585iPWmwzwAAAAJ7w-GI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10666369416",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T14:36:07Z"
    },
    {
      "event": "unlabeled",
      "id": 10667806608,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAJ72c-Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10667806608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T16:18:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1681696428,
      "node_id": "PRR_kwDOABII585kPKas",
      "url": null,
      "actor": null,
      "commit_id": "e60df927bffa844d08fa908128b10303b352cfc5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e60df927bffa844d08fa908128b10303b352cfc5",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1681696428",
      "submitted_at": "2023-10-17T08:26:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "reviewed",
      "id": 1681893468,
      "node_id": "PRR_kwDOABII585kP6hc",
      "url": null,
      "actor": null,
      "commit_id": "e60df927bffa844d08fa908128b10303b352cfc5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e60df927bffa844d08fa908128b10303b352cfc5\r\n\r\nReviewed the changes since last time, and tested both options again pretty thoroughly. Left a few nits which don't need to be addressed unless re-touching.\r\n\r\nI wonder if we should update `doc/tor.md` in a followup? We currently describe options needed for `ControlPort` in `torrc`, and could add the directive for unix sockets (and explain permissions needed to access the socket, or include the `WorldWritable` arg):\r\n\r\n```\r\nSocksPort /run/tor/socks\r\n# or\r\nSocksPort /run/tor/socks WorldWritable\r\n```\r\n\r\n...along with benefits/differences of using unix sockets for onion/proxy too? (easier access control to socket via filesystem vs network namespace, marginal speed gain,  etc.) Other reasons discussed in https://riseup.net/en/security/network-security/tor/onionservices-best-practices#protecting-your-services",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1681893468",
      "submitted_at": "2023-10-17T11:02:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "reviewed",
      "id": 1687899757,
      "node_id": "PRR_kwDOABII585km05t",
      "url": null,
      "actor": null,
      "commit_id": "e60df927bffa844d08fa908128b10303b352cfc5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1687899757",
      "submitted_at": "2023-10-19T14:27:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10715113271,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAJ-q6c3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715113271",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T17:31:30Z"
    },
    {
      "event": "labeled",
      "id": 10715659736,
      "node_id": "LE_lADOABII585iPWmwzwAAAAJ-s_3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715659736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:31:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1692266405,
      "node_id": "PRR_kwDOABII585k3e-l",
      "url": null,
      "actor": null,
      "commit_id": "b46e24ccc19d8a7dc40d0b5e993f245ede3c7086",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK b46e24ccc19d8a7dc40d0b5e993f245ede3c7086 (needs rebase)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#pullrequestreview-1692266405",
      "submitted_at": "2023-10-23T11:05:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
    },
    {
      "event": "review_requested",
      "id": 10739224975,
      "node_id": "RRE_lADOABII585iPWmwzwAAAAKAG5GP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10739224975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T11:05:44Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyZTc3ZjMxMTY5YWE4YjJhNTFhMDhkNzQyNGIxZWYxZjU3NDE4NTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2e77f31169aa8b2a51a08d7424b1ef1f5741853",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e77f31169aa8b2a51a08d7424b1ef1f5741853",
      "tree": {
        "sha": "aaccc5cb2349f018689b87793a5d67fee8955372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaccc5cb2349f018689b87793a5d67fee8955372"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aaccc5cb2349f018689b87793a5d67fee8955372\nparent 004367dba8a3e8520b871f27945a0dad7820bb3a\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681407068 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698157344 -0400\n\nconfigure: test for unix domain sockets\n\nCopied from https://github.com/bitcoin/bitcoin/pull/9979\n\nCo-authored-by: laanwj <126646+laanwj@users.noreply.github.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU30yAACgkQ5+KYS2KJ\nyTpxCBAAtSGzCR3oHo6l9yQoJ68mpdN+wK9HCXyVDwSIwwGRAxxz34EToSNkI3ZB\n0SHm+1ZfyURztCdDStc3+X82XQJGeDLPBVq3m2CFpoUaTkW0h6SdMtw8WeA/UAs3\n+a2plE3Azrg78VFsmnPSnD97Q/12W4roKPLMNMLLpzyDhI0BNr28vejuJOvkcZ9f\nR9qCdN+IGnkIZHld1q7MjDrXpo0onCDbRIHfPqc9ArqPb5nR+J0G4fCSeSETCvDI\nmpth8VPzLaBi8zEO/cjf7DZRlxCzxNTqdTDmqJuxiKviKF0xQQl/pMUk/NhDIg4O\nYNrAYmL5GUfewt/8B7z10YTvwFZPGMkb/GsUqDujdjFerBirvvLzYOhumbiy9R8+\n8klQ/n+TcDO4HZSXnyfxnToKlVLdFMXXALU34fcuAh41vpO1QyvnZMhg5Y5HqWuW\n4Ld2ZnatbSVk2/XIF6HTN3e3KFdeznrQAospRabdv5mGtLWxu4OU+lyEQ1/FeyDW\nnASi7LSt4/1g/2UoponWP9APloteox7JzM/Y9Fj8i0a3x7BoO6JUJFOJMZYSzoxg\nWFimAtv4fqMS1zYGoyyZH4w/kL1jIjxcEBYxwBGkJVJrW+zYxDJ0InSpWUH0XiSL\nwTCS34z0/xLcTfjmdM6aX1mLS7kysw3i6XdOooheGdtYupmpjhk=\n=lhP3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/004367dba8a3e8520b871f27945a0dad7820bb3a",
          "sha": "004367dba8a3e8520b871f27945a0dad7820bb3a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/004367dba8a3e8520b871f27945a0dad7820bb3a"
        }
      ],
      "message": "configure: test for unix domain sockets\n\nCopied from https://github.com/bitcoin/bitcoin/pull/9979\n\nCo-authored-by: laanwj <126646+laanwj@users.noreply.github.com>",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T14:22:24Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-13T17:31:08Z"
      },
      "sha": "b2e77f31169aa8b2a51a08d7424b1ef1f5741853"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10757375435,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAKBMIXL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10757375435",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T17:45:28Z"
    },
    {
      "event": "commented",
      "id": 1777728411,
      "node_id": "IC_kwDOABII585p9fub",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1777728411",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T17:46:15Z",
      "updated_at": "2023-10-24T17:46:15Z",
      "author_association": "MEMBER",
      "body": "Thanks again @vasild rebased on master - I see some new I2P tests in there now! Had to update those with the changes to `CreateSock()`",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#issuecomment-1777728411",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27375"
    },
    {
      "event": "mentioned",
      "id": 10757383462,
      "node_id": "MEE_lADOABII585iPWmwzwAAAAKBMKUm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10757383462",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T17:46:15Z"
    },
    {
      "event": "subscribed",
      "id": 10757383478,
      "node_id": "SE_lADOABII585iPWmwzwAAAAKBMKU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10757383478",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T17:46:15Z"
    },
    {
      "event": "unlabeled",
      "id": 10757842739,
      "node_id": "UNLE_lADOABII585iPWmwzwAAAAKBN6cz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10757842739",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T18:27:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiNzU3YWFhYjRlN2NlMjUzZTQ2OTliMGM1ZmU1MTM1YmMzNmE2ZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6",
      "tree": {
        "sha": "d361dc3a14be2e9ae5026587c99e13669d5e769f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d361dc3a14be2e9ae5026587c99e13669d5e769f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d361dc3a14be2e9ae5026587c99e13669d5e769f\nparent b2e77f31169aa8b2a51a08d7424b1ef1f5741853\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685118403 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172183 -0400\n\nnetbase: refactor CreateSock() to accept sa_family_t\n\nAlso implement CService::GetSAFamily() to provide sa_family_t\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRoACgkQ5+KYS2KJ\nyTqOjxAAzKjbtzw+urqxr419kYCo89R5opjLGMlp7dwoab76SZwH/1UwDbjkGctW\noDALMx/TYCMqsGyXGf3dtH1ZoBJ0DIxpTucw+5fbxDrzAvoVaZK1F1VZIdr49Y1m\n2tHUW76yzd27aHTxdvxfN3bcymu1LQJL/6CP7i0yeewcXtaDRbknPNz2n4NJrSTR\nvRwLkxLwOvTIJ745jxnmE17MoQ2Raajwo1xxq7i1izZzrgF7JOqBcqLTjzDH5k69\nDM4XJsdIWT0/AsnX6toErkUVuFA1mWDpSGLjC7f8jMxRMVitBZUTaIey8QSEG26b\ngQYDmPZk6MdHWAAZqylM0teC9WEDURx+T8xQg58B82N/6VsOhdLleM1HFU4yvxY+\nKWY4plIZn2u/EkYSE9ACcXo6o1tfZ44w6wB7ThyAYpvFXY9cYc+6MTc6vAL2epnh\nBC/w73Zd7GBYGXRNoNltVRgaUVGGYQVksoRdTg+ws2iuTd3B6ncOIeH9OkxuH8ji\nUT/o8o3rIgqlQUKtNB4GIaWVLYZDZE0OCmGveFL7l/rmKn7XSQjQHTDkSz4Z86f5\nxGw5B1u1vH5s2D2l+MEm/g45s4QSzdwXE03x9d5DSngbWcTGfN00LhuwKKSdjBz4\ngdhQGXjWCeZ+kzFtw2OUnUZ+esCmwChQMU1klQ5XsUTqew9Il2w=\n=tXwb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2e77f31169aa8b2a51a08d7424b1ef1f5741853",
          "sha": "b2e77f31169aa8b2a51a08d7424b1ef1f5741853",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e77f31169aa8b2a51a08d7424b1ef1f5741853"
        }
      ],
      "message": "netbase: refactor CreateSock() to accept sa_family_t\n\nAlso implement CService::GetSAFamily() to provide sa_family_t",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:43Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-26T16:26:43Z"
      },
      "sha": "6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlZDllNDNiOTdhNjBlY2M5ZjQyOTNkZDZmY2Y1ZTljZmEyOGI2YWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa",
      "tree": {
        "sha": "e6b60b610b137e04491a27925fb93bfe0d6ac43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6b60b610b137e04491a27925fb93bfe0d6ac43a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e6b60b610b137e04491a27925fb93bfe0d6ac43a\nparent 6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685124328 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\nnetbase: allow CreateSock() to create UNIX sockets if supported\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTpgxA/+NXE7WZ+ZdUpWcLd4eGLA47u2x3GiZgTplecus2w9hspwHDKEj6ba4AfG\nok165wfDIk8DMqxcVdJvB2GMUlEj2O4e+qvxOvrQ/pM4+wf654zH8TLwKSCZKH37\nQB7Zm9ieWzpMfhrA50H5+PYkEsuzoFKORjjfO8Ib3pr4EKm8ZNBEHJtI789DwJId\nbe9Q1x03c4Jl+28+j5YGBCiFjjlqFCZHhYT2JZ49rXYtVbxeWeX8WxgYkHkcrjUQ\nsPGV+u+CtGN7ZdRc15SHKocL+ziRaYL3rMcEeFdBARg2/lwWN8eNda6sJNniQqCd\n9j+NtZ2QvYseefjrq5CpijWa64EM+xlXo9tEopPlr3lmzyEDiWmx7DuQsiDlXtdI\nM+i139r6KA2jbSjsT1lGds2hdaWh/WFnNrLchXsppiF1AmQyvezI5HUW1dJkUm94\ndfaKQp4kaBzaxkHvIXJtdlKdfP+QFrrz9weytxXCHynoOEX6D/KlFpbNTJ4D3Yfm\nXkZnyhOI6vbTMiy1WaZ2WWVB6n3uqUQLjd0TKE6utej3ddUykUQGY8E2YytMvKa7\nn6ThLSMElEy1TL5ghWrotJ43hYeBNpB57L/kJY468d/hlhtuGcz4QpYbEvn9ui69\nzYr9QlC12pFW3w8GJBo0AsVt2VD3afIPyR8csfKO3QpQRwJ4V1w=\n=C+Mh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6",
          "sha": "6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6b757aaab4e7ce253e4699b0c5fe5135bc36a6d6"
        }
      ],
      "message": "netbase: allow CreateSock() to create UNIX sockets if supported",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-26T18:05:28Z"
      },
      "sha": "ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2MmY5MzYxMDNkZTJlNjllNjBhODIwOTMyMDdkYjFmYWJiZDMwZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c62f936103de2e69e60a82093207db1fabbd30e8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c62f936103de2e69e60a82093207db1fabbd30e8",
      "tree": {
        "sha": "57c3e4d9419f187100eaf2e6fb2a1e55fd13f77c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57c3e4d9419f187100eaf2e6fb2a1e55fd13f77c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 57c3e4d9419f187100eaf2e6fb2a1e55fd13f77c\nparent ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1689178732 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\nnet: move CreateSock() calls from ConnectNode() to netbase methods\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTqZYA/+LFBoOA5Qk0jhNhJxNR5KoS0/l/dH7/bEEZsAzOjdYV7ISMugKwdMddE8\nQf5FZe9oUe4PBLK3lN3+3jfcW5MiQKq5OrU9siqeXS5osGFg5mcr+DYINecZyZSM\nJ/TKCB7ZCcdTvUr+YBghKOUB9z84ccz705edXCPbNdORWA/2OHGSZoo1uCvFa50S\nTkJ7bws+GPWCCvbG+ym2XXCjkA7KobuDnJa+GpNQRaAiNo/mg/TxG00KSLWAN1R3\nnkB6GOzAH25oBPK3hY0xCSIqMt6awJuTwclfT8eYt5aDFNu5w44oB77l/F9eHlVf\nDZnHYO8X6ilT2guHXFLH/81KdJK/fMENr4GLExAX9wbhpFBDxITVqeYHtPqr2xoF\nzqhRFDAb95huf0FqP910ZEoQDhTp1L3nk8MA/MBUpGNBPtasO0TF1MPFl2AtcNxE\nDH53X9mQ1i0a8+AiHnQpzXw2LzxBmEI8ROfI9Oh77lR0Tra7czc52euwWbEkPIFF\nN3PnLLmfY/izgIpnkFG9eT67MsBhQDVcYPA/zf6n64vnPLbYReqNIV6jXFWuJPnL\nOz+FS5fB2JCM+RQ0bo+UmtXTU0rnjGrJ29GNqPQn0ORw+nj+dZ51JMyaOHHrCthc\n2Cj1Vi2mWaN4ZZqb12YMMcMrHl6eAqpMBqK7lTlut0Xsi1dfBak=\n=Dsmi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa",
          "sha": "ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ced9e43b97a60ecc9f4293dd6fcf5e9cfa28b6aa"
        }
      ],
      "message": "net: move CreateSock() calls from ConnectNode() to netbase methods",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-07-12T16:18:52Z"
      },
      "sha": "c62f936103de2e69e60a82093207db1fabbd30e8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyZTQxNDZlMjc4ZjljMWIwZmI1OWUzZTJkYWJjNjJhZmZjN2VkNjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61",
      "tree": {
        "sha": "c85439052460cdc0aca424f7511b5096bb971d56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c85439052460cdc0aca424f7511b5096bb971d56"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c85439052460cdc0aca424f7511b5096bb971d56\nparent c62f936103de2e69e60a82093207db1fabbd30e8\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685125303 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\nnetbase: extend Proxy class to wrap UNIX socket as well as TCP\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTrfRRAAx+6oUqUeuT9I/6Lv0QjVmk5aVMdOFlTyEwrkknSvdZR5AIVjOTubgBra\nSrf2a6KV+AjNSNL37KLhg3buOYAFFIdZvK4wggTUvPvchuRfwN/T06LkDXvjxCZX\nvDyHYmYBEoYdgHLBzI0LGSEEJy5aBwmQAQuy4pWrB23+X3HaZJQmlhRqreg8d2i0\nrDk2SRSSQQDfQNRJJiwUpKtwhcUl2WvgHJACGuMk2tcqywEJ9obwxLBxMLt2Z2x2\n+ysOOVBJq8C5p4BWKpe8Bo4aZ3xfh7aUtLLZvNmo3m7K8x1oWZLdllqstHyrnL+u\n+Y5JlR+67mvA3WwSn3dGl84c3iKD2jU63/D37auZkSh5kQ69l0Iab+NREdexdweo\nGDR8xKe8yO4haZOdr00LWM9thLdaY8Ieauvcf3JOG7JX838YihR7Kf5GDybmy7s5\nSuKMNE5bFU4QcHMaE426aagi2w2Uxy5v4tB9pihlDQpC5Zaj01DdiaC67aqpbp23\nfcSW22ToXIK9vK9/fa/KgpUXbCZZEGGXYRdYQw1eLB3Sua/Ia2AV3eIfSNLahb8y\nsLvkOkrdHrUuuS7LeJzmh9f4e8VrX6yBPscC8T+x8GzuKgMbz5ZNB1vnm84BjdFX\naz0LZUXe7nHIhzaV4ArgHyXz3suv9GtnpDQd0WIqMek413C9/Ds=\n=jlsT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c62f936103de2e69e60a82093207db1fabbd30e8",
          "sha": "c62f936103de2e69e60a82093207db1fabbd30e8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c62f936103de2e69e60a82093207db1fabbd30e8"
        }
      ],
      "message": "netbase: extend Proxy class to wrap UNIX socket as well as TCP",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-26T18:21:43Z"
      },
      "sha": "f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiOTRiZmI0NTNmM2Y0MjljZGZmMjVmNzQ1OWY0MGMyMzAwYzRkYTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b94bfb453f3f429cdff25f7459f40c2300c4da9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6b94bfb453f3f429cdff25f7459f40c2300c4da9",
      "tree": {
        "sha": "4d1afd9ae08706c25658d479678315ba3c017b6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d1afd9ae08706c25658d479678315ba3c017b6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d1afd9ae08706c25658d479678315ba3c017b6c\nparent f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685979817 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\nproxy: rename randomize_credentials to m_randomize_credentials\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTqGHA/9E0FLmVQsCKFs6wFzJdyieKkcYwnlTVU4v/an/PI4JhFIy6GYHsOV+Yeq\nPH1CEC1DIkFi0RvCBWS3yQ8bkw8/dNUhazhf1RGtD1Z69ZaG1E43OjdewkMMWwMy\n/rkJa5eB2JczYvhO0eYChiKNa4JizMgBxTLPN0JLXKWFrvfKrHIniO+A3Hfss710\nCp2SbV7SRjwfUIXRxEOIS01gmMe4GgexjV6XjP4SmL+f7iHAtTyA6p8dlf9oPA1u\nfPpK1AnQX0FTcmz/qkzIdsz/aXpAH5fDVhtoyjrMUXmwai7+fmpz8rbnFIdo+foX\nN05ETYsmUwM/m3AHgZYFW4j83pIwQQJtOMdwXBiT33cFDfX1K8uTWlEfACYMxsOE\nm2YQ1wdL8M3iQ3nU1CG5jWDnjauXU+noQNPW1JDIB32nhMGKt0xlh28LPwEs/LrU\n3HNxD7SKtKmUVaKblBOypYG1KxOOxHkWvTUlKt8Ov9Fgw+5kUUU0fGFCgDUCBJKg\nd+zBcsy3e18dJmbHb7FsU0y0bPIMX5mEwgtLJ36Lh/C44fF4ZgtkNqV0UDt7T6MH\n63nSQAHdDUDZxhHuAKTXj/Du/tgO3HWUkhN7i0mCdhdHyWlUvV5LSi/l+FhTIsYg\npkBFPg2SHcKLNPGyT3V8JXWQfvDBp3Z0iatsoSuWvE+zyupo8zY=\n=gGn6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61",
          "sha": "f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f2e4146e278f9c1b0fb59e3e2dabc62affc7ed61"
        }
      ],
      "message": "proxy: rename randomize_credentials to m_randomize_credentials",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-05T15:43:37Z"
      },
      "sha": "6b94bfb453f3f429cdff25f7459f40c2300c4da9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdiYzJmZmVlMGVkZmFlMmNkNzI3OWNlMDJkNWRjMWViNDI1YjYzY2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce",
      "tree": {
        "sha": "2c130d86ff64396f9ea8babbc01b98ff241eeed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c130d86ff64396f9ea8babbc01b98ff241eeed0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2c130d86ff64396f9ea8babbc01b98ff241eeed0\nparent 6b94bfb453f3f429cdff25f7459f40c2300c4da9\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1689192605 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\nnet: split ConnectToSocket() from ConnectDirectly() for unix sockets\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTr5fw//UeWplRBHM35/EJLIs/zZF0VSrXxPVGjqqe027+J1CDUwKMkJoVSiWfzV\ngbPNJIKCfkQ+eC/K+j3Wwjhv8dd+mw18EOk8IL4vSgp9aatrarNFJk8zXQs1hQvP\n4t1aUiqeOKMZOZ0TuxSIW5fTf7BqSRmCFHmjRuaTJyNKINAXz03lxV/PZMPY6EHg\nHo8sglKTdUUvVfOx2RRaF814NFy3jjRfCazkuuI+EsuGLcZlkh6tt2aLCBKe8PMI\nszHY+zh8QKDfXvPcNg7irEYOxLS9CR6pps6Ov3NSQJ22h3dc9jzcPO63EGAkIGD1\ngerxEJNHKbiozS4gPV+pY6zXaUenvNyLYBWu0wE/Fsjo4GWVrW8xUT/HQ7YTyItz\nUhvUchM1kPdJe8bnKHRajKObsKdmUZIYLpR+qTHSt1UHGtE59F5jd66KUg/Iy3dM\nVIVgkCcBUh/3Oa9J419snGlOAzknFh9N1H0nt6t29NmeHE4u/2N21VzPRsVoOKad\nzIsPesdrJkLTv923drI92GkLL2ZJQK6K1o2TU1haZh8Rja1edAzLxcL4uG95ypoe\n+1esh46INPHJGicElrhr7u++DKSQB9f3OevZQyNpmE8HEkybp9fCQGyHsuawC2jM\noJnexr5E/MTtUaS7K5rxnYmX3EPH1LEpuJJ8A2ZAObRIVH8H1Jw=\n=Xs8A\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b94bfb453f3f429cdff25f7459f40c2300c4da9",
          "sha": "6b94bfb453f3f429cdff25f7459f40c2300c4da9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6b94bfb453f3f429cdff25f7459f40c2300c4da9"
        }
      ],
      "message": "net: split ConnectToSocket() from ConnectDirectly() for unix sockets",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-07-12T20:10:05Z"
      },
      "sha": "7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjOTIzMzIxYzcwYzI2YzQ5MjhlMmYwYTQ3YTUxZWRhZTFhNjI0ODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c923321c70c26c4928e2f0a47a51edae1a62489",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c923321c70c26c4928e2f0a47a51edae1a62489",
      "tree": {
        "sha": "3991f2431ce6335596c4e3b1b9f0b966b1136546",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3991f2431ce6335596c4e3b1b9f0b966b1136546"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3991f2431ce6335596c4e3b1b9f0b966b1136546\nparent 7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1689266442 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\ni2p: construct Session with Proxy instead of CService\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTppOhAAp8XR2al2+ogSJjve6fi/2shW2lizWE/PKFxGgtLM56u6YZMROKQ1mtb6\nI+msVdSMJks7b3jPO5NSti6pGEKqLbTinUS+05DoPkWcnuYS+EtW3zLXN0++zwFS\nR049fcu5A+lWVlw8eagEct5bjQhdB3iKTgOI9S5E9fZ2tIz63OAu3mHMWCFKNLWd\ncIPj5RkpG8ZYt5345DnjCS/nAlrS1dhnRSSuLkw1/swFuT09qOldeTryPTpRju3e\nkQWH9xpOl5t3ifCzloDvXtUuawvuEjaOblK5LtXkU+VtkaqVC5tuk4zB5y+biKKM\nRQPQbiLqWBEPSmu0M4x4ZC271sHqaSq95dquQfe5bQ0TtXcoMVq1ByMUGGDJLkf2\nHoDbZ0NArGIRsbLzjEDdCC0sVvFuORQbZ6hQG8Y+CyWsasLGDtNIju7RypLN+eJD\n7g80x9k6/ZPCrnr/xBMM/nuEBVHv7WPDQrFBxjHOetPII8BIGU9JJmLePcLT9PnJ\nSuoMq2gtGSepZh/E/etuwIx+hA6n51xWy3g4Nn50ODyt5JmphyKnKe9WMQZXTTs9\nhPbXqp0EXWWzenFLnOO3d3bWnRZ56jM3ycDxL2jEvF3pDECs7/ZRhoyZ1EsmFIMi\nHrLt4Fy2Tj2C0VVD7E93ZrEZ1OPD7ukQ5YWUJ0HZaRGbao4CC9M=\n=sPB5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce",
          "sha": "7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7bc2ffee0edfae2cd7279ce02d5dc1eb425b63ce"
        }
      ],
      "message": "i2p: construct Session with Proxy instead of CService",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-07-13T16:40:42Z"
      },
      "sha": "0c923321c70c26c4928e2f0a47a51edae1a62489"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyYjUzZTA5MmM3MTRiYWQzMWE4OTA3NDI2MjA5Yzc4N2YxNTE4OWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42b53e092c714bad31a8907426209c787f15189e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42b53e092c714bad31a8907426209c787f15189e",
      "tree": {
        "sha": "7a3b1dca93714c63cd2130e320769da512b5568c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a3b1dca93714c63cd2130e320769da512b5568c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7a3b1dca93714c63cd2130e320769da512b5568c\nparent 0c923321c70c26c4928e2f0a47a51edae1a62489\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1689273074 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\ngui: accomodate unix socket Proxy in updateDefaultProxyNets()\n\nThis will require a follow-up to add unix socket options to the GUI\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTqVGxAAwU/btqFsoUL4GiCRt8mU8sfBZf9ap69m1/cWuzi+tgzNSBmmxz0h5zJw\n6bGWxEc++bUaG6VljBK9HR0YN+HEMKaNHrSzE2qbjWlmSWuFrHyIKJHNCvD8+LCv\nxBVXdp0j5UDsszoq9BLuC3HXbPaUmYsNst5c53SQNWk/PVLgFeUP+pbRjH+KFfa8\nOasatCSE5bhQ/ZWU2JaFhnOHMxmYPL8wLAoH0Mx6yenBuYit5KLImQz7Jvhw7cKw\nr74IDfTauZL0C0P2DrYRw1PsEycdGdTo85aVqt9+uNN0ycvga2ORm8NjKx+t2nB9\ngCl6Dex+eRvogBk1EvyeBEFYaHg28KwtZzoYXlBh4eNTAUvF+Nd5gXDlj5yeYZzY\nwNjY/y4bGxJ/Duvn3lctDW9D5EcSoLAbOSDAiFtYjCciKjXs6fYtG1BEhcnk8ia9\nvJl22A0vasoy6lkD+1G1/96Iwg1qnfJ/7jlc4C1zDhNkCcMK9eZ4rSDKi7jlSJY0\nZn/58hyCSkwrx1uzfWnhf+EHTWlqdbdKNh4rqP2nOoisoX824OdfTexGh4zLB18t\nCs+dngCqk7veJNnifwuMg5y+qOuHRdR6gJhy/3u5FKfsjOAJmPTcxWl+nNBl5gJr\nh00PkGh9MjqVZQTbOGwobQr3YUJgOitkYcZ9oxGc9ra2FZunPX8=\n=plH7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c923321c70c26c4928e2f0a47a51edae1a62489",
          "sha": "0c923321c70c26c4928e2f0a47a51edae1a62489",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c923321c70c26c4928e2f0a47a51edae1a62489"
        }
      ],
      "message": "gui: accomodate unix socket Proxy in updateDefaultProxyNets()\n\nThis will require a follow-up to add unix socket options to the GUI",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-07-13T18:31:14Z"
      },
      "sha": "42b53e092c714bad31a8907426209c787f15189e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxMTY1NWU5ZDcwNThmNjMzNWQ0ZTBkODI3MGU4NDQ3OTI3YWVmOGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411655e9d7058f6335d4e0d8270e8447927aef8a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/411655e9d7058f6335d4e0d8270e8447927aef8a",
      "tree": {
        "sha": "e45cc7286e530ad29dfa7c1d8e528b32d864a61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e45cc7286e530ad29dfa7c1d8e528b32d864a61b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e45cc7286e530ad29dfa7c1d8e528b32d864a61b\nparent 42b53e092c714bad31a8907426209c787f15189e\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685125437 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\ninit: allow UNIX socket path for -proxy and -onion\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyToaVw/9E7yxP9c0JSNi8u9z5bLUlVislAwVT+QsiYZPN/UstqIPd4gXZd/6R5Wn\njxo+8egWWDY8WztfJDRBG0UGofCZy6GLa9fv1tK91GR21OKfZUNGSEsEIFrDLjlP\nHWm9biccaPEWS00k2atPU5tQ9eUett90Ge9Et1B6g96LbdJVMiNwCU/d096H4FvX\nER2vDkS/MWsdigKNEULoLJixInm2olIAB/i78H87vLSDBpGUDf3wnksM9FGXpDsI\nI61eVe+kw8HXYFLDHs5oe4qA6KYaeHL4x1TpchMv7MYTnvYxTuEd3PHDurgxrOT6\niEPLsBJlyf+1goJ1Zu8q/nnHR+qLcoMw2IDH0hTiIFUVntJmSSYFLQgocyDGsCQB\nPhVhzE/CyfiHPW342VCl14dNUjbFejB6SI4YPqp52JoCsj2akbijq4J06dnwDPd+\nwvpsAmW/XI+BHQ/c+pW3Edd0UADzHoNcYXQPeOSPFMC+clFDLU3ts9eGUHH/LTG3\nGTrsuSScdi9tWc+gyn2e+DqiQCGSf2+m7ESoyBFHkh8/qMl85Vch7ac28Jv6Fea1\nCD3Ky1ZZOTNkDUn6cUoMg4X61eZ/B1zSvLRvlKHat1hIUcn/5GwsKidT2nnyl7K4\ncjF9APD80bqd8cSKKYkSbb9uNn0xMDHFx/bDoKsgtwJ83slTmtE=\n=Yf3v\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42b53e092c714bad31a8907426209c787f15189e",
          "sha": "42b53e092c714bad31a8907426209c787f15189e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42b53e092c714bad31a8907426209c787f15189e"
        }
      ],
      "message": "init: allow UNIX socket path for -proxy and -onion",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-26T18:23:57Z"
      },
      "sha": "411655e9d7058f6335d4e0d8270e8447927aef8a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExMGFlZTJkNGQyOGU3NDk5OTIxOWEyM2ExZjczNTBiNWFkNjA3MmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/110aee2d4d28e74999219a23a1f7350b5ad6072f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/110aee2d4d28e74999219a23a1f7350b5ad6072f",
      "tree": {
        "sha": "75c518ad231b03e4f677499458e30715da1e5880",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75c518ad231b03e4f677499458e30715da1e5880"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 75c518ad231b03e4f677499458e30715da1e5880\nparent 411655e9d7058f6335d4e0d8270e8447927aef8a\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1685125467 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\ntest: cover UNIX sockets in feature_proxy.py\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTqugA//fGxxD1pc7HPkUvxUn2kzadSxofBS1QZqk1cLdL1pXyanmeRkbJ3lDWlg\nWTVplZV8WEdqAJtvzpQOGOSn6sBSiN508W3zgyJrJL5lhKbVFYkCzfg4L2V7T6Hx\nNzFtrwuYM5NM7Go8RPpKfwv1mvZRiTmiulNc1S+a3uQVnXNptsUbca4dVyFbBg5H\n7SBMACOQ0vtXj4gfegpoUNraN5DHNQRzlHjAsgvtG+UIaqN97kpfLw9NLAgk37B2\nw8BV+raETWpWus/h/9cGrLA/7X4ljFbZPe1AR1wPhTSVmU1bgY+Jkwcsm1RyHMGv\ndmtJjGgz9rCPWrOBQz/3m0Z1lpf0y+ZERyjhPmJB46dW6mDO13xIaX5YtUDX8BEV\nMJSfEwTMbxUG+aQse7sOMcGPqsk6ZxjOsebzFaCfL/3+zXs0GRhf00W49C9X1IUw\nzwn8jVw0dhIv0NhQa/S42ZwLJYtboxv9kJbyy5kUWPawP4q4KuEJ6+TYoQm1KK7x\nj7dSVtxHmZC2u20ljer5zzLOG0v6bWZPZwnRmrVmHnkgQaOpl1i4jBRvvcyw7vxc\nI1G1n+tTLSbcDMqYXCDZRlh1HdQFd/pvvNKYRXgQKQSe+pEuL5DHdNv1k57CDVuH\nPpqod8xAQIL0Veg6BSJ6PX0Vk6u7PzpIIPksR7j1jbFbxRInjUo=\n=GEhF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411655e9d7058f6335d4e0d8270e8447927aef8a",
          "sha": "411655e9d7058f6335d4e0d8270e8447927aef8a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/411655e9d7058f6335d4e0d8270e8447927aef8a"
        }
      ],
      "message": "test: cover UNIX sockets in feature_proxy.py",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-26T18:24:27Z"
      },
      "sha": "110aee2d4d28e74999219a23a1f7350b5ad6072f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2ZGEzODk3ZjM2NTQ3MTM5YjgzYWJkZTQ4NmJkZGJmNTBkYWI1NGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6da3897f36547139b83abde486bddbf50dab54e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6da3897f36547139b83abde486bddbf50dab54e",
      "tree": {
        "sha": "be7f33ca6d06b11c2380d0a5c3ff5018ca4dee5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be7f33ca6d06b11c2380d0a5c3ff5018ca4dee5a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree be7f33ca6d06b11c2380d0a5c3ff5018ca4dee5a\nparent 110aee2d4d28e74999219a23a1f7350b5ad6072f\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1689357555 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1698172187 -0400\n\ndoc: add release notes and help text for unix sockets\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmU4DRsACgkQ5+KYS2KJ\nyTphAA//efcBFJK9Yfl1TME9RptbFUpGMU+p5KvRBfRBxhowZbLuBbZethbhjhcY\nCBDulFh6Nyj+dzP2ud7ZeVS2evsc5ODJUDSzLUATlRDjj1CrtKqRZpOwqfW9XGrk\njxAeUaEGRguXvR86s6LyHH6JGEPCzMJuF4K3ahMlqHvXMs9AES7u3nDHCJ4BMj4k\nooft+lDJTDQYl/3QvHfznJaLp0zzXk5NSqk9W2PlJ0+Pqp6x3ZMgOwnlV3GP5gio\nxhGBXGxsHDdV6yLfyCznsckLf8UI7BzPQ5fILMUkM+3KWe0ea62mMp9Nwatv3JcO\nfG9lwhBdNS4K0viClSNpcX6xFcb3MRR4STHWwSDGuJmm1tXjNwVTHbSAR6kG+WPV\nspQTmUH683jzkGRBSaIfvZmfFKZX4I4pfFVGuNvRDdEDDdCBLOCI2rKwLz1VumV9\nHbzGMS+5Z93GkHUNa/kUOAHQWB6vYi1llQoISM0M0Kr4yR1UY5wqPGSc3baQmbtT\nKmQ5hQbZ36j3qhXyd15FkhrFTvAVjyrCZiEeOKpE6KBpiWE5nWs92bTkBNFtYfc4\n4v4zeH/xo0uhdsnnJ80rouB4ZXCQ96CFjC9UrWgFsFrBzT9HTgEY0VGaCWUQ6css\nq+4qn/H4b2n3va+Q1xgtllxr3pENY0EqrXVMolf5FSikHla4g4A=\n=Oihi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/110aee2d4d28e74999219a23a1f7350b5ad6072f",
          "sha": "110aee2d4d28e74999219a23a1f7350b5ad6072f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/110aee2d4d28e74999219a23a1f7350b5ad6072f"
        }
      ],
      "message": "doc: add release notes and help text for unix sockets",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-10-24T18:29:47Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-07-14T17:59:15Z"
      },
      "sha": "b6da3897f36547139b83abde486bddbf50dab54e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10757880677,
      "node_id": "HRFPE_lADOABII585iPWmwzwAAAAKBODtl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10757880677",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T18:30:34Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154121825",
      "pull_request_review_id": 1366408214,
      "id": 1154121825,
      "node_id": "PRRC_kwDOABII585EyoBh",
      "diff_hunk": "@@ -112,6 +112,7 @@ std::string GetNetworkName(enum Network net)\n     case NET_I2P: return \"i2p\";\n     case NET_CJDNS: return \"cjdns\";\n     case NET_INTERNAL: return \"internal\";\n+    case NET_UNIX: return \"unix_domain_socket\";",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I'd go for `unix` here (but only because it's shorter).",
      "created_at": "2023-03-31T07:36:46Z",
      "updated_at": "2023-03-31T09:01:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154121825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154121825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154147617",
      "pull_request_review_id": 1366408214,
      "id": 1154147617,
      "node_id": "PRRC_kwDOABII585EyuUh",
      "diff_hunk": "@@ -89,13 +90,22 @@ def setup_nodes(self):\n         else:\n             self.log.warning(\"Testing without local IPv6 support\")\n \n+        socket_path = os.path.join(self.options.tmpdir, \"socket_path\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 21,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This needs to be shorter (< 92 chars?). From `man 7 unix`:\r\n\r\n```\r\n   Pathname sockets\r\n       When binding a socket to a pathname, a few rules should be observed for maximum portability and ease of coding:\r\n\r\n       *  The pathname in sun_path should be null-terminated.\r\n\r\n       *  The length of the pathname, including the terminating null byte, should not exceed the size of sun_path.\r\n\r\n       *  The addrlen argument that describes the enclosing sockaddr_un structure should have a value of at least:\r\n\r\n              offsetof(struct sockaddr_un, sun_path)+strlen(addr.sun_path)+1\r\n\r\n          or, more simply, addrlen can be specified as sizeof(struct sockaddr_un).\r\n\r\n       There is some variation in how implementations handle UNIX domain socket addresses that do not follow the above rules.  For example, some (but not all) implementations append a null terminator if none is present in the supplied\r\n       sun_path.\r\n\r\n       When coding portable applications, keep in mind that some implementations have sun_path as short as 92 bytes.\r\n```\r\n\r\nIt probably makes most sense to check this early on in _init.cpp_?",
      "created_at": "2023-03-31T07:59:36Z",
      "updated_at": "2023-03-31T09:01:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154147617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154147617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154148265",
      "pull_request_review_id": 1366408214,
      "id": 1154148265,
      "node_id": "PRRC_kwDOABII585Eyuep",
      "diff_hunk": "@@ -89,13 +90,22 @@ def setup_nodes(self):\n         else:\n             self.log.warning(\"Testing without local IPv6 support\")\n \n+        socket_path = os.path.join(self.options.tmpdir, \"socket_path\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 21,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154147617,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On the test this is trying to use a path `/private/var/folders/v7/fs2b0v3s0lz1n57gj9y4xb5m0000gn/T/cirrus-ci-build/ci/scratch/test_runner/test_runner_₿_🏃_20230331_010828/feature_proxy_156`...",
      "created_at": "2023-03-31T08:00:15Z",
      "updated_at": "2023-03-31T09:01:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154148265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154148265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154156655",
      "pull_request_review_id": 1366408214,
      "id": 1154156655,
      "node_id": "PRRC_kwDOABII585Eywhv",
      "diff_hunk": "@@ -524,8 +524,10 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         } else if (use_proxy) {\n             sock = CreateSock(proxy.proxy);\n             if (!sock) {\n+                LogPrintLevel(BCLog::PROXY, BCLog::Level::Debug, \"Failed to create socket to proxy: %s\\n\", proxy.proxy.ToStringAddr());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if this should be a `Warning` or at least an `Info` level message?",
      "created_at": "2023-03-31T08:08:57Z",
      "updated_at": "2023-03-31T09:01:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154156655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154156655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154205583",
      "pull_request_review_id": 1366408214,
      "id": 1154205583,
      "node_id": "PRRC_kwDOABII585Ey8eP",
      "diff_hunk": "@@ -1283,7 +1283,10 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             std::string host_out;\n             uint16_t port_out{0};\n             if (!SplitHostPort(socket_addr, port_out, host_out)) {\n-                return InitError(InvalidPortErrMsg(port_option, socket_addr));\n+                // Allow unix domain sockets for proxy e.g. unix:/some/file/path\n+                if (port_option != \"-proxy\" || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Im curious why you didn't enable it for `-onion` here, as it seems a compartiviely small addtion:\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex c0a320136..53b6b2a4b 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1283,8 +1283,8 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n             std::string host_out;\r\n             uint16_t port_out{0};\r\n             if (!SplitHostPort(socket_addr, port_out, host_out)) {\r\n-                // Allow unix domain sockets for proxy e.g. unix:/some/file/path\r\n-                if (port_option != \"-proxy\" || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {\r\n+                // Allow unix domain sockets for -proxy and -onion e.g. unix:/some/file/path\r\n+                if ((port_option != \"-proxy\" || port_option != \"-onion\") || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {\r\n                     return InitError(InvalidPortErrMsg(port_option, socket_addr));\r\n                 }\r\n             }\r\n```",
      "created_at": "2023-03-31T08:48:07Z",
      "updated_at": "2023-03-31T09:01:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154205583",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154205583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154738130",
      "pull_request_review_id": 1367343663,
      "id": 1154738130,
      "node_id": "PRRC_kwDOABII585E0-fS",
      "diff_hunk": "@@ -1283,7 +1283,10 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             std::string host_out;\n             uint16_t port_out{0};\n             if (!SplitHostPort(socket_addr, port_out, host_out)) {\n-                return InitError(InvalidPortErrMsg(port_option, socket_addr));\n+                // Allow unix domain sockets for proxy e.g. unix:/some/file/path\n+                if (port_option != \"-proxy\" || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154205583,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To literally answer your question: I was not clear on what `-onion` actually does! Now I do, adding this in next update.",
      "created_at": "2023-03-31T17:41:21Z",
      "updated_at": "2023-03-31T18:47:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154738130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154738130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154739487",
      "pull_request_review_id": 1367343663,
      "id": 1154739487,
      "node_id": "PRRC_kwDOABII585E0-0f",
      "diff_hunk": "@@ -524,8 +524,10 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         } else if (use_proxy) {\n             sock = CreateSock(proxy.proxy);\n             if (!sock) {\n+                LogPrintLevel(BCLog::PROXY, BCLog::Level::Debug, \"Failed to create socket to proxy: %s\\n\", proxy.proxy.ToStringAddr());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154156655,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I only added this for my own debugging, we could even just take it out. There is also a \"proxy failed to initialize\" error message in `Socks5()` which will get thrown by `ConnectThroughProxy()` below.",
      "created_at": "2023-03-31T17:43:05Z",
      "updated_at": "2023-03-31T18:47:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154739487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154739487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154739870",
      "pull_request_review_id": 1367343663,
      "id": 1154739870,
      "node_id": "PRRC_kwDOABII585E0-6e",
      "diff_hunk": "@@ -112,6 +112,7 @@ std::string GetNetworkName(enum Network net)\n     case NET_I2P: return \"i2p\";\n     case NET_CJDNS: return \"cjdns\";\n     case NET_INTERNAL: return \"internal\";\n+    case NET_UNIX: return \"unix_domain_socket\";",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154121825,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "agreed, updated.",
      "created_at": "2023-03-31T17:43:37Z",
      "updated_at": "2023-03-31T18:47:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154739870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154739870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154783411",
      "pull_request_review_id": 1367343663,
      "id": 1154783411,
      "node_id": "PRRC_kwDOABII585E1Jiz",
      "diff_hunk": "@@ -89,13 +90,22 @@ def setup_nodes(self):\n         else:\n             self.log.warning(\"Testing without local IPv6 support\")\n \n+        socket_path = os.path.join(self.options.tmpdir, \"socket_path\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 21,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154147617,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah this one may be tricky to work around. Some of the CI temp dir paths are crazy long like that. I'm going to add an init check & test to throw on socket paths longer than 92 characters. For the sake of passing the tests, I'll try using a temp path that is in the parent of `test_runner_...` and we'll see if that is short enough to pass on the CI VMs.\r\n\r\n",
      "created_at": "2023-03-31T18:36:39Z",
      "updated_at": "2023-03-31T18:47:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1154783411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154783411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165103364",
      "pull_request_review_id": 1382786000,
      "id": 1165103364,
      "node_id": "PRRC_kwDOABII585FchEE",
      "diff_hunk": "@@ -524,8 +524,10 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         } else if (use_proxy) {\n             sock = CreateSock(proxy.proxy);\n             if (!sock) {\n+                LogPrintLevel(BCLog::PROXY, BCLog::Level::Debug, \"Failed to create socket to proxy: %s\\n\", proxy.proxy.ToStringAddr());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7785e4d1796f3deb746916e6fc89f00990fb28cd",
      "in_reply_to_id": 1154156655,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CreateSock()` already logs a detailed message if it returns `nullptr`. This `LogPrintLevel()` call here is redundant.",
      "created_at": "2023-04-13T07:16:48Z",
      "updated_at": "2023-04-13T15:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165103364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165103364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165186109",
      "pull_request_review_id": 1382786000,
      "id": 1165186109,
      "node_id": "PRRC_kwDOABII585Fc1Q9",
      "diff_hunk": "@@ -897,6 +919,17 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n         paddrin6->sin6_port = htons(port);\n         return true;\n     }\n+#if HAVE_SOCKADDR_UN\n+    if (IsUnix()) {\n+        if (*addrlen < (socklen_t)sizeof(struct sockaddr_un))\n+            return false;\n+        struct sockaddr_un* paddrun = (struct sockaddr_un*)paddr;\n+        paddrun->sun_family = AF_UNIX;\n+        strcpy(paddrun->sun_path, fs::PathToString(m_path).c_str());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is dangerous. Better check the size before copying (untested):\r\n\r\n```suggestion\r\n        const std::string path{fs::PathToString(m_path)};\r\n        if (sizeof(paddrun->sun_path) < path.length() + 1) {\r\n            return false;\r\n        }\r\n        memcpy(paddrun->sun_path, path.c_str(), path.length() + 1);\r\n```\r\n",
      "created_at": "2023-04-13T08:28:20Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165186109",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165186109"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165198178",
      "pull_request_review_id": 1382786000,
      "id": 1165198178,
      "node_id": "PRRC_kwDOABII585Fc4Ni",
      "diff_hunk": "@@ -897,6 +919,17 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n         paddrin6->sin6_port = htons(port);\n         return true;\n     }\n+#if HAVE_SOCKADDR_UN\n+    if (IsUnix()) {\n+        if (*addrlen < (socklen_t)sizeof(struct sockaddr_un))\n+            return false;\n+        struct sockaddr_un* paddrun = (struct sockaddr_un*)paddr;\n+        paddrun->sun_family = AF_UNIX;\n+        strcpy(paddrun->sun_path, fs::PathToString(m_path).c_str());\n+        *addrlen = strlen(paddrun->sun_path) + sizeof(paddrun);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This looks wrong as `paddrun` is a pointer (`sizeof(paddrun)` will be always 8 bytes on 64 bit computers). According to https://www.man7.org/linux/man-pages/man7/unix.7.html it should be:\r\n\r\n```cpp\r\noffsetof(struct sockaddr_un, sun_path)+strlen(addr.sun_path)+1\r\n```\r\n\r\nFreeBSD has this, defined in `sys/un.h`:\r\n\r\n```cpp\r\n#define SUN_LEN(su) \\\r\n        (sizeof(*(su)) - sizeof((su)->sun_path) + strlen((su)->sun_path))\r\n```\r\n\r\nand Linux has:\r\n\r\n```cpp\r\n/* Evaluate to actual length of the `sockaddr_un' structure.  */\r\n# define SUN_LEN(ptr) ((size_t) (((struct sockaddr_un *) 0)->sun_path)        \\\r\n                      + strlen ((ptr)->sun_path))\r\n```",
      "created_at": "2023-04-13T08:37:59Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165198178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165198178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 929,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165249878",
      "pull_request_review_id": 1382786000,
      "id": 1165249878,
      "node_id": "PRRC_kwDOABII585FdE1W",
      "diff_hunk": "@@ -219,6 +220,26 @@ bool Lookup(const std::string& name, CService& addr, uint16_t portDefault, bool\n     if (!ContainsNoNUL(name)) {\n         return false;\n     }\n+\n+    // unix domain socket\n+    if (name.find(ADDR_PREFIX_UNIX) == 0) {\n+        // split off \"unix:\" prefix\n+        std::string str{name.substr(ADDR_PREFIX_UNIX.length())};\n+\n+        // https://www.man7.org/linux/man-pages/man7/unix.7.html\n+        //   \"When coding portable applications, keep in mind that some\n+        //   implementations have sun_path as short as 92 bytes.\"\n+        if (str.size() > 92)\n+            return false;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Better check the actual `sun_path` on the system, and also `sun_path` is supposed to contain the terminating `'\\0'`:\r\n\r\n```suggestion\r\n        if (str.size() + 1 > sizeof(sockaddr_un::sun_path)) {\r\n            return false;\r\n        }\r\n```",
      "created_at": "2023-04-13T09:16:07Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165249878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165249878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 229,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165255786",
      "pull_request_review_id": 1382786000,
      "id": 1165255786,
      "node_id": "PRRC_kwDOABII585FdGRq",
      "diff_hunk": "@@ -219,6 +220,26 @@ bool Lookup(const std::string& name, CService& addr, uint16_t portDefault, bool\n     if (!ContainsNoNUL(name)) {\n         return false;\n     }\n+\n+    // unix domain socket\n+    if (name.find(ADDR_PREFIX_UNIX) == 0) {\n+        // split off \"unix:\" prefix\n+        std::string str{name.substr(ADDR_PREFIX_UNIX.length())};\n+\n+        // https://www.man7.org/linux/man-pages/man7/unix.7.html\n+        //   \"When coding portable applications, keep in mind that some\n+        //   implementations have sun_path as short as 92 bytes.\"\n+        if (str.size() > 92)\n+            return false;\n+\n+        fs::path path = fs::PathFromString(str);\n+        if (!fs::exists(path))\n+            return false;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style: from `doc/developer-notes.md`:\r\n\r\n  - If an `if` only has a single-statement `then`-clause, it can appear\r\n    on the same line as the `if`, without braces. In every other case,\r\n    braces are required, and the `then` and `else` clauses must appear\r\n    correctly indented on a new line.\r\n",
      "created_at": "2023-04-13T09:20:46Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165255786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165255786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 236,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 237,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165266423",
      "pull_request_review_id": 1382786000,
      "id": 1165266423,
      "node_id": "PRRC_kwDOABII585FdI33",
      "diff_hunk": "@@ -219,6 +220,26 @@ bool Lookup(const std::string& name, CService& addr, uint16_t portDefault, bool\n     if (!ContainsNoNUL(name)) {\n         return false;\n     }\n+\n+    // unix domain socket",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is a bit odd to support `unix:/path/to/socket` in `Lookup()` because there is nothing to lookup in that and it is not like the other inputs supported by `Lookup()` begin with the socket type, e.g. `ipv4://1.2.3.4`.",
      "created_at": "2023-04-13T09:29:34Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165266423",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165266423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165267691",
      "pull_request_review_id": 1382786000,
      "id": 1165267691,
      "node_id": "PRRC_kwDOABII585FdJLr",
      "diff_hunk": "@@ -391,7 +412,7 @@ bool Socks5(const std::string& strDest, uint16_t port, const ProxyCredentials* a\n         return false;\n     }\n     if (pchRet1[0] != SOCKSVersion::SOCKS5) {\n-        return error(\"Proxy failed to initialize\");\n+        return error(\"Proxy failed to initialize.\");",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unrelated change.",
      "created_at": "2023-04-13T09:30:38Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165267691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165267691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 394,
      "start_side": "LEFT",
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165281204",
      "pull_request_review_id": 1382786000,
      "id": 1165281204,
      "node_id": "PRRC_kwDOABII585FdMe0",
      "diff_hunk": "@@ -493,8 +514,10 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n \n     // Create a TCP socket in the address family of the specified service.\n-    SOCKET hSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n+    int protocol = address_family.IsUnix() ? 0 : IPPROTO_TCP;\n+    SOCKET hSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, protocol);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is odd to have `CreateSockTCP()` create a non-TCP socket.\r\n\r\nAlso, the code below sets `TCP_NODELAY` on the socket which does not apply to UNIX sockets.",
      "created_at": "2023-04-13T09:40:58Z",
      "updated_at": "2023-04-13T15:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165281204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165281204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 516,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165311055",
      "pull_request_review_id": 1382786000,
      "id": 1165311055,
      "node_id": "PRRC_kwDOABII585FdTxP",
      "diff_hunk": "@@ -60,14 +63,17 @@\n # Networks returned by RPC getnetworkinfo, defined in src/rpc/net.cpp::GetNetworksInfo()\n NETWORKS = frozenset({NET_IPV4, NET_IPV6, NET_ONION, NET_I2P, NET_CJDNS})\n \n+# Use the shortest temp path possible since socket paths have a 92-char limit\n+socket_path = os.path.join(tempfile.gettempdir(), \"sockpath\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 32,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is better to stay inside the individual test directory. This allows running multiple tests in parallel. With the above code multiple tests will collide on the common `/tmp/sockpath`.\r\n\r\n`/tmp/bitcoin_func_test_99opr6sq/socks5_proxy` is just 44 chars, should be below the limit on any platform, even if TMPDIR expands to something longer than `/tmp`.",
      "created_at": "2023-04-13T10:07:34Z",
      "updated_at": "2023-04-13T15:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165311055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165311055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165314489",
      "pull_request_review_id": 1382786000,
      "id": 1165314489,
      "node_id": "PRRC_kwDOABII585FdUm5",
      "diff_hunk": "@@ -383,6 +437,18 @@ def networks_dict(d):\n         msg = \"Error: Unknown network specified in -onlynet: 'abc'\"\n         self.nodes[1].assert_start_raises_init_error(expected_msg=msg)\n \n+        self.log.info(\"Test passing too-long unix path to -proxy raises init error\")\n+        self.nodes[1].extra_args = [f\"-proxy=unix:{'x' * 93}\"]\n+        if self.have_unix_sockets:\n+            msg = f\"Error: Invalid -proxy address or hostname: 'unix:{'x' * 93}'\"",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 134,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Given that the actual limit is platform-dependent, I would suggest to pass something really longer here, e.g. 1000 or 5000 chars.",
      "created_at": "2023-04-13T10:10:50Z",
      "updated_at": "2023-04-13T15:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165314489",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165314489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 440,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 443,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165330624",
      "pull_request_review_id": 1382786000,
      "id": 1165330624,
      "node_id": "PRRC_kwDOABII585FdYjA",
      "diff_hunk": "@@ -20,6 +20,10 @@\n #include <iterator>\n #include <tuple>\n \n+#if HAVE_SOCKADDR_UN\n+#include <sys/un.h>\n+#endif",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The include is introduced in the first commit and surrounded by `#if HAVE_SOCKADDR_UN` in the second commit. This means that the first commit is not self-contained (would not compile on some platforms). Better introduce the configure check first.",
      "created_at": "2023-04-13T10:26:47Z",
      "updated_at": "2023-04-13T15:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165330624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165330624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165338076",
      "pull_request_review_id": 1382786000,
      "id": 1165338076,
      "node_id": "PRRC_kwDOABII585FdaXc",
      "diff_hunk": "@@ -136,9 +143,16 @@ class CNetAddr\n      */\n     uint32_t m_scope_id{0};\n \n+    /**\n+     * Filesystem path for unix domain socket (NET_UNIX)\n+     */\n+    fs::path m_path;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 35,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this approach is chosen (to extend `CNetAddr` to support unix file addresses), then it would be better to store the path in the `m_addr` member instead of introducing a new one. `m_addr` is a vector of `uint8_t` - that is generic enough to store anything in it.\r\n\r\n`sizeof(CNetAddr)` on `master` is 32 and `sizeof(fs::path)` is 24 bytes, so `CNetAddr` would become almost twice as big.",
      "created_at": "2023-04-13T10:34:32Z",
      "updated_at": "2023-04-13T15:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165338076",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165338076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165801803",
      "pull_request_review_id": 1383845487,
      "id": 1165801803,
      "node_id": "PRRC_kwDOABII585FfLlL",
      "diff_hunk": "@@ -60,14 +63,17 @@\n # Networks returned by RPC getnetworkinfo, defined in src/rpc/net.cpp::GetNetworksInfo()\n NETWORKS = frozenset({NET_IPV4, NET_IPV6, NET_ONION, NET_I2P, NET_CJDNS})\n \n+# Use the shortest temp path possible since socket paths have a 92-char limit\n+socket_path = os.path.join(tempfile.gettempdir(), \"sockpath\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 32,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": 1165311055,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See this ci failure: https://cirrus-ci.com/task/5039125594636288?logs=ci#L2638-L2640\r\n\r\nThis is why I used a shorter path, sometimes TMPDIR is > 50 characters! You have a good point about getting max `sun_path` from the system though, maybe it will balance out\r\n\r\n```\r\nFile \"/private/var/folders/v7/fs2b0v3s0lz1n57gj9y4xb5m0000gn/T/cirrus-ci-build/ci/scratch/build/bitcoin-arm64-apple-darwin/test/functional/test_framework/socks5.py\", line 131, in __init__\r\nself.s.bind(conf.addr)\r\nOSError: AF_UNIX path too long\r\n```",
      "created_at": "2023-04-13T16:55:14Z",
      "updated_at": "2023-04-13T16:55:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1165801803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165801803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166002075",
      "pull_request_review_id": 1384170843,
      "id": 1166002075,
      "node_id": "PRRC_kwDOABII585Ff8eb",
      "diff_hunk": "@@ -136,9 +143,16 @@ class CNetAddr\n      */\n     uint32_t m_scope_id{0};\n \n+    /**\n+     * Filesystem path for unix domain socket (NET_UNIX)\n+     */\n+    fs::path m_path;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 35,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": 1165338076,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm a bit intimidated by the syntax `prevector<ADDR_IPV6_SIZE, uint8_t> m_addr{ADDR_IPV6_SIZE, 0x0};` -- is that only 16 bytes?",
      "created_at": "2023-04-13T20:38:00Z",
      "updated_at": "2023-04-13T20:38:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1166002075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166002075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166712133",
      "pull_request_review_id": 1385270065,
      "id": 1166712133,
      "node_id": "PRRC_kwDOABII585Fip1F",
      "diff_hunk": "@@ -60,14 +63,17 @@\n # Networks returned by RPC getnetworkinfo, defined in src/rpc/net.cpp::GetNetworksInfo()\n NETWORKS = frozenset({NET_IPV4, NET_IPV6, NET_ONION, NET_I2P, NET_CJDNS})\n \n+# Use the shortest temp path possible since socket paths have a 92-char limit\n+socket_path = os.path.join(tempfile.gettempdir(), \"sockpath\")",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 32,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": 1165311055,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see. Then, to avoid multiple tests colliding on `/tmp/socket`, maybe this:\r\n\r\n```python\r\nsocket_path = os.path.join(tempfile.TemporaryDirectory(), \"s\")\r\n```",
      "created_at": "2023-04-14T11:19:57Z",
      "updated_at": "2023-04-14T11:19:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1166712133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166712133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166722759",
      "pull_request_review_id": 1385287222,
      "id": 1166722759,
      "node_id": "PRRC_kwDOABII585FisbH",
      "diff_hunk": "@@ -136,9 +143,16 @@ class CNetAddr\n      */\n     uint32_t m_scope_id{0};\n \n+    /**\n+     * Filesystem path for unix domain socket (NET_UNIX)\n+     */\n+    fs::path m_path;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 35,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "44dd4cb505a4e1e7258997a9b687be59760dcdbb",
      "in_reply_to_id": 1165338076,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It begins its life with 16 bytes pre-allocated (without using `new` or `malloc()`), but this is just an optimization which can be ignored. It is supposed to behave like `std::vector`.\r\n\r\nSomething like this should work to store `std::string` in it (untested):\r\n\r\n```cpp\r\nstd::string path = ...;\r\nm_addr.assign(path.begin(), path.end());\r\n```",
      "created_at": "2023-04-14T11:33:02Z",
      "updated_at": "2023-04-14T11:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1166722759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166722759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166806386",
      "pull_request_review_id": 1385416057,
      "id": 1166806386,
      "node_id": "PRRC_kwDOABII585FjA1y",
      "diff_hunk": "@@ -1260,10 +1260,23 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n   ]], [[\n     getauxval(AT_HWCAP);\n   ]])],\n- [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval)]) ],\n+ [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval]) ],",
      "path": "configure.ac",
      "position": 5,
      "original_position": 5,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "2c19dd7c1a6aaf5cf7f879ae5aa51683de2ced13",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unrelated change, I am not sure I fully understand. Is it the case that before the message was `Define this symbol to build code that uses getauxval)` and this change just fixes the message to not have a trailing `)`?",
      "created_at": "2023-04-14T12:59:10Z",
      "updated_at": "2023-05-16T06:18:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1166806386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166806386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": 1269,
      "original_start_line": 1263,
      "start_side": "LEFT",
      "line": 1269,
      "original_line": 1269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194955775",
      "pull_request_review_id": 1428254173,
      "id": 1194955775,
      "node_id": "PRRC_kwDOABII585HOZP_",
      "diff_hunk": "@@ -1260,10 +1260,23 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n   ]], [[\n     getauxval(AT_HWCAP);\n   ]])],\n- [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval)]) ],\n+ [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval]) ],",
      "path": "configure.ac",
      "position": 5,
      "original_position": 5,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "2c19dd7c1a6aaf5cf7f879ae5aa51683de2ced13",
      "in_reply_to_id": 1166806386,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah",
      "created_at": "2023-05-16T10:28:26Z",
      "updated_at": "2023-05-16T10:28:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1194955775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194955775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": 1269,
      "original_start_line": 1263,
      "start_side": "LEFT",
      "line": 1269,
      "original_line": 1269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217480535",
      "pull_request_review_id": 1461645134,
      "id": 1217480535,
      "node_id": "PRRC_kwDOABII585IkUdX",
      "diff_hunk": "@@ -37,6 +37,12 @@\n #include <unistd.h>\n #endif\n \n+// Linux defines sa_family_t as `unsigned short` but on Windows it's `u_short`\n+// See https://learn.microsoft.com/en-us/windows/win32/api/winsock/ns-winsock-sockaddr#syntax\n+#ifdef WIN32\n+typedef u_short sa_family_t;\n+#endif",
      "path": "src/compat/compat.h",
      "position": null,
      "original_position": 8,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment gives the impression that `sa_family_t` is defined on Windows (as `u_short`), but it is not defined at all (otherwise this `typedef u_short sa_family_t;` would not compile because it redefines it, right?). Maybe reword the comment to something like:\r\n\r\n```cpp\r\n// Windows does not have `sa_family_t` - it defines `sockaddr::sa_family` as `u_short`.\r\n// Thus define `sa_family_t` on Windows too so that the rest of the code can use `sa_family_t`.\r\n```",
      "created_at": "2023-06-05T04:55:31Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217480535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217480535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217685437",
      "pull_request_review_id": 1461645134,
      "id": 1217685437,
      "node_id": "PRRC_kwDOABII585IlGe9",
      "diff_hunk": "@@ -529,6 +529,7 @@ class CService : public CNetAddr\n     uint16_t GetPort() const;\n     bool GetSockAddr(struct sockaddr* paddr, socklen_t* addrlen) const;\n     bool SetSockAddr(const struct sockaddr* paddr);\n+    [[nodiscard]] sa_family_t GetTCPFamily() const;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 4,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TCP is a specific protocol ([at layer 4 in the OSI model](https://en.wikipedia.org/wiki/OSI_model)) while this refers to layer 3. Maybe rename it to something like `GetProtocolFamily()`, `GetAddressFamily()`, `GetFamily()` or `GetSAFamily()`.",
      "created_at": "2023-06-05T08:05:08Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217685437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217685437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217688663",
      "pull_request_review_id": 1461645134,
      "id": 1217688663,
      "node_id": "PRRC_kwDOABII585IlHRX",
      "diff_hunk": "@@ -843,6 +843,19 @@ bool CService::SetSockAddr(const struct sockaddr *paddr)\n     }\n }\n \n+sa_family_t CService::GetTCPFamily() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return AF_INET;\n+    case NET_IPV6:\n+        return AF_INET6;\n+    default:\n+        return AF_UNSPEC; // Not TCP",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        return AF_UNSPEC;\r\n```",
      "created_at": "2023-06-05T08:07:51Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217688663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217688663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 854,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217689114",
      "pull_request_review_id": 1461645134,
      "id": 1217689114,
      "node_id": "PRRC_kwDOABII585IlHYa",
      "diff_hunk": "@@ -843,6 +843,19 @@ bool CService::SetSockAddr(const struct sockaddr *paddr)\n     }\n }\n \n+sa_family_t CService::GetTCPFamily() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return AF_INET;\n+    case NET_IPV6:\n+        return AF_INET6;\n+    default:\n+        return AF_UNSPEC; // Not TCP\n+    }\n+\n+}",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unnecessary empty line.",
      "created_at": "2023-06-05T08:08:14Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217689114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217689114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 855,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 832,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217692250",
      "pull_request_review_id": 1461645134,
      "id": 1217692250,
      "node_id": "PRRC_kwDOABII585IlIJa",
      "diff_hunk": "@@ -843,6 +843,19 @@ bool CService::SetSockAddr(const struct sockaddr *paddr)\n     }\n }\n \n+sa_family_t CService::GetTCPFamily() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return AF_INET;\n+    case NET_IPV6:\n+        return AF_INET6;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`CService::GetSockAddr()` treats CJDNS as IPv6. So:\r\n```suggestion\r\n    case NET_IPV6:\r\n    case NET_CJDNS:\r\n        return AF_INET6;\r\n```",
      "created_at": "2023-06-05T08:10:57Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217692250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217692250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 851,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217700884",
      "pull_request_review_id": 1461645134,
      "id": 1217700884,
      "node_id": "PRRC_kwDOABII585IlKQU",
      "diff_hunk": "@@ -178,16 +209,16 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault = 0, DNSLoo\n bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out);\n \n /**\n- * Create a TCP socket in the given address family.\n+ * Create a TCP or UNIX socket in the given address family.\n  * @param[in] address_family The socket is created in the same address family as this address.\n  * @return pointer to the created Sock object or unique_ptr that owns nothing in case of failure\n  */\n-std::unique_ptr<Sock> CreateSockTCP(const CService& address_family);\n+std::unique_ptr<Sock> CreateSockOS(const sa_family_t& address_family);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 69,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`sa_family_t` is cheap to copy. No need to pass it as a const reference:\r\n\r\n```cpp\r\nstd::unique_ptr<Sock> CreateSockOS(sa_family_t address_family);\r\n```",
      "created_at": "2023-06-05T08:17:13Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217700884",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217700884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 185,
      "start_side": "LEFT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217719465",
      "pull_request_review_id": 1461645134,
      "id": 1217719465,
      "node_id": "PRRC_kwDOABII585IlOyp",
      "diff_hunk": "@@ -456,18 +482,22 @@ bool Socks5(const std::string& strDest, uint16_t port, const ProxyCredentials* a\n     return true;\n }\n \n-std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n+std::unique_ptr<Sock> CreateSockOS(const sa_family_t& address_family)\n {\n-    // Create a sockaddr from the specified service.\n-    struct sockaddr_storage sockaddr;\n-    socklen_t len = sizeof(sockaddr);\n-    if (!address_family.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        LogPrintf(\"Cannot create socket for %s: unsupported network\\n\", address_family.ToStringAddrPort());\n-        return nullptr;\n+    // Not IPv4, IPv6 or UNIX\n+    if (address_family == AF_UNSPEC) return nullptr;\n+\n+#if HAVE_SOCKADDR_UN\n+    // Create a UNIX socket.\n+    if (address_family == AF_UNIX) {\n+        SOCKET hSocket = socket(AF_UNIX, SOCK_STREAM, 0);\n+        if (hSocket == INVALID_SOCKET) return nullptr;\n+        return std::make_unique<Sock>(hSocket);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All tuning that happens to the socket below in this function seems relevant to UNIX sockets too, except `TCP_NODELAY`.\r\n\r\n```diff\r\n--- i/src/netbase.cpp\r\n+++ w/src/netbase.cpp\r\n@@ -484,23 +484,21 @@ bool Socks5(const std::string& strDest, uint16_t port, const ProxyCredentials* a\r\n \r\n std::unique_ptr<Sock> CreateSockOS(const sa_family_t& address_family)\r\n {\r\n     // Not IPv4, IPv6 or UNIX\r\n     if (address_family == AF_UNSPEC) return nullptr;\r\n \r\n+    int protocol{IPPROTO_TCP};\r\n #if HAVE_SOCKADDR_UN\r\n-    // Create a UNIX socket.\r\n     if (address_family == AF_UNIX) {\r\n-        SOCKET hSocket = socket(AF_UNIX, SOCK_STREAM, 0);\r\n-        if (hSocket == INVALID_SOCKET) return nullptr;\r\n-        return std::make_unique<Sock>(hSocket);\r\n+        protocol = 0;\r\n     }\r\n #endif\r\n \r\n-    // Create a TCP socket in the address family of the specified service.\r\n-    SOCKET hSocket = socket(address_family, SOCK_STREAM, IPPROTO_TCP);\r\n+    // Create a socket in the specified address family.\r\n+    SOCKET hSocket = socket(address_family, SOCK_STREAM, protocol);\r\n     if (hSocket == INVALID_SOCKET) {\r\n         return nullptr;\r\n     }\r\n \r\n     auto sock = std::make_unique<Sock>(hSocket);\r\n \r\n@@ -518,23 +516,30 @@ std::unique_ptr<Sock> CreateSockOS(const sa_family_t& address_family)\r\n     if (sock->SetSockOpt(SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int)) == SOCKET_ERROR) {\r\n         LogPrintf(\"Error setting SO_NOSIGPIPE on socket: %s, continuing anyway\\n\",\r\n                   NetworkErrorString(WSAGetLastError()));\r\n     }\r\n #endif\r\n \r\n+    // Set the non-blocking option on the socket.\r\n+    if (!sock->SetNonBlocking()) {\r\n+        LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\r\n+        return nullptr;\r\n+    }\r\n+\r\n+#if HAVE_SOCKADDR_UN\r\n+    if (address_family == AF_UNIX) {\r\n+        return sock;\r\n+    }\r\n+#endif\r\n+\r\n     // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\r\n     const int on{1};\r\n     if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\r\n         LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\r\n     }\r\n \r\n-    // Set the non-blocking option on the socket.\r\n-    if (!sock->SetNonBlocking()) {\r\n-        LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\r\n-        return nullptr;\r\n-    }\r\n     return sock;\r\n }\r\n```",
      "created_at": "2023-06-05T08:31:32Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217719465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217719465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217741453",
      "pull_request_review_id": 1461645134,
      "id": 1217741453,
      "node_id": "PRRC_kwDOABII585IlUKN",
      "diff_hunk": "@@ -45,16 +48,44 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy(): is_unix_socket(false), randomize_credentials(false) {}\n+    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), is_unix_socket(false), randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials=false): unix_socket_path(path), is_unix_socket(true), randomize_credentials(_randomize_credentials) {}",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 32,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pass `path` by const reference, strings are expensive to copy.\r\n\r\n```suggestion\r\n    explicit Proxy(const std::string& path, bool _randomize_credentials=false): unix_socket_path(path), is_unix_socket(true), randomize_credentials(_randomize_credentials) {}\r\n```",
      "created_at": "2023-06-05T08:48:51Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217741453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217741453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217743952",
      "pull_request_review_id": 1461645134,
      "id": 1217743952,
      "node_id": "PRRC_kwDOABII585IlUxQ",
      "diff_hunk": "@@ -45,16 +48,44 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy(): is_unix_socket(false), randomize_credentials(false) {}\n+    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), is_unix_socket(false), randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials=false): unix_socket_path(path), is_unix_socket(true), randomize_credentials(_randomize_credentials) {}\n \n     CService proxy;\n+    std::string unix_socket_path;\n+    bool is_unix_socket;\n     bool randomize_credentials;",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 37,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Members should start with `m_`. Maybe also rename the existent `randomize_credentials` to `m_randomize_credentials` (in a separate commit).",
      "created_at": "2023-06-05T08:50:50Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217743952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217743952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 68,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217747937",
      "pull_request_review_id": 1461645134,
      "id": 1217747937,
      "node_id": "PRRC_kwDOABII585IlVvh",
      "diff_hunk": "@@ -45,16 +48,44 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy(): is_unix_socket(false), randomize_credentials(false) {}\n+    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), is_unix_socket(false), randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials=false): unix_socket_path(path), is_unix_socket(true), randomize_credentials(_randomize_credentials) {}\n \n     CService proxy;\n+    std::string unix_socket_path;\n+    bool is_unix_socket;\n     bool randomize_credentials;\n+\n+    bool IsValid() const\n+    {\n+        if (is_unix_socket) return IsUnixSocketPath(unix_socket_path);\n+        return proxy.IsValid();\n+    }\n+\n+    sa_family_t GetFamily() const\n+    {\n+        if (is_unix_socket) return AF_UNIX;\n+        return proxy.GetTCPFamily();\n+    }\n+\n+    std::string ToStringAddrPort() const\n+    {\n+        if (is_unix_socket) return unix_socket_path;\n+        return proxy.ToStringAddrPort();\n+    }",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 55,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Better omit `AddrPort` from the name of this method because it does not apply to UNIX sockets. Just `ToString()` seems fine (but still call `proxy.ToStringAddrPort()` for non-UNIX sockets).",
      "created_at": "2023-06-05T08:53:55Z",
      "updated_at": "2023-06-05T09:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217747937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217747937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 84,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217775186",
      "pull_request_review_id": 1461645134,
      "id": 1217775186,
      "node_id": "PRRC_kwDOABII585IlcZS",
      "diff_hunk": "@@ -214,6 +218,28 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault, DNSLookupF\n     return Lookup(name, portDefault, /*fAllowLookup=*/false, dns_lookup_function).value_or(CService{});\n }\n \n+bool IsUnixSocketPath(const std::string& name)\n+{\n+#if HAVE_SOCKADDR_UN\n+    if (name.find(ADDR_PREFIX_UNIX) != 0) return false;\n+\n+    // Split off \"unix:\" prefix\n+    std::string str{name.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    // Path size limit is platform-dependent\n+    // see https://manpages.ubuntu.com/manpages/xenial/en/man7/unix.7.html\n+    if (str.size() + 1 > sizeof(((sockaddr_un*)nullptr)->sun_path)) return false;\n+\n+    // Path must exist\n+    fs::path path = fs::PathFromString(str);\n+    if (!fs::exists(path)) return false;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if this check is desirable. It makes `IsUnixSocketPath()` volatile - for example if the Tor server is not yet started it will be false and the moment it is started it will become true, or if the Tor server is restarted it will flip from true to false and back.\r\n\r\nWith this check `bitcoind` will refuse to start if the Tor server is not started yet. This differs from the TCP case where the Tor server can start later.\r\n\r\nWith TCP we only check if the given address is something we can _try_ to connect to. Like \"ok, it is 4 digits separated by 3 dots, maybe I can connect to this later when needed\". `CService::IsValid()` does not check whether somebody is listening on that address and port and that we can connect to it. An equivalent check for UNIX sockets would be \"ok, if it starts with unix: and is short enough maybe I can connect to this later when needed\".",
      "created_at": "2023-06-05T09:15:19Z",
      "updated_at": "2023-06-05T09:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217775186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217775186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 233,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217785125",
      "pull_request_review_id": 1461645134,
      "id": 1217785125,
      "node_id": "PRRC_kwDOABII585Ile0l",
      "diff_hunk": "@@ -1286,7 +1286,14 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             std::string host_out;\n             uint16_t port_out{0};\n             if (!SplitHostPort(socket_addr, port_out, host_out)) {\n+#if HAVE_SOCKADDR_UN\n+                // Allow unix domain sockets for -proxy and -onion e.g. unix:/some/file/path\n+                if ((port_option != \"-proxy\" && port_option != \"-onion\") || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {",
      "path": "src/init.cpp",
      "position": 30,
      "original_position": 6,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should use `IsUnixSocketPath()`?\r\n\r\n```suggestion\r\n                if ((port_option != \"-proxy\" && port_option != \"-onion\") || !IsUnixSocketPath(socket_addr)) {\r\n```",
      "created_at": "2023-06-05T09:21:43Z",
      "updated_at": "2023-06-05T09:48:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217785125",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217785125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1299,
      "original_line": 1299,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217795272",
      "pull_request_review_id": 1461645134,
      "id": 1217795272,
      "node_id": "PRRC_kwDOABII585IlhTI",
      "diff_hunk": "@@ -60,14 +63,17 @@\n # Networks returned by RPC getnetworkinfo, defined in src/rpc/net.cpp::GetNetworksInfo()\n NETWORKS = frozenset({NET_IPV4, NET_IPV6, NET_ONION, NET_I2P, NET_CJDNS})\n \n+# Use the shortest temp path possible since paths may have as little as 92-char limit",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 31,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n\r\n```suggestion\r\n# Use the shortest temp path possible since UNIX sockets may have as little as 92-char limit\r\n```",
      "created_at": "2023-06-05T09:28:53Z",
      "updated_at": "2023-06-05T09:48:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217795272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1217795272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218382890",
      "pull_request_review_id": 1463052208,
      "id": 1218382890,
      "node_id": "PRRC_kwDOABII585Inwwq",
      "diff_hunk": "@@ -1286,7 +1286,14 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             std::string host_out;\n             uint16_t port_out{0};\n             if (!SplitHostPort(socket_addr, port_out, host_out)) {\n+#if HAVE_SOCKADDR_UN\n+                // Allow unix domain sockets for -proxy and -onion e.g. unix:/some/file/path\n+                if ((port_option != \"-proxy\" && port_option != \"-onion\") || socket_addr.find(ADDR_PREFIX_UNIX) != 0) {",
      "path": "src/init.cpp",
      "position": 30,
      "original_position": 6,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": 1217785125,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This change would make `feature_proxy.py` test fail because the error would be `\"Invalid port...\"` which is misleading if the real problem is (for example) a too-long file path, which will get caught by `IsUnixSocketPath()` on L1370 and described as `\"Invalid -proxy address or hostname...\"`. So I think it makes more sense to keep this line as-is: if we think the user is trying to set a UNIX socket path, we just ignore the invalid port check.",
      "created_at": "2023-06-05T17:32:29Z",
      "updated_at": "2023-06-05T17:32:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1218382890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218382890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1299,
      "original_line": 1299,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239079790",
      "pull_request_review_id": 1494066986,
      "id": 1239079790,
      "node_id": "PRRC_kwDOABII585J2ttu",
      "diff_hunk": "@@ -153,3 +153,12 @@ def test_ipv6_local():\n     except socket.error:\n         have_ipv6 = False\n     return have_ipv6\n+\n+def test_unix_socket():\n+    '''Return True if UNIX sockets are available on this platform.'''\n+    try:\n+        socket.AF_UNIX",
      "path": "test/functional/test_framework/netutil.py",
      "position": 8,
      "original_position": 8,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "64d0f234e9aac490b03a5c019e86f1da56e62e01",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's possible this could pass, but the necessary configure check fail, in theory. But maybe we want the test(s) to fail in that scenario anyway.",
      "created_at": "2023-06-22T22:14:29Z",
      "updated_at": "2023-06-22T22:14:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1239079790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239079790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 165,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246758964",
      "pull_request_review_id": 1505515197,
      "id": 1246758964,
      "node_id": "PRRC_kwDOABII585KUAg0",
      "diff_hunk": "@@ -178,16 +209,16 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault = 0, DNSLoo\n bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out);\n \n /**\n- * Create a TCP socket in the given address family.\n+ * Create a TCP or UNIX socket in the given address family.\n  * @param[in] address_family The socket is created in the same address family as this address.\n  * @return pointer to the created Sock object or unique_ptr that owns nothing in case of failure\n  */\n-std::unique_ptr<Sock> CreateSockTCP(const CService& address_family);\n+std::unique_ptr<Sock> CreateSockOS(const sa_family_t address_family);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 70,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "64d0f234e9aac490b03a5c019e86f1da56e62e01",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it does not have to be `const` when passing by value - there is no way to for the function to modify the variable that is being passed (and have effects visible outside of the function).\r\n\r\n```suggestion\r\nstd::unique_ptr<Sock> CreateSockOS(sa_family_t address_family);\r\n```\r\n\r\nSee f3() in http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in",
      "created_at": "2023-06-29T15:10:35Z",
      "updated_at": "2023-06-29T16:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1246758964",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246758964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246856004",
      "pull_request_review_id": 1505662729,
      "id": 1246856004,
      "node_id": "PRRC_kwDOABII585KUYNE",
      "diff_hunk": "@@ -45,16 +48,44 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy(): is_unix_socket(false), randomize_credentials(false) {}\n+    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), is_unix_socket(false), randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials=false): unix_socket_path(path), is_unix_socket(true), randomize_credentials(_randomize_credentials) {}\n \n     CService proxy;\n+    std::string unix_socket_path;\n+    bool is_unix_socket;\n     bool randomize_credentials;",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 37,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "1a2095baf12b8f8995bed513a23d5faf16917fba",
      "in_reply_to_id": 1217743952,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The new member `unix_socket_path` is still without `m_` prefix. Only `is_unix_socket` was renamed to `m_is_unix_socket`.",
      "created_at": "2023-06-29T16:13:34Z",
      "updated_at": "2023-06-29T16:13:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1246856004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246856004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 68,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1251211129",
      "pull_request_review_id": 1511673742,
      "id": 1251211129,
      "node_id": "PRRC_kwDOABII585Kk_d5",
      "diff_hunk": "@@ -178,16 +209,16 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault = 0, DNSLoo\n bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out);\n \n /**\n- * Create a TCP socket in the given address family.\n+ * Create a TCP or UNIX socket in the given address family.\n  * @param[in] address_family The socket is created in the same address family as this address.\n  * @return pointer to the created Sock object or unique_ptr that owns nothing in case of failure\n  */\n-std::unique_ptr<Sock> CreateSockTCP(const CService& address_family);\n+std::unique_ptr<Sock> CreateSockOS(const sa_family_t address_family);",
      "path": "src/netbase.h",
      "position": null,
      "original_position": 70,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "64d0f234e9aac490b03a5c019e86f1da56e62e01",
      "in_reply_to_id": 1246758964,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah great tip thanks ;-)",
      "created_at": "2023-07-03T19:14:56Z",
      "updated_at": "2023-07-03T19:14:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1251211129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1251211129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262178924",
      "pull_request_review_id": 1527850665,
      "id": 1262178924,
      "node_id": "PRRC_kwDOABII585LO1Js",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 195,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This check can be omitted from commit dc2361401c `net: move CreateSock() calls from ConnectNode() to netbase methods` since the code checks `if (!sock)` earlier. `CreateSock()` will never return a non-empty `unique_ptr` that contains a `Sock` object with a bogus internal file descriptor (`INVALID_SOCKED`).",
      "created_at": "2023-07-13T08:05:52Z",
      "updated_at": "2023-07-13T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262178924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262178924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 605,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262322061",
      "pull_request_review_id": 1527850665,
      "id": 1262322061,
      "node_id": "PRRC_kwDOABII585LPYGN",
      "diff_hunk": "@@ -509,22 +536,10 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n     }\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nTimeout, bool manual_connection)\n+std::unique_ptr<Sock> ConnectToSocket(std::unique_ptr<Sock> sock, struct sockaddr* sockaddr, socklen_t len, std::string dest_str, bool manual_connection)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The interface of taking `unique_ptr` as an argument and returning the same is a bit weird. Usually functions take `unique_ptr` when the ownership of the object is transferred from the caller to the function. But in this case it is transferred to the function which then returns it back to the caller. It would be better to have an interface like:\r\n\r\n```cpp\r\nbool ConnectToSocket(const Sock& sock, ...);\r\n\r\n// and call it like:\r\n\r\nsock = ... // is unique_ptr<Sock>\r\nif (!ConnectToSocket(*sock, ...)) {\r\n    handle the error\r\n    return {}; // empty unique_ptr\r\n}\r\n\r\nreturn sock;\r\n```",
      "created_at": "2023-07-13T09:54:49Z",
      "updated_at": "2023-07-13T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262322061",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262322061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262327319",
      "pull_request_review_id": 1527850665,
      "id": 1262327319,
      "node_id": "PRRC_kwDOABII585LPZYX",
      "diff_hunk": "@@ -509,22 +536,10 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n     }\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nTimeout, bool manual_connection)\n+std::unique_ptr<Sock> ConnectToSocket(std::unique_ptr<Sock> sock, struct sockaddr* sockaddr, socklen_t len, std::string dest_str, bool manual_connection)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Make the string argument const reference and the function `static` since it is used only in `netbase.cpp`:\r\n\r\n```suggestion\r\nstatic std::unique_ptr<Sock> ConnectToSocket(std::unique_ptr<Sock> sock, struct sockaddr* sockaddr, socklen_t len, const std::string& dest_str, bool manual_connection)\r\n```",
      "created_at": "2023-07-13T09:59:07Z",
      "updated_at": "2023-07-13T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262327319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262327319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262362898",
      "pull_request_review_id": 1527850665,
      "id": 1262362898,
      "node_id": "PRRC_kwDOABII585LPiES",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 206,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Calling this on an invalid `Proxy` (e.g. default-constructed) will cause weird results. Better check `if (!IsValid()) { log; return {}; }` at the start of this function.",
      "created_at": "2023-07-13T10:30:44Z",
      "updated_at": "2023-07-13T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262362898",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262362898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 617,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 627,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262368024",
      "pull_request_review_id": 1527850665,
      "id": 1262368024,
      "node_id": "PRRC_kwDOABII585LPjUY",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 217,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no need to use the generic `sockaddr_storage` since we know it is going to be `sockaddr_un`. Also, clear it for compatibility, see the example in https://www.man7.org/linux/man-pages/man7/unix.7.html\r\n\r\n```suggestion\r\n    struct sockaddr_un addrun;\r\n    memset(&addrun, 0, sizeof(addrun));\r\n```",
      "created_at": "2023-07-13T10:35:29Z",
      "updated_at": "2023-07-13T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262368024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262368024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262371026",
      "pull_request_review_id": 1527850665,
      "id": 1262371026,
      "node_id": "PRRC_kwDOABII585LPkDS",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);",
      "path": "src/netbase.cpp",
      "position": 200,
      "original_position": 208,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This and below I guess have to be inside `#if HAVE_SOCKADDR_UN`, otherwise it does not compile on Windows (CI has choked on it).\r\n\r\nhttps://devblogs.microsoft.com/commandline/af_unix-comes-to-windows/ is relevant. Would it compile on Windows if we just `#include <afunix.h>`?",
      "created_at": "2023-07-13T10:37:49Z",
      "updated_at": "2023-07-13T12:29:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262371026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262371026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262372825",
      "pull_request_review_id": 1527850665,
      "id": 1262372825,
      "node_id": "PRRC_kwDOABII585LPkfZ",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;\n+    paddrun->sun_family = AF_UNIX;\n+    strcpy(paddrun->sun_path, path.c_str());",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 219,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`strcpy()` is a dangerous function because it can be easily misused in a way that leads to security flaws. There is not a single usage of it in Bitcoin Core. In this particular case if `path` is longer it will buffer overflow the fixed size array `sun_path[]`.\r\n\r\nI would suggest to do something like this:\r\n\r\n```cpp\r\n// leave the last char in addrun.sun_path[] to be always '\\0'\r\nmemcpy(addrun.sun_path, path.c_str(), std::min(sizeof(addrun.sun_path) - 1, path.length()));\r\n```",
      "created_at": "2023-07-13T10:39:21Z",
      "updated_at": "2023-07-13T12:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262372825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262372825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 632,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262417198",
      "pull_request_review_id": 1527850665,
      "id": 1262417198,
      "node_id": "PRRC_kwDOABII585LPvUu",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;\n+    paddrun->sun_family = AF_UNIX;\n+    strcpy(paddrun->sun_path, path.c_str());\n+    socklen_t len = strlen(paddrun->sun_path) + sizeof(paddrun);\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, path, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `len` calculation seems to be wrong since `sizeof(paddrun)` is just 8 bytes (it is a pointer). Anyway, you can use just `sizeof(sockaddr)` (not the pointer) or `sizeof(addrun)` if you change it to `sockaddr_un addrun;`\r\n\r\n```suggestion\r\n    return ConnectToSocket(std::move(sock), (struct sockaddr*)&addrun, sizeof(addrun), path, /*manual_connection=*/true);\r\n```",
      "created_at": "2023-07-13T11:21:24Z",
      "updated_at": "2023-07-13T12:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262417198",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262417198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 633,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262421705",
      "pull_request_review_id": 1527850665,
      "id": 1262421705,
      "node_id": "PRRC_kwDOABII585LPwbJ",
      "diff_hunk": "@@ -230,6 +253,13 @@ def run_test(self):\n             proxies=[self.serv1, self.serv1, self.serv1, self.serv1],\n             auth=False, test_onion=True, test_cjdns=True)\n \n+        # -proxyrandomize=0",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 138,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the meaning of this comment here?",
      "created_at": "2023-07-13T11:26:03Z",
      "updated_at": "2023-07-13T12:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262421705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262421705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262422280",
      "pull_request_review_id": 1527850665,
      "id": 1262422280,
      "node_id": "PRRC_kwDOABII585LPwkI",
      "diff_hunk": "@@ -109,10 +127,15 @@ def setup_nodes(self):\n             ['-listen', f'-proxy={self.conf2.addr[0]}:{self.conf2.addr[1]}','-proxyrandomize=1'],\n             [],\n             ['-listen', f'-proxy={self.conf1.addr[0]}:{self.conf1.addr[1]}','-proxyrandomize=1',\n-                '-cjdnsreachable']\n+                '-cjdnsreachable'],\n+            [],\n+            []\n         ]\n         if self.have_ipv6:\n             args[3] = ['-listen', f'-proxy=[{self.conf3.addr[0]}]:{self.conf3.addr[1]}','-proxyrandomize=0', '-noonion']\n+        if self.have_unix_sockets:\n+            args[5] = ['-listen', f'-proxy=unix:{socket_path}', '-proxyrandomize=0']\n+            args[6] = ['-listen', f'-onion=unix:{socket_path}', '-proxyrandomize=0']",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 85,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why use `-proxyrandomize=0` is it not irrelevant for this test?",
      "created_at": "2023-07-13T11:26:38Z",
      "updated_at": "2023-07-13T12:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262422280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262422280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 136,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262436716",
      "pull_request_review_id": 1527850665,
      "id": 1262436716,
      "node_id": "PRRC_kwDOABII585LP0Fs",
      "diff_hunk": "@@ -45,16 +48,46 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy() : m_is_unix_socket(false), m_randomize_credentials(false) {}\n+    explicit Proxy(const CService& _proxy, bool _randomize_credentials = false) : proxy(_proxy), m_is_unix_socket(false), m_randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials = false) : m_unix_socket_path(path), m_is_unix_socket(true), m_randomize_credentials(_randomize_credentials) {}\n \n     CService proxy;",
      "path": "src/netbase.h",
      "position": 34,
      "original_position": 34,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `Proxy::proxy` member is still accessed directly from some high level code:\r\n\r\n```\r\nsrc/net.cpp:494:                            std::make_unique<i2p::sam::Session>(proxy.proxy, &interruptNet);\r\nsrc/qt/optionsdialog.cpp:416:    ui->proxyReachIPv4->setChecked(has_proxy && proxy.proxy == ui_proxy);\r\nsrc/qt/optionsdialog.cpp:419:    ui->proxyReachIPv6->setChecked(has_proxy && proxy.proxy == ui_proxy);\r\nsrc/qt/optionsdialog.cpp:422:    ui->proxyReachTor->setChecked(has_proxy && proxy.proxy == ui_proxy);\r\n```\r\n\r\neven though it may not be set if it is a UNIX socket proxy.\r\n\r\nFor the I2P case we can kind of assume it is a TCP proxy, but then better add `assert(!proxy.m_is_unix_socket);` to ensure that (eh, that's ugly). Or you can pass the `Proxy` object to the `Session()` constructor, change `m_control_host` from `CService` to `Proxy` and use `m_control_host.Connect()` in `Session::Hello()` to create the socket. This will transparently add support for UNIX sockets also for the I2P proxy.\r\n\r\nFor the GUI case, this function has to be changed:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/b4794740f82e1a08294c8a5f5d586bc1925412f3/src/qt/optionsdialog.cpp#L407-L423\r\n\r\nFirst it has to check if `ui->proxyIp->text().toStdString()` starts with `unix:` and if yes, avoid `LookupHost()`. Then create `Proxy ui_proxy` instead of `CService ui_proxy`.\r\n\r\nWhen this is done, then `Proxy::proxy` can be made private inside the `Proxy` class, together with the `m_unix_socket_path` and `m_is_unix_socket` members.",
      "created_at": "2023-07-13T11:41:14Z",
      "updated_at": "2023-07-13T12:33:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262436716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262436716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262486665",
      "pull_request_review_id": 1527850665,
      "id": 1262486665,
      "node_id": "PRRC_kwDOABII585LQASJ",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will leave the socket in a blocking mode. I think the rest of the P2P code expects and assumes non-blocking sockets. Better set this also to non-blocking and make the `Socks5()` more robust:\r\n\r\n<details>\r\n<summary>[patch] netbase: use reliable send() during SOCKS5 handshake</summary>\r\n\r\n```diff\r\ncommit 4c8d08ca2b495da609d5586247dbd2b306e90e61 (HEAD -> tor-unix-domain-socket)\r\nParent: af4eb52ff611342dbd285f218474649f16badbaf\r\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\r\nAuthorDate: Thu Jul 13 14:17:30 2023 +0200\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Thu Jul 13 14:17:30 2023 +0200\r\ngpg: Signature made Thu Jul 13 14:23:03 2023 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    netbase: use reliable send() during SOCKS5 handshake\r\n    \r\n    `send(2)` can be interrupted or for another reason it may not fully\r\n    complete sending all the bytes. We should be ready to retry the send\r\n    with the remaining bytes. This is what `Sock::SendComplete()` does,\r\n    thus use it in `Socks5()`.\r\n    \r\n    Since `Sock::SendComplete()` takes a `CThreadInterrupt` argument,\r\n    change also the recv part of `Socks5()` to use `CThreadInterrupt`\r\n    instead of a boolean.\r\n    \r\n    Easier reviewed with `git show -b` (ignore white-space changes).\r\n\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex a46cd25e90..4eb96f950d 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2336,13 +2336,12 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\r\n     }\r\n \r\n     //\r\n     // Start threads\r\n     //\r\n     assert(m_msgproc);\r\n-    InterruptSocks5(false);\r\n     interruptNet.reset();\r\n     flagInterruptMsgProc = false;\r\n \r\n     {\r\n         LOCK(mutexMsgProc);\r\n         fMsgProcWake = false;\r\n@@ -2408,13 +2407,13 @@ void CConnman::Interrupt()\r\n         LOCK(mutexMsgProc);\r\n         flagInterruptMsgProc = true;\r\n     }\r\n     condMsgProc.notify_all();\r\n \r\n     interruptNet();\r\n-    InterruptSocks5(true);\r\n+    g_socks5_interrupt();\r\n \r\n     if (semOutbound) {\r\n         for (int i=0; i<m_max_outbound; i++) {\r\n             semOutbound->post();\r\n         }\r\n     }\r\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\r\nindex 548e1483b8..cee50e67bb 100644\r\n--- a/src/netbase.cpp\r\n+++ b/src/netbase.cpp\r\n@@ -32,13 +32,13 @@ static Proxy proxyInfo[NET_MAX] GUARDED_BY(g_proxyinfo_mutex);\r\n static Proxy nameProxy GUARDED_BY(g_proxyinfo_mutex);\r\n int nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\r\n bool fNameLookup = DEFAULT_NAME_LOOKUP;\r\n \r\n // Need ample time for negotiation for very slow proxies such as Tor\r\n std::chrono::milliseconds g_socks5_recv_timeout = 20s;\r\n-static std::atomic<bool> interruptSocks5Recv(false);\r\n+CThreadInterrupt g_socks5_interrupt;\r\n \r\n std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_lookup)\r\n {\r\n     addrinfo ai_hint{};\r\n     // We want a TCP port, which is a streaming socket type\r\n     ai_hint.ai_socktype = SOCK_STREAM;\r\n@@ -289,13 +289,13 @@ enum class IntrRecvError {\r\n  * @param sock The socket (has to be in non-blocking mode) from which to read bytes.\r\n  *\r\n  * @returns An IntrRecvError indicating the resulting status of this read.\r\n  *          IntrRecvError::OK only if all of the specified number of bytes were\r\n  *          read.\r\n  *\r\n- * @see This function can be interrupted by calling InterruptSocks5(bool).\r\n+ * @see This function can be interrupted by calling g_socks5_interrupt().\r\n  *      Sockets can be made non-blocking with Sock::SetNonBlocking().\r\n  */\r\n static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, std::chrono::milliseconds timeout, const Sock& sock)\r\n {\r\n     auto curTime{Now<SteadyMilliseconds>()};\r\n     const auto endTime{curTime + timeout};\r\n@@ -317,14 +317,15 @@ static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, std::chrono::m\r\n                     return IntrRecvError::NetworkError;\r\n                 }\r\n             } else {\r\n                 return IntrRecvError::NetworkError;\r\n             }\r\n         }\r\n-        if (interruptSocks5Recv)\r\n+        if (g_socks5_interrupt) {\r\n             return IntrRecvError::Interrupted;\r\n+        }\r\n         curTime = Now<SteadyMilliseconds>();\r\n     }\r\n     return len == 0 ? IntrRecvError::OK : IntrRecvError::Timeout;\r\n }\r\n \r\n /** Convert SOCKS5 reply to an error message */\r\n@@ -351,127 +352,120 @@ static std::string Socks5ErrorString(uint8_t err)\r\n             return \"unknown\";\r\n     }\r\n }\r\n \r\n bool Socks5(const std::string& strDest, uint16_t port, const ProxyCredentials* auth, const Sock& sock)\r\n {\r\n-    IntrRecvError recvr;\r\n-    LogPrint(BCLog::NET, \"SOCKS5 connecting %s\\n\", strDest);\r\n-    if (strDest.size() > 255) {\r\n-        return error(\"Hostname too long\");\r\n-    }\r\n-    // Construct the version identifier/method selection message\r\n-    std::vector<uint8_t> vSocks5Init;\r\n-    vSocks5Init.push_back(SOCKSVersion::SOCKS5); // We want the SOCK5 protocol\r\n-    if (auth) {\r\n-        vSocks5Init.push_back(0x02); // 2 method identifiers follow...\r\n-        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\r\n-        vSocks5Init.push_back(SOCKS5Method::USER_PASS);\r\n-    } else {\r\n-        vSocks5Init.push_back(0x01); // 1 method identifier follows...\r\n-        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\r\n-    }\r\n-    ssize_t ret = sock.Send(vSocks5Init.data(), vSocks5Init.size(), MSG_NOSIGNAL);\r\n-    if (ret != (ssize_t)vSocks5Init.size()) {\r\n-        return error(\"Error sending to proxy\");\r\n-    }\r\n-    uint8_t pchRet1[2];\r\n-    if (InterruptibleRecv(pchRet1, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n-        LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\r\n-        return false;\r\n-    }\r\n-    if (pchRet1[0] != SOCKSVersion::SOCKS5) {\r\n-        return error(\"Proxy failed to initialize\");\r\n-    }\r\n-    if (pchRet1[1] == SOCKS5Method::USER_PASS && auth) {\r\n-        // Perform username/password authentication (as described in RFC1929)\r\n-        std::vector<uint8_t> vAuth;\r\n-        vAuth.push_back(0x01); // Current (and only) version of user/pass subnegotiation\r\n-        if (auth->username.size() > 255 || auth->password.size() > 255)\r\n-            return error(\"Proxy username or password too long\");\r\n-        vAuth.push_back(auth->username.size());\r\n-        vAuth.insert(vAuth.end(), auth->username.begin(), auth->username.end());\r\n-        vAuth.push_back(auth->password.size());\r\n-        vAuth.insert(vAuth.end(), auth->password.begin(), auth->password.end());\r\n-        ret = sock.Send(vAuth.data(), vAuth.size(), MSG_NOSIGNAL);\r\n-        if (ret != (ssize_t)vAuth.size()) {\r\n-            return error(\"Error sending authentication to proxy\");\r\n-        }\r\n-        LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\r\n-        uint8_t pchRetA[2];\r\n-        if (InterruptibleRecv(pchRetA, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n-            return error(\"Error reading proxy authentication response\");\r\n+    try {\r\n+        IntrRecvError recvr;\r\n+        LogPrint(BCLog::NET, \"SOCKS5 connecting %s\\n\", strDest);\r\n+        if (strDest.size() > 255) {\r\n+            return error(\"Hostname too long\");\r\n         }\r\n-        if (pchRetA[0] != 0x01 || pchRetA[1] != 0x00) {\r\n-            return error(\"Proxy authentication unsuccessful\");\r\n+        // Construct the version identifier/method selection message\r\n+        std::string vSocks5Init;\r\n+        vSocks5Init.push_back(SOCKSVersion::SOCKS5); // We want the SOCK5 protocol\r\n+        if (auth) {\r\n+            vSocks5Init.push_back(0x02); // 2 method identifiers follow...\r\n+            vSocks5Init.push_back(SOCKS5Method::NOAUTH);\r\n+            vSocks5Init.push_back(SOCKS5Method::USER_PASS);\r\n+        } else {\r\n+            vSocks5Init.push_back(0x01); // 1 method identifier follows...\r\n+            vSocks5Init.push_back(SOCKS5Method::NOAUTH);\r\n         }\r\n-    } else if (pchRet1[1] == SOCKS5Method::NOAUTH) {\r\n-        // Perform no authentication\r\n-    } else {\r\n-        return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\r\n-    }\r\n-    std::vector<uint8_t> vSocks5;\r\n-    vSocks5.push_back(SOCKSVersion::SOCKS5); // VER protocol version\r\n-    vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\r\n-    vSocks5.push_back(0x00); // RSV Reserved must be 0\r\n-    vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\r\n-    vSocks5.push_back(strDest.size()); // Length<=255 is checked at beginning of function\r\n-    vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\r\n-    vSocks5.push_back((port >> 8) & 0xFF);\r\n-    vSocks5.push_back((port >> 0) & 0xFF);\r\n-    ret = sock.Send(vSocks5.data(), vSocks5.size(), MSG_NOSIGNAL);\r\n-    if (ret != (ssize_t)vSocks5.size()) {\r\n-        return error(\"Error sending to proxy\");\r\n-    }\r\n-    uint8_t pchRet2[4];\r\n-    if ((recvr = InterruptibleRecv(pchRet2, 4, g_socks5_recv_timeout, sock)) != IntrRecvError::OK) {\r\n-        if (recvr == IntrRecvError::Timeout) {\r\n-            /* If a timeout happens here, this effectively means we timed out while connecting\r\n-             * to the remote node. This is very common for Tor, so do not print an\r\n-             * error message. */\r\n+        sock.SendComplete(vSocks5Init, g_socks5_recv_timeout, g_socks5_interrupt);\r\n+        uint8_t pchRet1[2];\r\n+        if (InterruptibleRecv(pchRet1, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n+            LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\r\n             return false;\r\n+        }\r\n+        if (pchRet1[0] != SOCKSVersion::SOCKS5) {\r\n+            return error(\"Proxy failed to initialize\");\r\n+        }\r\n+        if (pchRet1[1] == SOCKS5Method::USER_PASS && auth) {\r\n+            // Perform username/password authentication (as described in RFC1929)\r\n+            std::string vAuth;\r\n+            vAuth.push_back(0x01); // Current (and only) version of user/pass subnegotiation\r\n+            if (auth->username.size() > 255 || auth->password.size() > 255)\r\n+                return error(\"Proxy username or password too long\");\r\n+            vAuth.push_back(auth->username.size());\r\n+            vAuth.insert(vAuth.end(), auth->username.begin(), auth->username.end());\r\n+            vAuth.push_back(auth->password.size());\r\n+            vAuth.insert(vAuth.end(), auth->password.begin(), auth->password.end());\r\n+            sock.SendComplete(vAuth, g_socks5_recv_timeout, g_socks5_interrupt);\r\n+            LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\r\n+            uint8_t pchRetA[2];\r\n+            if (InterruptibleRecv(pchRetA, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n+                return error(\"Error reading proxy authentication response\");\r\n+            }\r\n+            if (pchRetA[0] != 0x01 || pchRetA[1] != 0x00) {\r\n+                return error(\"Proxy authentication unsuccessful\");\r\n+            }\r\n+        } else if (pchRet1[1] == SOCKS5Method::NOAUTH) {\r\n+            // Perform no authentication\r\n         } else {\r\n-            return error(\"Error while reading proxy response\");\r\n+            return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\r\n         }\r\n-    }\r\n-    if (pchRet2[0] != SOCKSVersion::SOCKS5) {\r\n-        return error(\"Proxy failed to accept request\");\r\n-    }\r\n-    if (pchRet2[1] != SOCKS5Reply::SUCCEEDED) {\r\n-        // Failures to connect to a peer that are not proxy errors\r\n-        LogPrintf(\"Socks5() connect to %s:%d failed: %s\\n\", strDest, port, Socks5ErrorString(pchRet2[1]));\r\n-        return false;\r\n-    }\r\n-    if (pchRet2[2] != 0x00) { // Reserved field must be 0\r\n-        return error(\"Error: malformed proxy response\");\r\n-    }\r\n-    uint8_t pchRet3[256];\r\n-    switch (pchRet2[3])\r\n-    {\r\n+        std::string vSocks5;\r\n+        vSocks5.push_back(SOCKSVersion::SOCKS5);   // VER protocol version\r\n+        vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\r\n+        vSocks5.push_back(0x00);                   // RSV Reserved must be 0\r\n+        vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\r\n+        vSocks5.push_back(strDest.size());         // Length<=255 is checked at beginning of function\r\n+        vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\r\n+        vSocks5.push_back((port >> 8) & 0xFF);\r\n+        vSocks5.push_back((port >> 0) & 0xFF);\r\n+        sock.SendComplete(vSocks5, g_socks5_recv_timeout, g_socks5_interrupt);\r\n+        uint8_t pchRet2[4];\r\n+        if ((recvr = InterruptibleRecv(pchRet2, 4, g_socks5_recv_timeout, sock)) != IntrRecvError::OK) {\r\n+            if (recvr == IntrRecvError::Timeout) {\r\n+                /* If a timeout happens here, this effectively means we timed out while connecting\r\n+                 * to the remote node. This is very common for Tor, so do not print an\r\n+                 * error message. */\r\n+                return false;\r\n+            } else {\r\n+                return error(\"Error while reading proxy response\");\r\n+            }\r\n+        }\r\n+        if (pchRet2[0] != SOCKSVersion::SOCKS5) {\r\n+            return error(\"Proxy failed to accept request\");\r\n+        }\r\n+        if (pchRet2[1] != SOCKS5Reply::SUCCEEDED) {\r\n+            // Failures to connect to a peer that are not proxy errors\r\n+            LogPrintf(\"Socks5() connect to %s:%d failed: %s\\n\", strDest, port, Socks5ErrorString(pchRet2[1]));\r\n+            return false;\r\n+        }\r\n+        if (pchRet2[2] != 0x00) { // Reserved field must be 0\r\n+            return error(\"Error: malformed proxy response\");\r\n+        }\r\n+        uint8_t pchRet3[256];\r\n+        switch (pchRet2[3]) {\r\n         case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, g_socks5_recv_timeout, sock); break;\r\n         case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, g_socks5_recv_timeout, sock); break;\r\n-        case SOCKS5Atyp::DOMAINNAME:\r\n-        {\r\n+        case SOCKS5Atyp::DOMAINNAME: {\r\n             recvr = InterruptibleRecv(pchRet3, 1, g_socks5_recv_timeout, sock);\r\n             if (recvr != IntrRecvError::OK) {\r\n                 return error(\"Error reading from proxy\");\r\n             }\r\n             int nRecv = pchRet3[0];\r\n             recvr = InterruptibleRecv(pchRet3, nRecv, g_socks5_recv_timeout, sock);\r\n             break;\r\n         }\r\n         default: return error(\"Error: malformed proxy response\");\r\n+        }\r\n+        if (recvr != IntrRecvError::OK) {\r\n+            return error(\"Error reading from proxy\");\r\n+        }\r\n+        if (InterruptibleRecv(pchRet3, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n+            return error(\"Error reading from proxy\");\r\n+        }\r\n+        LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\r\n+        return true;\r\n+    } catch (const std::runtime_error& e) {\r\n+        return error(\"Error during SOCKS5 proxy handshake: %s\", e.what());\r\n     }\r\n-    if (recvr != IntrRecvError::OK) {\r\n-        return error(\"Error reading from proxy\");\r\n-    }\r\n-    if (InterruptibleRecv(pchRet3, 2, g_socks5_recv_timeout, sock) != IntrRecvError::OK) {\r\n-        return error(\"Error reading from proxy\");\r\n-    }\r\n-    LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\r\n-    return true;\r\n }\r\n \r\n std::unique_ptr<Sock> CreateSockOS(sa_family_t address_family)\r\n {\r\n     // Not IPv4, IPv6 or UNIX\r\n     if (address_family == AF_UNSPEC) return nullptr;\r\n@@ -743,17 +737,12 @@ bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out)\r\n             return subnet_out.IsValid();\r\n         }\r\n     }\r\n     return false;\r\n }\r\n \r\n-void InterruptSocks5(bool interrupt)\r\n-{\r\n-    interruptSocks5Recv = interrupt;\r\n-}\r\n-\r\n bool IsBadPort(uint16_t port)\r\n {\r\n     /* Don't forget to update doc/p2p-bad-ports.md if you change this list. */\r\n \r\n     switch (port) {\r\n     case 1:     // tcpmux\r\ndiff --git a/src/netbase.h b/src/netbase.h\r\nindex 997bccf30d..3c41ba3834 100644\r\n--- a/src/netbase.h\r\n+++ b/src/netbase.h\r\n@@ -10,12 +10,13 @@\r\n #endif\r\n \r\n #include <compat/compat.h>\r\n #include <netaddress.h>\r\n #include <serialize.h>\r\n #include <util/sock.h>\r\n+#include <util/threadinterrupt.h>\r\n \r\n #include <functional>\r\n #include <memory>\r\n #include <stdint.h>\r\n #include <string>\r\n #include <type_traits>\r\n@@ -266,13 +267,16 @@ std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connecti\r\n  */\r\n std::unique_ptr<Sock> ConnectThroughProxy(const Proxy& proxy,\r\n                                           const std::string& dest,\r\n                                           uint16_t port,\r\n                                           bool& proxy_connection_failed);\r\n \r\n-void InterruptSocks5(bool interrupt);\r\n+/**\r\n+ * Interrupt SOCKS5 reads or writes.\r\n+ */\r\n+extern CThreadInterrupt g_socks5_interrupt;\r\n \r\n /**\r\n  * Connect to a specified destination service through an already connected\r\n  * SOCKS5 proxy.\r\n  *\r\n  * @param strDest The destination fully-qualified domain name.\r\ndiff --git a/src/test/fuzz/socks5.cpp b/src/test/fuzz/socks5.cpp\r\nindex 73235b7ced..7378cec7b8 100644\r\n--- a/src/test/fuzz/socks5.cpp\r\n+++ b/src/test/fuzz/socks5.cpp\r\n@@ -29,13 +29,15 @@ void initialize_socks5()\r\n FUZZ_TARGET_INIT(socks5, initialize_socks5)\r\n {\r\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\r\n     ProxyCredentials proxy_credentials;\r\n     proxy_credentials.username = fuzzed_data_provider.ConsumeRandomLengthString(512);\r\n     proxy_credentials.password = fuzzed_data_provider.ConsumeRandomLengthString(512);\r\n-    InterruptSocks5(fuzzed_data_provider.ConsumeBool());\r\n+    if (fuzzed_data_provider.ConsumeBool()) {\r\n+        g_socks5_interrupt();\r\n+    }\r\n     // Set FUZZED_SOCKET_FAKE_LATENCY=1 to exercise recv timeout code paths. This\r\n     // will slow down fuzzing.\r\n     g_socks5_recv_timeout = (fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) ? 1ms : default_socks5_recv_timeout;\r\n     FuzzedSock fuzzed_sock = ConsumeSock(fuzzed_data_provider);\r\n     // This Socks5(...) fuzzing harness would have caught CVE-2017-18350 within\r\n     // a few seconds of fuzzing.\r\n```\r\n</details>",
      "created_at": "2023-07-13T12:27:12Z",
      "updated_at": "2023-07-13T12:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262486665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262486665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262608123",
      "pull_request_review_id": 1528526825,
      "id": 1262608123,
      "node_id": "PRRC_kwDOABII585LQd77",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 195,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262178924,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks",
      "created_at": "2023-07-13T14:00:46Z",
      "updated_at": "2023-07-13T14:00:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262608123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262608123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 605,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262624822",
      "pull_request_review_id": 1528553195,
      "id": 1262624822,
      "node_id": "PRRC_kwDOABII585LQiA2",
      "diff_hunk": "@@ -509,22 +536,10 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n     }\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nTimeout, bool manual_connection)\n+std::unique_ptr<Sock> ConnectToSocket(std::unique_ptr<Sock> sock, struct sockaddr* sockaddr, socklen_t len, std::string dest_str, bool manual_connection)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262322061,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah great thanks",
      "created_at": "2023-07-13T14:13:21Z",
      "updated_at": "2023-07-13T14:13:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262624822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262624822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262625689",
      "pull_request_review_id": 1528554609,
      "id": 1262625689,
      "node_id": "PRRC_kwDOABII585LQiOZ",
      "diff_hunk": "@@ -509,22 +536,10 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n     }\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nTimeout, bool manual_connection)\n+std::unique_ptr<Sock> ConnectToSocket(std::unique_ptr<Sock> sock, struct sockaddr* sockaddr, socklen_t len, std::string dest_str, bool manual_connection)",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262327319,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":+1:",
      "created_at": "2023-07-13T14:13:57Z",
      "updated_at": "2023-07-13T14:13:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262625689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262625689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262632689",
      "pull_request_review_id": 1528568171,
      "id": 1262632689,
      "node_id": "PRRC_kwDOABII585LQj7x",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 206,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262362898,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good catch thanks",
      "created_at": "2023-07-13T14:18:29Z",
      "updated_at": "2023-07-13T14:18:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262632689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262632689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 617,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 627,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262645801",
      "pull_request_review_id": 1528588236,
      "id": 1262645801,
      "node_id": "PRRC_kwDOABII585LQnIp",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 217,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262368024,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah, thanks. I had a hard time with this one for some reason because casting to `sockaddr` kept truncating the unix socket path to 14 bytes before it got to `Connect()`. Anyway this works and I don't know why I didn't try it like this at first.",
      "created_at": "2023-07-13T14:27:38Z",
      "updated_at": "2023-07-13T14:27:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262645801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262645801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 629,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262653604",
      "pull_request_review_id": 1528600581,
      "id": 1262653604,
      "node_id": "PRRC_kwDOABII585LQpCk",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);",
      "path": "src/netbase.cpp",
      "position": 200,
      "original_position": 208,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262371026,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok thanks I added the preprocessor logic to the function.\r\n\r\nI'll look into adding afunix.h for windows, maybe in compat.h? also add it to the first commit to test for AF_UNIX in configure.ac. Might be better in a follow-up PR since not all windows platforms will have afunix.h and well need to test for it",
      "created_at": "2023-07-13T14:33:15Z",
      "updated_at": "2023-07-13T14:39:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262653604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262653604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 630,
      "original_line": 630,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262664857",
      "pull_request_review_id": 1528618525,
      "id": 1262664857,
      "node_id": "PRRC_kwDOABII585LQryZ",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;\n+    paddrun->sun_family = AF_UNIX;\n+    strcpy(paddrun->sun_path, path.c_str());",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 219,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262372825,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "great catch thanks yeah I saw that in your commit but I was confused. makes sense now",
      "created_at": "2023-07-13T14:41:34Z",
      "updated_at": "2023-07-13T14:41:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262664857",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262664857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 632,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262667486",
      "pull_request_review_id": 1528622653,
      "id": 1262667486,
      "node_id": "PRRC_kwDOABII585LQsbe",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;\n+    paddrun->sun_family = AF_UNIX;\n+    strcpy(paddrun->sun_path, path.c_str());\n+    socklen_t len = strlen(paddrun->sun_path) + sizeof(paddrun);\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, path, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262417198,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "got it thanks, fixed this when changing sockaddr_storage to sockaddr_un and it's now `addrun`",
      "created_at": "2023-07-13T14:43:33Z",
      "updated_at": "2023-07-13T14:43:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262667486",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262667486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 633,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262690201",
      "pull_request_review_id": 1528660306,
      "id": 1262690201,
      "node_id": "PRRC_kwDOABII585LQx-Z",
      "diff_hunk": "@@ -109,10 +127,15 @@ def setup_nodes(self):\n             ['-listen', f'-proxy={self.conf2.addr[0]}:{self.conf2.addr[1]}','-proxyrandomize=1'],\n             [],\n             ['-listen', f'-proxy={self.conf1.addr[0]}:{self.conf1.addr[1]}','-proxyrandomize=1',\n-                '-cjdnsreachable']\n+                '-cjdnsreachable'],\n+            [],\n+            []\n         ]\n         if self.have_ipv6:\n             args[3] = ['-listen', f'-proxy=[{self.conf3.addr[0]}]:{self.conf3.addr[1]}','-proxyrandomize=0', '-noonion']\n+        if self.have_unix_sockets:\n+            args[5] = ['-listen', f'-proxy=unix:{socket_path}', '-proxyrandomize=0']\n+            args[6] = ['-listen', f'-onion=unix:{socket_path}', '-proxyrandomize=0']",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 85,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262422280,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok fixed this, just using default (with auth) for the test",
      "created_at": "2023-07-13T14:59:11Z",
      "updated_at": "2023-07-13T14:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262690201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262690201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 136,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262751862",
      "pull_request_review_id": 1528755489,
      "id": 1262751862,
      "node_id": "PRRC_kwDOABII585LRBB2",
      "diff_hunk": "@@ -230,6 +253,13 @@ def run_test(self):\n             proxies=[self.serv1, self.serv1, self.serv1, self.serv1],\n             auth=False, test_onion=True, test_cjdns=True)\n \n+        # -proxyrandomize=0",
      "path": "test/functional/feature_proxy.py",
      "position": null,
      "original_position": 138,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262421705,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah sorry",
      "created_at": "2023-07-13T15:47:33Z",
      "updated_at": "2023-07-13T15:47:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262751862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262751862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262927938",
      "pull_request_review_id": 1529039444,
      "id": 1262927938,
      "node_id": "PRRC_kwDOABII585LRsBC",
      "diff_hunk": "@@ -45,16 +48,46 @@ static inline bool operator&(ConnectionDirection a, ConnectionDirection b) {\n     return (underlying(a) & underlying(b));\n }\n \n+/**\n+ * Check if a string is a valid UNIX domain socket path\n+ *\n+ * @param      name     The string provided by the user representing a local path\n+ *\n+ * @returns Whether the string has proper format, length, and points to an existing file path\n+ */\n+bool IsUnixSocketPath(const std::string& name);\n+\n class Proxy\n {\n public:\n-    Proxy(): randomize_credentials(false) {}\n-    explicit Proxy(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n-\n-    bool IsValid() const { return proxy.IsValid(); }\n+    Proxy() : m_is_unix_socket(false), m_randomize_credentials(false) {}\n+    explicit Proxy(const CService& _proxy, bool _randomize_credentials = false) : proxy(_proxy), m_is_unix_socket(false), m_randomize_credentials(_randomize_credentials) {}\n+    explicit Proxy(const std::string path, bool _randomize_credentials = false) : m_unix_socket_path(path), m_is_unix_socket(true), m_randomize_credentials(_randomize_credentials) {}\n \n     CService proxy;",
      "path": "src/netbase.h",
      "position": 34,
      "original_position": 34,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262436716,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok adding two commits to handle these two affected areas. For the GUI I've written logic that accommodates the new Proxy features but I'll have to submit a follow-up PR to enable unix socket path configuration from the GUI as a separate element from address:port proxy configuration. \r\n\r\nSo with this only PR, the user can only set unix sockets outside the GUI, and in the network tab they will see `\"Options set in this dialog are overridden by the command line...\"` anyway.",
      "created_at": "2023-07-13T18:33:53Z",
      "updated_at": "2023-07-13T18:33:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262927938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262927938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262930258",
      "pull_request_review_id": 1529043178,
      "id": 1262930258,
      "node_id": "PRRC_kwDOABII585LRslS",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262486665,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok I'll put this statement after `SetNonBlocking()` but I think the Socks5 stuff should live in a follow-up PR?",
      "created_at": "2023-07-13T18:36:40Z",
      "updated_at": "2023-07-13T18:36:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1262930258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262930258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1263941686",
      "pull_request_review_id": 1530635524,
      "id": 1263941686,
      "node_id": "PRRC_kwDOABII585LVjg2",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262486665,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This resulted in `netbase.cpp:415:27: runtime error: implicit conversion from type 'int' of value 210 (32-bit, signed) to type 'char' changed the value to -46 (8-bit, signed)`. This is ok in practice because the data is transferred as bytes anyway over the socket (not as integers). Anyway, to silence the sanitizer:\r\n\r\n<details>\r\n<summary>[patch] sock: introduce a generic Sock::SendComplete(const void*, size_t, ...)</summary>\r\n\r\n```diff\r\ncommit 8467080a08327aaf0d853a73412456c44558a9b3\r\nParent: af4eb52ff611342dbd285f218474649f16badbaf\r\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\r\nAuthorDate: Fri Jul 14 18:36:34 2023 +0200\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Fri Jul 14 18:36:34 2023 +0200\r\ngpg: Signature made Fri Jul 14 18:38:55 2023 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    sock: introduce a generic Sock::SendComplete(const void*, size_t, ...)\r\n    \r\n    Use that in `Sock::SendComplete(const std::string&, ...)` and introduce\r\n    a new `Sock::SendComplete(const std::vector<uint8_t>&, ...)` to be used\r\n    in the `Socks5()` function.\r\n\r\ndiff --git a/src/util/sock.cpp b/src/util/sock.cpp\r\nindex c83869bc77..6cf1b84f18 100644\r\n--- a/src/util/sock.cpp\r\n+++ b/src/util/sock.cpp\r\n@@ -248,25 +248,26 @@ bool Sock::WaitMany(std::chrono::milliseconds timeout, EventsPerSock& events_per\r\n     }\r\n \r\n     return true;\r\n #endif /* USE_POLL */\r\n }\r\n \r\n-void Sock::SendComplete(const std::string& data,\r\n+void Sock::SendComplete(const void* data,\r\n+                        size_t len,\r\n                         std::chrono::milliseconds timeout,\r\n                         CThreadInterrupt& interrupt) const\r\n {\r\n     const auto deadline = GetTime<std::chrono::milliseconds>() + timeout;\r\n     size_t sent{0};\r\n \r\n     for (;;) {\r\n-        const ssize_t ret{Send(data.data() + sent, data.size() - sent, MSG_NOSIGNAL)};\r\n+        const ssize_t ret{Send(static_cast<const uint8_t*>(data) + sent, len - sent, MSG_NOSIGNAL)};\r\n \r\n         if (ret > 0) {\r\n             sent += static_cast<size_t>(ret);\r\n-            if (sent == data.size()) {\r\n+            if (sent == len) {\r\n                 break;\r\n             }\r\n         } else {\r\n             const int err{WSAGetLastError()};\r\n             if (IOErrorIsPermanent(err)) {\r\n                 throw std::runtime_error(strprintf(\"send(): %s\", NetworkErrorString(err)));\r\n@@ -274,27 +275,41 @@ void Sock::SendComplete(const std::string& data,\r\n         }\r\n \r\n         const auto now = GetTime<std::chrono::milliseconds>();\r\n \r\n         if (now >= deadline) {\r\n             throw std::runtime_error(strprintf(\r\n-                \"Send timeout (sent only %u of %u bytes before that)\", sent, data.size()));\r\n+                \"Send timeout (sent only %u of %u bytes before that)\", sent, len));\r\n         }\r\n \r\n         if (interrupt) {\r\n             throw std::runtime_error(strprintf(\r\n-                \"Send interrupted (sent only %u of %u bytes before that)\", sent, data.size()));\r\n+                \"Send interrupted (sent only %u of %u bytes before that)\", sent, len));\r\n         }\r\n \r\n         // Wait for a short while (or the socket to become ready for sending) before retrying\r\n         // if nothing was sent.\r\n         const auto wait_time = std::min(deadline - now, std::chrono::milliseconds{MAX_WAIT_FOR_IO});\r\n         (void)Wait(wait_time, SEND);\r\n     }\r\n }\r\n \r\n+void Sock::SendComplete(const std::string& data,\r\n+                        std::chrono::milliseconds timeout,\r\n+                        CThreadInterrupt& interrupt) const\r\n+{\r\n+    SendComplete(data.data(), data.size(), timeout, interrupt);\r\n+}\r\n+\r\n+void Sock::SendComplete(const std::vector<uint8_t>& data,\r\n+                        std::chrono::milliseconds timeout,\r\n+                        CThreadInterrupt& interrupt) const\r\n+{\r\n+    SendComplete(data.data(), data.size(), timeout, interrupt);\r\n+}\r\n+\r\n std::string Sock::RecvUntilTerminator(uint8_t terminator,\r\n                                       std::chrono::milliseconds timeout,\r\n                                       CThreadInterrupt& interrupt,\r\n                                       size_t max_data) const\r\n {\r\n     const auto deadline = GetTime<std::chrono::milliseconds>() + timeout;\r\ndiff --git a/src/util/sock.h b/src/util/sock.h\r\nindex 6bac2dfd34..7f7b426665 100644\r\n--- a/src/util/sock.h\r\n+++ b/src/util/sock.h\r\n@@ -230,21 +230,37 @@ public:\r\n \r\n     /* Higher level, convenience, methods. These may throw. */\r\n \r\n     /**\r\n      * Send the given data, retrying on transient errors.\r\n      * @param[in] data Data to send.\r\n+     * @param[in] len Length of the data in bytes.\r\n      * @param[in] timeout Timeout for the entire operation.\r\n      * @param[in] interrupt If this is signaled then the operation is canceled.\r\n      * @throws std::runtime_error if the operation cannot be completed. In this case only some of\r\n      * the data will be written to the socket.\r\n      */\r\n+    virtual void SendComplete(const void* data,\r\n+                              size_t len,\r\n+                              std::chrono::milliseconds timeout,\r\n+                              CThreadInterrupt& interrupt) const;\r\n+\r\n+    /**\r\n+     * Convenience method, equivalent to `SendComplete(data.data(), data.size(), timeout, interrupt)`.\r\n+     */\r\n     virtual void SendComplete(const std::string& data,\r\n                               std::chrono::milliseconds timeout,\r\n                               CThreadInterrupt& interrupt) const;\r\n \r\n+    /**\r\n+     * Convenience method, equivalent to `SendComplete(data.data(), data.size(), timeout, interrupt)`.\r\n+     */\r\n+    virtual void SendComplete(const std::vector<uint8_t>& data,\r\n+                              std::chrono::milliseconds timeout,\r\n+                              CThreadInterrupt& interrupt) const;\r\n+\r\n     /**\r\n      * Read from socket until a terminator character is encountered. Will never consume bytes past\r\n      * the terminator from the socket.\r\n      * @param[in] terminator Character up to which to read from the socket.\r\n      * @param[in] timeout Timeout for the entire operation.\r\n      * @param[in] interrupt If this is signaled then the operation is canceled.\r\n```\r\n\r\nAlso in this branch: https://github.com/vasild/bitcoin/tree/tor-unix-domain-socket (the second commit)\r\n</details>\r\n\r\nand adapt `Socks5()` to use `std::vector<uint8_t>` for the arguments it passes to `SendComplete()` (done in the last commit of https://github.com/vasild/bitcoin/tree/tor-unix-domain-socket).\r\n\r\nThat is, I think the two topmost commits from https://github.com/vasild/bitcoin/tree/tor-unix-domain-socket should be the first commits in this PR.",
      "created_at": "2023-07-14T16:52:57Z",
      "updated_at": "2023-07-14T16:52:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1263941686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1263941686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264030502",
      "pull_request_review_id": 1530788647,
      "id": 1264030502,
      "node_id": "PRRC_kwDOABII585LV5Mm",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262486665,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now its ` ERROR: Error during SOCKS5 proxy handshake: send(): Transport endpoint is not connected (107)` I'm still digging in to this...",
      "created_at": "2023-07-14T18:33:17Z",
      "updated_at": "2023-07-14T18:33:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1264030502",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1264030502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265260663",
      "pull_request_review_id": 1532636721,
      "id": 1265260663,
      "node_id": "PRRC_kwDOABII585Lalh3",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262486665,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Transport endpoint is not connected\r\n\r\nIs this still a problem or it got resolved?",
      "created_at": "2023-07-17T12:13:01Z",
      "updated_at": "2023-07-17T12:13:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1265260663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265260663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265268347",
      "pull_request_review_id": 1532647334,
      "id": 1265268347,
      "node_id": "PRRC_kwDOABII585LanZ7",
      "diff_hunk": "@@ -483,21 +506,25 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     }\n #endif\n \n-    // Set the no-delay option (disable Nagle's algorithm) on the TCP socket.\n-    const int on{1};\n-    if (sock->SetSockOpt(IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) == SOCKET_ERROR) {\n-        LogPrint(BCLog::NET, \"Unable to set TCP_NODELAY on a newly created socket, continuing anyway\\n\");\n-    }\n+#if HAVE_SOCKADDR_UN\n+    if (address_family == AF_UNIX) return sock;\n+#endif\n \n     // Set the non-blocking option on the socket.\n     if (!sock->SetNonBlocking()) {\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n     }",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262486665,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved!",
      "created_at": "2023-07-17T12:18:34Z",
      "updated_at": "2023-07-17T12:18:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1265268347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265268347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 509,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268106550",
      "pull_request_review_id": 1537148388,
      "id": 1268106550,
      "node_id": "PRRC_kwDOABII585LlcU2",
      "diff_hunk": "@@ -569,11 +584,55 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n         else\n #endif\n         {\n-            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToStringAddrPort(), NetworkErrorString(WSAGetLastError()));\n-            return false;\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", dest_str, NetworkErrorString(WSAGetLastError()));\n+            return {};\n         }\n     }\n-    return true;\n+    return sock;\n+}\n+\n+std::unique_ptr<Sock> ConnectDirectly(const CService& dest, bool manual_connection)\n+{\n+    auto sock = CreateSock(dest.GetSAFamily());\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    // Create a sockaddr from the specified service.\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (sock->Get() == INVALID_SOCKET) {\n+        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+    if (!dest.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", dest.ToStringAddrPort());\n+        return {};\n+    }\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, dest.ToStringAddrPort(), manual_connection);\n+}\n+\n+std::unique_ptr<Sock> Proxy::Connect() const\n+{\n+    if (!m_is_unix_socket) return ConnectDirectly(proxy, /*manual_connection=*/true);\n+\n+    auto sock = CreateSock(AF_UNIX);\n+    if (!sock) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"Cannot create a socket for connecting to %s\\n\", m_unix_socket_path);\n+        return {};\n+    }\n+\n+    const std::string path{m_unix_socket_path.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    struct sockaddr_storage sockaddr;\n+    struct sockaddr_un* paddrun = (struct sockaddr_un*)&sockaddr;\n+    paddrun->sun_family = AF_UNIX;\n+    strcpy(paddrun->sun_path, path.c_str());\n+    socklen_t len = strlen(paddrun->sun_path) + sizeof(paddrun);\n+\n+    return ConnectToSocket(std::move(sock), (struct sockaddr*)&sockaddr, len, path, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "b1199bce0fda452a8d24c1753ffdea3c327701ff",
      "in_reply_to_id": 1262417198,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the latest code it is:\r\n\r\n```cpp\r\n      socklen_t len = sizeof(addrun);\r\n  \r\n      if(!ConnectToSocket(*sock, (struct sockaddr*)&addrun, len, path, /*manual_connection=*/true)) {\r\n```\r\n\r\nfeel free to ditch the `len` variable and use `sizeof(addrun)` directly when calling `ConnectToSocket()`.",
      "created_at": "2023-07-19T13:49:30Z",
      "updated_at": "2023-07-19T13:49:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1268106550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268106550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 633,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268148641",
      "pull_request_review_id": 1537217507,
      "id": 1268148641,
      "node_id": "PRRC_kwDOABII585Llmmh",
      "diff_hunk": "@@ -492,7 +492,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-maxsendbuffer=<n>\", strprintf(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXSENDBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by outbound peers forward or backward by this amount (default: %u seconds).\", DEFAULT_MAX_TIME_ADJUSTMENT), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target per 24h. Limit does not apply to peers with 'download' permission or blocks created within past week. 0 = no limit (default: %s). Optional suffix units [k|K|m|M|g|G|t|T] (default: M). Lowercase is 1000 base while uppercase is 1024 base\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-onion=<ip:port|path>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy). May be a local file path prefixed with 'unix:' if UNIX domain sockets are supported by the platform.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "f74da5eba9192e219567ab753c92b6cd2e66f73b",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We have already checked if UNIX sockets are supported.\r\n\r\n```cpp\r\n#if HAVE_SOCKADDR_UN\r\n    argsman.AddArg(\"-onion=<ip:port|path>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy). May be a local file path prefixed with 'unix:'.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n#else\r\n    argsman.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n#endif\r\n```",
      "created_at": "2023-07-19T14:19:42Z",
      "updated_at": "2023-07-19T14:20:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1268148641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268148641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 495,
      "start_side": "LEFT",
      "line": null,
      "original_line": 495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268326494",
      "pull_request_review_id": 1537498926,
      "id": 1268326494,
      "node_id": "PRRC_kwDOABII585LmSBe",
      "diff_hunk": "@@ -492,7 +492,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-maxsendbuffer=<n>\", strprintf(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXSENDBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by outbound peers forward or backward by this amount (default: %u seconds).\", DEFAULT_MAX_TIME_ADJUSTMENT), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target per 24h. Limit does not apply to peers with 'download' permission or blocks created within past week. 0 = no limit (default: %s). Optional suffix units [k|K|m|M|g|G|t|T] (default: M). Lowercase is 1000 base while uppercase is 1024 base\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-onion=<ip:port|path>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy). May be a local file path prefixed with 'unix:' if UNIX domain sockets are supported by the platform.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "f74da5eba9192e219567ab753c92b6cd2e66f73b",
      "in_reply_to_id": 1268148641,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah of course thanks, fixed and pushed",
      "created_at": "2023-07-19T16:32:29Z",
      "updated_at": "2023-07-19T16:32:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1268326494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268326494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": 495,
      "start_side": "LEFT",
      "line": null,
      "original_line": 495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358214172",
      "pull_request_review_id": 1676409183,
      "id": 1358214172,
      "node_id": "PRRC_kwDOABII585Q9LQc",
      "diff_hunk": "@@ -509,22 +536,10 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n     }\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nTimeout, bool manual_connection)\n+static bool ConnectToSocket(const Sock& sock, struct sockaddr* sockaddr, socklen_t len, const std::string& dest_str, bool manual_connection)\n {\n-    // Create a sockaddr from the specified service.\n-    struct sockaddr_storage sockaddr;\n-    socklen_t len = sizeof(sockaddr);\n-    if (sock.Get() == INVALID_SOCKET) {\n-        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", addrConnect.ToStringAddrPort());\n-        return false;\n-    }\n-    if (!addrConnect.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToStringAddrPort());\n-        return false;\n-    }\n-\n-    // Connect to the addrConnect service on the hSocket socket.\n-    if (sock.Connect(reinterpret_cast<struct sockaddr*>(&sockaddr), len) == SOCKET_ERROR) {\n+    // Connect to the dest service on the hSocket socket.",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "d8f993b77d2f0bad0e7a5659885ffbbd9f75dbec",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    // Connect to `sockaddr` using `sock`.\r\n```\r\nor drop the comment altogether.",
      "created_at": "2023-10-13T12:44:51Z",
      "updated_at": "2023-10-13T14:44:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1358214172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358214172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 541,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358244984",
      "pull_request_review_id": 1676409183,
      "id": 1358244984,
      "node_id": "PRRC_kwDOABII585Q9Sx4",
      "diff_hunk": "@@ -502,7 +506,11 @@ void SetupServerArgs(ArgsManager& argsman)\n     // TODO: remove the sentence \"Nodes not using ... incoming connections.\" once the changes from\n     // https://github.com/bitcoin/bitcoin/pull/23542 have become widespread.\n     argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port>. Nodes not using the default ports (default: %u, testnet: %u, signet: %u, regtest: %u) are unlikely to get incoming connections. Not relevant for I2P (see doc/i2p.md).\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+#if HAVE_SOCKADDR_UN\n+    argsman.AddArg(\"-proxy=<ip:port|path>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled). May be a local file path prefixed with 'unix:' if UNIX domain sockets are supported by the platform.\", ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_ELISION, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "d8f993b77d2f0bad0e7a5659885ffbbd9f75dbec",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n\r\n```suggestion\r\n    argsman.AddArg(\"-proxy=<ip:port|path>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled). May be a local file path prefixed with 'unix:'.\", ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_ELISION, OptionsCategory::CONNECTION);\r\n```\r\n\r\n(this is inside `#if HAVE_SOCKADDR_UN`)",
      "created_at": "2023-10-13T13:08:46Z",
      "updated_at": "2023-10-13T14:44:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1358244984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358244984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361847268",
      "pull_request_review_id": 1681893468,
      "id": 1361847268,
      "node_id": "PRRC_kwDOABII585RLCPk",
      "diff_hunk": "@@ -629,27 +635,32 @@ bool IsProxy(const CNetAddr &addr) {\n     return false;\n }\n \n-bool ConnectThroughProxy(const Proxy& proxy, const std::string& strDest, uint16_t port, const Sock& sock, int nTimeout, bool& outProxyConnectionFailed)\n+std::unique_ptr<Sock> ConnectThroughProxy(const Proxy& proxy,\n+                                          const std::string& dest,\n+                                          uint16_t port,\n+                                          bool& proxy_connection_failed)\n {\n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy.proxy, sock, nTimeout, true)) {\n-        outProxyConnectionFailed = true;\n-        return false;\n+    auto sock = ConnectDirectly(proxy.proxy, /*manual_connection=*/true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "7239ec264a1def8e8aeff8c1ca57ece2ea90f65c",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 7239ec264a1def8e8aeff8c1ca57ece2ea90f65c\r\n\r\nWhy do we always set `manual_connection = true` here (I appreciate it was existing code)? If we come via `ConnectThroughProxy` I don't think that's always the case, even though the [docstring](https://github.com/bitcoin/bitcoin/pull/27375/files#diff-fabd42e1a60c125c7fb578038e732a21d8147f407c8fbe1b6a608ba4d8115785R229) implies it should be.\r\n\r\nedit: it doesn't seem to have much effect anyway, besides [logging a different error message on failure](https://github.com/bitcoin/bitcoin/pull/27375/files#diff-3499e52d708f04ebd0bfeec799dd26464ca6bd26a802c700460227c4f41ec4b5R574-R577).",
      "created_at": "2023-10-17T09:57:48Z",
      "updated_at": "2023-10-17T11:02:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1361847268",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361847268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361886774",
      "pull_request_review_id": 1681893468,
      "id": 1361886774,
      "node_id": "PRRC_kwDOABII585RLL42",
      "diff_hunk": "@@ -210,6 +210,24 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault, DNSLookupF\n     return Lookup(name, portDefault, /*fAllowLookup=*/false, dns_lookup_function).value_or(CService{});\n }\n \n+bool IsUnixSocketPath(const std::string& name)\n+{\n+#if HAVE_SOCKADDR_UN\n+    if (name.find(ADDR_PREFIX_UNIX) != 0) return false;\n+\n+    // Split off \"unix:\" prefix\n+    std::string str{name.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    // Path size limit is platform-dependent\n+    // see https://manpages.ubuntu.com/manpages/xenial/en/man7/unix.7.html\n+    if (str.size() + 1 > sizeof(((sockaddr_un*)nullptr)->sun_path)) return false;\n+",
      "path": "src/netbase.cpp",
      "position": 26,
      "original_position": 15,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "892e0f4fae411ee731e35e45ef600e42824edccd",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: if you touch again we could also check here whether the path exists and return an appropriate error if it doesn't?\r\n\r\nI tried some (wrong) unix onion options, like `onion=unix:%2Frun%2Ftor%2Fsocks` and `onion=127.0.0.1:9050` and these are accepted by init, but (obviously) fail to connect:\r\n\r\n```\r\n2023-10-17T10:25:01Z connect() to 127.0.0.1:9050 failed: No such file or directory (2)\r\n2023-10-17T10:25:01Z Cannot connect to socket for 127.0.0.1:9050\r\n2023-10-17T10:25:02Z New block-relay-only v1 peer connected: version: 70016, blocks=812593, peer=2\r\n2023-10-17T10:25:07Z Cannot connect to socket for 117.86.73.230:8333\r\n2023-10-17T10:25:08Z Cannot connect to socket for 203.91.85.237:8333\r\n2023-10-17T10:25:08Z connect() to 127.0.0.1:9050 failed: No such file or directory (2)\r\n2023-10-17T10:25:08Z Cannot connect to socket for 127.0.0.1:9050\r\n2023-10-17T10:25:14Z Cannot connect to socket for 178.66.156.78:8333\r\n```\r\n\r\nThe logs are _kind of_ clear about this, but could be improved.",
      "created_at": "2023-10-17T10:26:31Z",
      "updated_at": "2023-10-17T11:02:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1361886774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361886774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 226,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362521247",
      "pull_request_review_id": 1682982202,
      "id": 1362521247,
      "node_id": "PRRC_kwDOABII585RNmyf",
      "diff_hunk": "@@ -210,6 +210,24 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault, DNSLookupF\n     return Lookup(name, portDefault, /*fAllowLookup=*/false, dns_lookup_function).value_or(CService{});\n }\n \n+bool IsUnixSocketPath(const std::string& name)\n+{\n+#if HAVE_SOCKADDR_UN\n+    if (name.find(ADDR_PREFIX_UNIX) != 0) return false;\n+\n+    // Split off \"unix:\" prefix\n+    std::string str{name.substr(ADDR_PREFIX_UNIX.length())};\n+\n+    // Path size limit is platform-dependent\n+    // see https://manpages.ubuntu.com/manpages/xenial/en/man7/unix.7.html\n+    if (str.size() + 1 > sizeof(((sockaddr_un*)nullptr)->sun_path)) return false;\n+",
      "path": "src/netbase.cpp",
      "position": 26,
      "original_position": 15,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "892e0f4fae411ee731e35e45ef600e42824edccd",
      "in_reply_to_id": 1361886774,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was discussed but we don't normally check this kind of option that deeply. For example, you can set `-onion=127.0.0.1:9050` and if Tor isn't running, all you get is a log message. The user should be able to start Tor after Bitcoin.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/27375#discussion_r1217775186",
      "created_at": "2023-10-17T17:34:20Z",
      "updated_at": "2023-10-17T17:36:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1362521247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362521247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 226,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365639888",
      "pull_request_review_id": 1687899757,
      "id": 1365639888,
      "node_id": "PRRC_kwDOABII585RZgLQ",
      "diff_hunk": "@@ -1265,10 +1265,23 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n   ]], [[\n     getauxval(AT_HWCAP);\n   ]])],\n- [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval)]) ],\n+ [ AC_MSG_RESULT([yes]); HAVE_STRONG_GETAUXVAL=1; AC_DEFINE([HAVE_STRONG_GETAUXVAL], [1], [Define this symbol to build code that uses getauxval]) ],\n  [ AC_MSG_RESULT([no]); HAVE_STRONG_GETAUXVAL=0 ]\n )\n \n+# Check for UNIX sockets\n+AC_MSG_CHECKING(for sockaddr_un)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <sys/socket.h>\n+    #include <sys/un.h>\n+  ]], [[\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  ]])],\n+ [ AC_MSG_RESULT([yes]); HAVE_SOCKADDR_UN=1; AC_DEFINE([HAVE_SOCKADDR_UN], [1], [Define this symbol if platform supports unix domain sockets]) ],",
      "path": "configure.ac",
      "position": null,
      "original_position": 18,
      "commit_id": "b6da3897f36547139b83abde486bddbf50dab54e",
      "original_commit_id": "e60df927bffa844d08fa908128b10303b352cfc5",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There shouldn't be a need for the `HAVE_SOCKADDR_UN=1` or `HAVE_SOCKADDR_UN=0` in the `AC_MSG_RESULT`'s?",
      "created_at": "2023-10-19T14:27:36Z",
      "updated_at": "2023-10-19T14:27:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27375#discussion_r1365639888",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365639888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1281,
      "side": "RIGHT"
    }
  ]
}