{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569",
    "id": 1999181445,
    "node_id": "PR_kwDOABII5853KRaF",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30569",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30569.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30569.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b38a259d1e2749876d4e3a15f218b4f257049320",
    "number": 30569,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "node: reduce unsafe uint256S usage",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since fad2991ba073de0bd1f12e42bf0fbaca4a265508, `uint256S` has been [deprecated](https://github.com/bitcoin/bitcoin/pull/30482/commits/fad2991ba073de0bd1f12e42bf0fbaca4a265508#diff-800776e2dda39116e889839f69409571a5d397de048a141da7e4003bc099e3e2R138) because it is less robust than the `base_blob::FromHex()` introduced in [the same PR](https://github.com/bitcoin/bitcoin/pull/30482). Specifically, it tries to recover from length-mismatches, recover from untrimmed whitespace, 0x-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters. _(see also #30532)_\r\n\r\nThis PR carves out the few `uint256S` callsites that may potentially prove a bit more controversial to change because they deal with user input and - potentially - backwards incompatible behaviour change.\r\n\r\nAfter this PR, the remaining work to remove `uint256S` completely is almost entirely mechanical and/or test related. I will open that PR once #30560 is merged because it builds on that.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-08-01T18:59:05Z",
    "updated_at": "2024-08-05T11:02:23Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "6ce44cf76e02794c95b29d70bede94e1cd997560",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stickies-v:2024-08/hex-arg-parse",
      "ref": "2024-08/hex-arg-parse",
      "sha": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 254966,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-02T16:35:06Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2aff9a36c352640a263e8b5de469710f7e80eb54",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35950,
        "stargazers_count": 77725,
        "watchers_count": 77725,
        "size": 264832,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-05T11:55:09Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-05T11:59:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 72,
    "deletions": 42,
    "changed_files": 7,
    "commits": 4,
    "review_comments": 16,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2263761475,
      "node_id": "IC_kwDOABII586G7kJD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2263761475",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T18:59:09Z",
      "updated_at": "2024-08-03T11:44:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30569).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30571](https://github.com/bitcoin/bitcoin/pull/30571) (test: [refactor] Use g_rand_ctx directly by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#issuecomment-2263761475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569"
    },
    {
      "event": "reviewed",
      "id": 2213720639,
      "node_id": "PRR_kwDOABII586D8rI_",
      "url": null,
      "actor": null,
      "commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Not sure about the breaking changes. `-noassumevalid` seems common https://github.com/search?q=noassumevalid&type=code",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2213720639",
      "submitted_at": "2024-08-01T19:31:24Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "labeled",
      "id": 13731528261,
      "node_id": "LE_lADOABII586RoByHzwAAAAMydn5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13731528261",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T20:07:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcxM2Q5MmUyOWY0Zjg4MjAzMWVkZTI5MDM2NjRlOGU2NDk1MjYyOWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/713d92e29f4f882031ede2903664e8e64952629d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/713d92e29f4f882031ede2903664e8e64952629d",
      "tree": {
        "sha": "f781f249b76f52b798725afcb1b42aa18f2f8e40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f781f249b76f52b798725afcb1b42aa18f2f8e40"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f781f249b76f52b798725afcb1b42aa18f2f8e40\nparent 9774a958b501a6d439a734e18b29e04f59f973f6\nauthor stickies-v <stickies-v@protonmail.com> 1722613806 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722616402 +0100\n\nutil: refactor: change IsHexNumber to TrySanitizeHexNumber\n\nThis refactor enables future commits to allow passing user input\nhex numbers into the strictly validated base_blob::FromHex().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmatCo0ACgkQXLHObl5m\np1dfsRAAo3XbmZjADOepPORZpet1d6YnsVV8o0hCRE1X8jXtD/lWuZC4F6OY2dBv\nV5Cv474zHFJAkVkJQVwikajVJdBZVyZw+YqcUzWZgRD9I2okM02dSIGVNChWyxkW\ncNMggt5FgK3IyiOAXR5PheO/G2gkmWnZhTj3Oi1lTbrnAsoGulFZc16nHREpK6F0\ndjwokDNz96XHExjdpFYp8/dxdAstA7SbMPsCe/wzUwY69uZ/QXFEvI5fzj2K1A4B\n6ebvyj36YQy6jumCIUxfkrR2z1/Z3CJg1lwtMJ+azENSSxQZVHk8wWo1xi2OuKth\nO16dH1cAx9iJ4Shm2jpMvB4Ov2U9DryFHU5YBp4bcvs5QwfboZfn2KiUH5gQ4n/1\nT8HA8x5WY3TPpyvPzQb2Ptv2djKDSx1QNruD4J6YGhujG3VcEI+XL6+vOn5LMXpm\n+kpPmxG5TyjvxeEzx/vAwnwG/g8sjC8vZ+OMqDZajJpPMC+TqYN38gkk9fZ5q8b4\nKCRrVslUvZ0JeLNKapT14xWtmbD5dK2U0WzHThpTf+zM26PkTE2T6+CIvAYvAnIr\ngyu6MC5IyLTc2r4DujR0zusUuIeWc0P1eiYi+yYmeX90lG+jXBddQpARgCARDwG2\nbURclgtCu9r7gQnLEyzZT41k0lXkF8NYoXESho57Gavam/Q8ZGs=\n=sQ9r\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9774a958b501a6d439a734e18b29e04f59f973f6",
          "sha": "9774a958b501a6d439a734e18b29e04f59f973f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9774a958b501a6d439a734e18b29e04f59f973f6"
        }
      ],
      "message": "util: refactor: change IsHexNumber to TrySanitizeHexNumber\n\nThis refactor enables future commits to allow passing user input\nhex numbers into the strictly validated base_blob::FromHex().",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T16:33:22Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T15:50:06Z"
      },
      "sha": "713d92e29f4f882031ede2903664e8e64952629d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFhODAzODM0ZmI1ZDU4NzhjMzg2MGQ5M2RmMmQwNjNiZmZhOGNlODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa803834fb5d5878c3860d93df2d063bffa8ce89",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aa803834fb5d5878c3860d93df2d063bffa8ce89",
      "tree": {
        "sha": "95df507a3c513e814972295a9a546042d1790e1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95df507a3c513e814972295a9a546042d1790e1f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 95df507a3c513e814972295a9a546042d1790e1f\nparent 713d92e29f4f882031ede2903664e8e64952629d\nauthor stickies-v <stickies-v@protonmail.com> 1722002508 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722616462 +0100\n\nnode: use uint256::FromHex for -minimumchainwork parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input is longer than 64 hex characters.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmatCo4ACgkQXLHObl5m\np1cikQ//X7/Xx0TZYBTfLgH7n5TLZem5NI74v3N8y1JJ0G/TNUUxuJR1BTPDJa42\nhASiKe8gbAgbGsIlc+2YnbA4GhUk1zzxzuPeFc5p0liQZ7WCnhHbB1vmEds6pZWR\nZuDVQf1x/vDINd6BnVbkm6n3Qf9Bag7cBgIdKASmunupGChuiqMMJyRp+pgWwwaN\nljrItmAbc9XfjMNwU1oujR8AY3qY24AI7IjPRu3LuGvKZMnKVsbOjXRQ38FmnHju\n9ybwL3vwyu46xMyoTDFljKlz4943FK6YkhFui8UAWVPeZaZb4UjTzs9E1KyPpw28\nJgJQ0dslU/KTV3/ZcOZFMVzwimiTE3RmjoxfZ3aAV+lLUhbTARJy+/Q6LInLBAd+\nOxc/ItcM1/+RwQSfZ36CQY8TEWQBUKIaDKp1/gRkICZ1rUXj/nIPhz3PWhArspxk\nK1hh6wKCmq4S2yG4GIDKNMT9tUNvyRtx2NWHDUs3V2bz3ow3yH5A/2zeZKEH3v4u\nqsGX3CgJXS/DccPT7N1ZNRzLtkK0Hb+1b0wfsP27vSbN2zmgnUF/a6NriPVsmsYT\n+yXgJx+4Rsy0OuXMQ1hTgYG9Eu9MsnirL70y8UN9034yS9qNsART+JqGAgURUxx3\nz4CX9SC41XiMTVb255Rfo5i3PZFQs4AaBE6j3DZ2lgl9YNklgdw=\n=KJDk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/713d92e29f4f882031ede2903664e8e64952629d",
          "sha": "713d92e29f4f882031ede2903664e8e64952629d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/713d92e29f4f882031ede2903664e8e64952629d"
        }
      ],
      "message": "node: use uint256::FromHex for -minimumchainwork parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input is longer than 64 hex characters.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T16:34:22Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T14:01:48Z"
      },
      "sha": "aa803834fb5d5878c3860d93df2d063bffa8ce89"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2OGE4YTE1NDQzYjQ1NGY4ZDdjNmZjYjJiNzY4MzU0YjY2MDUxOWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/968a8a15443b454f8d7c6fcb2b768354b660519e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/968a8a15443b454f8d7c6fcb2b768354b660519e",
      "tree": {
        "sha": "675d76898329c607932978a7ae0d62b64976b9a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/675d76898329c607932978a7ae0d62b64976b9a1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 675d76898329c607932978a7ae0d62b64976b9a1\nparent aa803834fb5d5878c3860d93df2d063bffa8ce89\nauthor stickies-v <stickies-v@protonmail.com> 1722003025 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722616462 +0100\n\nnode: use uint256::FromHex for -assumevalid parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input contains invalid hex characters, or when it is\nnot exactly 64 characters long.\n\nAlso make feature_assumevalid.py more robust by using CBlock.hash\nwhich is guaranteed to be 64 characters long, as opposed to the\nvariable-length hex(CBlock.sha256)\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmatCo4ACgkQXLHObl5m\np1dIwA//ar9LdPoqMDn/J4qnxFzFdheX3WWIIVphMNJATVn2n4CHfhF5qMpuHAWr\nGHynvoBFyxmgiKTbLnUj5RovaoatUhi99sLLsVeY9LvSPGN2MgiTWQ65H5Eqy/PQ\nmrsZbPnmVxI7or/cCluULUq/I68CL36W1wheXcErFtShwE6n0KdgAAthM5L6uElW\nof1dY91ZL2LRsfBVhHnP3AEzQvGBaCQJq5/ARAiYdIkteYqOsUEBNuQyNJwVxp9L\nOW4s9ehqEJI4uOQFHylbAspK4KdwxJmQLQoPWEITeNM/Og3mUqDWM4MU2oEleQ1H\nHGMOgOyzrgPhZdSViMjnPycgzp8VR8ulcbX7NUKbb1bPhHPO3itVcMn+gnQ0189W\n0AoggW25D7dsuWtJFLO2kvsEjlz7nNp/q7Bb63ZFs9fk0uXynOs8W5QtlvnwyRdQ\ni93R44otsJC404/eNSB2dXxrAGmRDhvooXBVfa/C7+RHtlmWz/O0CW/hVw52d9C4\nuYAiH0aWoykgNlK8ddvgg6/u7CwQ3P0VPKuertEm3/IIWsuxr2pWoWqcYaO0mF0l\nCYCwBZ3idLQQkKW60T2mxGPiB/OV5KT5nbA6vIimaCiQBDVs7NkV3H/AEQFofnYH\nEjgrLRqfY3Vw2+L1H7Fiq2Mw8G56dVC+LJjUdUW/ybj4LN2RcBY=\n=DQh+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa803834fb5d5878c3860d93df2d063bffa8ce89",
          "sha": "aa803834fb5d5878c3860d93df2d063bffa8ce89",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aa803834fb5d5878c3860d93df2d063bffa8ce89"
        }
      ],
      "message": "node: use uint256::FromHex for -assumevalid parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input contains invalid hex characters, or when it is\nnot exactly 64 characters long.\n\nAlso make feature_assumevalid.py more robust by using CBlock.hash\nwhich is guaranteed to be 64 characters long, as opposed to the\nvariable-length hex(CBlock.sha256)",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T16:34:22Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T14:10:25Z"
      },
      "sha": "968a8a15443b454f8d7c6fcb2b768354b660519e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzOGEyNTlkMWUyNzQ5ODc2ZDRlM2ExNWYyMThiNGYyNTcwNDkzMjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b38a259d1e2749876d4e3a15f218b4f257049320",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b38a259d1e2749876d4e3a15f218b4f257049320",
      "tree": {
        "sha": "43bc4040ef4168ec5bcfde89a3077c4862c69ade",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43bc4040ef4168ec5bcfde89a3077c4862c69ade"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 43bc4040ef4168ec5bcfde89a3077c4862c69ade\nparent 968a8a15443b454f8d7c6fcb2b768354b660519e\nauthor stickies-v <stickies-v@protonmail.com> 1722357059 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722616462 +0100\n\nrandom: use uint256::FromHex for RANDOM_CTX_SEED\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by requiring RANDOM_CTX_SEED\nto be up to a 64 char hex string, whereas previously any string would\nbe accepted, with non-hex characters silently ignored and strings\nlonger than 64 characters silently trimmed.\n\nAdditionally, and unrelatedly, make RANDOM_CTX_SEED inline constexpr\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmatCo4ACgkQXLHObl5m\np1fzcQ/8CW+suiNU/ci3/nKRuok9gU8P9rMAC3gqOallLvlnreTaU1zpGnN3GYZP\nwSeO0138eLjMVG4Z8naoLOvnsiiMV8JTMA+K9/gXvnhmPgMfmpR/JWLu9+se3Ulx\nP49zerrUXzsnW0nh4VuRrY3Fe5xwLjZrkz1EH6YOthP1/HRX4COkW4d8ZLrRK0Vb\nWYDSsvzT4qWw698uy131qOgG/QxVwfLslojhGVepEUeM6uEw1h4LrnDizcHpovOg\nqOWosDpsYX1d3D+mRY7QK/RkFVLi7U4XrlN0myQ7XeBwT6vF5179Q9XwAZmdN7sj\nMUryI0fKahPCXqYvwcgb5HXhvhMApB8+dlLVfHK7MK/wezmQwABLkP36tvPQhBg0\njNB2HtADucjmj89DlsjZ1o/LrA6jkAPeStGZ6KEhovUmQhGI25t+79SHPRfNBxfp\nBPwrECVT9eB6E8PAYmkRuZDfuQx+SyiPqbbpmiN0z2goM1SzJBkA478xEiQ7npjV\njPC4Gc9/HQnNw2AXlD4hBuivRj/0U4cNuDuSbsMkpYf+7yMtxzZP08eeVtKgsZG0\ng8w8G/kPuWd12GXQuYcPOMrLyQymQUHqXS2D7FprEOF6ffdcKuzVPinvxeKhN759\nZmSTg4AUuTH5G0Th1QyEDO90tOwVXzl9XvRW8erySdrzoQRv+Jg=\n=ZBlC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/968a8a15443b454f8d7c6fcb2b768354b660519e",
          "sha": "968a8a15443b454f8d7c6fcb2b768354b660519e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/968a8a15443b454f8d7c6fcb2b768354b660519e"
        }
      ],
      "message": "random: use uint256::FromHex for RANDOM_CTX_SEED\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by requiring RANDOM_CTX_SEED\nto be up to a 64 char hex string, whereas previously any string would\nbe accepted, with non-hex characters silently ignored and strings\nlonger than 64 characters silently trimmed.\n\nAdditionally, and unrelatedly, make RANDOM_CTX_SEED inline constexpr",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T16:34:22Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-30T16:30:59Z"
      },
      "sha": "b38a259d1e2749876d4e3a15f218b4f257049320"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13744302692,
      "node_id": "HRFPE_lADOABII586RoByHzwAAAAMzOWpk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744302692",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:35:07Z"
    },
    {
      "event": "commented",
      "id": 2265777270,
      "node_id": "IC_kwDOABII586HDQR2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2265777270",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:44Z",
      "updated_at": "2024-08-02T16:44:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks a lot for the quick approach feedback, @maflcko. Force pushed to minimize breaking changes by repurposing `IsHexNumber()` to `TrySanitizeHexNumber()` and allowing < 64 characters for `-minimumchainwork` and `RANDOM_CTX_SEED`, and to address the broken `-no<parameter>`  behaviour.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#issuecomment-2265777270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569"
    },
    {
      "event": "mentioned",
      "id": 13744416016,
      "node_id": "MEE_lADOABII586RoByHzwAAAAMzOyUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744416016",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:46Z"
    },
    {
      "event": "subscribed",
      "id": 13744416038,
      "node_id": "SE_lADOABII586RoByHzwAAAAMzOyUm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744416038",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:46Z"
    },
    {
      "event": "reviewed",
      "id": 2217100926,
      "node_id": "PRR_kwDOABII586EJkZ-",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for clearing these up, please see my observations.",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2217100926",
      "submitted_at": "2024-08-03T19:19:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "reviewed",
      "id": 2217172418,
      "node_id": "PRR_kwDOABII586EJ13C",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2217172418",
      "submitted_at": "2024-08-03T19:22:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "reviewed",
      "id": 2218701543,
      "node_id": "PRR_kwDOABII586EPrLn",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2218701543",
      "submitted_at": "2024-08-05T11:02:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700712603",
      "pull_request_review_id": 2213720639,
      "id": 1700712603,
      "node_id": "PRRC_kwDOABII585lXtCb",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if it makes sense to add an option to `FromHex` to allow parsing of \"hex numbers\", which would remove the prefix and only reject too large or junk input?\r\n\r\nIn any case, you can remove `IsHexNumber`?",
      "created_at": "2024-08-01T19:24:19Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700712603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700712603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "LEFT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700717783",
      "pull_request_review_id": 2213720639,
      "id": 1700717783,
      "node_id": "PRRC_kwDOABII585lXuTX",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I presume this will break, when someone sets `-noassumevalid`?\r\n\r\n```\r\nError: Invalid assumevalid block hash specified (0), must be 64 character hex\r\n",
      "created_at": "2024-08-01T19:29:35Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700717783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700717783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700718302",
      "pull_request_review_id": 2213720639,
      "id": 1700718302,
      "node_id": "PRRC_kwDOABII585lXube",
      "diff_hunk": "@@ -9,24 +9,26 @@\n #include <uint256.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            uint256 rv;\n+            rv.SetHexDeprecated(num);\n+            return rv;",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems fine to just use `Assert(FromHex(...))`?",
      "created_at": "2024-08-01T19:30:07Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700718302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700718302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700826270",
      "pull_request_review_id": 2213904151,
      "id": 1700826270,
      "node_id": "PRRC_kwDOABII585lYIye",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700717783,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks, didn't think of that. Will add a \"0\" check:\r\n\r\n<details>\r\n<summary>git diff on c0d508e69c</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/chainstatemanager_args.cpp b/src/node/chainstatemanager_args.cpp\r\nindex 8085aa65dc..60cee3dd78 100644\r\n--- a/src/node/chainstatemanager_args.cpp\r\n+++ b/src/node/chainstatemanager_args.cpp\r\n@@ -31,7 +31,7 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\r\n \r\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\r\n \r\n-    if (auto value{args.GetArg(\"-minimumchainwork\")}) {\r\n+    if (auto value{args.GetArg(\"-minimumchainwork\")}; value && *value != \"0\") {\r\n         if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\r\n             opts.minimum_chain_work = UintToArith256(*min_work);\r\n         } else {\r\n@@ -39,7 +39,7 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\r\n         }\r\n     }\r\n \r\n-    if (auto value{args.GetArg(\"-assumevalid\")}) {\r\n+    if (auto value{args.GetArg(\"-assumevalid\")}; value && *value != \"0\") {\r\n         if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\r\n             opts.assumed_valid_block = *block_hash;\r\n         } else {\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2024-08-01T20:47:54Z",
      "updated_at": "2024-08-01T20:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700826270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700826270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702084437",
      "pull_request_review_id": 2216001026,
      "id": 1702084437,
      "node_id": "PRRC_kwDOABII585lc79V",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700712603,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the suggestion. I've been exploring different options here. Adding a `bool is_num` optional param to `uint256::FromHex()` is an option, but felt a bit awkward because it'd be a uint256-specific parameter (doesn't make sense for `transaction_identifier`).\r\n\r\nSince we only need this for user input validation, I've now taken a different approach where I've repurposed `IsHexNumber()` -> `TrySanitizeHexNumber()`. I think this minimizes churn (e.g. the test suite can largely be kept as is), isolates user input validation from code that's mostly used internally and benefits from being strict and simple.",
      "created_at": "2024-08-02T16:39:43Z",
      "updated_at": "2024-08-02T16:39:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702084437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702084437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "LEFT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702085339",
      "pull_request_review_id": 2216002612,
      "id": 1702085339,
      "node_id": "PRRC_kwDOABII585lc8Lb",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700717783,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`-minimumchainwork` now accepts hex number input (including \"0\") again, and `-assumevalid` has an extra `*value != \"0\"` check. Marking as resolved.",
      "created_at": "2024-08-02T16:40:44Z",
      "updated_at": "2024-08-02T16:40:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702085339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702085339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702086239",
      "pull_request_review_id": 2216004069,
      "id": 1702086239,
      "node_id": "PRRC_kwDOABII585lc8Zf",
      "diff_hunk": "@@ -9,24 +9,26 @@\n #include <uint256.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            uint256 rv;\n+            rv.SetHexDeprecated(num);\n+            return rv;",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700718302,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (and `RANDOM_CTX_SEED` now also accepts < 64 character input string), thanks.",
      "created_at": "2024-08-02T16:41:34Z",
      "updated_at": "2024-08-02T16:41:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702086239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702086239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702827034",
      "pull_request_review_id": 2217100926,
      "id": 1702827034,
      "node_id": "PRRC_kwDOABII585lfxQa",
      "diff_hunk": "@@ -27,7 +27,7 @@ FUZZ_TARGET(hex)\n     if (IsHex(random_hex_string)) {\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n-    (void)IsHexNumber(random_hex_string);\n+    (void)TrySanitizeHexNumber(random_hex_string);",
      "path": "src/test/fuzz/hex.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would it make sense to test the `result_size` param here, too?",
      "created_at": "2024-08-03T16:36:16Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702827034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702827034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702836629",
      "pull_request_review_id": 2217100926,
      "id": 1702836629,
      "node_id": "PRRC_kwDOABII585lfzmV",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it a bit surprising that a result size of 0 returns a value with size 4.\r\nDo you think it would make sense to ignore negative values instead, so that a `result_size` of 0 returns an empty string instead, to make it slightly more intuitive?",
      "created_at": "2024-08-03T16:42:54Z",
      "updated_at": "2024-08-03T19:22:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702836629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702836629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 458,
      "original_line": 458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702840728",
      "pull_request_review_id": 2217100926,
      "id": 1702840728,
      "node_id": "PRRC_kwDOABII585lf0mY",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)\n {\n-    if (str.substr(0, 2) == \"0x\") str.remove_prefix(2);\n-    for (char c : str) {\n-        if (HexDigit(c) < 0) return false;\n+    input = util::RemovePrefixView(input, \"0x\");\n+    if (input.empty() || (result_size && input.size() > result_size)) return std::nullopt;\n+    for (char c : input) {\n+        if (HexDigit(c) < 0) return std::nullopt;\n     }\n-    // Return false for empty string or \"0x\".\n-    return str.size() > 0;\n+    std::string result{input};\n+    if (input.size() < result_size) {",
      "path": "src/util/strencodings.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since we've checked `>` before, maybe it would be more self-explanatory to check whether we're equal or not, since it's a stronger guarantee:\r\n```suggestion\r\n    if (input.size() != result_size) {\r\n```",
      "created_at": "2024-08-03T16:47:13Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702840728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702840728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847680",
      "pull_request_review_id": 2217100926,
      "id": 1702847680,
      "node_id": "PRRC_kwDOABII585lf2TA",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)",
      "path": "src/util/strencodings.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does it still make sense to suffix it with `Number` after the change?\r\nAnd besides the `TryParseHex` below, it doesn't seem common to prefix optional returning methods with `Try` - the return type already states that the operation might not succeed, `Try` seems redundant.",
      "created_at": "2024-08-03T16:59:53Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702847680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847776",
      "pull_request_review_id": 2217100926,
      "id": 1702847776,
      "node_id": "PRRC_kwDOABII585lf2Ug",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding\n+ *                    if input is too short, or a std::nullopt return\n+ *                    value if input is too long. Disabled if <= 0.",
      "path": "src/util/strencodings.h",
      "position": 16,
      "original_position": 16,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can it be negative?",
      "created_at": "2024-08-03T17:00:58Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702847776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863593",
      "pull_request_review_id": 2217100926,
      "id": 1702863593,
      "node_id": "PRRC_kwDOABII585lf6Lp",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n+        if (auto sanitized_hex{TrySanitizeHexNumber(*value, /*result_size=*/64)}) {\n+            opts.minimum_chain_work = UintToArith256(*uint256::FromHex(*sanitized_hex));\n+        } else {\n             return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}; value && *value != \"0\") {",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't we still set the `assumed_valid_block` value when it's `0`, given that `defaultAssumeValid` isn't `0`?",
      "created_at": "2024-08-03T19:14:48Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863957",
      "pull_request_review_id": 2217100926,
      "id": 1702863957,
      "node_id": "PRRC_kwDOABII585lf6RV",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding",
      "path": "src/util/strencodings.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we could document how to disable this param - currently with 0, I recommend considering negative numbers",
      "created_at": "2024-08-03T19:18:30Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702864451",
      "pull_request_review_id": 2217172418,
      "id": 1702864451,
      "node_id": "PRRC_kwDOABII585lf6ZD",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/4).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*result_size=*/4).value(), \"1234\");\r\n```",
      "created_at": "2024-08-03T19:22:33Z",
      "updated_at": "2024-08-03T19:22:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702864451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702864451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 459,
      "original_line": 459,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703942199",
      "pull_request_review_id": 2218701543,
      "id": 1703942199,
      "node_id": "PRRC_kwDOABII585lkBg3",
      "diff_hunk": "@@ -7,26 +7,29 @@\n #include <logging.h>\n #include <random.h>\n #include <uint256.h>\n+#include <util/check.h>\n+#include <util/strencodings.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            auto sanitized{*Assert(TrySanitizeHexNumber(num, uint256::size() * 2))}; // RANDOM_CTX_SEED must be up to 64 char hex string",
      "path": "src/test/util/random.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just don't see the use case to accept accidentally truncated input silently. Why not just fa295215f6fa3b85b0387511920f75eeb3e12b58?",
      "created_at": "2024-08-05T11:02:23Z",
      "updated_at": "2024-08-05T11:02:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1703942199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703942199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    }
  ]
}