{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065",
    "id": 1860913108,
    "node_id": "PR_kwDOABII585u60fU",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30065",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30065.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30065.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
    "number": 30065,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "init: fixes file descriptor accounting",
    "user": {
      "login": "sr-gi",
      "id": 6665628,
      "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sr-gi",
      "html_url": "https://github.com/sr-gi",
      "followers_url": "https://api.github.com/users/sr-gi/followers",
      "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
      "organizations_url": "https://api.github.com/users/sr-gi/orgs",
      "repos_url": "https://api.github.com/users/sr-gi/repos",
      "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sr-gi/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The current logic for file descriptor accounting is pretty convoluted and hard to follow. This is partially caused by the lack of documentation plus non-intuitive variable naming (which was more intuitive when fewer things were accounted for, but\r\nhasn't aged well). This has led to this accounting being error-prone and hard to maintain (as shown in the first commit of this PR).\r\n\r\nRedefine some of the constants, plus document what are we accounting for so this can be extended more easily\r\n\r\nFixes #18911\r\n",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-05-08T19:47:35Z",
    "updated_at": "2024-06-26T01:01:03Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "6ff11a9d47f85c8c2edbf27bf53f6d813faf346b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sr-gi:2024-05-fdcount",
      "ref": "2024-05-fdcount",
      "sha": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 217783888,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3ODM4ODg=",
        "name": "bitcoin",
        "full_name": "sr-gi/bitcoin",
        "owner": {
          "login": "sr-gi",
          "id": 6665628,
          "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sr-gi",
          "html_url": "https://github.com/sr-gi",
          "followers_url": "https://api.github.com/users/sr-gi/followers",
          "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
          "organizations_url": "https://api.github.com/users/sr-gi/orgs",
          "repos_url": "https://api.github.com/users/sr-gi/repos",
          "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sr-gi/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sr-gi/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sr-gi/bitcoin",
        "archive_url": "https://api.github.com/repos/sr-gi/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sr-gi/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sr-gi/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sr-gi/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sr-gi/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sr-gi/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sr-gi/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sr-gi/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sr-gi/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sr-gi/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sr-gi/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sr-gi/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sr-gi/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sr-gi/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sr-gi/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sr-gi/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sr-gi/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sr-gi/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sr-gi/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sr-gi/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sr-gi/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sr-gi/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sr-gi/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sr-gi/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sr-gi/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sr-gi/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sr-gi/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sr-gi/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sr-gi/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sr-gi/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sr-gi/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sr-gi/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sr-gi/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sr-gi/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sr-gi/bitcoin/hooks",
        "svn_url": "https://github.com/sr-gi/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 243518,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-24T17:16:33Z",
        "created_at": "2019-10-27T00:01:30Z",
        "updated_at": "2024-05-28T15:33:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f7a6d3444973421bfd35815fabe552874f462467",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35573,
        "stargazers_count": 77023,
        "watchers_count": 77023,
        "size": 261867,
        "default_branch": "master",
        "open_issues_count": 691,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-26T01:02:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-06-26T01:07:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 24,
    "deletions": 17,
    "changed_files": 1,
    "commits": 3,
    "review_comments": 25,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 2101310807,
      "node_id": "IC_kwDOABII5859P3VX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2101310807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T19:47:38Z",
      "updated_at": "2024-06-26T01:01:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30065).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2130057647) |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2101324949), [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2051226362) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30338](https://github.com/bitcoin/bitcoin/pull/30338) (RFC: Instanced logs by theuni)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2101310807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "reviewed",
      "id": 2046526669,
      "node_id": "PRR_kwDOABII5855-4TN",
      "url": null,
      "actor": null,
      "commit_id": "a44da681f56d0bbae372c6c638e0daa9d828c9b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2046526669",
      "submitted_at": "2024-05-08T19:57:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "commented",
      "id": 2101324949,
      "node_id": "IC_kwDOABII5859P6yV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2101324949",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T19:57:37Z",
      "updated_at": "2024-05-08T19:57:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2101324949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "commented",
      "id": 2101333852,
      "node_id": "IC_kwDOABII5859P89c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2101333852",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T20:03:04Z",
      "updated_at": "2024-05-08T20:03:30Z",
      "author_association": "MEMBER",
      "body": "I think it is worth mentioning that the current approach is defining the minimum amount of file descriptions required without accounting for a single connection*, this means that if we are at the bare minimum, we will run but won't be able to connect to any nodes. This is consistent with the current logic in master, but I think it's not the way it should be.\r\n\r\nI'm happy to add another commit addressing this, but I've rathered start approaching this sticking to the same assumptions as master.\r\n\r\n\\* This actually accounts for manual connections, which may never happen, but not to any of our outbound. If we happen to not create any manuals we'd have 8 slots (`MAX_ADDNODE_CONNECTIONS`) for outbounds",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2101333852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "commented",
      "id": 2101340385,
      "node_id": "IC_kwDOABII5859P-jh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2101340385",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T20:07:29Z",
      "updated_at": "2024-05-08T20:07:29Z",
      "author_association": "MEMBER",
      "body": "@vasild you may be interested in this. I decided to fix it when seeing you extending the current logic in #29415",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2101340385",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "mentioned",
      "id": 12748780186,
      "node_id": "MEE_lADOABII586IRoBHzwAAAAL34vKa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12748780186",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T20:07:31Z"
    },
    {
      "event": "subscribed",
      "id": 12748780195,
      "node_id": "SE_lADOABII586IRoBHzwAAAAL34vKj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12748780195",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T20:07:31Z"
    },
    {
      "event": "reviewed",
      "id": 2051226362,
      "node_id": "PRR_kwDOABII5856Qzr6",
      "url": null,
      "actor": null,
      "commit_id": "927f153845ce61c82f038c7fa9a11ecface43d18",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2051226362",
      "submitted_at": "2024-05-11T15:57:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "reviewed",
      "id": 2057274200,
      "node_id": "PRR_kwDOABII5856n4NY",
      "url": null,
      "actor": null,
      "commit_id": "927f153845ce61c82f038c7fa9a11ecface43d18",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2057274200",
      "submitted_at": "2024-05-15T08:28:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "labeled",
      "id": 12830887943,
      "node_id": "LE_lADOABII586IRoBHzwAAAAL8x9AH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12830887943",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-16T10:09:24Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 12830887953,
      "node_id": "LE_lADOABII586IRoBHzwAAAAL8x9AR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12830887953",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-16T10:09:24Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2123884329,
      "node_id": "IC_kwDOABII585-l-cp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2123884329",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T05:17:00Z",
      "updated_at": "2024-05-22T05:17:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The current logic for file descriptor accounting is pretty convoluted and hard to follow.\r\n\r\nConcept ACK, I stumbled on this recently in https://github.com/bitcoin/bitcoin/pull/29415",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2123884329",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "reviewed",
      "id": 2076548666,
      "node_id": "PRR_kwDOABII5857xZ46",
      "url": null,
      "actor": null,
      "commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 55f16f56f4\r\n\r\nMight as well squash the last commit 55f16f56f4 `init: Remove FreeBSD workaround to #2695` into some of the previous ones that touch that line.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2076548666",
      "submitted_at": "2024-05-24T13:14:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwOWRkZWQ1OTU5NmM1ZDg0MTUyYWIxOTliMTM5MDMyZGFhMDNhYzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e09dded59596c5d84152ab199b139032daa03ac3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e09dded59596c5d84152ab199b139032daa03ac3",
      "tree": {
        "sha": "523c448b6f7153519ff9219763fd03e0017d2524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/523c448b6f7153519ff9219763fd03e0017d2524"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdb41e08c4a4fb2743f8ca7c4b8dac52a460e864",
          "sha": "fdb41e08c4a4fb2743f8ca7c4b8dac52a460e864",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fdb41e08c4a4fb2743f8ca7c4b8dac52a460e864"
        }
      ],
      "message": "init: fixes fd accounting regarding poll/select\n\nWe are computing our file descriptors limits based on whether we use\npoll or select. However, we are taking that into account only partially\n(subtracting from fd_max in one case, but from nFD later on). Moreover,\nnBind is also only accounted for partially.\n\nSimplify and fix this logic",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-05-24T14:44:52Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-05-08T19:27:55Z"
      },
      "sha": "e09dded59596c5d84152ab199b139032daa03ac3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12926636029,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMCfM_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926636029",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:28:28Z"
    },
    {
      "event": "commented",
      "id": 2129822038,
      "node_id": "IC_kwDOABII585-8oFW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2129822038",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:29:05Z",
      "updated_at": "2024-05-24T15:29:05Z",
      "author_association": "MEMBER",
      "body": "Thanks for the suggestions @vasild, I've partially covered them and commented on some of the pending ones",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2129822038",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "mentioned",
      "id": 12926643791,
      "node_id": "MEE_lADOABII586IRoBHzwAAAAMCfO5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926643791",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:29:06Z"
    },
    {
      "event": "subscribed",
      "id": 12926643804,
      "node_id": "SE_lADOABII586IRoBHzwAAAAMCfO5c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926643804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:29:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12926734955,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMCflJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926734955",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:36:36Z"
    },
    {
      "event": "labeled",
      "id": 12926735936,
      "node_id": "LE_lADOABII586IRoBHzwAAAAMCflZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926735936",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:36:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2129845442,
      "node_id": "IC_kwDOABII585-8tzC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2129845442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:36:42Z",
      "updated_at": "2024-05-24T15:36:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/25385987025</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2129845442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12926972164,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMCgfEE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926972164",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:57:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12926997418,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMCglOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12926997418",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T15:59:52Z"
    },
    {
      "event": "unlabeled",
      "id": 12928216338,
      "node_id": "UNLE_lADOABII586IRoBHzwAAAAMClO0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12928216338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T18:08:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2082925812,
      "node_id": "PRR_kwDOABII5858Juz0",
      "url": null,
      "actor": null,
      "commit_id": "fa42bf7ee89999b33d4af0600b0d8da1275e5d5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fa42bf7ee89999b33d4af0600b0d8da1275e5d5e\r\n\r\nThis is already an improvement over `master`. Would be nice to resolve https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613422626 as well.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2082925812",
      "submitted_at": "2024-05-28T14:13:43Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "review_requested",
      "id": 12958404679,
      "node_id": "RRE_lADOABII586IRoBHzwAAAAMEYZBH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12958404679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T14:13:47Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12958404834,
      "node_id": "RRE_lADOABII586IRoBHzwAAAAMEYZDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12958404834",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T14:13:47Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12959527051,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMEcrCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12959527051",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T15:25:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12963514695,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMEr4lH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12963514695",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T21:46:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12963521968,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMEr6Ww",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12963521968",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T21:47:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12975730060,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMFae2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12975730060",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T18:25:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13001089376,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMG7OFg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13001089376",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-31T13:59:07Z"
    },
    {
      "event": "commented",
      "id": 2142248272,
      "node_id": "IC_kwDOABII585_sB1Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2142248272",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-31T13:59:50Z",
      "updated_at": "2024-05-31T13:59:50Z",
      "author_association": "MEMBER",
      "body": "> ACK [fa42bf7](https://github.com/bitcoin/bitcoin/commit/fa42bf7ee89999b33d4af0600b0d8da1275e5d5e)\r\n> \r\n> This is already an improvement over `master`. Would be nice to resolve [#30065 (comment)](https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613422626) as well.\r\n\r\nAddressed all comments now",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2142248272",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "reviewed",
      "id": 2092138396,
      "node_id": "PRR_kwDOABII5858s3-c",
      "url": null,
      "actor": null,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK a9e211a5302630635b825655cd984683794aa42c\r\n\r\nNote: this is the last but one commit. The last commit 23f843d816 `init: fix min required fds check and account for outbounds` now contains a single dummy change of removing an empty line. Can/should be dropped altogether. You can `push -f` a9e211a5302630635b825655cd984683794aa42c into this branch.\r\n\r\nThanks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2092138396",
      "submitted_at": "2024-06-01T16:34:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBhNzAzMGQzMTJjODc0MjEzZWIxZDcxMjdjYzcwMWU4NTg0MWJmM2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a7030d312c874213eb1d7127cc701e85841bf3f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0a7030d312c874213eb1d7127cc701e85841bf3f",
      "tree": {
        "sha": "a77e9a8c725293d1b0abb60d695ccb60ac523f68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a77e9a8c725293d1b0abb60d695ccb60ac523f68"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e09dded59596c5d84152ab199b139032daa03ac3",
          "sha": "e09dded59596c5d84152ab199b139032daa03ac3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e09dded59596c5d84152ab199b139032daa03ac3"
        }
      ],
      "message": "init: improves file descriptors accounting and docs\n\nThe current logic for file descriptor accounting is pretty convoluted and hard\nto follow. This is partially caused by the lack of documentation plus non-intuitive\nvariable naming (which was more intuitive when fewer things were accounted for, but\nhasn't aged well). This has led to this accounting being error-prone and hard to maintain\n(as shown in he previous commit).\n\nRedefine some of the constants, plus document what are we accounting for so this can be\nextended more easily\n\nRemove FreeBSD workaround to #2695",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-06-03T14:12:56Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-05-08T19:09:05Z"
      },
      "sha": "0a7030d312c874213eb1d7127cc701e85841bf3f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZlNzY5MjlkNGQ2OGE0Y2E2ZDI3YzU4YzFlMjQzYTY0ZmRjNzBiMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "tree": {
        "sha": "1f875d69588c35234e66609f68041eb61cc8d72b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f875d69588c35234e66609f68041eb61cc8d72b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a7030d312c874213eb1d7127cc701e85841bf3f",
          "sha": "0a7030d312c874213eb1d7127cc701e85841bf3f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0a7030d312c874213eb1d7127cc701e85841bf3f"
        }
      ],
      "message": "init: error out if -maxconnections is negative",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-06-03T14:15:06Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-05-24T15:55:53Z"
      },
      "sha": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13022036589,
      "node_id": "HRFPE_lADOABII586IRoBHzwAAAAMILIJt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022036589",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:15:16Z"
    },
    {
      "event": "commented",
      "id": 2145318356,
      "node_id": "IC_kwDOABII585_3vXU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2145318356",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:16:13Z",
      "updated_at": "2024-06-03T14:16:13Z",
      "author_association": "MEMBER",
      "body": "Nice catch @vasild, I've squashed that into one of the previous commits. It should be good now.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#issuecomment-2145318356",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30065"
    },
    {
      "event": "mentioned",
      "id": 13022051592,
      "node_id": "MEE_lADOABII586IRoBHzwAAAAMILL0I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022051592",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:16:14Z"
    },
    {
      "event": "subscribed",
      "id": 13022051619,
      "node_id": "SE_lADOABII586IRoBHzwAAAAMILL0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022051619",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:16:14Z"
    },
    {
      "event": "reviewed",
      "id": 2130057647,
      "node_id": "PRR_kwDOABII585-9hmv",
      "url": null,
      "actor": null,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#pullrequestreview-2130057647",
      "submitted_at": "2024-06-20T10:27:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594557872",
      "pull_request_review_id": 2046526669,
      "id": 1594557872,
      "node_id": "PRRC_kwDOABII585fCwWw",
      "diff_hunk": "@@ -973,18 +973,16 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n \n     nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n-    // Trim requested connection counts, to fit into system limitations\n-    // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n     if (nFD < MIN_CORE_FILEDESCRIPTORS)\n         return InitError(_(\"Not enough file descriptors available.\"));\n-    nMaxConnections = std::min(nFD - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE, nMaxConnections);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "a44da681f56d0bbae372c6c638e0daa9d828c9b1",
      "in_reply_to_id": null,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Notice how the latter `nMaxConnections` trim is redundant once we limit `nFD = std::min(FD_SETSIZE, nFD);`. Moving things around, plus accounting for `nBind` (which is currently not being accounted for in master), we get:\r\n\r\n```\r\nnMaxConnections = std::max(std::min<int>(nMaxConnections, nFD - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\r\nnMaxConnections = std::min(nMaxConnections, nFD - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE,);\r\n```\r\n\r\n",
      "created_at": "2024-05-08T19:57:09Z",
      "updated_at": "2024-05-08T19:57:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1594557872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594557872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": 984,
      "start_side": "LEFT",
      "line": null,
      "original_line": 987,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601187564",
      "pull_request_review_id": 2057274200,
      "id": 1601187564,
      "node_id": "PRRC_kwDOABII585fcC7s",
      "diff_hunk": "@@ -967,24 +968,29 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n+    if (nFD < MIN_CORE_FDS)\n+        return InitError(strprintf(_(\"Not enough file descriptors available. %d available, %d required.\"), nFD, MIN_CORE_FDS));\n+\n     // Trim requested connection counts, to fit into system limitations\n     // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "927f153845ce61c82f038c7fa9a11ecface43d18",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think now could also be the time to remove this FreeBSD workaround. It was needed because older versions of FreeBSD, used to ship with an old Clang (3.x). However we now require Clang 15+, and the effected version of FreeBSD 10.x, is long EOL.",
      "created_at": "2024-05-15T08:28:58Z",
      "updated_at": "2024-05-15T08:28:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1601187564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601187564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601658971",
      "pull_request_review_id": 2058039008,
      "id": 1601658971,
      "node_id": "PRRC_kwDOABII585fd2Bb",
      "diff_hunk": "@@ -967,24 +968,29 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n+    if (nFD < MIN_CORE_FDS)\n+        return InitError(strprintf(_(\"Not enough file descriptors available. %d available, %d required.\"), nFD, MIN_CORE_FDS));\n+\n     // Trim requested connection counts, to fit into system limitations\n     // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "927f153845ce61c82f038c7fa9a11ecface43d18",
      "in_reply_to_id": 1601187564,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Covered in [55f16f5](https://github.com/bitcoin/bitcoin/pull/30065/commits/55f16f56f4abeae1f5560cc616ea0b9b31a88073)",
      "created_at": "2024-05-15T13:32:47Z",
      "updated_at": "2024-05-15T13:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1601658971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1601658971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613272500",
      "pull_request_review_id": 2076548666,
      "id": 1613272500,
      "node_id": "PRRC_kwDOABII585gKJW0",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL",
      "path": "src/init.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the commit message of a44da681f5 `init: fixes fd accounting regarding poll/select`:\r\n\r\n> ... file descriptions limits ...\r\n\r\ns/descriptions/descriptors/",
      "created_at": "2024-05-24T10:42:46Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613272500",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613272500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 977,
      "original_line": 977,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613282956",
      "pull_request_review_id": 2076548666,
      "id": 1613282956,
      "node_id": "PRRC_kwDOABII585gKL6M",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // If we are using select instead of poll, our actual limit may be even smaller\r\n```",
      "created_at": "2024-05-24T10:51:30Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613282956",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613282956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613376297",
      "pull_request_review_id": 2076548666,
      "id": 1613376297,
      "node_id": "PRRC_kwDOABII585gKisp",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n+    if (nFD < MIN_CORE_FDS)\n+        return InitError(strprintf(_(\"Not enough file descriptors available. %d available, %d required.\"), nFD, MIN_CORE_FDS));\n+\n     // Trim requested connection counts, to fit into system limitations\n-    // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n-    if (nFD < MIN_CORE_FILEDESCRIPTORS)\n-        return InitError(_(\"Not enough file descriptors available.\"));\n-    nMaxConnections = std::min(nFD - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE, nMaxConnections);\n+    nMaxConnections = std::max(std::min(nMaxConnections, nFD - nMinRequiredFds), 0);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An alternative to `max(min())` is [`clamp()`](https://en.cppreference.com/w/cpp/algorithm/clamp):\r\n\r\n```suggestion\r\n    nMaxConnections = std::clamp(nFD - nMinRequiredFds, 0, nMaxConnections);\r\n```\r\n\r\n(feel free to ignore if you don't find it more readable)",
      "created_at": "2024-05-24T12:07:24Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613376297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613376297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613392850",
      "pull_request_review_id": 2076548666,
      "id": 1613392850,
      "node_id": "PRRC_kwDOABII585gKmvS",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // Maximum number of connections with other nodes, this accounts for all types of outbounds and inbounds except for manual\r\n```",
      "created_at": "2024-05-24T12:20:44Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613392850",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613392850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613414626",
      "pull_request_review_id": 2076548666,
      "id": 1613414626,
      "node_id": "PRRC_kwDOABII585gKsDi",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about giving an `InitError` if the provided value is negative instead of silently clamping it to 0? Surely `-maxconnections=-50` looks like a typo and probably the intention is not to end up with `-maxconnections=0`.",
      "created_at": "2024-05-24T12:38:48Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613414626",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613414626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": 977,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 978,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613422626",
      "pull_request_review_id": 2076548666,
      "id": 1613422626,
      "node_id": "PRRC_kwDOABII585gKuAi",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "according to `doc/developer-notes.md` variables should use snake_case and no need to denote the type in the variable name (`n` for integer): `min_required_fds`.\r\n\r\nBut more importantly, the name `nMinRequiredFds` is misleading because we accept a smaller number - a bit below we check `if (nFD < MIN_CORE_FDS) return error...`, so it is not \"minimum required\". I think this variable here should be: `min_required_fds = MIN_CORE_FDS + nBind`, that check should be `if (nFD < min_required_fds) return error` and then:\r\n\r\n```diff\r\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\r\n+    nFD = RaiseFileDescriptorLimit(min_required_fds + MAX_ADDNODE_CONNECTIONS + nMaxConnections);\r\n```\r\n\r\nand \r\n\r\n```diff\r\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, nFD - nMinRequiredFds), 0);\r\n+    nMaxConnections = std::max(std::min<int>(nMaxConnections, available_fds - min_required_fds - MAX_ADDNODE_CONNECTIONS), 0);\r\n```",
      "created_at": "2024-05-24T12:45:20Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613422626",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613422626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613459411",
      "pull_request_review_id": 2076548666,
      "id": 1613459411,
      "node_id": "PRRC_kwDOABII585gK2_T",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "snake_case for variables. I think `available` or `available_fds` is a good name:\r\n\r\n```suggestion\r\n    available_fds = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\r\n```",
      "created_at": "2024-05-24T13:08:16Z",
      "updated_at": "2024-05-24T13:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613459411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613459411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613613375",
      "pull_request_review_id": 2077160604,
      "id": 1613613375,
      "node_id": "PRRC_kwDOABII585gLck_",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613459411,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I kept `nFD` because it is not locally defined, but defined in the namespace, so at least one other method is using it. If we don't mind a bigger diff I'm happy to change it",
      "created_at": "2024-05-24T14:56:25Z",
      "updated_at": "2024-05-24T14:57:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613613375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613613375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613630608",
      "pull_request_review_id": 2077191765,
      "id": 1613630608,
      "node_id": "PRRC_kwDOABII585gLgyQ",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree the if check should be updated, but I don't necessarily agree with splitting `MAX_ADDNODE_CONNECTIONS` from `min_required_fds`. \r\n\r\nThere is the outstanding question of whether the minimum required fds to run Core should account for some of the connections. Currently, we are not accounting for any (given the check is performed against `MIN_CORE_FDS`), but I think we should be accounting for at least, outbound + manuals",
      "created_at": "2024-05-24T15:09:03Z",
      "updated_at": "2024-05-24T15:09:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613630608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613630608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613633416",
      "pull_request_review_id": 2077195687,
      "id": 1613633416,
      "node_id": "PRRC_kwDOABII585gLheI",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613414626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that makes more sense",
      "created_at": "2024-05-24T15:10:25Z",
      "updated_at": "2024-05-24T15:10:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1613633416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1613633416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": 977,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 978,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617313586",
      "pull_request_review_id": 2082905072,
      "id": 1617313586,
      "node_id": "PRRC_kwDOABII585gZj8y",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, no strong opinion whether to include or exclude `MAX_ADDNODE_CONNECTIONS` in `min_required_fds`.\r\n\r\nI guess better to update the check. It is funny to have code like\r\n\r\n```\r\nmin_required = ...;\r\nif (available < 10) error\r\n```\r\nit should really be\r\n```\r\nmin_required = ...;\r\nif (available < min_required) error\r\n```",
      "created_at": "2024-05-28T14:08:15Z",
      "updated_at": "2024-05-28T14:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1617313586",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617313586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617318967",
      "pull_request_review_id": 2082916557,
      "id": 1617318967,
      "node_id": "PRRC_kwDOABII585gZlQ3",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613459411,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK to rename `nFD` (maybe as part of 2f49fa0e761ee67d6eeb424b157689f479da8b2c `init: improves file descriptors accounting and docs`)",
      "created_at": "2024-05-28T14:11:30Z",
      "updated_at": "2024-05-28T14:11:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1617318967",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617318967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617508249",
      "pull_request_review_id": 2083219633,
      "id": 1617508249,
      "node_id": "PRRC_kwDOABII585gaTeZ",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613459411,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated",
      "created_at": "2024-05-28T15:25:37Z",
      "updated_at": "2024-05-28T15:25:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1617508249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617508249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617510788",
      "pull_request_review_id": 2083223591,
      "id": 1617510788,
      "node_id": "PRRC_kwDOABII585gaUGE",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've fixed that, plus increased the `min_required_fds` to also account for automatic outbounds in the last commit. I'm open to discuss about the latter, but I think it's something we should also account for",
      "created_at": "2024-05-28T15:27:18Z",
      "updated_at": "2024-05-28T15:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1617510788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617510788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1618525186",
      "pull_request_review_id": 2084804624,
      "id": 1618525186,
      "node_id": "PRRC_kwDOABII585geLwC",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The newly added `int auto_outbounds = std::min(MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS + MAX_FEELER_CONNECTIONS, nUserMaxConnections);` seems to be duplicating this logic, but not exactly:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/be100cf4c77a3e45750773689e0a396fda39d8a7/src/net.h#L1069-L1073\r\n\r\nand I think this is getting complicated again. I would suggest to keep it simple - drop the last commit f569b06a53851f844219cd80cd33676470e3b776 `init: fix min required fds check and account for outbounds`\r\n\r\nand only apply this change to 3982543007 `init: improves file descriptors accounting and docs`:\r\n\r\n```diff\r\n-    if (available_fds < MIN_CORE_FDS)\r\n+    if (available_fds < min_required_fds)\r\n```",
      "created_at": "2024-05-29T09:11:18Z",
      "updated_at": "2024-05-29T09:11:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1618525186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1618525186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1619252262",
      "pull_request_review_id": 2086022876,
      "id": 1619252262,
      "node_id": "PRRC_kwDOABII585gg9Qm",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is duplicating part of that, given `CConnman::m_max_automatic_outbound` is private.\r\n\r\nI agree it is adding more complexity, but not accounting for it in the minimum means that could be in a situation where no single outbound connection is accounted for, so the user is basically only connected to manuals.\r\n\r\nI acknowledge that's fairly rare, but the two reasons why we are currently not facing this issue is, first, because the minimum is fairly low, so it would need a system with really limited resources to become an issue, and second, because If we were in that situation it would also need to be that case that the node is defining manual connections, otherwise the 8 reserved slots for manual would be available for automatic.\r\n\r\nDespite that, this feels like bad design, so I'd argue accounting for automatic is something we should do (though not necessarily as done in the current approach) ",
      "created_at": "2024-05-29T17:33:37Z",
      "updated_at": "2024-05-29T17:33:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1619252262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1619252262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620315609",
      "pull_request_review_id": 2087726819,
      "id": 1620315609,
      "node_id": "PRRC_kwDOABII585glA3Z",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If the node is connected to 8 manually defined outbound peers and 0 inbounds and 0 automatic outbounds, then it is still operational? No need to prohibit startup ~in this case~ if there is a chance that this might happen?",
      "created_at": "2024-05-30T09:15:09Z",
      "updated_at": "2024-05-30T10:45:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1620315609",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620315609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620771908",
      "pull_request_review_id": 2088359547,
      "id": 1620771908,
      "node_id": "PRRC_kwDOABII585gmwRE",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it though? If the user has not specified that he wants no automatic connections (`-maxconnections != 0`) I'd argue he'd expect them to happen.\r\n\r\nIn any case, I think this is such an edge case that it is not worth blocking the PR on it. If you have a strong opinion on this, I'm happy to drop it and squash the rest of the commit to one of the previous ones",
      "created_at": "2024-05-30T13:55:56Z",
      "updated_at": "2024-05-30T13:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1620771908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620771908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1621719893",
      "pull_request_review_id": 2089900076,
      "id": 1621719893,
      "node_id": "PRRC_kwDOABII585gqXtV",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am somewhat ~0 on erroring in the case of 8manual/0in/0out, but my bigger anxiety with the latest commit is that it makes it confusing again (or too complicated in my judgement). I tried to code a simple way to account for the automatic outbounds but gave up. Also, most naturally, as the \"minimum required\" name suggests, the check should be `if (... < min_required)`. I find `if (... < min_required + something more)` confusing.",
      "created_at": "2024-05-31T05:01:36Z",
      "updated_at": "2024-05-31T05:01:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1621719893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1621719893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622428800",
      "pull_request_review_id": 2090850124,
      "id": 1622428800,
      "node_id": "PRRC_kwDOABII585gtEyA",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613422626,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree with the \"making it more confusing\". Given this is an edge case, I'll remove the outbound count and we can account for it if someone has a better way of doing so, or if someone opens an issue about it.",
      "created_at": "2024-05-31T13:33:37Z",
      "updated_at": "2024-05-31T13:33:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1622428800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622428800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622471290",
      "pull_request_review_id": 2090924905,
      "id": 1622471290,
      "node_id": "PRRC_kwDOABII585gtPJ6",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n+    if (nFD < MIN_CORE_FDS)\n+        return InitError(strprintf(_(\"Not enough file descriptors available. %d available, %d required.\"), nFD, MIN_CORE_FDS));\n+\n     // Trim requested connection counts, to fit into system limitations\n-    // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n-    if (nFD < MIN_CORE_FILEDESCRIPTORS)\n-        return InitError(_(\"Not enough file descriptors available.\"));\n-    nMaxConnections = std::min(nFD - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE, nMaxConnections);\n+    nMaxConnections = std::max(std::min(nMaxConnections, nFD - nMinRequiredFds), 0);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613376297,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've rolled this back. After some of the refactoring, this looked like:\r\n\r\n```\r\nstd::clamp(available_fds - min_required_fds, 0, nUserMaxConnections);\r\n```\r\n\r\nHowever, `available_fds` cannot be smaller than `min_required_fds`, and `nUserMaxConnections` cannot be negative. So calling `std::min` should be enough.",
      "created_at": "2024-05-31T14:02:47Z",
      "updated_at": "2024-05-31T14:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1622471290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622471290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1623248432",
      "pull_request_review_id": 2092138568,
      "id": 1623248432,
      "node_id": "PRRC_kwDOABII585gwM4w",
      "diff_hunk": "@@ -967,24 +968,28 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n-    // Make sure enough file descriptors are available\n+    // Make sure enough file descriptors are available. We need to reserve enough FDs to account for the bare minimum,\n+    // plus all manual connections and all bound interfaces. Any remainder will be available for connection sockets\n+\n+    // Number of bound interfaces (we have at least one)\n     int nBind = std::max(nUserBind, size_t(1));\n+    // Maximum number of connetions with other nodes, this accounts for all types of outbound and inbounds expect for manual\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-\n-    nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS + nBind + NUM_FDS_MESSAGE_CAPTURE);\n-\n-#ifdef USE_POLL\n-    int fd_max = nFD;\n-#else\n-    int fd_max = FD_SETSIZE;\n+    // Reserve enough FDs to account for the bare minimum, plus any manual connections, plus the bound interfaces\n+    int nMinRequiredFds = MIN_CORE_FDS + MAX_ADDNODE_CONNECTIONS + nBind;\n+\n+    // Try raising the FD limit to what we need (nFD may be smaller than the requested amount if this fails)\n+    nFD = RaiseFileDescriptorLimit(nMaxConnections + nMinRequiredFds);\n+    // If we are using select instead of poll, our actuall limit may be even smaller\n+#ifndef USE_POLL\n+    nFD = std::min(FD_SETSIZE, nFD);\n #endif\n+    if (nFD < MIN_CORE_FDS)\n+        return InitError(strprintf(_(\"Not enough file descriptors available. %d available, %d required.\"), nFD, MIN_CORE_FDS));\n+\n     // Trim requested connection counts, to fit into system limitations\n-    // <int> in std::min<int>(...) to work around FreeBSD compilation issue described in #2695\n-    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE), 0);\n-    if (nFD < MIN_CORE_FILEDESCRIPTORS)\n-        return InitError(_(\"Not enough file descriptors available.\"));\n-    nMaxConnections = std::min(nFD - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS - NUM_FDS_MESSAGE_CAPTURE, nMaxConnections);\n+    nMaxConnections = std::max(std::min(nMaxConnections, nFD - nMinRequiredFds), 0);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "fe76929d4d68a4ca6d27c58c1e243a64fdc70b2a",
      "original_commit_id": "55f16f56f4abeae1f5560cc616ea0b9b31a88073",
      "in_reply_to_id": 1613376297,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Excellent! Some simplifications leading to further simplifications. :heart: ",
      "created_at": "2024-06-01T16:36:29Z",
      "updated_at": "2024-06-01T16:36:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30065#discussion_r1623248432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1623248432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30065"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    }
  ]
}