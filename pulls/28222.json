{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222",
    "id": 1463745663,
    "node_id": "PR_kwDOABII585XPvx_",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28222",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28222.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28222.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/095482204591c9a2d149dd4e00dbb77d94e0b017",
    "number": 28222,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Use shared_ptr for CNode inside CConnman",
    "user": {
      "login": "willcl-ark",
      "id": 6606587,
      "node_id": "MDQ6VXNlcjY2MDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willcl-ark",
      "html_url": "https://github.com/willcl-ark",
      "followers_url": "https://api.github.com/users/willcl-ark/followers",
      "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
      "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
      "repos_url": "https://api.github.com/users/willcl-ark/repos",
      "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Switch to using smart pointers to `CNode`s inside of `CConnman`.\r\n\r\nCurrently we are manually refcounting CNodes which is potentially error-prone and makes operations such as deleting them from multiple threads difficult without introducing new locks or other synchronisation operations (see https://github.com/bitcoin/bitcoin/pull/27912).\r\n\r\nSwitch to using `std::shared_ptr` references to `CNode`s inside of `m_nodes` and `m_nodes_disconnected` to give us better memory safety today, and in the future allow `AttemptToEvictConnection` (and optionally other sites) to safely synchronously disconnect nodes when needed.\r\n\r\nOpening as draft for now as I want to both gauge feedback on the approach, and see which PRs this may conflict with (#27213?) before moving it forwards.\r\n\r\nCC @vasild ",
    "labels": [
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-05T09:45:10Z",
    "updated_at": "2024-05-13T09:26:07Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "c3c03c6d80651ca04b2bb07b6e7670986d79ef8b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "willcl-ark:2023-08-cnode-shared-ptr",
      "ref": "2023-08-cnode-shared-ptr",
      "sha": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 164122552,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjQxMjI1NTI=",
        "name": "bitcoin",
        "full_name": "willcl-ark/bitcoin",
        "owner": {
          "login": "willcl-ark",
          "id": 6606587,
          "node_id": "MDQ6VXNlcjY2MDY1ODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/willcl-ark",
          "html_url": "https://github.com/willcl-ark",
          "followers_url": "https://api.github.com/users/willcl-ark/followers",
          "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
          "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
          "repos_url": "https://api.github.com/users/willcl-ark/repos",
          "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/willcl-ark/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/willcl-ark/bitcoin",
        "archive_url": "https://api.github.com/repos/willcl-ark/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/willcl-ark/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/willcl-ark/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/willcl-ark/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/willcl-ark/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/willcl-ark/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/willcl-ark/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/willcl-ark/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/willcl-ark/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/willcl-ark/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/willcl-ark/bitcoin/events",
        "forks_url": "https://api.github.com/repos/willcl-ark/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/willcl-ark/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/willcl-ark/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/willcl-ark/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/willcl-ark/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/willcl-ark/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/willcl-ark/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/willcl-ark/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/willcl-ark/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/willcl-ark/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:willcl-ark/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/willcl-ark/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/willcl-ark/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/willcl-ark/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/willcl-ark/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/willcl-ark/bitcoin/hooks",
        "svn_url": "https://github.com/willcl-ark/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 240708,
        "default_branch": "master",
        "open_issues_count": 6,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-10T19:25:22Z",
        "created_at": "2019-01-04T15:17:29Z",
        "updated_at": "2024-05-03T19:14:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0d9a13ddd80a662d8f86a97cf50a0ad381256bce",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35397,
        "stargazers_count": 76349,
        "watchers_count": 76349,
        "size": 258368,
        "default_branch": "master",
        "open_issues_count": 692,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-13T09:53:59Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-05-13T09:51:42Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 348,
    "deletions": 383,
    "changed_files": 10,
    "commits": 6,
    "review_comments": 7,
    "comments": 16
  },
  "events": [
    {
      "event": "mentioned",
      "id": 10014883553,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJU7v7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10014883553",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T09:45:11Z"
    },
    {
      "event": "subscribed",
      "id": 10014883556,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJU7v7k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10014883556",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T09:45:11Z"
    },
    {
      "event": "commented",
      "id": 1666456560,
      "node_id": "IC_kwDOABII585jVBvw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666456560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T09:45:12Z",
      "updated_at": "2023-08-17T06:06:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1565029167), [vasild](https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1677719961) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28248](https://github.com/bitcoin/bitcoin/pull/28248) (p2p: bugfixes, logic and logging improvements by jonatack)\n* [#28196](https://github.com/bitcoin/bitcoin/pull/28196) (BIP324 connection support by sipa)\n* [#28165](https://github.com/bitcoin/bitcoin/pull/28165) (net: transport abstraction by sipa)\n* [#28155](https://github.com/bitcoin/bitcoin/pull/28155) (Improves addnode / m_added_nodes logic by sr-gi)\n* [#28016](https://github.com/bitcoin/bitcoin/pull/28016) (p2p: gives seednode priority over dnsseed if both are provided by sr-gi)\n* [#27981](https://github.com/bitcoin/bitcoin/pull/27981) (Fix potential network stalling bug by sipa)\n* [#27600](https://github.com/bitcoin/bitcoin/pull/27600) (net: Add new permission `forceinbound` to evict a random unprotected connection if all slots are otherwise full by pinheadmz)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting outgoing connections by brunoerg)\n* [#27071](https://github.com/bitcoin/bitcoin/pull/27071) (Handle CJDNS from LookupSubNet() by vasild)\n* [#26938](https://github.com/bitcoin/bitcoin/pull/26938) ([WIP] p2p: asmap, avoid inbound connections from a specific AS by brunoerg)\n* [#26621](https://github.com/bitcoin/bitcoin/pull/26621) (refactor: Continue moving application data from CNode to Peer by dergoegge)\n* [#21878](https://github.com/bitcoin/bitcoin/pull/21878) (Make all networking code mockable by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1666456560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "labeled",
      "id": 10015013088,
      "node_id": "LE_lADOABII585tiKOMzwAAAAJU8Pjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10015013088",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T10:59:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1666508138,
      "node_id": "IC_kwDOABII585jVOVq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666508138",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T13:35:41Z",
      "updated_at": "2023-08-05T13:35:41Z",
      "author_association": "MEMBER",
      "body": "Also see #10738",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1666508138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "commented",
      "id": 1666517688,
      "node_id": "IC_kwDOABII585jVQq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666517688",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T14:14:51Z",
      "updated_at": "2023-08-05T20:52:05Z",
      "author_association": "MEMBER",
      "body": "> Also see #10738\r\n\r\nThanks, I hadn't seen this one before. Will take a look tonight\r\n\r\nEdit: Really like the last commit. Will see if I can also drop a few locks too..",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1666517688",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10016063728,
      "node_id": "HRFPE_lADOABII585tiKOMzwAAAAJVAQDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10016063728",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T20:47:33Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T21:11:42Z",
      "updated_at": "2023-08-05T21:11:42Z",
      "source": {
        "issue": {
          "id": 1831769418,
          "node_id": "PR_kwDOABII585W74nW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28196/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28196",
          "number": 28196,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324 connection support",
          "body": "This is part of #27634.\r\n\r\nThis implements the BIP324 v2 transport (which implements all of what the BIP calls transport layer *and* application layer), though in a non-exposed way. It is tested through an extensive fuzz test, which verifies that v2 transports can talk to v2 transports, and v1 transports can talk to v2 transports, and a unit test that exercises a number of unusual scenarios. The transport is functionally complete, including:\r\n* Autodetection of incoming V1 connections.\r\n* Garbage, both sending and receiving.\r\n* Short message type IDs, both sending and receiving.\r\n* Ignore packets (receiving only, but tested in a unit test).\r\n* Session IDs are visible in `getpeerinfo` output (for manual comparison).\r\n\r\nThings that are not included, left for future PRs, are:\r\n* Actually using the v2 transport for connections.\r\n* Support for the `NODE_P2P_V2` service flag.\r\n* Retrying downgrade to V1 when attempted outbound V2 connections immediately fail.\r\n* P2P functional and unit tests\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28196",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28196",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28196.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28196.patch"
          },
          "closed_at": "2023-09-08T09:24:15Z",
          "created_at": "2023-08-01T17:56:58Z",
          "updated_at": "2023-09-13T07:57:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T21:49:42Z",
      "updated_at": "2023-08-05T21:49:42Z",
      "source": {
        "issue": {
          "id": 1824626893,
          "node_id": "PR_kwDOABII585Wjy4M",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
          "number": 28170,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: adaptive connections services flags",
          "body": "Derived from #28120 discussion.\r\n\r\nBy relocating the peer desirable services flags into the peer manager, we\r\nallow the connections acceptance process to handle post-IBD potential\r\nstalling scenarios.\r\n\r\nThe peer manager will be able to dynamically adjust the services flags\r\nbased on the node's proximity to the tip (back and forth). Allowing the node\r\nto recover from the following post-IBD scenario:\r\nSuppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots. Resulting\r\nin an inability to synchronize the chain (because limited peers will not provide\r\nblocks older than the `NODE_NETWORK_LIMITED_MIN_BLOCKS` threshold).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28170.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28170.patch"
          },
          "closed_at": "2024-01-31T16:44:59Z",
          "created_at": "2023-07-27T15:34:45Z",
          "updated_at": "2024-01-31T20:02:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T21:57:04Z",
      "updated_at": "2023-08-05T21:57:04Z",
      "source": {
        "issue": {
          "id": 1823081141,
          "node_id": "PR_kwDOABII585Weln1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28165",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28165/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28165/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28165/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28165",
          "number": 28165,
          "state": "closed",
          "state_reason": null,
          "title": "net: transport abstraction",
          "body": "This PR furthers the P2P message serialization/deserialization abstraction introduced in #16202 and #16562, in preparation for introducing the BIP324 v2 transport (making this part of #27634). However, nothing in this PR is BIP324-specific, and it contains a number of independently useful improvements.\r\n\r\nThe overall idea is to have a single object in every `CNode` (called `m_transport`) that is responsible for converting sent messages to wire bytes, and for converting received wire bytes back to messages, while having as little as possible knowledge about this conversion process in higher-level net code. To accomplish that, there is an abstract `Transport` class with (currently) a single `V1Transport` implementation.\r\n\r\nStructurally, the above is accomplished by:\r\n* Merging the `TransportDeserializer` and `TransportSerializer` classes into a single `Transport` class, which encompasses both the sending and receiving side. For `V1Transport` these two sides are entirely separate, but this assumption doesn't hold for the BIP324 transport where e.g. the sending encryption key depends on the DH key negotiation data received from the other side. Merging the two means a future `V2Transport` can handle all this interaction without callers needing to be aware.\r\n* Removing the assumption that each message is sent using a computed header followed by (unmodified) data bytes. To achieve that, the sending side of `Transport` mirrors what the receiver side does: callers can set a message to be sent, then ask what bytes must be sent out, and then allowing them to transition to the next message.\r\n* Adding internal locks to protect the sending and receiving state of the `V1Transport` implementation. I believe these aren't strictly needed (opinions welcome) as there is no real way to use `Transport` objects in a multi-threaded fashion without some form of external synchronization (e.g. \"get next bytes to send\" isn't meaningful to call from multiple threads at the same time without mechanism to control the order they'll actually get sent). Still, I feel it's cleaner to make the object responsible for its own consistency (as we definitely do not want the entire object to be under a single external GUARDED_BY, as that'd prevent simultaneous sending and receiving).\r\n* Moving the conversion of messages to bytes on the sending side from `PushMessage` to `SocketSendData`, which is needed to deal with the fact that a transport may not immediately be able to send messages.\r\n\r\nThis PR is not a refactor, though some commits are. Among the semantic changes are:\r\n* Changing the send buffer pushback mechanism to trigger based on the memory usage of the buffer rather than the amount of bytes to be sent. This is both closer to the desired behavior, and makes the buffering independent from transport details (which is why it's included here).\r\n* When optimistic send is not applicable, the V1 message checksum calculation now runs in the net thread rather than the message handling thread. I believe that's generally an improvement, as the message handling thread is far more computationally bottlenecked already.\r\n* The checksum calculation now runs under the `CNode::cs_vSend` lock, which does mean no two checksum calculations for messages sent to the same node can run in parallel, even if running in separate threads. Despite that limitation, having the checksum for non-optimistic sends moved in the net thread is still an improvement, I believe.\r\n* Statistics for per-message-type sent bytes are now updated when the bytes are actually handed to the OS rather than in `PushMessage`. This is because the actual serialized sizes aren't known until they've gone through the transport object.\r\n\r\nA fuzz test of the entire `V1Transport` is included. More elaborate rationale for each of the changes can be found in the commit messages.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28165",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28165",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28165.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28165.patch"
          },
          "closed_at": "2023-08-24T12:55:51Z",
          "created_at": "2023-07-26T20:04:07Z",
          "updated_at": "2024-02-15T13:59:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T22:04:47Z",
      "updated_at": "2023-08-05T22:04:47Z",
      "source": {
        "issue": {
          "id": 1821123378,
          "node_id": "PR_kwDOABII585WYCBk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28155/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28155",
          "number": 28155,
          "state": "closed",
          "state_reason": null,
          "title": "net: improves addnode / m_added_nodes logic",
          "body": "## Rationale\r\n\r\nCurrently, `addnode` has a couple of corner cases that allow it to either connect to the same peer more than once, hence wasting outbound connection slots, or add redundant information to `m_added_nodes`, hence making Bitcoin iterate through useless data on a regular basis.\r\n\r\n### Connecting to the same node more than once\r\n\r\nIn general, connecting to the same node more than once is something we should try to prevent. Currently, this is possible via `addnode` in two different ways:\r\n\r\n1. Calling `addnode` more than once in a short time period, using two equivalent but distinct addresses\r\n2. Calling `addnode add` using an IP, and `addnode onetry` after with an address that resolved to the same IP\r\n\r\nFor the former, the issue boils down to `CConnman::ThreadOpenAddedConnections` calling `CConnman::GetAddedNodeInfo` once, and iterating over the result to open connections (`CConman::OpenNetworkConnection`) on the same loop for all addresses.`CConnman::ConnectNode` only checks a single address, at random, when resolving from a hostname, and uses it to check whether we are already connected to it.\r\n\r\nAn example to test this would be calling:\r\n\r\n```\r\nbitcoin-cli addnode \"127.0.0.1:port\" add\r\nbitcoin-cli addnode \"localhost:port\" add\r\n```\r\n\r\nAnd check how it allows us to perform both connections some times, and some times it fails.\r\n\r\nThe latter boils down to the same issue, but takes advantage of `onetry` bypassing the `CConnman::ThreadOpenAddedConnections` logic and calling `CConnman::OpenNetworkConnection` straightaway. A way to test this would be:\r\n\r\n```\r\nbitcoin-cli addnode \"127.0.0.1:port\" add\r\nbitcoin-cli addnode \"localhost:port\" onetry\r\n```\r\n\r\n### Adding the same peer with two different, yet equivalent, addresses\r\n\r\nThe current implementation of `addnode` is pretty naive when checking what data is added to `m_added_nodes`. Given the collection stores strings, the checks at `CConnman::AddNode()` basically check wether the exact provided string is already in the collection. If so, the data is rejected, otherwise, it is accepted. However, ips can be formatted in several ways that would bypass those checks. \r\n\r\nTwo examples would be `127.0.0.1` being equal to `127.1` and `[::1]` being equal to `[0:0:0:0:0:0:0:1]`. Adding any pair of these will be allowed by the rpc command, and both will be reported as connected by `getaddednodeinfo`, given they map to the same `CService`. \r\n\r\nThis is less severe than the previous issue, since even tough both nodes are reported as connected by `getaddednodeinfo`, there is only a single connection to them (as properly reported by `getpeerinfo`). However, this adds redundant data to `m_added_nodes`, which is undesirable.\r\n\r\n\r\n### Parametrize `CConnman::GetAddedNodeInfo`\r\nFinally, this PR also parametrizes `CConnman::GetAddedNodeInfo` so it returns either all added nodes info, or only info about the nodes we are **not** connected to. This method is used both for `rpc`, in `getaddednodeinfo`, in which we are reporting all data to the user, so the former applies, and to check what nodes we are not connected to, in `CConnman::ThreadOpenAddedConnections`, in which we are currently returning more data than needed and then actively filtering using `CService.fConnected()`\r\n",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28155",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28155",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28155.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28155.patch"
          },
          "closed_at": "2023-11-08T11:31:59Z",
          "created_at": "2023-07-25T20:47:02Z",
          "updated_at": "2023-11-15T10:07:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 10016159190,
      "node_id": "UNLE_lADOABII585tiKOMzwAAAAJVAnXW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10016159190",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T22:08:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T23:30:56Z",
      "updated_at": "2023-08-05T23:30:56Z",
      "source": {
        "issue": {
          "id": 1782622319,
          "node_id": "PR_kwDOABII585UVjBC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28016",
          "number": 28016,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: gives seednode priority over dnsseed if both are provided",
          "body": "This is a follow-up of #27577 \r\n\r\nIf both `seednode` and `dnsseed` are provided, the node will start a race between them in order to fetch data to feed the `addrman`. \r\n\r\nThis PR gives priority to `seednode` over `dnsseed` so if some nodes are provided as seeds, they can be tried before defaulting to the `dnsseeds`",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28016",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28016",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28016.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28016.patch"
          },
          "closed_at": "2024-04-30T23:00:31Z",
          "created_at": "2023-06-30T14:23:11Z",
          "updated_at": "2024-04-30T23:00:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T23:38:38Z",
      "updated_at": "2023-08-05T23:38:38Z",
      "source": {
        "issue": {
          "id": 1775568246,
          "node_id": "PR_kwDOABII585T9n4e",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27981",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27981/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27981/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27981/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27981",
          "number": 27981,
          "state": "closed",
          "state_reason": null,
          "title": "Fix potential network stalling bug",
          "body": "See https://github.com/ElementsProject/elements/issues/1233. There, it has been observed that if both sides of a P2P connection have a significant amount of data to send, a stall can occur, where both try to drain their own send queue before trying to receive. The same issue seems to apply to the current Bitcoin Core codebase, though I don't know whether it's a frequent issue for us.\r\n\r\nThe core issue is that whenever our optimistic send fails to fully send a message, we do subsequently not even select() for receiving; if it then turns out that sending is not possible either, no progress is made at all. To address this, the solution used in this PR is to still select() for both sending and receiving when an optimistic send fails, but skip receiving if sending succeeded, and (still) doesn't fully drain the send queue.\r\n\r\nThis is a significant reduction in how aggressive the \"receive pushback\" mechanism is, because now it will only mildly push back while sending progress is made; if the other side stops receiving entirely, the pushback disappears. I don't think that's a serious problem though:\r\n* We still have a pushback mechanism at the application buffer level (when the application receive buffer overflows, receiving is paused until messages in the buffer get processed; waiting on our own net_processing thread, not on the remote party).\r\n* There are cases where the existing mechanism is too aggressive; e.g. when the send queue is non-empty, but tiny, and can be sent with a single send() call. In that case, I think we'd prefer to still receive within the same processing loop of the network thread.\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27981",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27981",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27981.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27981.patch"
          },
          "closed_at": "2023-08-17T12:15:55Z",
          "created_at": "2023-06-26T20:37:36Z",
          "updated_at": "2023-08-18T15:42:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T23:59:00Z",
      "updated_at": "2023-08-05T23:59:00Z",
      "source": {
        "issue": {
          "id": 1763237710,
          "node_id": "PR_kwDOABII585TUzpd",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27912",
          "number": 27912,
          "state": "closed",
          "state_reason": null,
          "title": "net: disconnect inside AttemptToEvictConnection",
          "body": "Fixes #27843\r\n\r\nTo avoid overflowing `-maxconnections` disconnect nodes marked for eviction directly inside of `AttemptToEvictConnection()`. This has the end result that new connections will only be accepted _after_ an existing connection is dropped, otherwise the new connection is dropped.\r\n\r\nPreviously the number of connected nodes could overflow `nMaxInbound` as (multiple) new connections could be accepted from `ThreadI2PAccept` -- each marking an existing connection to drop (in the future) -- before `ThreadSocketHandler` looped through to `DisconnectNodes()` and took care of the disconnections.\r\n\r\nNode disconnection and deletion are broken out into individual functions which handle a single node so they can be called both from `DisconnectNodes()` and `AttemptToEvictConnection`. This will result in more un/locking operations to perform mass disconnections, but as this only really happens when the network becomes inactive it should not be a problem.",
          "user": {
            "login": "willcl-ark",
            "id": 6606587,
            "node_id": "MDQ6VXNlcjY2MDY1ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willcl-ark",
            "html_url": "https://github.com/willcl-ark",
            "followers_url": "https://api.github.com/users/willcl-ark/followers",
            "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
            "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
            "repos_url": "https://api.github.com/users/willcl-ark/repos",
            "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27912",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27912.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27912.patch"
          },
          "closed_at": "2024-05-01T08:44:25Z",
          "created_at": "2023-06-19T10:26:52Z",
          "updated_at": "2024-05-01T08:44:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T00:24:31Z",
      "updated_at": "2023-08-06T00:24:31Z",
      "source": {
        "issue": {
          "id": 1746501636,
          "node_id": "PR_kwDOABII585ScjM9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
          "number": 27837,
          "state": "open",
          "state_reason": null,
          "title": "net: introduce block tracker to retry to download blocks after failure",
          "body": "Coming from #27652, part of #29183.\r\n\r\nThe general idea is to keep track of the user requested blocks so, in\r\ncase of a bad behaving peer or a network disconnection, they can be\r\nfetched from another one automatically without any further user interaction.\r\n\r\nThis was requested by users because the `getblockfrompeer` RPC command\r\nlacks the functionality to notify them about block request failures or peer\r\ndisconnections (which is expected due to the asynchronous nature of the block\r\nrequests).\r\n\r\nCurrently, this new functionality is limited to blocks requested by the\r\nuser via the 'getblockfrompeer' RPC command.\r\n\r\nIn the future, this class could expand its scope and be utilized in the\r\nregular chain synchronization process. Or, even could be employed in\r\nspecial procedures like a prune node rescan that uses BIP158 block filters,\r\nor even into BIP157 itself.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27837",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27837.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27837.patch"
          },
          "created_at": "2023-06-07T19:01:56Z",
          "updated_at": "2024-05-13T08:12:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T01:25:38Z",
      "updated_at": "2023-08-06T01:25:38Z",
      "source": {
        "issue": {
          "id": 1700844188,
          "node_id": "PR_kwDOABII585QCBm_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27600",
          "number": 27600,
          "state": "closed",
          "state_reason": null,
          "title": "net: Add new permission `forceinbound` to evict a random unprotected connection if all slots are otherwise full",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/8798\r\n\r\nUse case: I run a full node that accepts inbound connections and have a `whitebind` setting so my personal light client can always connect, even when `maxconnections` (and particularly all inbound slots) is already full.\r\n\r\nCurrently when connections are full, if we receive an inbound peer request, we look for a current connection to evict so the new peer can have a slot. To find an evict-able peer we go through all our peers and \"protect\" multiple categories of peers, then we evict the \"worst\" peer that is left unprotected. If there are no peers left to evict, the inbound connection is denied.\r\n\r\nWith this PR, if the inbound connection has `forceinbound` permission we start the eviction process by first protecting all `noban` and outbound connections, then selecting one of the remaining peers (if any) at random. Then we loop through all our current connections, removing protected peers from the evict-able list. If we end up protecting all our remaining connections, the randomly chosen peer is evicted.\r\n\r\n`forceinbound` implies `noban` permission.\r\n\r\nAll outbound and `noban` connections remain protected from eviction.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27600",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27600.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27600.patch"
          },
          "closed_at": "2024-04-09T14:22:26Z",
          "created_at": "2023-05-08T19:59:30Z",
          "updated_at": "2024-04-09T14:22:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T01:47:06Z",
      "updated_at": "2023-08-06T01:47:06Z",
      "source": {
        "issue": {
          "id": 1678541218,
          "node_id": "PR_kwDOABII585O3QRm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
          "number": 27509,
          "state": "closed",
          "state_reason": null,
          "title": "Relay own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 62,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch"
          },
          "closed_at": "2024-02-09T13:53:19Z",
          "created_at": "2023-04-21T13:39:19Z",
          "updated_at": "2024-03-21T17:12:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T02:11:28Z",
      "updated_at": "2023-08-06T02:11:28Z",
      "source": {
        "issue": {
          "id": 1652089479,
          "node_id": "PR_kwDOABII585Nfb4D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27407",
          "number": 27407,
          "state": "closed",
          "state_reason": null,
          "title": "net, refactor: Privatise CNode send queue",
          "body": "The send queue members on `CNode` should not be part of the public interface. This PR makes all of them private and creates a clear interface for the send queue.\r\n\r\nThe interface after this PR consists of:\r\n* `CNode::PushMessage` for appending a message onto the send queue\r\n* `CNode::SocketSendData` for pushing as many messages from the send queue as possible onto the wire\r\n* `CNode::IsSendQueueEmpty` for checking if the send queue is empty\r\n* (`CNode::TestOnlyClearSendQueue` a test-only utility for clearing the send queue)",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27407",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27407",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27407.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27407.patch"
          },
          "closed_at": "2023-08-07T14:02:48Z",
          "created_at": "2023-04-03T13:36:50Z",
          "updated_at": "2023-08-07T14:02:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T02:55:58Z",
      "updated_at": "2023-08-06T02:55:58Z",
      "source": {
        "issue": {
          "id": 1612097868,
          "node_id": "PR_kwDOABII585LZ5fL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27213",
          "number": 27213,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Diversify automatic outbound connections with respect to networks",
          "body": "This is joint work with mzumsande. \r\n\r\nThis is a proposal to diversify outbound connections with respect to reachable networks. The existing logic evaluates peers for connection based purely on the frequency of available addresses in `AddrMan`. This PR adds logic to automatically connect to alternate reachable networks and adds eviction logic that protects one existing connection to each network. \r\n\r\nFor instance, if `AddrMan` is populated primarily with IPv4 and IPv6 addresses and only a handful of onion addresses, it is likely that we won't establish any automatic outbound connections to Tor, even if we're capable of doing so. For smaller networks like CJDNS, this is even more of an issue and often requires adding manual peers to ensure regularly being connected to the network.\r\n\r\nConnecting to multiple networks improves resistance to eclipse attacks for individual nodes. It also benefits the entire p2p network by increasing partition resistance and privacy in general. \r\n\r\nThe automatic connections to alternate networks is done defensively, by first filling all outbound slots with random addresses (as in the status quo) and then adding additional peers from reachable networks the node is currently not connected to. This approach ensures that outbound slots are not left unfilled while attempting to connect to a network that may be unavailable due to a technical issue or misconfiguration that bitcoind cannot detect.\r\n\r\nOnce an additional peer is added and we have one more outbound connection than we want, outbound eviction ensures that peers are protected if they are the only ones for their network.\r\n\r\nManual connections are also taken into account: If a user already establishes manual connections to a trusted peer from a network, there is no longer a need to make extra efforts to ensure we also have an automatic connection to it (although this may of course happen by random selection). \r\n",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 49,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27213",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27213",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27213.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27213.patch"
          },
          "closed_at": "2023-08-06T16:45:11Z",
          "created_at": "2023-03-06T19:46:54Z",
          "updated_at": "2023-08-12T02:26:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T03:01:09Z",
      "updated_at": "2023-08-06T03:01:09Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Allow whitelisting manual connections",
          "body": "Revives #17167. It allows whitelisting manual connections. Fixes #9923\r\n\r\nSince there are some PRs/issues around this topic, I'll list some motivations/comments for whitelisting outbound connections from them:\r\n- Speed-up tx relay/mempool sync for testing purposes (my personal motivation for this) - In #26970, theStack pointed out that we whitelist peers to speed up tx relay for fast mempool synchronization, however, since it applies only for inbound connections and considering the topology `node0 <--- node1 <---- node2 <--- ... <-- nodeN`,  if a tx is submitted from any node other than node0, the mempool synchronization can take quite long.\r\n- https://github.com/bitcoin/bitcoin/pull/29058#issuecomment-1865155764 - \"Before enabling -v2transport by default (which I'd image may happen after https://github.com/bitcoin/bitcoin/pull/24748) we could consider a way to force manual connections to be only-v1 or even only-v2 (disabling reconnect-with-v1). A possibility could be through a net permission flag, if https://github.com/bitcoin/bitcoin/pull/27114 makes it in.\"\r\n- https://github.com/bitcoin/bitcoin/pull/17167#issuecomment-1168606032 - \"This would allow us to use https://github.com/bitcoin/bitcoin/pull/25355 when making outgoing connections to all nodes, except to whitelisted ones for which we would use our persistent I2P address.\"\r\n- Force-relay/mempool permissions for a node you intentionally connected to.\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 48,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "closed_at": "2024-03-12T16:59:20Z",
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2024-04-10T08:26:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T03:29:41Z",
      "updated_at": "2023-08-06T03:29:41Z",
      "source": {
        "issue": {
          "id": 1551292426,
          "node_id": "PR_kwDOABII585IPJKg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26938",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26938/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26938/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26938/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26938",
          "number": 26938,
          "state": "closed",
          "state_reason": null,
          "title": "[WIP] p2p: asmap, avoid inbound connections from a specific AS",
          "body": "Fixes #26353 \r\n\r\nFor privacy/security reasons (discussed in #26353 - e.g. malicious nodes on a particular AS), we could avoid connections from particular AS (discussed in #26353). This PR adds a flag `-avoidas`, which can be specified multiple times, where you pass an ASN you want to avoid inbound connections from.\r\n\r\ne.g.\r\n```sh\r\n./src/bitcoind --asmap=path/to/file --avoidas=399991\r\n```",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26938",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26938",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26938.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26938.patch"
          },
          "closed_at": "2023-09-05T13:29:17Z",
          "created_at": "2023-01-20T18:40:18Z",
          "updated_at": "2023-09-05T13:29:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T04:19:12Z",
      "updated_at": "2023-08-06T04:19:12Z",
      "source": {
        "issue": {
          "id": 1471685707,
          "node_id": "PR_kwDOABII585EFGFt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
          "number": 26621,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Continue moving application data from CNode to Peer",
          "body": "This PR picks up a subset of changes from #24970 and additionally moves `m_bip152_highbandwith{to,from}`, `nTimeOffset`, `nVersion`, `m_greates_common_version`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26621",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26621.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26621.patch"
          },
          "closed_at": "2023-09-28T20:06:13Z",
          "created_at": "2022-12-01T17:26:32Z",
          "updated_at": "2023-09-28T20:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T06:02:15Z",
      "updated_at": "2023-08-06T06:02:15Z",
      "source": {
        "issue": {
          "id": 1299238264,
          "node_id": "PR_kwDOABII5847Ho23",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
          "number": 25572,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager and use it for the inbound eviction logic",
          "body": "This PR splits off the next couple commits from #25268 that introduce the `EvictionManager` and use it for  the inbound eviction logic.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information (for inbound connections) to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectNodeToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25572",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25572.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25572.patch"
          },
          "closed_at": "2023-09-28T20:06:18Z",
          "created_at": "2022-07-08T16:39:49Z",
          "updated_at": "2023-09-28T20:06:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T06:20:31Z",
      "updated_at": "2023-08-06T06:20:31Z",
      "source": {
        "issue": {
          "id": 1258121997,
          "node_id": "PR_kwDOABII5844-S2D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
          "number": 25268,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager",
          "body": "At the moment, the eviction logic is mangled across two different components (`CConnman`, `PeerManager`), so we can't really test it in isolation. This is not completely true for the inbound eviction logic as it exists as static functions in `net.{h.cpp}` for which tests already exist. However, the outbound eviction logic is not covered by any fuzz tests and is only testable by spinning up both a connman and peerman.\r\n\r\nThis PR splits out the eviction logic into its own component `EvictionManager`. In addition to isolating the eviction logic, we get rid of several layer violations (e.g. `CConnman::ForEachNode/ForNode` calls, `CNode::m_last_block_time`, etc.) between `net` and `net processing`.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectInboundNodeToEvict` and `EvictionManager::SelectOutboundNodesToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25268.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25268.patch"
          },
          "closed_at": "2023-09-28T20:06:22Z",
          "created_at": "2022-06-02T12:34:15Z",
          "updated_at": "2023-09-28T20:06:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10017689044,
      "node_id": "LE_lADOABII585tiKOMzwAAAAJVGc3U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10017689044",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T17:46:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1667275661,
      "node_id": "IC_kwDOABII585jYJuN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667275661",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T06:42:11Z",
      "updated_at": "2023-08-07T06:42:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also see #10738\r\n\r\n:+1: \r\n\r\nI guess it must be possible to do that without \"reinventing the wheel aka introducing custom smart pointer types\", like mentioned in the last comment.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1667275661",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "reviewed",
      "id": 1565029167,
      "node_id": "PRR_kwDOABII585dSHMv",
      "url": null,
      "actor": null,
      "commit_id": "499f267050d076a9065342c58338d5f2da791053",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK on getting rid of our custom ref counting.\r\n\r\nI actually implemented something similar a while ago (https://github.com/dergoegge/bitcoin/commit/b3913b4c052b37790b3737e5ddb9c2d029502477) but didn't pursue because it doesn't retain the behavior we currently have w.r.t. which thread actually deletes the `CNode`. That is also the reason why https://github.com/bitcoin/bitcoin/pull/10738 is a bit more complex and introduces new pointer types.\r\n\r\n> which thread actually deletes the CNode.\r\n\r\nThe reason why that is important is because we only want to call `FinalizeNode` once and we want there to be no other references to that `CNode` at that time.\r\n\r\nThe changes in this PR and the current ref-counting don't guarantee that, they just aim to work that way but it always requires manual review to avoid bugs.\r\n\r\nI think I'd prefer an approach that guarantees (at least conceptually) correct behavior (like e.g. the pointer types in #10738).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1565029167",
      "submitted_at": "2023-08-07T12:00:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
    },
    {
      "event": "commented",
      "id": 1667726251,
      "node_id": "IC_kwDOABII585jZ3ur",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667726251",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:01:45Z",
      "updated_at": "2023-08-07T12:01:45Z",
      "author_association": "MEMBER",
      "body": "cc @theuni (just in case you are interested in chiming in)",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1667726251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "mentioned",
      "id": 10023215915,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJVbiMr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10023215915",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:01:45Z"
    },
    {
      "event": "subscribed",
      "id": 10023215926,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJVbiM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10023215926",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T12:01:45Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0NzVhZGFlMzZhMjdiMjYxYmY4ODM4MGRjZWMxY2ZmZmJjMjdkMTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6475adae36a27b261bf88380dcec1cfffbc27d10",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6475adae36a27b261bf88380dcec1cfffbc27d10",
      "tree": {
        "sha": "9e27480773c7a4fc5f777a6efb31c0b00d71e7e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e27480773c7a4fc5f777a6efb31c0b00d71e7e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9e27480773c7a4fc5f777a6efb31c0b00d71e7e5\nparent 492257019d6d6e0f4051433e510502e8040fd6d2\nauthor willcl-ark <will@256k1.dev> 1690201774 +0100\ncommitter willcl-ark <will@256k1.dev> 1691577228 +0100\n\nnet: Add CNodeRef typedef\n\nTo be used in m_nodes and m_nodes_disconnected.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTa4wACgkQzm7EmUXB\nfqYNwBAApGKdEOoZiAyhRMivqI78l2XHCRRAW8mf5s9Rpa3TrfCtpiZy9VGFS7UU\nFPIJgdtnjW2Ujb31M91SxOq/qG+0ulimXSAfNXNi4q5YMIotRxSENur0pxj9q9Oy\nC2WdRREEMbhZ5IIaMERvnbKYfmkn3dDzqeG3OXmWx3RlTB8izSJ54QHDrJLTOIV6\nHV59GIe9XpU5GjRvFV2/1LdeVrv/XPoA+Z4IFBZ1HKObLFF8XiBPXH6SwdAurpKB\n+8QHYEhGYq1umakkp2g3GA85AT6fRSCgjQlNC9RC8KU4SZxl6qYK0nEk9uY5saEW\nFjIeYKfaQVIs01Cosm4Acdx4Mm7f9NEqNr5FzmOwMnYPBeMkbA9ZuNWJhLM+bRZ/\nrcu2Ppao1Bc62vjUVMLlKYAdjzzzBnVkgHzahmw8FEOt8/ePhqDmTJO/8d0aGxe2\npQFka9zlWV0G4WcHRr102ASGYjVd3xfNMWQdttgILeyYOctK6w+PuH2xBaUF6cCP\nrRU07qxFCQrXwzBJiSjGOAOtsD1m+Ij874fO1fWlITFjPky0/MbEcThJTYpQfQXS\nA22chI9//7897QfABMclOQGWA7NJxb9N2d6OXzppkfoePvh9ohuFGcDRGIfCrzwx\nb3UNYdDopzw2GcTlp+aV9A7wrVB1OLcP3vCQbirfs+I9Y++rxDY=\n=eTfU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/492257019d6d6e0f4051433e510502e8040fd6d2",
          "sha": "492257019d6d6e0f4051433e510502e8040fd6d2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/492257019d6d6e0f4051433e510502e8040fd6d2"
        }
      ],
      "message": "net: Add CNodeRef typedef\n\nTo be used in m_nodes and m_nodes_disconnected.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T10:33:48Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-24T12:29:34Z"
      },
      "sha": "6475adae36a27b261bf88380dcec1cfffbc27d10"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmNjEyY2RlZDg2ZGQ4ZTA0MDZkN2M3ZmVhZWYwNjViZmJlYjZmNGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f612cded86dd8e0406d7c7feaef065bfbeb6f4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f612cded86dd8e0406d7c7feaef065bfbeb6f4b",
      "tree": {
        "sha": "269b49b0661e2f9998709321bd4ace209c9df500",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/269b49b0661e2f9998709321bd4ace209c9df500"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 269b49b0661e2f9998709321bd4ace209c9df500\nparent 6475adae36a27b261bf88380dcec1cfffbc27d10\nauthor willcl-ark <will@256k1.dev> 1690203873 +0100\ncommitter willcl-ark <will@256k1.dev> 1691577229 +0100\n\nrefactor: use CNodeRef in CConnman vectors\n\nSwitch to using CNodeRef in m_nodes and m_nodes_disconnected.\n\nThis gives us automatic refcounting and will permit safer deletion of\nnodes from multiple threads in the future.\n\nSome methods continue to use the stored pointer for now as they require\nlarger LOC changes, and they operate synchronously under the shared_ptr\nreference counting already:\n\nIn ThreadMessageHandler SendMessages() and ProcessMessages() are called\nusing a ref-counted NodeSnapshot.\n\nPushMessage() is called from inside SendMessages() or ForNode().\nProcessMessage() from inside ProcessMessages().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTa40ACgkQzm7EmUXB\nfqY9YQ/7BjlifYHyjqvfuufglnxqpDXJqxjlI7hBwV9V3PZ/cf9Djx6ABo6SNl9G\nQgJtF/8nWpiqX0su4gvtpdMtExyer9YxTaK0SlMVfJiO7MunazGHMNvwAA9SQ2vr\nYBS0rUHVtLhCRsZThHfAPurOUTmm56/bRqK91sOkkmlxTb+0/nsNdHlB/vbEyX2z\nOALvoMrfYc18auYnmHdQmJdiFiUk64X+54ibTLlF5pYid47oMfRPUxG1O0pqUiXm\nQuXip3QDrJE2wJkrZwio8Dzs7TKdmcvWBG+Gf6b2F7qARdlF7bbwkhR/BvcBGFWP\n6LAPjuaoM1vcmODQ/5bI+eRDeB5X1nIHhJTCgnDpRhsNfnO5uZeJnU5+R9uJ/Mq0\nOTyGp/M/vMt90UB8ndRi4Un/OonkbAPMnKfRzPWKflL+BOtCyEpRHVWhfRGGhb+t\nDXqWt8b/+sfMBOxEF9U9MgdT8QcXvefZ8D+o1gBuOJJOZErOTSIXXBVMsdrecJ8Y\ncEfpi5mxKlvOU+E8IAL0wDGjpKmWHgcyaLvyNPM359ypQl1HQyrtjHe7ke3X/R6P\niPwiQ1c7vmsYKxh3P54LTaPmgXE3+RgQfEuTY6oWacGxAVM1HhsNv9gQtWL8xpEL\nRtzsR0abZBNlQTuMFvZ7pWoqsqFoZqyONLYRSMTwgehGbrDLS5g=\n=1yvj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6475adae36a27b261bf88380dcec1cfffbc27d10",
          "sha": "6475adae36a27b261bf88380dcec1cfffbc27d10",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6475adae36a27b261bf88380dcec1cfffbc27d10"
        }
      ],
      "message": "refactor: use CNodeRef in CConnman vectors\n\nSwitch to using CNodeRef in m_nodes and m_nodes_disconnected.\n\nThis gives us automatic refcounting and will permit safer deletion of\nnodes from multiple threads in the future.\n\nSome methods continue to use the stored pointer for now as they require\nlarger LOC changes, and they operate synchronously under the shared_ptr\nreference counting already:\n\nIn ThreadMessageHandler SendMessages() and ProcessMessages() are called\nusing a ref-counted NodeSnapshot.\n\nPushMessage() is called from inside SendMessages() or ForNode().\nProcessMessage() from inside ProcessMessages().",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T10:33:49Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-24T13:04:33Z"
      },
      "sha": "1f612cded86dd8e0406d7c7feaef065bfbeb6f4b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlZGIyMTgxMmU1YzIwOGI2M2I4Njk1NGFkODY2M2E3Yzc2ZmVlYmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2edb21812e5c208b63b86954ad8663a7c76feebf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2edb21812e5c208b63b86954ad8663a7c76feebf",
      "tree": {
        "sha": "50f163edf44565c14eb794f4e6a408d892ae9a9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50f163edf44565c14eb794f4e6a408d892ae9a9c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 50f163edf44565c14eb794f4e6a408d892ae9a9c\nparent 1f612cded86dd8e0406d7c7feaef065bfbeb6f4b\nauthor willcl-ark <will@256k1.dev> 1691482083 +0100\ncommitter willcl-ark <will@256k1.dev> 1691577229 +0100\n\nnet: remove manual CNode refcounting\n\nUse the shared_ptr for refcounting.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTa40ACgkQzm7EmUXB\nfqbhog//XOrl45oY/DZHmUFBUc1/EU49Ef9Q+qugWeK7UDrwa/iEmdG4t0vDPPh9\nPMFarrTFSCdfMXL+nEPhpunJK3JScSFf1Ee2HKO/FC3wUUWKRuhY9nbwQEP0F4L8\nbOqzDwd9Rs+vR5zvLl0T7jwmBDNSuhbGDrpaKJY9X2Wlvq6PTQCqs/tiM8+plIYH\nfARaKkAXwUIs0P83dtpJ3E5gF663VBYbztUa4djJV4Cgm19ZvgqbCH2rYYmL19He\ni9yekllmhjNkDMKsaNtnLq8rAnpk/TRpUSn48ejcseXJ272/b3HmIF62bpxYLM0o\nW2h2/elqoOKr1aD+6BUPVuCh9xBQLelEOnTDbLCqgczZiI9TNc/QDBW/s0JMReuq\nyeh7iC2l2T+ZQUDGCWHPgFdn7eLln4dp1P/Okyp8XQYU7C46vbMZyNzmJGqOi1qx\nces2BZ4dnEXfsBkweGSYfqUE58w+BTfj2xT1EyBDUL3NOjC9St99nqhR9m99LJpY\nxY3S/XAbq6Mdv3r4fBejJ2XVIA8B9pkIsoWcMIGK6xiK3CvUgEPlvO8MQfV8JQ7r\na9K2ZrhBgiKUeZkXFMxm9QZRqiXHjCWXU1votXvY+1b4qA/Qu8pbg1P1lOlKzQOV\nCec87KkYx4xTRRF6hzRlPYlqt/nHaiAebtQ3nfUtbBCCsZgbLg4=\n=DTC+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f612cded86dd8e0406d7c7feaef065bfbeb6f4b",
          "sha": "1f612cded86dd8e0406d7c7feaef065bfbeb6f4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f612cded86dd8e0406d7c7feaef065bfbeb6f4b"
        }
      ],
      "message": "net: remove manual CNode refcounting\n\nUse the shared_ptr for refcounting.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T10:33:49Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-08T08:08:03Z"
      },
      "sha": "2edb21812e5c208b63b86954ad8663a7c76feebf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10045376843,
      "node_id": "HRFPE_lADOABII585tiKOMzwAAAAJWwElL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10045376843",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:54Z"
    },
    {
      "event": "commented",
      "id": 1671097648,
      "node_id": "IC_kwDOABII585jmu0w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1671097648",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:55Z",
      "updated_at": "2023-08-09T10:49:55Z",
      "author_association": "MEMBER",
      "body": "Thanks for the conceptual review @dergoegge.\r\n\r\nI've forced push a relatively different approach here, trying to take into consideration your review points, and #10738, but trying not to require introducing the decaying pointers. This has resulted in the following conceptual changes:\r\n\r\n1. Taking the idea of @theuni's `GetnodesCopy()` in `m_nodes` iterations by re-purposing and upgrading `NodesSnapshot()` a bit, allowing removal of many instances of `m_nodes_mutex` in the code, as he achieved.\r\n2. Made `CNode` a friend of `CConnman`. This allows us to call back to `DeleteNode()` automagically 🪄  on CNode destruction when the final reference is dropped. Then we can just worry about dropping all references, which seems easier to reason about for me. I think it might be possible to modify `DeleteNode()` further to assert no `shared_ptr`s remain for it --ensuring that nobody can accidently re-introduce unsafe deletion in the codebase in the future --, but I haven't looked at this yet.\r\n\r\n> In a way this is worse than the custom ref counting because it is harder to assert that we actually don't take new references after this check.\r\n\r\n3. I re-worked this part of `DisconnectNodes()` in general, but IMO this is safe-enough to drop from `m_nodes_disconnected` outright, as the only users of `m_nodes_disconnected` are `StopNodes()` and `DisconnectNodes()`. To belt-and-suspenders this anyway, I added a final optional commit which adds an `m_nodes_disconnected_mutex` to ensure no new references can be created while we are dropping from `m_nodes_disconnected`.\r\n\r\nThe commits need tidying up, rewording etc. still, but otherwise would be curious to know if this new approach looked better to you? ",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1671097648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "mentioned",
      "id": 10045376993,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJWwEnh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10045376993",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:55Z"
    },
    {
      "event": "subscribed",
      "id": 10045377004,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJWwEns",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10045377004",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:55Z"
    },
    {
      "event": "mentioned",
      "id": 10045377011,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJWwEnz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10045377011",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:56Z"
    },
    {
      "event": "subscribed",
      "id": 10045377022,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJWwEn-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10045377022",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T10:49:56Z"
    },
    {
      "event": "unlabeled",
      "id": 10046116057,
      "node_id": "UNLE_lADOABII585tiKOMzwAAAAJWy5DZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10046116057",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T12:06:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10047243762,
      "node_id": "HRFPE_lADOABII585tiKOMzwAAAAJW3MXy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10047243762",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T13:49:57Z"
    },
    {
      "event": "labeled",
      "id": 10047244791,
      "node_id": "LE_lADOABII585tiKOMzwAAAAJW3Mn3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10047244791",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T13:50:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1671392361,
      "node_id": "IC_kwDOABII585jn2xp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1671392361",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T14:04:20Z",
      "updated_at": "2023-08-09T14:04:20Z",
      "author_association": "MEMBER",
      "body": "@dergoegge Thanks for the ping.\r\n\r\n> makes operations such as deleting them from multiple threads difficult \r\n\r\nWhy is this a goal?\r\n\r\nI'm quite nervous about these changes. I've spoken with @dergoegge about this a few times now, but I'm afraid my information and opinions on the code involved are quite dated at this point (2017 to be exact :), so I haven't had much to contribute. \r\n\r\nI'll say though, any changes or refactors for future changes to the threading model should be very well justified upfront imo. I remember even being uneasy about #10738 at the time, in fact I might have even talked myself out of rebasing it for merge.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1671392361",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "mentioned",
      "id": 10047414278,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJW32AG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10047414278",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T14:04:21Z"
    },
    {
      "event": "subscribed",
      "id": 10047414299,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJW32Ab",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10047414299",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T14:04:21Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkMDNiOTI5ODQxMWJlNmFhYmRkYzM2NWVkMmNiZmYxMWQ4Y2RhYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd03b9298411be6aabddc365ed2cbff11d8cdac0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd03b9298411be6aabddc365ed2cbff11d8cdac0",
      "tree": {
        "sha": "c6144b714bdfae61f0a09eceb19496a3ea7c9239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6144b714bdfae61f0a09eceb19496a3ea7c9239"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c6144b714bdfae61f0a09eceb19496a3ea7c9239\nparent 2edb21812e5c208b63b86954ad8663a7c76feebf\nauthor willcl-ark <will@256k1.dev> 1691484126 +0100\ncommitter willcl-ark <will@256k1.dev> 1691591807 +0100\n\nnet: switch to using NodeSnapshot in loops\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTpH8ACgkQzm7EmUXB\nfqYVlA//QnDKwItMpylfAisxY5bayvLJegpoie9hc+OEEh4kFGWfiAgGci432RzM\nv7oknASRB04tcphUcYCrA3b43G34piYjT2FVGYdkkECoE6OWdL2Uhvf6+Mo61Ma5\nK+tERlXq38K9hH7Rsb9ycf98Fur0Pt4iJq96DPJ7EwgN08PVJO27ZLrEy2xszUCG\nhiotvbmltMv5xu4bibXwpl2apIYv/Z2GOBAH151ygDboLyc9Z2AppFlLikAG2utv\nmvOpBECuvf8ZmR//AnwILw+A4CluD2hXxeWySghyliA8nZeQF78c0OJ8wRFeyAua\nfhrTS5Dvd7b/z+lDFp7ObSUHl4IrMomLjjPZUd7FCrbqsalVGKKVelQq5CBi7zf4\nCk5VNT9RmO9rv3yzYIxjDwLpwZDtfe+8pAHmtMvI1e1ENmIG9nywWiEqvGOoEr8L\nKpTnh1W0Gjfa0z1LbpdcL8ptkFSucooqSsGVVsMFNAnSuqEkcD5tBQH+Z2nww0Fk\n7JvmgJUmCOfZNH6CMzMfL3iIBdKEanlnMqOBUwY78JLAYDRt79PoBd7RAv6z+iDK\nA7lXze3RteFSKhL17wrhu4Em/fLkle7leLHJl+PADNWXrIsvhGxejZzh3I+2nqDL\n0hGBLjXqWJEBH7PBHfxQIbkDKAZRrdt1ADblylMYzItf1Q/fKlU=\n=W12c\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2edb21812e5c208b63b86954ad8663a7c76feebf",
          "sha": "2edb21812e5c208b63b86954ad8663a7c76feebf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2edb21812e5c208b63b86954ad8663a7c76feebf"
        }
      ],
      "message": "net: switch to using NodeSnapshot in loops",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T14:36:47Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-08T08:42:06Z"
      },
      "sha": "dd03b9298411be6aabddc365ed2cbff11d8cdac0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmNzhjNDhmZjgyMTkwZTAwMDUwMWIxNDQ3MGNjYTMyODExZjAyYTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af78c48ff82190e000501b14470cca32811f02a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af78c48ff82190e000501b14470cca32811f02a2",
      "tree": {
        "sha": "df197774a16f0701cdf1cf5aa7a574923b2b3590",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df197774a16f0701cdf1cf5aa7a574923b2b3590"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree df197774a16f0701cdf1cf5aa7a574923b2b3590\nparent dd03b9298411be6aabddc365ed2cbff11d8cdac0\nauthor willcl-ark <will@256k1.dev> 1691488896 +0100\ncommitter willcl-ark <will@256k1.dev> 1691591808 +0100\n\nnet: automatically destruct CNodes on disconnect\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTpIAACgkQzm7EmUXB\nfqZxMhAAh5WhGbk76aE7Ve/raTxNs2Vk1npPiWULyj1Y09D2rswhuL+vobS1ILGc\njeM6UmOF7pfJn4iJVOCQ3yyjtCvOwWlJohMztRxdg5h9hYaBIFHwrhipxoYFuyI/\njkwzXqEtaSlkJhfFTXmxOpD02TFkT4gVTj65iFszn5FE+USDSDNxmXcpdqwsQuqT\nDJy2S3n93P/2ASJ6h5OFulQ+qa5uZuoEjTA3RHCNNL1Hlt3o7mOztULdAUSG2XC9\nI2DrmOM3afNw1nHYuWrMWPLQmBHuUEZAACbqh4q76JHKHRW1MAMZEJkoPyi36cXK\nvjmXcTgnmuMLyz38/7aJ1C0OmlCAakzsZrB+P6L1I2E9w6evabtm7lOsGAiKFcgz\nActkNUprAiR31OyRNeIe8Rks+okfKtjb5P0VeQcnBYU4tNOxp2ZxCzQCPhiFAV1e\ng180+bYFjJlwhqLDtjV+RvEOr+/Y2/49jdrB1g5AP9JYiA5Pfu/K6itzGwyIc6Jg\nGfvTyR8M385qDfJ5S40PwkGHtsnAugCQ7FNL3/3klv0PJwUtOy1x2u6IdAc8WcY3\ngP56ejAJYyjJmqxPLXPRHkSVpeKpZ+PexWbKyignmJXXAcUuI2d4yL3sXY9Mqhwq\nk3UYRdZEyxsENp31Fn7yKYWMBw3t6BcKrgDn1+/V0W642GIBvtM=\n=P/5f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd03b9298411be6aabddc365ed2cbff11d8cdac0",
          "sha": "dd03b9298411be6aabddc365ed2cbff11d8cdac0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd03b9298411be6aabddc365ed2cbff11d8cdac0"
        }
      ],
      "message": "net: automatically destruct CNodes on disconnect",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T14:36:48Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-08T10:01:36Z"
      },
      "sha": "af78c48ff82190e000501b14470cca32811f02a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NTQ4MjIwNDU5MWM5YTJkMTQ5ZGQ0ZTAwZGJiNzdkOTRlMGIwMTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/095482204591c9a2d149dd4e00dbb77d94e0b017",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/095482204591c9a2d149dd4e00dbb77d94e0b017",
      "tree": {
        "sha": "a1988b3410a90c2506663f5c69a4ba1f0288a384",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1988b3410a90c2506663f5c69a4ba1f0288a384"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a1988b3410a90c2506663f5c69a4ba1f0288a384\nparent af78c48ff82190e000501b14470cca32811f02a2\nauthor willcl-ark <will@256k1.dev> 1691576046 +0100\ncommitter willcl-ark <will@256k1.dev> 1691591808 +0100\n\nnet: optional m_nodes_disconnected mutex commit\n\nEnsure we don't create new references while trying to drop a node\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmTTpIAACgkQzm7EmUXB\nfqZrng//RxWlJxT/dwCnlCEckNKMnqI0m+GYleLMd1fz2CTrE7RbZ6JDuTf8wNX8\nXgeN/EM4iU8iD9uvKqfHEgMvr3iMJ5tU2+skUYju59hjExYFaBXaXtvzpXh5gSZh\nyWA56zvavuYt1CRBkyDToHOgBjjD6F7VW1GIklrRfYu3mpjfgx85ZGjItvjqSfaI\nKzUxilMq4a8SVI1uXD9ckVsk1L5Zc5FSYsc5X0uSJzpSHlnQ9+CnRNoQO5yfxPhl\nxOai5ntaxxVE/wAqVifQDzjiqm9ytdM6jMET1lzASC6uMCRQJAxTyItebBbv9CUc\nqlBdQMdue7iHUEZJ5Hi1CPv+QIGAzpZGOlQXkXaXLVykWzMZOAlc4MoicwPvUPf2\nxeKoI2btzLP38FXEcW6IaNW6hrt6exhPUeZN1bBeMQFA3nuKgI78hVad/+rKb0KM\nm8W8cmvdPt2YPKCO3yT2ZmrPhkEx0CO9AI4HvzjQa2z0d529Gl2DabBFmoQ1D6tg\n9ru24P4CM3zIzr5s/cQcwb8y0tTaMzo6OCjV9Xy0J1Jm2nuVGjCnqr0aZxJWU9So\nxOGi6ru+I0m0TPCygPe3MBaVyDb9NNuW81DNnZjxtp4s5Sxj316d6SNUsTDWG0EV\nPR7xGOe+gkp3yjnqosY76d3l2VPDE5E3xcV6yyz7GvkTx4AgrbI=\n=pvg7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af78c48ff82190e000501b14470cca32811f02a2",
          "sha": "af78c48ff82190e000501b14470cca32811f02a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af78c48ff82190e000501b14470cca32811f02a2"
        }
      ],
      "message": "net: optional m_nodes_disconnected mutex commit\n\nEnsure we don't create new references while trying to drop a node",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T14:36:48Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-08-09T10:14:06Z"
      },
      "sha": "095482204591c9a2d149dd4e00dbb77d94e0b017"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10048473836,
      "node_id": "HRFPE_lADOABII585tiKOMzwAAAAJW74rs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10048473836",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T14:44:29Z"
    },
    {
      "event": "reviewed",
      "id": 1569429475,
      "node_id": "PRR_kwDOABII585di5fj",
      "url": null,
      "actor": null,
      "commit_id": "36c6fe59b21999c0ea904d310bcc794d0736628d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1569429475",
      "submitted_at": "2023-08-09T14:47:52Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
    },
    {
      "event": "commented",
      "id": 1671589152,
      "node_id": "IC_kwDOABII585jom0g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1671589152",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T15:05:40Z",
      "updated_at": "2023-08-09T15:05:40Z",
      "author_association": "MEMBER",
      "body": ">>  makes operations such as deleting them from multiple threads difficult\r\n>\r\n> Why is this a goal?\r\n\r\nI missed this in the OP and think that this should not be a goal or should be well justified.\r\n\r\nI like getting rid of the custom ref counting for other reasons. Mainly, because it's annoying and bug prone.\r\n\r\nSomething I have been working on is hiding CNode from the public net interface and turning the connection manager into a NodeId based manager, e.g. `CConnman::PushMessage(CNode*, CSerializedNetMsg&&)` becomes  `CConnman::PushMessage(NodeId, CSerializedNetMsg&&)`. This leads to situations where the CConnman needs to hold `m_nodes_mutex` while acquiring the right CNode to call `AddRef` and then later `Release` (once finished with the CNode). While that avoids holding `m_nodes_mutex` the entire time, it is pretty messy/bug-prone while we are using the custom ref-counting and smart pointers would be a good improvement there.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1671589152",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "commented",
      "id": 1671595104,
      "node_id": "IC_kwDOABII585jooRg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1671595104",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T15:09:12Z",
      "updated_at": "2023-08-09T15:09:12Z",
      "author_association": "MEMBER",
      "body": "> @dergoegge Thanks for the ping.\r\n> \r\n> > makes operations such as deleting them from multiple threads difficult\r\n> \r\n> Why is this a goal?\r\n> \r\n> I'm quite nervous about these changes. I've spoken with @dergoegge about this a few times now, but I'm afraid my information and opinions on the code involved are quite dated at this point (2017 to be exact :), so I haven't had much to contribute.\r\n> \r\n> I'll say though, any changes or refactors for future changes to the threading model should be very well justified upfront imo. I remember even being uneasy about #10738 at the time, in fact I might have even talked myself out of rebasing it for merge.\r\n\r\nThanks, and I agree that after working on this I'm not sure this will ever extend to being  threadsafe (todo: update PR description here). For context https://github.com/bitcoin/bitcoin/pull/27912 is how I came to be looking at this.\r\n\r\nI feel like the model as (intended to be) implemented here is easier to reason about as refcounting is taken care of for us via the smart pointers and node cleanup only happens (automatically) once we have a single final reference in `m_nodes_disconnected` and we drop it: once moved from `m_nodes` the node won't be included in any future iterations of that container and it waits to be gracefully dropped from `m_nodes_disconnected` and cleaned up when appropriate.\r\n\r\n@dergoegge also left some comments on the current implementation of the approach while I was replying here, which I will consider and reply to seperately :)",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1671595104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "mentioned",
      "id": 10048969269,
      "node_id": "MEE_lADOABII585tiKOMzwAAAAJW9xo1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10048969269",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T15:09:12Z"
    },
    {
      "event": "subscribed",
      "id": 10048969292,
      "node_id": "SE_lADOABII585tiKOMzwAAAAJW9xpM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10048969292",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T15:09:13Z"
    },
    {
      "event": "commented",
      "id": 1672297168,
      "node_id": "IC_kwDOABII585jrTrQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1672297168",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T23:09:27Z",
      "updated_at": "2023-08-09T23:09:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Seeing these failures locally:\r\n\r\n```\r\n$ ./src/test/test_bitcoin -t denialofservice_tests\r\nRunning 5 test cases...\r\nAssertion failed: lock m_nodes_mutex not held in net.cpp:1598; locks held:\r\n'cs_main' in net_processing.cpp:5203 (in thread 'test')\r\nunknown location:0: fatal error: in \"denialofservice_tests/stale_tip_peer_management\": signal: SIGABRT (application abort requested)\r\ntest/denialofservice_tests.cpp:182: last checkpoint\r\nAssertion failed: (ret.second), function AddArg, file args.cpp, line 577.\r\nunknown location:0: fatal error: in \"denialofservice_tests/block_relay_only_eviction\": signal: SIGABRT (application abort requested)\r\ntest/denialofservice_tests.cpp:243: last checkpoint: \"block_relay_only_eviction\" fixture ctor\r\nAssertion failed: (ret.second), function AddArg, file args.cpp, line 577.\r\nunknown location:0: fatal error: in \"denialofservice_tests/peer_discouragement\": signal: SIGABRT (application abort requested)\r\ntest/denialofservice_tests.cpp:304: last checkpoint: \"peer_discouragement\" fixture ctor\r\nAssertion failed: (ret.second), function AddArg, file args.cpp, line 577.\r\nunknown location:0: fatal error: in \"denialofservice_tests/DoS_bantime\": signal: SIGABRT (application abort requested)\r\ntest/denialofservice_tests.cpp:409: last checkpoint: \"DoS_bantime\" fixture ctor\r\n\r\n*** 4 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\nAssertion failed: (m_worker_threads.empty()), function ~CCheckQueue, file checkqueue.h, line 198.\r\nzsh: abort      ./src/test/test_bitcoin -t denialofservice_tests```\r\n```\r\n\r\n```\r\n$ FUZZ=process_message ./src/test/fuzz/fuzz\r\n\r\n...a few seconds later...\r\n\r\nin Peer::SetTxRelay() net_processing.cpp:305\r\nnet_processing.cpp:307 SetTxRelay: Assertion `!m_tx_relay' failed.\r\n```",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1672297168",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-12T08:18:52Z",
      "updated_at": "2023-08-12T08:18:52Z",
      "source": {
        "issue": {
          "id": 1843988210,
          "node_id": "PR_kwDOABII585Xk2ms",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28248/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28248",
          "number": 28248,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: peer connection bug fixes",
          "body": "This pull fixes several peer connection bugs in our p2p code, along with the logging that uncovered them:\r\n\r\n1. Fix detection of inbound peer connections in `GetAddedNodeInfo`.\r\n\r\n2. Fix addnode CJDNS peers not detected in `GetAddedNodeInfo`, causing `ThreadOpenAddedConnections` to continually retry to connect to them and RPC `getaddednodeinfo` incorrectly showing them as not connected.\r\n\r\n3. Fix `ThreadOpenConnections` not detecting inbound CJDNS connections and making automatic outbound connections to them.\r\n\r\n4. Fix detection of already connected peers in `AlreadyConnectedToAddress()`.\r\n\r\n5. Fix detection of already connected peers when making outbound connections in `ConnectNode`.\r\n\r\n6. Do not accept inbound connections in `CreateNodeFromAcceptedSocket` from I2P peers we're already connected to, as building I2P tunnels is expensive.\r\n\r\n7. Fix making automatic outbound connections in `ThreadOpenConnections` to addnode peers, in order not to allocate our limited outbound slots to them and to ensure addnode connections benefit from their intended protections. Our addnode logic usually connects the addnode peers before the automatic outbound logic does, but not always, as a connection race can occur (see the commit message for further details and mainnet examples). When an addnode peer is connected as an automatic outbound peer and is the only connection we have to a network, it can be protected by our new outbound network-specific eviction logic and persist in the \"wrong role\". Fix these issues by checking if the selected address is an addnode peer in our automatic outbound connection logic.\r\n\r\nUpdate the p2p logging with the improvements that allowed seeing/understanding/debugging the current behavior. Please see the commit messages for details.\r\n\r\nSimplify `MaybePickPreferredNetwork` to return `std::optional`, make it a const class method, and add Clang thread-safety analysis annotation and related assertions.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28248",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28248",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28248.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28248.patch"
          },
          "closed_at": "2024-04-08T16:19:54Z",
          "created_at": "2023-08-09T20:46:20Z",
          "updated_at": "2024-04-08T16:19:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1677719961,
      "node_id": "IC_kwDOABII585j__mZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677719961",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T17:05:29Z",
      "updated_at": "2023-08-14T17:05:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "What about calling `FinalizeNode()` from the destructor of `CNode`? This ensures it will be called exactly once by some thread after no other threads are referencing it. Is this not what we want?\r\n\r\n<details>\r\n<summary>[patch] FinalizeNode() from ~CNode()</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 1ea0ad868a..587d907c3a 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -412,13 +412,12 @@ public:\r\n     /** fSuccessfullyConnected is set to true on receiving VERACK from the peer. */\r\n     std::atomic_bool fSuccessfullyConnected{false};\r\n     // Setting fDisconnect to true will cause the node to be disconnected the\r\n     // next time DisconnectNodes() runs\r\n     std::atomic_bool fDisconnect{false};\r\n     CSemaphoreGrant grantOutbound;\r\n-    std::atomic<int> nRefCount{0};\r\n \r\n     const uint64_t nKeyedNetGroup;\r\n     std::atomic_bool fPauseRecv{false};\r\n     std::atomic_bool fPauseSend{false};\r\n \r\n     const ConnectionType m_conn_type;\r\n@@ -566,30 +565,27 @@ public:\r\n           uint64_t nKeyedNetGroupIn,\r\n           uint64_t nLocalHostNonceIn,\r\n           const CAddress& addrBindIn,\r\n           const std::string& addrNameIn,\r\n           ConnectionType conn_type_in,\r\n           bool inbound_onion,\r\n+          std::function<void(CNode&)> destruct_cb = {},\r\n           CNodeOptions&& node_opts = {});\r\n     CNode(const CNode&) = delete;\r\n     CNode& operator=(const CNode&) = delete;\r\n \r\n+    ~CNode();\r\n+\r\n     NodeId GetId() const {\r\n         return id;\r\n     }\r\n \r\n     uint64_t GetLocalNonce() const {\r\n         return nLocalHostNonce;\r\n     }\r\n \r\n-    int GetRefCount() const\r\n-    {\r\n-        assert(nRefCount >= 0);\r\n-        return nRefCount;\r\n-    }\r\n-\r\n     /**\r\n      * Receive bytes from the buffer and deserialize them into messages.\r\n      *\r\n      * @param[in]   msg_bytes   The raw data\r\n      * @param[out]  complete    Set True if at least one message has been\r\n      *                          deserialized and is ready to be processed\r\n@@ -609,23 +605,12 @@ public:\r\n     }\r\n \r\n     CService GetAddrLocal() const EXCLUSIVE_LOCKS_REQUIRED(!m_addr_local_mutex);\r\n     //! May not be called more than once\r\n     void SetAddrLocal(const CService& addrLocalIn) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_local_mutex);\r\n \r\n-    CNode* AddRef()\r\n-    {\r\n-        nRefCount++;\r\n-        return this;\r\n-    }\r\n-\r\n-    void Release()\r\n-    {\r\n-        nRefCount--;\r\n-    }\r\n-\r\n     void CloseSocketDisconnect() EXCLUSIVE_LOCKS_REQUIRED(!m_sock_mutex);\r\n \r\n     void CopyStats(CNodeStats& stats) EXCLUSIVE_LOCKS_REQUIRED(!m_subver_mutex, !m_addr_local_mutex, !cs_vSend, !cs_vRecv);\r\n \r\n     std::string ConnectionTypeAsString() const { return ::ConnectionTypeAsString(m_conn_type); }\r\n \r\n@@ -662,12 +647,17 @@ private:\r\n      * the data socket is closed, the control socket is not going to be used anymore\r\n      * and is just taking up resources. So better close it as soon as `m_sock` is\r\n      * closed.\r\n      * Otherwise this unique_ptr is empty.\r\n      */\r\n     std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\r\n+\r\n+    /**\r\n+     * A function to be called just before this object is destroyed.\r\n+     */\r\n+    std::function<void(CNode&)> m_destruct_cb;\r\n };\r\n \r\n /**\r\n  * Interface for message handling\r\n  */\r\n class NetEventsInterface\r\n@@ -802,23 +792,23 @@ public:\r\n \r\n     using NodeFn = std::function<void(CNode*)>;\r\n     void ForEachNode(const NodeFn& func)\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n         for (auto&& node : m_nodes) {\r\n-            if (NodeFullyConnected(node))\r\n-                func(node);\r\n+            if (NodeFullyConnected(*node))\r\n+                func(node.get());\r\n         }\r\n     };\r\n \r\n     void ForEachNode(const NodeFn& func) const\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n         for (auto&& node : m_nodes) {\r\n-            if (NodeFullyConnected(node))\r\n-                func(node);\r\n+            if (NodeFullyConnected(*node))\r\n+                func(node.get());\r\n         }\r\n     };\r\n \r\n     // Addrman functions\r\n     /**\r\n      * Return all or many randomly selected addresses, optionally by network.\r\n@@ -964,25 +954,25 @@ private:\r\n \r\n     /**\r\n      * Generate a collection of sockets to check for IO readiness.\r\n      * @param[in] nodes Select from these nodes' sockets.\r\n      * @return sockets to check for readiness\r\n      */\r\n-    Sock::EventsPerSock GenerateWaitSockets(Span<CNode* const> nodes);\r\n+    Sock::EventsPerSock GenerateWaitSockets(const std::vector<std::shared_ptr<CNode>>& nodes);\r\n \r\n     /**\r\n      * Check connected and listening sockets for IO readiness and process them accordingly.\r\n      */\r\n     void SocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Do the read/write for connected sockets that are ready for IO.\r\n      * @param[in] nodes Nodes to process. The socket of each node is checked against `what`.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n      */\r\n-    void SocketHandlerConnected(const std::vector<CNode*>& nodes,\r\n+    void SocketHandlerConnected(const std::vector<std::shared_ptr<CNode>>& nodes,\r\n                                 const Sock::EventsPerSock& events_per_sock)\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Accept incoming connections, one from each read-ready listening socket.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n@@ -991,25 +981,25 @@ private:\r\n \r\n     void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n     void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\r\n \r\n     uint64_t CalculateKeyedNetGroup(const CAddress& ad) const;\r\n \r\n-    CNode* FindNode(const CNetAddr& ip);\r\n-    CNode* FindNode(const CSubNet& subNet);\r\n-    CNode* FindNode(const std::string& addrName);\r\n-    CNode* FindNode(const CService& addr);\r\n+    std::shared_ptr<CNode> FindNode(const CNetAddr& ip);\r\n+    std::shared_ptr<CNode> FindNode(const CSubNet& subNet);\r\n+    std::shared_ptr<CNode> FindNode(const std::string& addrName);\r\n+    std::shared_ptr<CNode> FindNode(const CService& addr);\r\n \r\n     /**\r\n      * Determine whether we're already connected to a given address, in order to\r\n      * avoid initiating duplicate connections.\r\n      */\r\n     bool AlreadyConnectedToAddress(const CAddress& addr);\r\n \r\n     bool AttemptToEvictConnection();\r\n-    CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\r\n+    std::shared_ptr<CNode> ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\r\n     void AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr) const;\r\n \r\n     void DeleteNode(CNode* pnode);\r\n \r\n     NodeId GetNewNodeId();\r\n \r\n@@ -1041,13 +1031,13 @@ private:\r\n      *\r\n      * @return           bool        Whether a preferred network was found.\r\n      */\r\n     bool MaybePickPreferredNetwork(std::optional<Network>& network);\r\n \r\n     // Whether the node should be passed out in ForEach* callbacks\r\n-    static bool NodeFullyConnected(const CNode* pnode);\r\n+    static bool NodeFullyConnected(const CNode& node);\r\n \r\n     // Network usage totals\r\n     mutable Mutex m_total_bytes_sent_mutex;\r\n     std::atomic<uint64_t> nTotalBytesRecv{0};\r\n     uint64_t nTotalBytesSent GUARDED_BY(m_total_bytes_sent_mutex) {0};\r\n \r\n@@ -1072,14 +1062,13 @@ private:\r\n     AddrMan& addrman;\r\n     const NetGroupManager& m_netgroupman;\r\n     std::deque<std::string> m_addr_fetches GUARDED_BY(m_addr_fetches_mutex);\r\n     Mutex m_addr_fetches_mutex;\r\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\r\n     mutable Mutex m_added_nodes_mutex;\r\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\r\n-    std::list<CNode*> m_nodes_disconnected;\r\n+    std::vector<std::shared_ptr<CNode>> m_nodes GUARDED_BY(m_nodes_mutex);\r\n     mutable RecursiveMutex m_nodes_mutex;\r\n     std::atomic<NodeId> nLastNodeId{0};\r\n     unsigned int nPrevNodeCount{0};\r\n \r\n     // Stores number of full-tx connections (outbound and manual) per network\r\n     std::array<unsigned int, Network::NET_MAX> m_network_conn_counts GUARDED_BY(m_nodes_mutex) = {};\r\n@@ -1227,35 +1216,25 @@ private:\r\n     public:\r\n         explicit NodesSnapshot(const CConnman& connman, bool shuffle)\r\n         {\r\n             {\r\n                 LOCK(connman.m_nodes_mutex);\r\n                 m_nodes_copy = connman.m_nodes;\r\n-                for (auto& node : m_nodes_copy) {\r\n-                    node->AddRef();\r\n-                }\r\n             }\r\n             if (shuffle) {\r\n                 Shuffle(m_nodes_copy.begin(), m_nodes_copy.end(), FastRandomContext{});\r\n             }\r\n         }\r\n \r\n-        ~NodesSnapshot()\r\n-        {\r\n-            for (auto& node : m_nodes_copy) {\r\n-                node->Release();\r\n-            }\r\n-        }\r\n-\r\n-        const std::vector<CNode*>& Nodes() const\r\n+        const std::vector<std::shared_ptr<CNode>>& Nodes() const\r\n         {\r\n             return m_nodes_copy;\r\n         }\r\n \r\n     private:\r\n-        std::vector<CNode*> m_nodes_copy;\r\n+        std::vector<std::shared_ptr<CNode>> m_nodes_copy;\r\n     };\r\n \r\n     friend struct ConnmanTestMsg;\r\n };\r\n \r\n /** Dump binary message to file, with timestamp */\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex b51043ba27..c1ad1166f3 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -359,49 +359,49 @@ bool SeenLocal(const CService& addr)\r\n bool IsLocal(const CService& addr)\r\n {\r\n     LOCK(g_maplocalhost_mutex);\r\n     return mapLocalHost.count(addr) > 0;\r\n }\r\n \r\n-CNode* CConnman::FindNode(const CNetAddr& ip)\r\n+std::shared_ptr<CNode> CConnman::FindNode(const CNetAddr& ip)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (auto& pnode : m_nodes) {\r\n       if (static_cast<CNetAddr>(pnode->addr) == ip) {\r\n             return pnode;\r\n         }\r\n     }\r\n     return nullptr;\r\n }\r\n \r\n-CNode* CConnman::FindNode(const CSubNet& subNet)\r\n+std::shared_ptr<CNode> CConnman::FindNode(const CSubNet& subNet)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (auto& pnode : m_nodes) {\r\n         if (subNet.Match(static_cast<CNetAddr>(pnode->addr))) {\r\n             return pnode;\r\n         }\r\n     }\r\n     return nullptr;\r\n }\r\n \r\n-CNode* CConnman::FindNode(const std::string& addrName)\r\n+std::shared_ptr<CNode> CConnman::FindNode(const std::string& addrName)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (auto& pnode : m_nodes) {\r\n         if (pnode->m_addr_name == addrName) {\r\n             return pnode;\r\n         }\r\n     }\r\n     return nullptr;\r\n }\r\n \r\n-CNode* CConnman::FindNode(const CService& addr)\r\n+std::shared_ptr<CNode> CConnman::FindNode(const CService& addr)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (auto& pnode : m_nodes) {\r\n         if (static_cast<CService>(pnode->addr) == addr) {\r\n             return pnode;\r\n         }\r\n     }\r\n     return nullptr;\r\n }\r\n@@ -411,13 +411,13 @@ bool CConnman::AlreadyConnectedToAddress(const CAddress& addr)\r\n     return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringAddrPort());\r\n }\r\n \r\n bool CConnman::CheckIncomingNonce(uint64_t nonce)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for (const CNode* pnode : m_nodes) {\r\n+    for (const auto& pnode : m_nodes) {\r\n         if (!pnode->fSuccessfullyConnected && !pnode->IsInboundConn() && pnode->GetLocalNonce() == nonce)\r\n             return false;\r\n     }\r\n     return true;\r\n }\r\n \r\n@@ -434,25 +434,23 @@ static CAddress GetBindAddress(const Sock& sock)\r\n             LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"getsockname failed\\n\");\r\n         }\r\n     }\r\n     return addr_bind;\r\n }\r\n \r\n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type)\r\n+std::shared_ptr<CNode> CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type)\r\n {\r\n     AssertLockNotHeld(m_unused_i2p_sessions_mutex);\r\n     assert(conn_type != ConnectionType::INBOUND);\r\n \r\n     if (pszDest == nullptr) {\r\n         if (IsLocal(addrConnect))\r\n             return nullptr;\r\n \r\n         // Look for an existing connection\r\n-        CNode* pnode = FindNode(static_cast<CService>(addrConnect));\r\n-        if (pnode)\r\n-        {\r\n+        if (FindNode(static_cast<CService>(addrConnect))) {\r\n             LogPrintf(\"Failed to open new connection, already connected\\n\");\r\n             return nullptr;\r\n         }\r\n     }\r\n \r\n     LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"trying connection %s lastseen=%.1fhrs\\n\",\r\n@@ -471,14 +469,13 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n                 LogPrint(BCLog::NET, \"Resolver returned invalid address %s for %s\\n\", addrConnect.ToStringAddrPort(), pszDest);\r\n                 return nullptr;\r\n             }\r\n             // It is possible that we already have a connection to the IP/port pszDest resolved to.\r\n             // In that case, drop the connection that was just created.\r\n             LOCK(m_nodes_mutex);\r\n-            CNode* pnode = FindNode(static_cast<CService>(addrConnect));\r\n-            if (pnode) {\r\n+            if (FindNode(static_cast<CService>(addrConnect))) {\r\n                 LogPrintf(\"Failed to open new connection, already connected\\n\");\r\n                 return nullptr;\r\n             }\r\n         }\r\n     }\r\n \r\n@@ -563,26 +560,26 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n     // Add node\r\n     NodeId id = GetNewNodeId();\r\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\r\n     if (!addr_bind.IsValid()) {\r\n         addr_bind = GetBindAddress(*sock);\r\n     }\r\n-    CNode* pnode = new CNode(id,\r\n+    auto pnode = std::make_shared<CNode>(id,\r\n                              std::move(sock),\r\n                              addrConnect,\r\n                              CalculateKeyedNetGroup(addrConnect),\r\n                              nonce,\r\n                              addr_bind,\r\n                              pszDest ? pszDest : \"\",\r\n                              conn_type,\r\n                              /*inbound_onion=*/false,\r\n+                             [this](CNode& node) {m_msgproc->FinalizeNode(node);},\r\n                              CNodeOptions{\r\n                                  .i2p_sam_session = std::move(i2p_transient_session),\r\n                                  .recv_flood_size = nReceiveFloodSize,\r\n                              });\r\n-    pnode->AddRef();\r\n \r\n     // We're making a new connection, harvest entropy from the time (and our peer count)\r\n     RandAddEvent((uint32_t)id);\r\n \r\n     return pnode;\r\n }\r\n@@ -902,13 +899,13 @@ size_t CConnman::SocketSendData(CNode& node) const\r\n bool CConnman::AttemptToEvictConnection()\r\n {\r\n     std::vector<NodeEvictionCandidate> vEvictionCandidates;\r\n     {\r\n \r\n         LOCK(m_nodes_mutex);\r\n-        for (const CNode* node : m_nodes) {\r\n+        for (const auto& node : m_nodes) {\r\n             if (node->fDisconnect)\r\n                 continue;\r\n             NodeEvictionCandidate candidate{\r\n                 .id = node->GetId(),\r\n                 .m_connected = node->m_connected,\r\n                 .m_min_ping_time = node->m_min_ping_time,\r\n@@ -929,13 +926,13 @@ bool CConnman::AttemptToEvictConnection()\r\n     }\r\n     const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates));\r\n     if (!node_id_to_evict) {\r\n         return false;\r\n     }\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (const auto& pnode : m_nodes) {\r\n         if (pnode->GetId() == *node_id_to_evict) {\r\n             LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\r\n             pnode->fDisconnect = true;\r\n             return true;\r\n         }\r\n     }\r\n@@ -986,13 +983,13 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n         NetPermissions::AddFlag(permission_flags, NetPermissionFlags::Mempool);\r\n         NetPermissions::AddFlag(permission_flags, NetPermissionFlags::NoBan);\r\n     }\r\n \r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (const CNode* pnode : m_nodes) {\r\n+        for (const auto& pnode : m_nodes) {\r\n             if (pnode->IsInboundConn()) nInbound++;\r\n         }\r\n     }\r\n \r\n     if (!fNetworkActive) {\r\n         LogPrint(BCLog::NET, \"connection from %s dropped: not accepting new connections\\n\", addr.ToStringAddrPort());\r\n@@ -1043,27 +1040,27 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n     ServiceFlags nodeServices = nLocalServices;\r\n     if (NetPermissions::HasFlag(permission_flags, NetPermissionFlags::BloomFilter)) {\r\n         nodeServices = static_cast<ServiceFlags>(nodeServices | NODE_BLOOM);\r\n     }\r\n \r\n     const bool inbound_onion = std::find(m_onion_binds.begin(), m_onion_binds.end(), addr_bind) != m_onion_binds.end();\r\n-    CNode* pnode = new CNode(id,\r\n+    auto pnode = std::make_shared<CNode>(id,\r\n                              std::move(sock),\r\n                              addr,\r\n                              CalculateKeyedNetGroup(addr),\r\n                              nonce,\r\n                              addr_bind,\r\n                              /*addrNameIn=*/\"\",\r\n                              ConnectionType::INBOUND,\r\n                              inbound_onion,\r\n+                             [this](CNode& node) {m_msgproc->FinalizeNode(node);},\r\n                              CNodeOptions{\r\n                                  .permission_flags = permission_flags,\r\n                                  .prefer_evict = discouraged,\r\n                                  .recv_flood_size = nReceiveFloodSize,\r\n                              });\r\n-    pnode->AddRef();\r\n     m_msgproc->InitializeNode(*pnode, nodeServices);\r\n \r\n     LogPrint(BCLog::NET, \"connection from %s accepted\\n\", addr.ToStringAddrPort());\r\n \r\n     {\r\n         LOCK(m_nodes_mutex);\r\n@@ -1095,13 +1092,13 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\r\n     case ConnectionType::FEELER:\r\n         break;\r\n     } // no default case, so the compiler can warn about missing cases\r\n \r\n     // Count existing connections\r\n     int existing_connections = WITH_LOCK(m_nodes_mutex,\r\n-                                         return std::count_if(m_nodes.begin(), m_nodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\r\n+                                         return std::count_if(m_nodes.begin(), m_nodes.end(), [conn_type](std::shared_ptr<CNode> node) { return node->m_conn_type == conn_type; }););\r\n \r\n     // Max connections of specified type already exist\r\n     if (max_connections != std::nullopt && existing_connections >= max_connections) return false;\r\n \r\n     // Max total outbound connections already exist\r\n     CSemaphoreGrant grant(*semOutbound, true);\r\n@@ -1110,58 +1107,50 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\r\n     OpenNetworkConnection(CAddress(), false, &grant, address.c_str(), conn_type);\r\n     return true;\r\n }\r\n \r\n void CConnman::DisconnectNodes()\r\n {\r\n+    std::vector<std::shared_ptr<CNode>> disconnected_nodes;\r\n+\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n \r\n         if (!fNetworkActive) {\r\n             // Disconnect any connected nodes\r\n-            for (CNode* pnode : m_nodes) {\r\n+            for (const auto& pnode : m_nodes) {\r\n                 if (!pnode->fDisconnect) {\r\n                     LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\r\n                     pnode->fDisconnect = true;\r\n                 }\r\n             }\r\n         }\r\n \r\n         // Disconnect unused nodes\r\n-        std::vector<CNode*> nodes_copy = m_nodes;\r\n-        for (CNode* pnode : nodes_copy)\r\n-        {\r\n-            if (pnode->fDisconnect)\r\n-            {\r\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\r\n+            auto node = *it;\r\n+            if (node->fDisconnect) {\r\n                 // remove from m_nodes\r\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\r\n+                it = m_nodes.erase(it);\r\n+\r\n+                // Keep a reference to this CNode object to delay its destruction until\r\n+                // after m_nodes_mutex has been released. Destructing a node involves\r\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\r\n+                // should be cs_main, m_nodes_mutex.\r\n+                disconnected_nodes.push_back(node);\r\n \r\n                 // release outbound grant (if any)\r\n-                pnode->grantOutbound.Release();\r\n+                node->grantOutbound.Release();\r\n \r\n                 // close socket and cleanup\r\n-                pnode->CloseSocketDisconnect();\r\n+                node->CloseSocketDisconnect();\r\n \r\n                 // update connection count by network\r\n-                if (pnode->IsManualOrFullOutboundConn()) --m_network_conn_counts[pnode->addr.GetNetwork()];\r\n-\r\n-                // hold in disconnected pool until all refs are released\r\n-                pnode->Release();\r\n-                m_nodes_disconnected.push_back(pnode);\r\n-            }\r\n-        }\r\n-    }\r\n-    {\r\n-        // Delete disconnected nodes\r\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\r\n-        for (CNode* pnode : nodes_disconnected_copy)\r\n-        {\r\n-            // Destroy the object only after other threads have stopped using it.\r\n-            if (pnode->GetRefCount() <= 0) {\r\n-                m_nodes_disconnected.remove(pnode);\r\n-                DeleteNode(pnode);\r\n+                if (node->IsManualOrFullOutboundConn()) --m_network_conn_counts[node->addr.GetNetwork()];\r\n+            } else {\r\n+                ++it;\r\n             }\r\n         }\r\n     }\r\n }\r\n \r\n void CConnman::NotifyNumConnectionsChanged()\r\n@@ -1214,21 +1203,21 @@ bool CConnman::InactivityCheck(const CNode& node) const\r\n         return true;\r\n     }\r\n \r\n     return false;\r\n }\r\n \r\n-Sock::EventsPerSock CConnman::GenerateWaitSockets(Span<CNode* const> nodes)\r\n+Sock::EventsPerSock CConnman::GenerateWaitSockets(const std::vector<std::shared_ptr<CNode>>& nodes)\r\n {\r\n     Sock::EventsPerSock events_per_sock;\r\n \r\n     for (const ListenSocket& hListenSocket : vhListenSocket) {\r\n         events_per_sock.emplace(hListenSocket.sock, Sock::Events{Sock::RECV});\r\n     }\r\n \r\n-    for (CNode* pnode : nodes) {\r\n+    for (auto& pnode : nodes) {\r\n         // Implement the following logic:\r\n         // * If there is data to send, select() for sending data. As this only\r\n         //   happens when optimistic write failed, we choose to first drain the\r\n         //   write buffer in this case before receiving more. This avoids\r\n         //   needlessly queueing received data, if the remote peer is not themselves\r\n         //   receiving data. This means properly utilizing TCP flow control signalling.\r\n@@ -1287,18 +1276,18 @@ void CConnman::SocketHandler()\r\n     }\r\n \r\n     // Accept new connections from listening sockets.\r\n     SocketHandlerListening(events_per_sock);\r\n }\r\n \r\n-void CConnman::SocketHandlerConnected(const std::vector<CNode*>& nodes,\r\n+void CConnman::SocketHandlerConnected(const std::vector<std::shared_ptr<CNode>>& nodes,\r\n                                       const Sock::EventsPerSock& events_per_sock)\r\n {\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n \r\n-    for (CNode* pnode : nodes) {\r\n+    for (auto& pnode : nodes) {\r\n         if (interruptNet)\r\n             return;\r\n \r\n         //\r\n         // Receive\r\n         //\r\n@@ -1454,13 +1443,13 @@ void CConnman::ThreadDNSAddressSeed()\r\n                     if (!interruptNet.sleep_for(w)) return;\r\n                     to_wait -= w;\r\n \r\n                     int nRelevant = 0;\r\n                     {\r\n                         LOCK(m_nodes_mutex);\r\n-                        for (const CNode* pnode : m_nodes) {\r\n+                        for (const auto& pnode : m_nodes) {\r\n                             if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\r\n                         }\r\n                     }\r\n                     if (nRelevant >= 2) {\r\n                         if (found > 0) {\r\n                             LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\r\n@@ -1572,13 +1561,13 @@ void CConnman::StartExtraBlockRelayPeers()\r\n // evict some peer that has finished the handshake)\r\n int CConnman::GetExtraFullOutboundCount() const\r\n {\r\n     int full_outbound_peers = 0;\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (const CNode* pnode : m_nodes) {\r\n+        for (const auto& pnode : m_nodes) {\r\n             if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\r\n                 ++full_outbound_peers;\r\n             }\r\n         }\r\n     }\r\n     return std::max(full_outbound_peers - m_max_outbound_full_relay, 0);\r\n@@ -1586,13 +1575,13 @@ int CConnman::GetExtraFullOutboundCount() const\r\n \r\n int CConnman::GetExtraBlockRelayCount() const\r\n {\r\n     int block_relay_peers = 0;\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (const CNode* pnode : m_nodes) {\r\n+        for (const auto& pnode : m_nodes) {\r\n             if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsBlockOnlyConn()) {\r\n                 ++block_relay_peers;\r\n             }\r\n         }\r\n     }\r\n     return std::max(block_relay_peers - m_max_outbound_block_relay, 0);\r\n@@ -1734,13 +1723,13 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n         int nOutboundBlockRelay = 0;\r\n         int outbound_privacy_network_peers = 0;\r\n         std::set<std::vector<unsigned char>> outbound_ipv46_peer_netgroups;\r\n \r\n         {\r\n             LOCK(m_nodes_mutex);\r\n-            for (const CNode* pnode : m_nodes) {\r\n+            for (const auto& pnode : m_nodes) {\r\n                 if (pnode->IsFullOutboundConn()) nOutboundFullRelay++;\r\n                 if (pnode->IsBlockOnlyConn()) nOutboundBlockRelay++;\r\n \r\n                 // Make sure our persistent outbound slots to ipv4/ipv6 peers belong to different netgroups.\r\n                 switch (pnode->m_conn_type) {\r\n                     // We currently don't take inbound connections into account. Since they are\r\n@@ -1954,13 +1943,13 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n }\r\n \r\n std::vector<CAddress> CConnman::GetCurrentBlockRelayOnlyConns() const\r\n {\r\n     std::vector<CAddress> ret;\r\n     LOCK(m_nodes_mutex);\r\n-    for (const CNode* pnode : m_nodes) {\r\n+    for (const auto& pnode : m_nodes) {\r\n         if (pnode->IsBlockOnlyConn()) {\r\n             ret.push_back(pnode->addr);\r\n         }\r\n     }\r\n \r\n     return ret;\r\n@@ -1980,13 +1969,13 @@ std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo() const\r\n \r\n     // Build a map of all already connected addresses (by IP:port and by name) to inbound/outbound and resolved CService\r\n     std::map<CService, bool> mapConnected;\r\n     std::map<std::string, std::pair<bool, CService>> mapConnectedByName;\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (const CNode* pnode : m_nodes) {\r\n+        for (const auto& pnode : m_nodes) {\r\n             if (pnode->addr.IsValid()) {\r\n                 mapConnected[pnode->addr] = pnode->IsInboundConn();\r\n             }\r\n             std::string addrName{pnode->m_addr_name};\r\n             if (!addrName.empty()) {\r\n                 mapConnectedByName[std::move(addrName)] = std::make_pair(pnode->IsInboundConn(), static_cast<const CService&>(pnode->addr));\r\n@@ -2068,13 +2057,13 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\r\n         if (IsLocal(addrConnect) || banned_or_discouraged || AlreadyConnectedToAddress(addrConnect)) {\r\n             return;\r\n         }\r\n     } else if (FindNode(std::string(pszDest)))\r\n         return;\r\n \r\n-    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, conn_type);\r\n+    auto pnode = ConnectNode(addrConnect, pszDest, fCountFailure, conn_type);\r\n \r\n     if (!pnode)\r\n         return;\r\n     if (grantOutbound)\r\n         grantOutbound->MoveTo(pnode->grantOutbound);\r\n \r\n@@ -2101,23 +2090,23 @@ void CConnman::ThreadMessageHandler()\r\n         {\r\n             // Randomize the order in which we process messages from/to our peers.\r\n             // This prevents attacks in which an attacker exploits having multiple\r\n             // consecutive connections in the m_nodes list.\r\n             const NodesSnapshot snap{*this, /*shuffle=*/true};\r\n \r\n-            for (CNode* pnode : snap.Nodes()) {\r\n+            for (auto& pnode : snap.Nodes()) {\r\n                 if (pnode->fDisconnect)\r\n                     continue;\r\n \r\n                 // Receive messages\r\n-                bool fMoreNodeWork = m_msgproc->ProcessMessages(pnode, flagInterruptMsgProc);\r\n+                bool fMoreNodeWork = m_msgproc->ProcessMessages(pnode.get(), flagInterruptMsgProc);\r\n                 fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\r\n                 if (flagInterruptMsgProc)\r\n                     return;\r\n                 // Send messages\r\n-                m_msgproc->SendMessages(pnode);\r\n+                m_msgproc->SendMessages(pnode.get());\r\n \r\n                 if (flagInterruptMsgProc)\r\n                     return;\r\n             }\r\n         }\r\n \r\n@@ -2531,35 +2520,24 @@ void CConnman::StopNodes()\r\n             }\r\n             DumpAnchors(gArgs.GetDataDirNet() / ANCHORS_DATABASE_FILENAME, anchors_to_dump);\r\n         }\r\n     }\r\n \r\n     // Delete peer connections.\r\n-    std::vector<CNode*> nodes;\r\n+    std::vector<std::shared_ptr<CNode>> nodes;\r\n     WITH_LOCK(m_nodes_mutex, nodes.swap(m_nodes));\r\n-    for (CNode* pnode : nodes) {\r\n-        pnode->CloseSocketDisconnect();\r\n-        DeleteNode(pnode);\r\n+    for (auto& node : nodes) {\r\n+        node->CloseSocketDisconnect();\r\n     }\r\n+    nodes.clear();\r\n \r\n-    for (CNode* pnode : m_nodes_disconnected) {\r\n-        DeleteNode(pnode);\r\n-    }\r\n-    m_nodes_disconnected.clear();\r\n     vhListenSocket.clear();\r\n     semOutbound.reset();\r\n     semAddnode.reset();\r\n }\r\n \r\n-void CConnman::DeleteNode(CNode* pnode)\r\n-{\r\n-    assert(pnode);\r\n-    m_msgproc->FinalizeNode(*pnode);\r\n-    delete pnode;\r\n-}\r\n-\r\n CConnman::~CConnman()\r\n {\r\n     Interrupt();\r\n     Stop();\r\n }\r\n \r\n@@ -2664,35 +2642,35 @@ uint32_t CConnman::GetMappedAS(const CNetAddr& addr) const\r\n \r\n void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats) const\r\n {\r\n     vstats.clear();\r\n     LOCK(m_nodes_mutex);\r\n     vstats.reserve(m_nodes.size());\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (const auto& pnode : m_nodes) {\r\n         vstats.emplace_back();\r\n         pnode->CopyStats(vstats.back());\r\n         vstats.back().m_mapped_as = GetMappedAS(pnode->addr);\r\n     }\r\n }\r\n \r\n bool CConnman::DisconnectNode(const std::string& strNode)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    if (CNode* pnode = FindNode(strNode)) {\r\n+    if (auto pnode = FindNode(strNode)) {\r\n         LogPrint(BCLog::NET, \"disconnect by address%s matched peer=%d; disconnecting\\n\", (fLogIPs ? strprintf(\"=%s\", strNode) : \"\"), pnode->GetId());\r\n         pnode->fDisconnect = true;\r\n         return true;\r\n     }\r\n     return false;\r\n }\r\n \r\n bool CConnman::DisconnectNode(const CSubNet& subnet)\r\n {\r\n     bool disconnected = false;\r\n     LOCK(m_nodes_mutex);\r\n-    for (CNode* pnode : m_nodes) {\r\n+    for (auto& pnode : m_nodes) {\r\n         if (subnet.Match(pnode->addr)) {\r\n             LogPrint(BCLog::NET, \"disconnect by subnet%s matched peer=%d; disconnecting\\n\", (fLogIPs ? strprintf(\"=%s\", subnet.ToString()) : \"\"), pnode->GetId());\r\n             pnode->fDisconnect = true;\r\n             disconnected = true;\r\n         }\r\n     }\r\n@@ -2704,13 +2682,13 @@ bool CConnman::DisconnectNode(const CNetAddr& addr)\r\n     return DisconnectNode(CSubNet(addr));\r\n }\r\n \r\n bool CConnman::DisconnectNode(NodeId id)\r\n {\r\n     LOCK(m_nodes_mutex);\r\n-    for(CNode* pnode : m_nodes) {\r\n+    for(auto& pnode : m_nodes) {\r\n         if (id == pnode->GetId()) {\r\n             LogPrint(BCLog::NET, \"disconnect by id peer=%d; disconnecting\\n\", pnode->GetId());\r\n             pnode->fDisconnect = true;\r\n             return true;\r\n         }\r\n     }\r\n@@ -2828,12 +2806,13 @@ CNode::CNode(NodeId idIn,\r\n              uint64_t nKeyedNetGroupIn,\r\n              uint64_t nLocalHostNonceIn,\r\n              const CAddress& addrBindIn,\r\n              const std::string& addrNameIn,\r\n              ConnectionType conn_type_in,\r\n              bool inbound_onion,\r\n+             std::function<void(CNode&)> destruct_cb,\r\n              CNodeOptions&& node_opts)\r\n     : m_deserializer{std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), idIn, SER_NETWORK, INIT_PROTO_VERSION))},\r\n       m_serializer{std::make_unique<V1TransportSerializer>(V1TransportSerializer())},\r\n       m_permission_flags{node_opts.permission_flags},\r\n       m_sock{sock},\r\n       m_connected{GetTime<std::chrono::seconds>()},\r\n@@ -2844,13 +2823,14 @@ CNode::CNode(NodeId idIn,\r\n       m_prefer_evict{node_opts.prefer_evict},\r\n       nKeyedNetGroup{nKeyedNetGroupIn},\r\n       m_conn_type{conn_type_in},\r\n       id{idIn},\r\n       nLocalHostNonce{nLocalHostNonceIn},\r\n       m_recv_flood_size{node_opts.recv_flood_size},\r\n-      m_i2p_sam_session{std::move(node_opts.i2p_sam_session)}\r\n+      m_i2p_sam_session{std::move(node_opts.i2p_sam_session)},\r\n+      m_destruct_cb{destruct_cb}\r\n {\r\n     if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\r\n \r\n     for (const std::string &msg : getAllNetMessageTypes())\r\n         mapRecvBytesPerMsgType[msg] = 0;\r\n     mapRecvBytesPerMsgType[NET_MESSAGE_TYPE_OTHER] = 0;\r\n@@ -2859,12 +2839,19 @@ CNode::CNode(NodeId idIn,\r\n         LogPrint(BCLog::NET, \"Added connection to %s peer=%d\\n\", m_addr_name, id);\r\n     } else {\r\n         LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\r\n     }\r\n }\r\n \r\n+CNode::~CNode()\r\n+{\r\n+    if (m_destruct_cb) {\r\n+        m_destruct_cb(*this);\r\n+    }\r\n+}\r\n+\r\n void CNode::MarkReceivedMsgsForProcessing()\r\n {\r\n     AssertLockNotHeld(m_msg_process_queue_mutex);\r\n \r\n     size_t nSizeAdded = 0;\r\n     for (const auto& msg : vRecvMsg) {\r\n@@ -2890,15 +2877,15 @@ std::optional<std::pair<CNetMessage, bool>> CNode::PollMessage()\r\n     m_msg_process_queue_size -= msgs.front().m_raw_message_size;\r\n     fPauseRecv = m_msg_process_queue_size > m_recv_flood_size;\r\n \r\n     return std::make_pair(std::move(msgs.front()), !m_msg_process_queue.empty());\r\n }\r\n \r\n-bool CConnman::NodeFullyConnected(const CNode* pnode)\r\n+bool CConnman::NodeFullyConnected(const CNode& node)\r\n {\r\n-    return pnode && pnode->fSuccessfullyConnected && !pnode->fDisconnect;\r\n+    return node.fSuccessfullyConnected && !node.fDisconnect;\r\n }\r\n \r\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\r\n {\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n     size_t nMessageSize = msg.data.size();\r\n@@ -2939,21 +2926,19 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\r\n     }\r\n     if (nBytesSent) RecordBytesSent(nBytesSent);\r\n }\r\n \r\n bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\r\n {\r\n-    CNode* found = nullptr;\r\n     LOCK(m_nodes_mutex);\r\n     for (auto&& pnode : m_nodes) {\r\n         if(pnode->GetId() == id) {\r\n-            found = pnode;\r\n-            break;\r\n+            return NodeFullyConnected(*pnode) && func(pnode.get());\r\n         }\r\n     }\r\n-    return found != nullptr && NodeFullyConnected(found) && func(found);\r\n+    return false;\r\n }\r\n \r\n CSipHasher CConnman::GetDeterministicRandomizer(uint64_t id) const\r\n {\r\n     return CSipHasher(nSeed0, nSeed1).Write(id);\r\n }\r\ndiff --git i/src/test/fuzz/net.cpp w/src/test/fuzz/net.cpp\r\nindex ddf919f2e6..19db2c7c50 100644\r\n--- i/src/test/fuzz/net.cpp\r\n+++ w/src/test/fuzz/net.cpp\r\n@@ -40,21 +40,12 @@ FUZZ_TARGET(net, .init = initialize_net)\r\n                 node.CloseSocketDisconnect();\r\n             },\r\n             [&] {\r\n                 CNodeStats stats;\r\n                 node.CopyStats(stats);\r\n             },\r\n-            [&] {\r\n-                const CNode* add_ref_node = node.AddRef();\r\n-                assert(add_ref_node == &node);\r\n-            },\r\n-            [&] {\r\n-                if (node.GetRefCount() > 0) {\r\n-                    node.Release();\r\n-                }\r\n-            },\r\n             [&] {\r\n                 const std::optional<CService> service_opt = ConsumeDeserializable<CService>(fuzzed_data_provider);\r\n                 if (!service_opt) {\r\n                     return;\r\n                 }\r\n                 node.SetAddrLocal(*service_opt);\r\n@@ -66,14 +57,12 @@ FUZZ_TARGET(net, .init = initialize_net)\r\n             });\r\n     }\r\n \r\n     (void)node.GetAddrLocal();\r\n     (void)node.GetId();\r\n     (void)node.GetLocalNonce();\r\n-    const int ref_count = node.GetRefCount();\r\n-    assert(ref_count >= 0);\r\n     (void)node.GetCommonVersion();\r\n \r\n     const NetPermissionFlags net_permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\r\n     (void)node.HasPermission(net_permission_flags);\r\n     (void)node.ConnectedThroughNetwork();\r\n }\r\ndiff --git i/src/test/fuzz/util/net.h w/src/test/fuzz/util/net.h\r\nindex 47e4a2fac0..bc68018cdb 100644\r\n--- i/src/test/fuzz/util/net.h\r\n+++ w/src/test/fuzz/util/net.h\r\n@@ -117,23 +117,25 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\r\n                                        keyed_net_group,\r\n                                        local_host_nonce,\r\n                                        addr_bind,\r\n                                        addr_name,\r\n                                        conn_type,\r\n                                        inbound_onion,\r\n+                                       [](CNode&){},\r\n                                        CNodeOptions{ .permission_flags = permission_flags });\r\n     } else {\r\n         return CNode{node_id,\r\n                      sock,\r\n                      address,\r\n                      keyed_net_group,\r\n                      local_host_nonce,\r\n                      addr_bind,\r\n                      addr_name,\r\n                      conn_type,\r\n                      inbound_onion,\r\n+                     {},\r\n                      CNodeOptions{ .permission_flags = permission_flags }};\r\n     }\r\n }\r\n inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = std::nullopt) { return ConsumeNode<true>(fdp, node_id_in); }\r\n \r\n void FillNode(FuzzedDataProvider& fuzzed_data_provider, ConnmanTestMsg& connman, CNode& node) noexcept EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\r\ndiff --git i/src/test/util/net.h w/src/test/util/net.h\r\nindex b2f6ebb163..e90e3d8401 100644\r\n--- i/src/test/util/net.h\r\n+++ w/src/test/util/net.h\r\n@@ -25,23 +25,20 @@ struct ConnmanTestMsg : public CConnman {\r\n         m_peer_connect_timeout = timeout;\r\n     }\r\n \r\n     void AddTestNode(CNode& node)\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        m_nodes.push_back(&node);\r\n+        m_nodes.push_back(std::shared_ptr<CNode>(&node));\r\n \r\n         if (node.IsManualOrFullOutboundConn()) ++m_network_conn_counts[node.addr.GetNetwork()];\r\n     }\r\n \r\n     void ClearTestNodes()\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (CNode* node : m_nodes) {\r\n-            delete node;\r\n-        }\r\n         m_nodes.clear();\r\n     }\r\n \r\n     void Handshake(CNode& node,\r\n                    bool successfully_connected,\r\n                    ServiceFlags remote_services,\r\n```\r\n</details>",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1677719961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T02:50:31Z",
      "updated_at": "2023-08-16T02:50:31Z",
      "source": {
        "issue": {
          "id": 1579504924,
          "node_id": "PR_kwDOABII585Js_-Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
          "number": 27071,
          "state": "closed",
          "state_reason": null,
          "title": "Handle CJDNS from LookupSubNet()",
          "body": "`LookupSubNet()` would treat addresses that start with `fc` as IPv6 even if `-cjdnsreachable` is set. This creates the following problems where it is called:\r\n\r\n* `NetWhitelistPermissions::TryParse()`: otherwise `-whitelist=` fails to white list CJDNS addresses: when a CJDNS peer connects to us, it will be matched against IPv6 `fc...` subnet and the match will never succeed.\r\n\r\n* `BanMapFromJson()`: CJDNS bans are stored as just IPv6 addresses in `banlist.json`. Upon reading from disk they have to be converted back to CJDNS, otherwise, after restart, a ban entry like (`fc00::1`, IPv6) would not match a peer (`fc00::1`, CJDNS).\r\n    \r\n* `RPCConsole::unbanSelectedNode()`: in the GUI the ban entries go through `CSubNet::ToString()` and back via `LookupSubNet()`. Then it must match whatever is stored in `BanMan`, otherwise it is impossible to unban via the GUI.\r\n\r\nThese were uncovered by https://github.com/bitcoin/bitcoin/pull/26859.\r\n\r\nThus, flip the result of `LookupSubNet()` to CJDNS if the network base address starts with `fc` and `-cjdnsreachable` is set. Since subnetting/masking does not make sense for CJDNS (the address is \"random\" bytes, like Tor and I2P, there is no hierarchy) treat `fc.../mask` as an invalid `CSubNet`.\r\n\r\nTo achieve that, `MaybeFlipIPv6toCJDNS()` has to be moved from `net` to `netbase` and thus also `IsReachable()`. In the process of moving `IsReachable()`, `SetReachable()` and `vfLimited[]` encapsulate those in a class.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "closed",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 116,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-12-08T10:41:40Z",
            "closed_at": "2023-12-04T13:27:46Z"
          },
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27071.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27071.patch"
          },
          "closed_at": "2023-10-19T16:49:02Z",
          "created_at": "2023-02-10T11:20:45Z",
          "updated_at": "2023-10-23T12:24:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10119759533,
      "node_id": "LE_lADOABII585tiKOMzwAAAAJbL0at",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10119759533",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T13:49:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1682322817,
      "node_id": "IC_kwDOABII585kRjWB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682322817",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T13:49:24Z",
      "updated_at": "2023-08-17T13:49:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1682322817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T18:55:27Z",
      "updated_at": "2023-08-17T18:55:27Z",
      "source": {
        "issue": {
          "id": 879275352,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjMzMDA2NDM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
          "number": 21878,
          "state": "closed",
          "state_reason": null,
          "title": "Make all networking code mockable",
          "body": "_This is a roadmap PR. It can be merged, but it can also be split into separate PRs and to get proper thorough review it is split._\r\n\r\nAdd wrapper methods to the syscalls `accept()`, `setsockopt()`, `getsockname()`, `bind()`, `listen()`  in the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class (e.g. `Sock::Accept()`). Those methods can be overriden (mocked) by unit tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/util/net.h#L75)) and by fuzz tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/fuzz/util.h#L561)).\r\n\r\nChange everybody to use [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) instead of [`SOCKET`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/compat.h#L41).\r\n\r\nMove the functionality of [`CConnman::SocketEvents()`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/net.cpp#L1334) to a mockable method of the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class.\r\n\r\n### Already merged pieces of this PR\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21943\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23601\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21879\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23604\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24357\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24356\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25428\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25426\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24378\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25421\r\n* [x] https://github.com/bitcoin/bitcoin/pull/26312\r\n\r\n### Current pieces of this for review\r\n\r\n* [ ] https://github.com/bitcoin/bitcoin/pull/28584",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 53,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21878",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21878.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21878.patch"
          },
          "closed_at": "2023-10-04T11:34:17Z",
          "created_at": "2021-05-07T16:04:35Z",
          "updated_at": "2023-10-04T11:35:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1608532082,
      "node_id": "PRR_kwDOABII585f4EBy",
      "url": null,
      "actor": null,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1608532082",
      "submitted_at": "2023-09-03T14:10:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
    },
    {
      "event": "unsubscribed",
      "id": 10266951750,
      "node_id": "UE_lADOABII585tiKOMzwAAAAJj9UBG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10266951750",
      "actor": {
        "login": "erolmez",
        "id": 49597038,
        "node_id": "MDQ6VXNlcjQ5NTk3MDM4",
        "avatar_url": "https://avatars.githubusercontent.com/u/49597038?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/erolmez",
        "html_url": "https://github.com/erolmez",
        "followers_url": "https://api.github.com/users/erolmez/followers",
        "following_url": "https://api.github.com/users/erolmez/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/erolmez/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/erolmez/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/erolmez/subscriptions",
        "organizations_url": "https://api.github.com/users/erolmez/orgs",
        "repos_url": "https://api.github.com/users/erolmez/repos",
        "events_url": "https://api.github.com/users/erolmez/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/erolmez/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T18:20:53Z"
    },
    {
      "event": "commented",
      "id": 1808469111,
      "node_id": "IC_kwDOABII585rywx3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1808469111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-13T16:09:26Z",
      "updated_at": "2023-11-13T16:09:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Are you still working on this?",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1808469111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "commented",
      "id": 1937382299,
      "node_id": "IC_kwDOABII585zehub",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937382299",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T01:20:41Z",
      "updated_at": "2024-02-11T01:20:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--13523179cfe9479db18ec6c5d236f789-->\n⌛ There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? ➡️ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? ➡️ Please close.\n* Did the author lose interest or time to work on this? ➡️ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-1937382299",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "commented",
      "id": 2107066937,
      "node_id": "IC_kwDOABII5859l0o5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107066937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T09:19:11Z",
      "updated_at": "2024-05-13T09:19:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--13523179cfe9479db18ec6c5d236f789-->\n⌛ There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? ➡️ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? ➡️ Please close.\n* Did the author lose interest or time to work on this? ➡️ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-2107066937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    },
    {
      "event": "commented",
      "id": 2107067015,
      "node_id": "IC_kwDOABII5859l0qH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2107067015",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T09:19:14Z",
      "updated_at": "2024-05-13T09:19:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--2e250dc3d92b2c9115b66051148d6e47-->\n🤔 There hasn't been much activity lately and the CI seems to be failing.\n\nIf no one reviewed the current pull request by commit hash, a [rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes) can be considered. While the CI failure may be a false positive, the CI hasn't been running for some time, so there may be a real issue hiding as well. A rebase triggers the latest CI and makes sure that no silent merge conflicts have snuck in.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#issuecomment-2107067015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285681548",
      "pull_request_review_id": 1565029167,
      "id": 1285681548,
      "node_id": "PRRC_kwDOABII585MofGM",
      "diff_hunk": "@@ -502,7 +502,7 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Implement NetEventsInterface */\n     void InitializeNode(CNode& node, ServiceFlags our_services) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\n-    void FinalizeNode(const CNode& node) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex);\n+    void FinalizeNode(const CNodeRef node) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "499f267050d076a9065342c58338d5f2da791053",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason why we need to use the shared_ptr type in net processing?",
      "created_at": "2023-08-07T10:24:54Z",
      "updated_at": "2023-08-07T12:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1285681548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285681548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285682361",
      "pull_request_review_id": 1565029167,
      "id": 1285682361,
      "node_id": "PRRC_kwDOABII585MofS5",
      "diff_hunk": "@@ -651,6 +633,8 @@ class CNode\n     std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\n };\n \n+typedef std::shared_ptr<CNode> CNodeRef;",
      "path": "src/net.h",
      "position": null,
      "original_position": 43,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "499f267050d076a9065342c58338d5f2da791053",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(I know this will get push back but)\r\n\r\nnit: Could we call this `ConnectionRef`? After all the connection manager is managing... connections.",
      "created_at": "2023-08-07T10:25:46Z",
      "updated_at": "2023-08-07T12:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1285682361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285682361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285683763",
      "pull_request_review_id": 1565029167,
      "id": 1285683763,
      "node_id": "PRRC_kwDOABII585Mofoz",
      "diff_hunk": "@@ -651,6 +633,8 @@ class CNode\n     std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\n };\n \n+typedef std::shared_ptr<CNode> CNodeRef;",
      "path": "src/net.h",
      "position": null,
      "original_position": 43,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "499f267050d076a9065342c58338d5f2da791053",
      "in_reply_to_id": 1285682361,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would also seem more modern to use `using` here",
      "created_at": "2023-08-07T10:27:16Z",
      "updated_at": "2023-08-07T12:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1285683763",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285683763"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285689978",
      "pull_request_review_id": 1565029167,
      "id": 1285689978,
      "node_id": "PRRC_kwDOABII585MohJ6",
      "diff_hunk": "@@ -1138,23 +1135,23 @@ void CConnman::DisconnectNodes()\n                 // close socket and cleanup\n                 pnode->CloseSocketDisconnect();\n \n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n+                // move to m_nodes_disconnected until all refs are released\n                 m_nodes_disconnected.push_back(pnode);\n             }\n         }\n     }\n     {\n         // Delete disconnected nodes\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n-        for (CNode* pnode : nodes_disconnected_copy)\n-        {\n-            // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n-                m_nodes_disconnected.remove(pnode);\n-                DeleteNode(pnode);\n+        std::vector<CNodeRef> disconnected_still_in_use;\n+        for (auto& pnode : m_nodes_disconnected) {\n+            // Finalize when we have the final reference inside this block\n+            if (pnode.use_count() == 1) {",
      "path": "src/net.cpp",
      "position": 274,
      "original_position": 239,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "499f267050d076a9065342c58338d5f2da791053",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a way this is worse than the custom ref counting because it is harder to assert that we actually don't take new references after this check.",
      "created_at": "2023-08-07T10:33:50Z",
      "updated_at": "2023-08-07T12:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1285689978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285689978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1148,
      "original_line": 1148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288400379",
      "pull_request_review_id": 1569429475,
      "id": 1288400379,
      "node_id": "PRRC_kwDOABII585My237",
      "diff_hunk": "@@ -665,8 +650,11 @@ class CNode\n      * Otherwise this unique_ptr is empty.\n      */\n     std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\n+    CConnman* m_connman;",
      "path": "src/net.h",
      "position": 63,
      "original_position": 63,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "82dc400170414129aedf4b32870b2ade2a5cd71c",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Having the managed objects have a reference to the manager leads to absolute spaghetti code, so leaning towards NACK on that.",
      "created_at": "2023-08-09T12:23:25Z",
      "updated_at": "2023-08-09T14:47:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1288400379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288400379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 653,
      "original_line": 653,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288527915",
      "pull_request_review_id": 1569429475,
      "id": 1288527915,
      "node_id": "PRRC_kwDOABII585MzWAr",
      "diff_hunk": "@@ -1219,43 +1206,48 @@ class CConnman\n     static constexpr size_t MAX_UNUSED_I2P_SESSIONS_SIZE{10};\n \n     /**\n-     * RAII helper to atomically create a copy of `m_nodes` and add a reference\n-     * to each of the nodes. The nodes are released when this object is destroyed.\n+     * RAII helper to atomically create a copy of `m_nodes` with shared pointers and manual reference counting.\n      */\n     class NodesSnapshot\n     {\n     public:\n-        explicit NodesSnapshot(const CConnman& connman, bool shuffle)\n+        explicit NodesSnapshot(const CConnman& connman, bool shuffle = false)",
      "path": "src/net.h",
      "position": 175,
      "original_position": 175,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "36c6fe59b21999c0ea904d310bcc794d0736628d",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can just get rid of NodesSnapshot entirely now, it was only needed as a RAII helper for the manual ref counting.",
      "created_at": "2023-08-09T13:57:39Z",
      "updated_at": "2023-08-09T14:47:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1288527915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288527915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1214,
      "original_line": 1214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314264417",
      "pull_request_review_id": 1608532082,
      "id": 1314264417,
      "node_id": "PRRC_kwDOABII585OVhVh",
      "diff_hunk": "@@ -798,11 +798,11 @@ class CConnman\n     // alias for thread safety annotations only, not defined\n     RecursiveMutex& GetNodesMutex() const LOCK_RETURNED(m_nodes_mutex);\n \n-    bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n+    bool ForNode(NodeId id, std::function<bool(CNodeRef pnode)> func);",
      "path": "src/net.h",
      "position": 76,
      "original_position": 5,
      "commit_id": "095482204591c9a2d149dd4e00dbb77d94e0b017",
      "original_commit_id": "1f612cded86dd8e0406d7c7feaef065bfbeb6f4b",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this makes sense in general? If you have a shared_ptr, you should normally just pass the reference to the object (`CNode&`) if you've checked it's not null, or the pointer itself (`CNode*`).\r\n\r\ncf http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-smart",
      "created_at": "2023-09-03T14:01:00Z",
      "updated_at": "2023-09-03T14:10:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28222#discussion_r1314264417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314264417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 787,
      "original_line": 801,
      "side": "RIGHT"
    }
  ]
}