{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130",
    "id": 1654449705,
    "node_id": "PR_kwDOABII585inOYp",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29130",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29130.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29130.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29130",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29130/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c10150b6150083440af4f0aa1110c8aa99ba2dc8",
    "number": 29130,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: Add `createwalletdescriptor` and `gethdkeys` RPCs for adding new automatically generated descriptors",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds a `createwalletdescriptor` RPC which allows users to add new automatically generated descriptors to their wallet, e.g. to upgrade a 0.21.x wallet to contain a taproot descriptor. This RPC takes 3 arguments: the output type to create a descriptor for, whether the descriptor will be internal or external, and the HD key to use if the user wishes to use a specific key. The HD key is an optional parameter. If it is not specified, the wallet will use the key shared by the active descriptors, if they are all single key. For most users in the expected upgrade scenario, this should be sufficient. In more advanced cases, the user must specify the HD key to use.\r\n\r\nCurrently, specified HD keys must already exist in the wallet. To make it easier for the user to know, `gethdkeys` is also added to list out the HD keys in use by all of the descriptors in the wallet. This will include all HD keys, whether we have the private key, for it, which descriptors use it and their activeness, and optionally the extended private key. In this way, users with more complex wallets will be still be able to get HD keys from their wallet for use in other scenarios, and if they want to use `createwalletdescriptor`, they can easily get the keys that they can specify to it.\r\n\r\nSee also https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866961865",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2023-12-22T00:05:47Z",
    "updated_at": "2024-01-08T23:16:30Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "dc6e6f2b65c2c9385b01c1d8031231785cd5c00e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "achow101:createwalletdescriptor-without-new-records",
      "ref": "createwalletdescriptor-without-new-records",
      "sha": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 255249,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-06T00:00:34Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-10-20T10:28:16Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c3038bf95a4b9926001abb8a172f3d734f8e17ba",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36434,
        "stargazers_count": 73174,
        "watchers_count": 73174,
        "size": 247259,
        "default_branch": "master",
        "open_issues_count": 694,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-08T23:13:21Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-01-08T22:27:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 781,
    "deletions": 62,
    "changed_files": 16,
    "commits": 13,
    "review_comments": 31,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwODA2ZGY5YTRmYWRiMTJkMGZiMzcwODQwMDMzYThhMTZlN2Q1NWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40806df9a4fadb12d0fb370840033a8a16e7d55a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40806df9a4fadb12d0fb370840033a8a16e7d55a",
      "tree": {
        "sha": "a7ef2f276dec2f627d2c747c7cc7884e756d7d71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7ef2f276dec2f627d2c747c7cc7884e756d7d71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dca0f231fa8b9af0260fd29340141a1d7cf5609e",
          "sha": "dca0f231fa8b9af0260fd29340141a1d7cf5609e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dca0f231fa8b9af0260fd29340141a1d7cf5609e"
        }
      ],
      "message": "key: Add constructor for CExtKey that takes CExtPubKey and CKey\n\nWe often need to construct a CExtKey given an CExtPubKey and CKey, so\nimplement a constructor that does that for us.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T22:16:02Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-20T23:11:41Z"
      },
      "sha": "40806df9a4fadb12d0fb370840033a8a16e7d55a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdkYTY1NDcwY2RlNGNkNTVhNDA1YThhYWE3ZWY2NzdjODIxNTkwYTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7da65470cde4cd55a405a8aaa7ef677c821590a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7da65470cde4cd55a405a8aaa7ef677c821590a5",
      "tree": {
        "sha": "979103471f9e2a183307dfb5b248ae395563c72d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/979103471f9e2a183307dfb5b248ae395563c72d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40806df9a4fadb12d0fb370840033a8a16e7d55a",
          "sha": "40806df9a4fadb12d0fb370840033a8a16e7d55a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/40806df9a4fadb12d0fb370840033a8a16e7d55a"
        }
      ],
      "message": "descriptor: Be able to get the pubkeys involved in a descriptor",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T22:16:02Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-20T23:11:49Z"
      },
      "sha": "7da65470cde4cd55a405a8aaa7ef677c821590a5"
    },
    {
      "event": "commented",
      "id": 1867069599,
      "node_id": "IC_kwDOABII585vSTif",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867069599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T00:05:50Z",
      "updated_at": "2024-01-08T23:16:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29130).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/29130#pullrequestreview-1795206875) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29136](https://github.com/bitcoin/bitcoin/pull/29136) (wallet: `addhdkey` RPC to add just keys to wallets via new `void(KEY)` descriptor by achow101)\n* [#28724](https://github.com/bitcoin/bitcoin/pull/28724) (wallet: Cleanup accidental encryption keys in watchonly wallets by achow101)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#issuecomment-1867069599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29130"
    },
    {
      "event": "labeled",
      "id": 11321203626,
      "node_id": "LE_lADOABII5856YTyLzwAAAAKiy9uq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11321203626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T00:05:53Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 11321423866,
      "node_id": "LE_lADOABII5856YTyLzwAAAAKizzf6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11321423866",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T00:51:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T05:47:48Z",
      "updated_at": "2023-12-22T05:47:48Z",
      "source": {
        "issue": {
          "id": 2036429651,
          "node_id": "PR_kwDOABII585huQZ6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
          "number": 29054,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: reenable sethdseed for descriptor wallets",
          "body": "Enable `sethdseed` for descriptor wallets. To be able to use `createwalletdescriptor` with the other address types, we need a way to change the wallet extended key, and so `sethdseed` has been updated and enabled for descriptor wallets. As with legacy wallets, when called without parameters, it will generate a new random master key for the wallet. It can also take a xprv and set that as the master key. It still takes a BIP 32 seed as WIF or as hex as we do for legacy wallets. The seed will be transformed into and stored as a BIP 32 extended key. The latter is to give us greater compatibility with other wallets which often produce non-WIF HD seeds.\r\n\r\nSplit from #25907",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29054",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29054.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29054.patch"
          },
          "closed_at": "2024-01-06T00:06:40Z",
          "created_at": "2023-12-11T20:00:27Z",
          "updated_at": "2024-01-06T00:06:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T06:46:28Z",
      "updated_at": "2023-12-22T06:46:28Z",
      "source": {
        "issue": {
          "id": 1960227017,
          "node_id": "PR_kwDOABII585dsR7G",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28724",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28724/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28724/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28724/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28724",
          "number": 28724,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Cleanup accidental encryption keys in watchonly wallets",
          "body": "An earlier version allowed users to create watchonly wallets (wallets without private keys) that were \"encrypted\". Such wallets would have a stored encryption keys, but nothing would actually be encrypted with them. This can cause unexpected behavior such as https://github.com/bitcoin-core/gui/issues/772.\r\n\r\nWe can detect such wallets as they will have the disable private keys flag set, no encrypted keys, and encryption keys. For such wallets, we can remove those encryption keys thereby avoiding any issues that may result from this unexpected situation.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28724",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28724",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28724.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28724.patch"
          },
          "created_at": "2023-10-24T23:02:08Z",
          "updated_at": "2024-01-06T08:55:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T06:47:22Z",
      "updated_at": "2023-12-22T06:47:22Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2024-01-07T23:54:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T06:58:03Z",
      "updated_at": "2023-12-22T06:58:03Z",
      "source": {
        "issue": {
          "id": 1924207353,
          "node_id": "PR_kwDOABII585by2eU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28574",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28574/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28574/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28574/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28574",
          "number": 28574,
          "state": "open",
          "state_reason": null,
          "title": "wallet: optimize migration process, batch db transactions",
          "body": "The benchmark conducted locally showed a ~65% processing time reduction, on a SSD.\r\nResults can be found at the end of the description.\r\n\r\n#### Detailed Description:\r\nThe current wallet migration process performs only individual db writes. Accessing disk to\r\ndelete all legacy records, clone and clean each address book entry for every created wallet,\r\ncreate each new descriptor (with their corresponding master key, caches and key pool), and\r\nalso clone and delete each transaction that requires to be transferred to a different wallet.\r\n\r\nThis work consolidates all individual disk writes into two batch operations. One for the descriptors\r\ncreation from the legacy data and a second one for the execution of the migration process itself.\r\nEfficiently dumping all the information to disk at once atomically at the end of each process.\r\n\r\nThis represent a speed up and also a consistency improvement. During migration, we either\r\nwant to succeed or fail. No other outcomes should be accepted. We should never leave a\r\npartially migrated wallet on disk and request the user to manually restore the previous wallet from\r\na backup (at least not if we can avoid it).\r\n\r\nAdditionally, since db transactions relevant to the key pool generation were also batched, this work\r\nalso speeds up the regular wallet creation process.\r\n\r\n#### Note for Testers:\r\nThe first commit introduces a benchmark for the migration process. This one can be\r\ncherry-picked on top of master to compare results pre and post changes.\r\n\r\nPlease note that the benchmark setup may take some time (~70 seconds here) due to the absence\r\nof a batching mechanism for the address generation process (`GetNewDestination()` calls). Which,\r\nI plan to address in a separate PR, just to not continue expanding this PR.\r\n\r\n#### Final Notes:\r\nThis PR is intended to be an \"all-in-one\" solution that's ready for use and testing. In the coming days, \r\nwill start breaking it down into smaller, focused PRs for better manageability and review.\r\n\r\n————————————————————————\r\n\r\nBenchmark on master (debug mode)\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:-----------\r\n|   65,093,884,958.00 |                0.02 |    0.0% |     65.09 | `WalletMigration`\r\n\r\nBenchmark on this branch (debug mode)\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|   22,926,814,750.00 |                0.04 |    0.0% |     22.93 | `WalletMigration`",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28574",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28574",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28574.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28574.patch"
          },
          "created_at": "2023-10-03T13:54:18Z",
          "updated_at": "2024-01-08T14:54:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T07:22:24Z",
      "updated_at": "2023-12-22T07:22:24Z",
      "source": {
        "issue": {
          "id": 1864300532,
          "node_id": "PR_kwDOABII585YpjCI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28333",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28333/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28333/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28333/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28333",
          "number": 28333,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively",
          "body": "Instead of constructing ScriptPubKeyMans with no data, and then loading data as we find it, we should gather everything first and then load it all on construction. If there actually is no data and we want to setup generation, then that should also occur in a constructor rather than afterwards.\r\n\r\nThis change is only applied to DescriptorScriptPubKeyMan and ExternalSignerScriptPubKeyMan, and should be done for any ScriptPubKeyMans added in the future. I don't think it's really worth it to do this for LegacyScriptPubKeyMan since it would make loading performance worse (or cause layer violations) and it's (supposed to be) going away soon.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28333",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28333",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28333.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28333.patch"
          },
          "created_at": "2023-08-24T02:55:39Z",
          "updated_at": "2024-01-06T09:38:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T07:56:14Z",
      "updated_at": "2023-12-22T07:56:14Z",
      "source": {
        "issue": {
          "id": 1753342247,
          "node_id": "PR_kwDOABII585SzfoS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
          "number": 27865,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Track no-longer-spendable TXOs separately",
          "body": "In #27286, the wallet keeps track of all of its transaction outputs, even if they are already spent or are otherwise unspendable. This TXO set is iterated for balance checking and coin selection preparation, which can still be slow for wallets that have had a lot of activity. This PR aims to improve the performance of such wallets by moving UTXOs that are definitely no longer spendable to a different map in the wallet so that far fewer TXOs need to be iterated for the aforementioned functions.\r\n\r\nUnspendable TXOs (not to be confused with Unspent TXOs) are those which have a spending transaction that has been confirmed, or are no longer valid due to reorgs. TXOs that are spent in unconfirmed transactions remain in the primary TXO set, and are filtered out of balance and coin selection as before.\r\n\r\nDepends on #27286",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27865",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27865.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27865.patch"
          },
          "created_at": "2023-06-12T18:40:10Z",
          "updated_at": "2024-01-06T10:19:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T08:16:13Z",
      "updated_at": "2023-12-22T08:16:13Z",
      "source": {
        "issue": {
          "id": 1632858009,
          "node_id": "PR_kwDOABII585MfYTP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27286",
          "number": 27286,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Keep track of the wallet's own transaction outputs in memory",
          "body": "Currently, the wallet is not actually aware about its own transaction outputs. Instead, it will iterate all of the transactions stored in `mapWallet`, and then all of the outputs of those transactions, in order to figure out what belongs to it for the purposes of coin selection and balance calculation. For balance calculation, there is caching that results in it only iterating all of the transactions, but not all of the outputs. However when the cache is dirty, everything is iterated. This is especially problematic for wallets that have a lot of transactions, or transactions that have a lot of unrelated outputs (as may occur with coinjoins or batched payments).\r\n\r\nThis PR helps to resolve this issue by making the wallet track all of the outputs that belong to it in a new member `m_txos`. Note that this includes outputs that may have already been spent. Both balance calculation (`GetBalance`) and coin selection (`AvailableCoins`) are updated to iterate `m_txos`. This is generally faster since it ignores all of the unrelated outputs, and it is not slower as in the worst case of wallets containing only single output transactions, it's exactly the same number of outputs iterated.\r\n\r\n`m_txos` is memory only, and it is populated during wallet loading. When each transaction is loaded, all of its outputs are checked to see if it is `IsMine`, and if so, an entry added to `m_txos`. When new transactions are received, the same procedure is done.\r\n\r\nSince imports can change the `IsMine` status of a transaction (although they can only be \"promoted\" from watchonly to spendable), all of the import RPCs will be a bit slower as they re-iterate all transactions and all outputs to update `m_txos`.\r\n\r\nEach output in `m_txos` is stored in a new `WalletTXO` class. This class contains references to the parent `CWalletTx` and the `CTxOut` itself. It also caches the `IsMine` value of the txout. This should be safe as `IsMine` should not change unless there are imports. This allows us to have additional performance improvements in places that use these `WalletTXO`s as they can use the cached `IsMine` rather than repeatedly calling `IsMine` which can be expensive.\r\n\r\nThe existing `WalletBalance` benchmark demonstrates the performance improvement that this PR makes. The existing `WalletAvailableCoins` benchmark doesn't as all of the outputs used in that benchmark belong to the test wallet. I've updated that benchmark to have a bunch of unrelated outputs in each transaction so that the difference is demonstrated.\r\n\r\nThis is part of a larger project to have the wallet actually track and store a set of its UTXOs.\r\n\r\nBuilt on #24914 as it requires loading the txs last in order for `m_txos` to be built correctly.\r\n\r\n***\r\n\r\n## Benchmarks:\r\n\r\nMaster:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|       92,245,141.50 |               10.84 |    0.1% |  988,823,975.00 |  66,803,340.50 |    0.0% |      2.04 | `WalletAvailableCoins`\r\n|            5,709.90 |          175,134.50 |    0.5% |       80,968.24 |      25,539.15 |    0.1% |      0.01 | `WalletBalanceClean`\r\n|          139,396.17 |            7,173.80 |    0.6% |    1,383,390.50 |     430,276.86 |    0.0% |      0.01 | `WalletBalanceDirty`\r\n|            5,055.80 |          197,792.47 |    0.3% |       80,968.10 |      25,539.02 |    0.1% |      0.01 | `WalletBalanceMine`\r\n|                9.79 |      102,152,396.19 |    0.1% |          161.00 |          37.00 |    0.0% |      0.01 | `WalletBalanceWatch`\r\n|        1,552,736.00 |              644.02 |    1.5% |   20,316,315.80 |     618,545.80 |    0.6% |      0.08 | `WalletCreateTxUseOnlyPresetInputs`\r\n|      114,114,732.00 |                8.76 |    0.5% |1,291,047,717.60 | 320,244,602.00 |    0.0% |      6.30 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|      359,315,754.00 |                2.78 |    0.1% |4,339,447,818.00 | 136,619,757.00 |    0.7% |      1.80 | `WalletLoadingDescriptors`\r\n|       98,230,601.00 |               10.18 |    0.1% |  537,688,964.00 |  97,332,266.00 |    0.3% |      0.49 | `WalletLoadingLegacy`\r\n\r\nPR:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|       75,319,868.50 |               13.28 |    0.2% |  863,758,229.00 |  30,892,593.00 |    0.2% |      1.66 | `WalletAvailableCoins`\r\n|            2,367.62 |          422,364.95 |    1.0% |       35,785.05 |       9,893.01 |    0.2% |      0.01 | `WalletBalanceClean`\r\n|            2,685.58 |          372,359.55 |    0.2% |       36,501.05 |      10,027.01 |    0.1% |      0.01 | `WalletBalanceDirty`\r\n|            3,462.24 |          288,830.68 |    2.7% |       35,785.06 |       9,893.01 |    0.3% |      0.01 | `WalletBalanceMine`\r\n|               11.65 |       85,838,176.97 |    0.1% |          180.00 |          42.00 |    0.0% |      0.01 | `WalletBalanceWatch`\r\n|        1,563,092.60 |              639.76 |    1.5% |   20,426,154.40 |     649,953.80 |    0.6% |      0.09 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       58,367,804.40 |               17.13 |    0.9% |  587,164,005.00 | 107,905,843.80 |    0.1% |      3.21 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|      365,302,636.00 |                2.74 |    0.2% |4,349,345,147.00 | 138,730,668.00 |    0.8% |      1.83 | `WalletLoadingDescriptors`\r\n|      124,995,585.00 |                8.00 |    1.2% |  801,998,316.00 | 103,210,721.00 |    0.3% |      0.63 | `WalletLoadingLegacy`\r\n",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27286",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27286.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27286.patch"
          },
          "created_at": "2023-03-20T21:02:45Z",
          "updated_at": "2024-01-06T10:42:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T08:33:05Z",
      "updated_at": "2023-12-22T08:33:05Z",
      "source": {
        "issue": {
          "id": 1503703234,
          "node_id": "PR_kwDOABII585F0rVt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
          "number": 26728,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Have the wallet store the key for automatically generated descriptors",
          "body": "The wallet currently does not know the master key that was used to generate the automatically generated descriptors. This makes it difficult to add new automatically generated descriptors when new ones are introduced. So instead of losing this information after the descriptors are created, have `CWallet` store it. The xpub will be stored in a new `activehdkey` field. The private key must be one of the keys that is used by the descriptors, and will be extracted upon loading.\r\n\r\nAs this is a new field, wallets will be automatically upgraded upon loading. This loading is backwards compatible and uses a new non-required flag `WALLET_FLAG_GLOBAL_HD_KEY` to signal that the upgrade completed. The upgrade will search for an xpub that is shared by `pkh()`, `wpkh()`, and `sh(wpkh()` descriptors with the derivation pattern that we use. For new wallets, the xpub will be set during descriptor creation rather than trying to reverse engineer it. The flag will be set for all wallets, regardless of whether such an xpub was found or can even exist, in order to indicate that the upgrade will not need to be run in the future.\r\n\r\nThis allows us to have a `gethdkey` command which is useful for those who need a simple way to get an xpub from a wallet. `gethdkey` can also take a boolean parameter to indicate whether it should also output the corresponding xprv.\r\n\r\nSupercedes #23417",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 65,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26728.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26728.patch"
          },
          "closed_at": "2024-01-06T00:05:58Z",
          "created_at": "2022-12-19T22:31:05Z",
          "updated_at": "2024-01-06T00:05:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T08:46:49Z",
      "updated_at": "2023-12-22T08:46:49Z",
      "source": {
        "issue": {
          "id": 1361274567,
          "node_id": "PR_kwDOABII584-VbNV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26008",
          "number": 26008,
          "state": "open",
          "state_reason": null,
          "title": "wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets",
          "body": "Wallets that have a ton of non-ranged descriptors (such as a migrated non-HD wallet) perform fairly poorly due to looping through all of the wallet's `ScriptPubKeyMan`s. This is done in various places, such as `IsMine`, and helper functions for fetching a `ScriptPubKeyMan` and a `SolvingProvider`. This also has a bit of a performance impact on standard descriptor wallets, although less noticeable due to the small number of SPKMs.\r\n\r\nAs these functions are based on doing `IsMine` for each `ScriptPubKeyMan`, we can improve this performance by caching `IsMine` scriptPubKeys for all descriptors and use that to determine which `ScriptPubKeyMan` to actually use for those things. This cache is used exclusively and we no longer iterate the SPKMs.\r\n\r\nAlso added a benchmark for `IsMine`.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26008",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26008",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26008.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26008.patch"
          },
          "created_at": "2022-09-04T23:03:15Z",
          "updated_at": "2024-01-06T11:21:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T08:47:43Z",
      "updated_at": "2023-12-22T08:47:43Z",
      "source": {
        "issue": {
          "id": 1347108338,
          "node_id": "PR_kwDOABII5849mUDu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
          "number": 25907,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: rpc to add automatically generated descriptors",
          "body": "It is useful to have a RPC that can create and add the automatically generated descriptors (that are normally made during creation) to a wallet. This is especially useful when a new default descriptor has been implemented as it allows wallets created before that time to quickly and easily add that type of descriptor.\r\n\r\nIn particular, descriptor wallets created before Taproot was implemented can use the new `createwalletdescriptor` RPC in order to get a Taproot descriptor.\r\n\r\nFurthermore, to keep the newly generated descriptor in line with the existing descriptors, this PR uses #26728 as it exposes a \"wallet extended key\" for us (in addition to upgrading wallets implemented prior to have a wallet xpub). The newly generated descriptors will use the \"wallet extended key\" stored in `CWallet` that PR adds.\r\n\r\n`createwalletdescriptor` is generic and so it can also be used with the other address types. Of course, it given the same wallet extended key, address type, and internal-ness, it will create the same descriptor. So some refactoring has been done in order to detect that the same descriptor is about to be created, and to avoid overwriting any existing descriptors.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25907",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25907.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25907.patch"
          },
          "closed_at": "2024-01-06T00:06:14Z",
          "created_at": "2022-08-22T23:17:45Z",
          "updated_at": "2024-01-06T00:06:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T09:01:16Z",
      "updated_at": "2023-12-22T09:01:16Z",
      "source": {
        "issue": {
          "id": 983140832,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyNzY4MTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
          "number": 22838,
          "state": "open",
          "state_reason": null,
          "title": "descriptors: Be able to specify change and receiving in a single descriptor string",
          "body": "It is convenient to have a descriptor which specifies both receiving and change addresses in a single string. However, as discussed in https://github.com/bitcoin/bitcoin/issues/17190#issuecomment-895515768, it is not feasible to use a generic multipath specification like BIP 88 due to combinatorial blow up and that it would result in unexpected descriptors.\r\n\r\nTo resolve that problem, this PR proposes a targeted solution which allows only a single pair of 2 derivation indexes to be inserted in the place of a single derivation index. So instead of two descriptor `wpkh(xpub.../0/0/*)` and `wpkh(xpub.../0/1/*)` to represent receive and change addresses, this could be written as `wpkh(xpub.../0/<0;1>/*)`. The multipath specifier is of the form `<NUM;NUM>`. Each `NUM` can have its own hardened specifier, e.g. `<0;1h>` is valid. The multipath specifier can also only appear in one path index in the derivation path.\r\n\r\nThis results in the parser returning two descriptors. The first descriptor uses the first `NUM` in all pairs present, and the second uses the second `NUM`. In our implementation, if a multipath descriptor is not provided, a pair is still returned, but the second element is just `nullptr`.\r\n\r\nThe wallet will not output the multipath descriptors (yet). Furthermore, when a multipath descriptor is imported, it is expanded to the two descriptors and each imported on its own, with the second descriptor being implicitly for internal (change) addresses. There is no change to how the wallet stores or outputs descriptors (yet).\r\n\r\nNote that the path specifier is different from what was proposed. It uses angle brackets and the semicolon because these are unused characters available in the character set and I wanted to avoid conflicts with characters already in use in descriptors.\r\n\r\nCloses #17190 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 39,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22838",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22838.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22838.patch"
          },
          "created_at": "2021-08-30T19:46:34Z",
          "updated_at": "2024-01-06T11:40:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T09:06:16Z",
      "updated_at": "2023-12-22T09:06:16Z",
      "source": {
        "issue": {
          "id": 930266556,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3OTg5MzM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
          "number": 22341,
          "state": "open",
          "state_reason": null,
          "title": "rpc: add path to gethdkey",
          "body": "Depends on #26728.\r\n\r\nThis PR expands the wallet RPC `gethdkey` introduced in #26728. It takes a BIP32 path as argument and returns the xpub, along with the master key fingerprint.\r\n\r\nTo test this PR:\r\n\r\n* create a regular descriptor wallet\r\n* call `getxpub m/86h/0h/0h`\r\n* call `listdescriptors`, compare the xpub in the `tr()` descriptor with the previous step\r\n\r\n## Bigger picture\r\n\r\nThis paves the way for using Bitcoin Core as one signer in a multisig setup. It simplifies the proposed flow in #22067.\r\n\r\nThe eventual flow would be:\r\n1. Create a blank wallet with a seed (either with no descriptors, or where its single key descriptors are not `active`, so they don't get used when calling `getnewaddress`). \r\n2. Call `getxpub m/87h/0h/0h` (as suggested in [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki))\r\n3. (Manually, with Specter or with a simple Python utility - TBD): craft a multisig descriptor containing this xpub\r\n4. Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\r\n5. The usual flow with `getnewaddress`, `send` and `walletprocesspsbt` (and their GUI equivalents)\r\n\r\nThis PR makes step (2) possible.\r\n\r\nStep (1) would require a followup, because blank wallets currently can't have a seed. Step 4 would also require a followup,  so that `importdescriptors` treats an `xpub` as if it was an `xpriv`, after checking that it can derive the xpub from the seed (that matches the fingerprint)\r\n\r\nOn the GUI side a wizard could perform the above steps and guide the user, where they either:\r\n* export their own xpub and then import a descriptor from somewhere else (performing some sanity checks); or\r\n* import xpub(s) from other wallets, compose a multisig and get the descriptors for export; or\r\n* get xpub(s) from connected hardware devices and configure a multisig (with or without a key on their machine)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22341",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22341.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22341.patch"
          },
          "created_at": "2021-06-25T15:12:03Z",
          "updated_at": "2024-01-08T14:56:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11328920111,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjQZov",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11328920111",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T19:08:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11329093832,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjREDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329093832",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T19:46:50Z"
    },
    {
      "event": "unlabeled",
      "id": 11329345966,
      "node_id": "UNLE_lADOABII5856YTyLzwAAAAKjSBmu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329345966",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T20:44:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11329633135,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjTHtv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329633135",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T22:08:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11329641705,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjTJzp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329641705",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T22:11:43Z"
    },
    {
      "event": "labeled",
      "id": 11329641992,
      "node_id": "LE_lADOABII5856YTyLzwAAAAKjTJ4I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329641992",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T22:11:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11329755579,
      "node_id": "UNLE_lADOABII5856YTyLzwAAAAKjTlm7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329755579",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T22:53:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-22T23:40:16Z",
      "updated_at": "2023-12-22T23:40:16Z",
      "source": {
        "issue": {
          "id": 2054578166,
          "node_id": "PR_kwDOABII585ir-jz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29136",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29136/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29136/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29136/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29136",
          "number": 29136,
          "state": "open",
          "state_reason": null,
          "title": "wallet: `addhdkey` RPC to add just keys to wallets via new `void(KEY)` descriptor",
          "body": "It is sometimes useful for the wallet to have keys that it can sign with but are not (initially) involved in any scripts, e.g. for setting up a multisig. Ryanofsky [suggested](https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1867721948) A `void(KEY)` descriptor which allows for a key to be specified, but produces no scripts. These can be imported into the wallet, and subsequently retrieved with `gethdkeys`. Additionally, `listdescriptors` will output these descriptors so that they can be easily backed up.\r\n\r\nIn order to make it easier for people to add HD keys to their wallet, and to generate a new one if they want to rotate their descriptors, an `addhdkey` RPC is also added. Without arguments, it will generate a new HD key and add it to the wallet via a `void(KEY)` descriptor. If provided a private key, it will construct the descriptor and add it to the wallet.\r\n\r\nSee also: https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866961865\r\n\r\nBased on #29130 as `gethdkeys` is useful for testing this.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29136",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29136",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29136.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29136.patch"
          },
          "created_at": "2023-12-22T23:40:15Z",
          "updated_at": "2024-01-08T23:12:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1795206875,
      "node_id": "PRR_kwDOABII585rAK7b",
      "url": null,
      "actor": null,
      "commit_id": "08b9b414d9f4b4b65bf5ec0ff875889997631a79",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 08b9b414d9f4b4b65bf5ec0ff875889997631a79. I think I'm maybe halfway through reviewing, but here are my comments so far.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#pullrequestreview-1795206875",
      "submitted_at": "2023-12-23T00:03:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11329932659,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjUQ1z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11329932659",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T00:24:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGViZDAyZDczMjQxYzA5MjJmNDg2Y2RmMTQ3MTkyODFjMDc5YjQ1Yzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebd02d73241c0922f486cdf14719281c079b45c7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ebd02d73241c0922f486cdf14719281c079b45c7",
      "tree": {
        "sha": "9ebe4245de922d6bd3ebb198e4eaf4bcab46023f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ebe4245de922d6bd3ebb198e4eaf4bcab46023f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7da65470cde4cd55a405a8aaa7ef677c821590a5",
          "sha": "7da65470cde4cd55a405a8aaa7ef677c821590a5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7da65470cde4cd55a405a8aaa7ef677c821590a5"
        }
      ],
      "message": "desc spkm: Add functions to retrieve specific private keys",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-23T01:15:43Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T22:27:51Z"
      },
      "sha": "ebd02d73241c0922f486cdf14719281c079b45c7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJjOThiMmYzOTVlYWZhMTI1MDU0ZTJmNmU3YzU3MGUxODc5NWUzMTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c98b2f395eafa125054e2f6e7c570e18795e318",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c98b2f395eafa125054e2f6e7c570e18795e318",
      "tree": {
        "sha": "4d3547af44d277f96fa7709319ff1114ae81d05d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d3547af44d277f96fa7709319ff1114ae81d05d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebd02d73241c0922f486cdf14719281c079b45c7",
          "sha": "ebd02d73241c0922f486cdf14719281c079b45c7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ebd02d73241c0922f486cdf14719281c079b45c7"
        }
      ],
      "message": "wallet: Add IsActiveScriptPubKeyMan\n\nGiven a ScriptPubKeyMan, it's useful to ask the wallet whether it is\ncurrently active.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-23T01:15:45Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T22:33:19Z"
      },
      "sha": "2c98b2f395eafa125054e2f6e7c570e18795e318"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11330085020,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjU2Cc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11330085020",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T02:10:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11330097569,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjU5Gh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11330097569",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T02:22:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11330108716,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKjU70s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11330108716",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T02:32:37Z"
    },
    {
      "event": "labeled",
      "id": 11330174380,
      "node_id": "LE_lADOABII5856YTyLzwAAAAKjVL2s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11330174380",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T03:17:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1795440020,
      "node_id": "PRR_kwDOABII585rBD2U",
      "url": null,
      "actor": null,
      "commit_id": "e0ad5bce210681c40eebd892bcfbca25c1c63136",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#pullrequestreview-1795440020",
      "submitted_at": "2023-12-23T14:07:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
    },
    {
      "event": "subscribed",
      "id": 11333070166,
      "node_id": "SE_lADOABII5856YTyLzwAAAAKjgO1W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11333070166",
      "actor": {
        "login": "124maa",
        "id": 139474901,
        "node_id": "U_kgDOCFA31Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/139474901?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/124maa",
        "html_url": "https://github.com/124maa",
        "followers_url": "https://api.github.com/users/124maa/followers",
        "following_url": "https://api.github.com/users/124maa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/124maa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/124maa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/124maa/subscriptions",
        "organizations_url": "https://api.github.com/users/124maa/orgs",
        "repos_url": "https://api.github.com/users/124maa/repos",
        "events_url": "https://api.github.com/users/124maa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/124maa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-24T21:55:17Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-27T01:22:08Z",
      "updated_at": "2023-12-27T01:22:08Z",
      "source": {
        "issue": {
          "id": 2052431458,
          "node_id": "PR_kwDOABII585iknFs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29129",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29129/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29129/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29129/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29129",
          "number": 29129,
          "state": "open",
          "state_reason": null,
          "title": "wallet, rpc: add BIP44 `account` in `createwallet`",
          "body": "This PR adds an `account` parameter in `createwallet` RPC. It's the\r\nBIP44 account that will be used in `SetupDescriptorScriptPubKeyMans`\r\nto fetch the descriptors from the external signer.",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29129",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29129",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29129.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29129.patch"
          },
          "created_at": "2023-12-21T13:31:11Z",
          "updated_at": "2024-01-08T23:18:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "UserError0815",
        "id": 125211937,
        "node_id": "U_kgDOB3aVIQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/125211937?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UserError0815",
        "html_url": "https://github.com/UserError0815",
        "followers_url": "https://api.github.com/users/UserError0815/followers",
        "following_url": "https://api.github.com/users/UserError0815/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UserError0815/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UserError0815/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UserError0815/subscriptions",
        "organizations_url": "https://api.github.com/users/UserError0815/orgs",
        "repos_url": "https://api.github.com/users/UserError0815/repos",
        "events_url": "https://api.github.com/users/UserError0815/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UserError0815/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-27T20:07:56Z",
      "updated_at": "2023-12-27T20:07:56Z",
      "source": {
        "issue": {
          "id": 2057631599,
          "node_id": "I_kwDOAyUWps56pPdv",
          "url": "https://api.github.com/repos/syscoin/syscoin/issues/538",
          "repository_url": "https://api.github.com/repos/syscoin/syscoin",
          "labels_url": "https://api.github.com/repos/syscoin/syscoin/issues/538/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/syscoin/syscoin/issues/538/comments",
          "events_url": "https://api.github.com/repos/syscoin/syscoin/issues/538/events",
          "html_url": "https://github.com/syscoin/syscoin/issues/538",
          "number": 538,
          "state": "open",
          "state_reason": null,
          "title": "Feature request: Allow users to insert seed / passphrases / master hd key",
          "body": "### Please describe the feature you'd like to see added.\r\n\r\nHello\r\n\r\nI miss the ability to insert my own passphrase while creating a new wallet.\r\n\r\n### Is your feature related to a problem, if so please describe it.\r\n\r\nI am currently using a blank wallet with a single private key from a specific seed that is imported with the console which has no hdseed*.\r\n\r\n**The support for the legacy wallets will be removed in the future.**\r\n\r\nMy concern is how can i create a wallet with my own private key?\r\nOr will my current wallet, a blank wallet+single private key (no hdseed), work in the future?\r\n\r\n![warning](https://i.imgur.com/NxcEqIW.png)\r\n\r\nI have no trust in wallets that randomly created. My keys my wallet.\r\n\r\n*console: sethdseed is not the solution because the private key i use is derived from a seed word. And it will generate other private keys rather than my.\r\n\r\n### Describe the solution you'd like\r\n\r\nThis is an example of how Raven Core solved it with the extended seed words.\r\n\r\n![wallet](https://i.imgur.com/OKmtKYJ.png)\r\n\r\n\r\n### Describe any alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Please leave any additional context\r\n\r\n_No response_",
          "user": {
            "login": "UserError0815",
            "id": 125211937,
            "node_id": "U_kgDOB3aVIQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/125211937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UserError0815",
            "html_url": "https://github.com/UserError0815",
            "followers_url": "https://api.github.com/users/UserError0815/followers",
            "following_url": "https://api.github.com/users/UserError0815/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/UserError0815/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/UserError0815/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/UserError0815/subscriptions",
            "organizations_url": "https://api.github.com/users/UserError0815/orgs",
            "repos_url": "https://api.github.com/users/UserError0815/repos",
            "events_url": "https://api.github.com/users/UserError0815/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/UserError0815/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 6,
          "created_at": "2023-12-27T17:45:47Z",
          "updated_at": "2023-12-29T23:15:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "UserError0815",
        "id": 125211937,
        "node_id": "U_kgDOB3aVIQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/125211937?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UserError0815",
        "html_url": "https://github.com/UserError0815",
        "followers_url": "https://api.github.com/users/UserError0815/followers",
        "following_url": "https://api.github.com/users/UserError0815/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UserError0815/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UserError0815/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UserError0815/subscriptions",
        "organizations_url": "https://api.github.com/users/UserError0815/orgs",
        "repos_url": "https://api.github.com/users/UserError0815/repos",
        "events_url": "https://api.github.com/users/UserError0815/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UserError0815/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-27T20:13:54Z",
      "updated_at": "2023-12-27T20:13:54Z",
      "source": {
        "issue": {
          "id": 2057572584,
          "node_id": "I_kwDOBVv5N856pBDo",
          "url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/issues/542",
          "repository_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc",
          "labels_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/issues/542/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/issues/542/comments",
          "events_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/issues/542/events",
          "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/issues/542",
          "number": 542,
          "state": "open",
          "state_reason": null,
          "title": "Feature request: Allow users to insert seed / passphrases / master hd key",
          "body": "Hello\r\n\r\nI miss the ability to insert my own passphrase while creating a new wallet.\r\nI am currently using a blank wallet with a single private key that is imported with the console which has no hdseed.\r\n\r\nThis is an example of how Raven Core solved it with the extended seed words.\r\n\r\nThank you very much\r\n\r\n\r\n![wallet](https://i.imgur.com/GNaoZtc.png)\r\n",
          "user": {
            "login": "UserError0815",
            "id": 125211937,
            "node_id": "U_kgDOB3aVIQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/125211937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UserError0815",
            "html_url": "https://github.com/UserError0815",
            "followers_url": "https://api.github.com/users/UserError0815/followers",
            "following_url": "https://api.github.com/users/UserError0815/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/UserError0815/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/UserError0815/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/UserError0815/subscriptions",
            "organizations_url": "https://api.github.com/users/UserError0815/orgs",
            "repos_url": "https://api.github.com/users/UserError0815/repos",
            "events_url": "https://api.github.com/users/UserError0815/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/UserError0815/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 1,
          "created_at": "2023-12-27T16:34:07Z",
          "updated_at": "2023-12-28T23:26:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiZTk5MGIxYTk1ZTYzMzExMDZjM2NlNmQxZjJhYmQ4NjBmODhlYTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbe990b1a95e6331106c3ce6d1f2abd860f88ea8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cbe990b1a95e6331106c3ce6d1f2abd860f88ea8",
      "tree": {
        "sha": "9908bfcc57a9f171333f54cb1c502ec2bff2cc53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9908bfcc57a9f171333f54cb1c502ec2bff2cc53"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c98b2f395eafa125054e2f6e7c570e18795e318",
          "sha": "2c98b2f395eafa125054e2f6e7c570e18795e318",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2c98b2f395eafa125054e2f6e7c570e18795e318"
        }
      ],
      "message": "wallet, rpc: Add gethdkeys RPC\n\ngethdkeys retrieves all HD keys stored in the wallet's descriptors.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:35Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T22:14:51Z"
      },
      "sha": "cbe990b1a95e6331106c3ce6d1f2abd860f88ea8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxMGRjMmIyMGI3Y2JhNjE4ZTliMDZiYzc5MjY5YTVjNzIzMTRmMjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c10dc2b20b7cba618e9b06bc79269a5c72314f23",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c10dc2b20b7cba618e9b06bc79269a5c72314f23",
      "tree": {
        "sha": "8d8d58d82b0e01cfbdc6a9966190f6f34a1a31b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d8d58d82b0e01cfbdc6a9966190f6f34a1a31b2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbe990b1a95e6331106c3ce6d1f2abd860f88ea8",
          "sha": "cbe990b1a95e6331106c3ce6d1f2abd860f88ea8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cbe990b1a95e6331106c3ce6d1f2abd860f88ea8"
        }
      ],
      "message": "tests: Test for gethdkeys",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:35Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-20T23:11:51Z"
      },
      "sha": "c10dc2b20b7cba618e9b06bc79269a5c72314f23"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkMTA3ZDVmNDhjMmZhZTBkMDliZjliZTc5ZjljZjQ3ZGFhZDYyNDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d107d5f48c2fae0d09bf9be79f9cf47daad6241",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d107d5f48c2fae0d09bf9be79f9cf47daad6241",
      "tree": {
        "sha": "850fbc600e97a7a28dba6e05cebbe11aad38c873",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/850fbc600e97a7a28dba6e05cebbe11aad38c873"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c10dc2b20b7cba618e9b06bc79269a5c72314f23",
          "sha": "c10dc2b20b7cba618e9b06bc79269a5c72314f23",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c10dc2b20b7cba618e9b06bc79269a5c72314f23"
        }
      ],
      "message": "wallet: Refactor function for single DescSPKM setup\n\nWe will need access to a function that sets up a singular\nDescriptorSPKM, so refactor this out of the multiple DescriptorSPKM\nsetup function.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:35Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "github@achow101.com",
        "date": "2022-12-19T21:59:25Z"
      },
      "sha": "8d107d5f48c2fae0d09bf9be79f9cf47daad6241"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxNmRiYzk5YmMwY2Q5MzFiYmQ3MzhhOTk2ZWY5ZDkyMDllZmMxNjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/016dbc99bc0cd931bbd738a996ef9d9209efc162",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/016dbc99bc0cd931bbd738a996ef9d9209efc162",
      "tree": {
        "sha": "e4f38e0e7e4f07d9b54cfb80e9cc008eb3fe5c77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4f38e0e7e4f07d9b54cfb80e9cc008eb3fe5c77"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d107d5f48c2fae0d09bf9be79f9cf47daad6241",
          "sha": "8d107d5f48c2fae0d09bf9be79f9cf47daad6241",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d107d5f48c2fae0d09bf9be79f9cf47daad6241"
        }
      ],
      "message": "wallet, descspkm: Refactor wallet descriptor generation to standalone func",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:35Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "github@achow101.com",
        "date": "2022-08-22T20:55:39Z"
      },
      "sha": "016dbc99bc0cd931bbd738a996ef9d9209efc162"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI2MjFjYTBlNjQxOGI0MDYxNjFiMjFiNmFmYWMxNTliMGJlNzc1Yjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2621ca0e6418b406161b21b6afac159b0be775b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2621ca0e6418b406161b21b6afac159b0be775b7",
      "tree": {
        "sha": "683836f8009d52db25c88022de7d4781813f9f60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/683836f8009d52db25c88022de7d4781813f9f60"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/016dbc99bc0cd931bbd738a996ef9d9209efc162",
          "sha": "016dbc99bc0cd931bbd738a996ef9d9209efc162",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/016dbc99bc0cd931bbd738a996ef9d9209efc162"
        }
      ],
      "message": "wallet: Add GetActiveHDPubKeys to retrieve xpubs from active descriptors",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T23:35:29Z"
      },
      "sha": "2621ca0e6418b406161b21b6afac159b0be775b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiY2I4OWQzNzMwZDMwYTMyMDJmY2VlMTcyZmQ3MDlhOWY1ODhhNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bcb89d3730d30a3202fcee172fd709a9f588a4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8bcb89d3730d30a3202fcee172fd709a9f588a4e",
      "tree": {
        "sha": "08a403bc2c479759636de6a17d1e4ea803e0acf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08a403bc2c479759636de6a17d1e4ea803e0acf1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2621ca0e6418b406161b21b6afac159b0be775b7",
          "sha": "2621ca0e6418b406161b21b6afac159b0be775b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2621ca0e6418b406161b21b6afac159b0be775b7"
        }
      ],
      "message": "wallet: Be able to retrieve single key from descriptors\n\nAdds CWallet::GetKey which retrieves a single key from the descriptors\nstored in the wallet.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T23:39:23Z"
      },
      "sha": "8bcb89d3730d30a3202fcee172fd709a9f588a4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkMTc3YzkwYzhlNWQzYjVmMjJiNjc0NGI3MjVmZjc2MGI1ODk3YzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed177c90c8e5d3b5f22b6744b725ff760b5897c1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed177c90c8e5d3b5f22b6744b725ff760b5897c1",
      "tree": {
        "sha": "75da519fd5b1373ba1503f078dc41defa7104af1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75da519fd5b1373ba1503f078dc41defa7104af1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bcb89d3730d30a3202fcee172fd709a9f588a4e",
          "sha": "8bcb89d3730d30a3202fcee172fd709a9f588a4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8bcb89d3730d30a3202fcee172fd709a9f588a4e"
        }
      ],
      "message": "wallet, rpc: Add createwalletdescriptor RPC",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T23:27:45Z"
      },
      "sha": "ed177c90c8e5d3b5f22b6744b725ff760b5897c1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlOGQ5YTMyMjc3ODkyMmY2N2Y4ZjhlMzkwNDA5YjhhZjVkMDI2Nzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e8d9a322778922f67f8f8e390409b8af5d02678",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e8d9a322778922f67f8f8e390409b8af5d02678",
      "tree": {
        "sha": "326e9eec13aee10bf005b42107fd71a092e663f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/326e9eec13aee10bf005b42107fd71a092e663f1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed177c90c8e5d3b5f22b6744b725ff760b5897c1",
          "sha": "ed177c90c8e5d3b5f22b6744b725ff760b5897c1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ed177c90c8e5d3b5f22b6744b725ff760b5897c1"
        }
      ],
      "message": "wallet: Test upgrade of pre-taproot wallet to have tr() descriptors",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-21T23:44:03Z"
      },
      "sha": "8e8d9a322778922f67f8f8e390409b8af5d02678"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxMDE1MGI2MTUwMDgzNDQwYWY0ZjBhYTExMTBjOGFhOTliYTJkYzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "tree": {
        "sha": "e6bf1a284a14e563799d528b37de89aa7f569598",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6bf1a284a14e563799d528b37de89aa7f569598"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e8d9a322778922f67f8f8e390409b8af5d02678",
          "sha": "8e8d9a322778922f67f8f8e390409b8af5d02678",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e8d9a322778922f67f8f8e390409b8af5d02678"
        }
      ],
      "message": "test: Add test for createwalletdescriptor",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-03T00:30:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2023-12-22T17:55:59Z"
      },
      "sha": "c10150b6150083440af4f0aa1110c8aa99ba2dc8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11374789881,
      "node_id": "HRFPE_lADOABII5856YTyLzwAAAAKl_YT5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11374789881",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T00:30:42Z"
    },
    {
      "event": "unlabeled",
      "id": 11374959478,
      "node_id": "UNLE_lADOABII5856YTyLzwAAAAKmABt2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11374959478",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T01:25:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435355508",
      "pull_request_review_id": 1795206875,
      "id": 1435355508,
      "node_id": "PRRC_kwDOABII585Vjcl0",
      "diff_hunk": "@@ -2137,6 +2138,35 @@ std::map<CKeyID, CKey> DescriptorScriptPubKeyMan::GetKeys() const\n     return m_map_keys;\n }\n \n+bool DescriptorScriptPubKeyMan::HasPrivKey(const CPubKey& pubkey) const",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "484711baa994d482110edaf510377181b8b2b465",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"desc spkm: Add functions to retrieve specific private keys\" (484711baa994d482110edaf510377181b8b2b465)\r\n\r\nIt looks like this function would be a little more flexible and efficient if took a CKeyID parameter instead of a CPubKey",
      "created_at": "2023-12-22T21:34:00Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435355508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435355508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435366492",
      "pull_request_review_id": 1795206875,
      "id": 1435366492,
      "node_id": "PRRC_kwDOABII585VjfRc",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nWould suggest making these name-only parameters to avoid different bool options being confused with each other, and to leave room to add new positional parameters in the future. You could do this with:\r\n\r\n```diff\r\n--- a/src/rpc/client.cpp\r\n+++ b/src/rpc/client.cpp\r\n@@ -274,8 +274,9 @@ static const CRPCConvertParam vRPCConvertParams[] =\r\n     { \"logging\", 1, \"exclude\" },\r\n     { \"disconnectnode\", 1, \"nodeid\" },\r\n     { \"upgradewallet\", 0, \"version\" },\r\n+    { \"gethdkeys\", 0, \"options\" },\r\n     { \"gethdkeys\", 0, \"active_only\" },\r\n-    { \"gethdkeys\", 1, \"private\" },\r\n+    { \"gethdkeys\", 0, \"private\" },\r\n     { \"createwalletdescriptor\", 1, \"internal\" },\r\n     // Echo with conversion (For testing only)\r\n     { \"echojson\", 0, \"arg0\" },\r\n--- a/src/wallet/rpc/wallet.cpp\r\n+++ b/src/wallet/rpc/wallet.cpp\r\n@@ -819,8 +819,9 @@ RPCHelpMan gethdkeys()\r\n         \"gethdkeys\",\r\n         \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\r\n         {\r\n-            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\r\n-            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\r\n+            {\"options\", RPCArg::Type::OBJ_NAMED_PARAMS, RPCArg::Optional::OMITTED, \"\", {\r\n+                {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\r\n+                {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}}},\r\n         },\r\n         RPCResult{RPCResult::Type::ARR, \"\", \"\", {\r\n             {\r\n@@ -851,8 +852,9 @@ RPCHelpMan gethdkeys()\r\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\r\n             }\r\n \r\n-            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\r\n-            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\r\n+            UniValue options{request.params[0].isNull() ? UniValue::VOBJ : request.params[0]};\r\n+            const bool active_only{options.exists(\"active_only\") ? options[\"active_only\"].get_bool() : false};\r\n+            const bool priv{options.exists(\"private\") ? options[\"private\"].get_bool() : false};\r\n             if (priv) {\r\n                 EnsureWalletIsUnlocked(*wallet);\r\n             }\r\n```",
      "created_at": "2023-12-22T22:13:42Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435366492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435366492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 822,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 823,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435368965",
      "pull_request_review_id": 1795206875,
      "id": 1435368965,
      "node_id": "PRRC_kwDOABII585Vjf4F",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nNote: This is better than what I suggested. I was originally thinking this default should be true, to make it more convenient to get active hd key and ignore other keys. But defaulting to false is actually better, because it's still easy to get the active hd key with an option, and it's probably more confusing to see missing keys than extra keys. Also this default makes `gethdkeys` output more consistent with `listdescriptors` output.",
      "created_at": "2023-12-22T22:23:59Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435368965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435368965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 822,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435369940",
      "pull_request_review_id": 1795206875,
      "id": 1435369940,
      "node_id": "PRRC_kwDOABII585VjgHU",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 66,
      "original_position": 61,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nCould use `Assert(desc_spkm)` to avoid undefined behavior if it is null.",
      "created_at": "2023-12-22T22:27:14Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435369940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435369940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435372329",
      "pull_request_review_id": 1795206875,
      "id": 1435372329,
      "node_id": "PRRC_kwDOABII585Vjgsp",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nThis is just general style feedback, but I think where possible it's better to use `auto&` or `auto*` instead of bare `auto` because with bare `auto` in c++, you don't know if a potentially expensive object copy will happen without manually checking the type. With `auto&` or `auto*` you know there won't be an big copy without having to think about it. Up to you though if you prefer less verbosity instead",
      "created_at": "2023-12-22T22:38:36Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435372329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435372329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 871,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435375318",
      "pull_request_review_id": 1795206875,
      "id": 1435375318,
      "node_id": "PRRC_kwDOABII585VjhbW",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nIt seems like theoretically there could be a race condition if the wallet became locked during this loop. Also the code ignores other potential errors. Would maybe suggest:\r\n\r\n```c++\r\nif (priv && desc_spkm->HasPrivKey(xpub.pubkey)) {\r\n  wallet_xprvs[xpub] = CExtKey(xpub, *CHECK_NONFATAL(desc_spkm->GetKey(xpub.pubkey)));\r\n}\r\n```",
      "created_at": "2023-12-22T22:49:36Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435375318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435375318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 882,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435376241",
      "pull_request_review_id": 1795206875,
      "id": 1435376241,
      "node_id": "PRRC_kwDOABII585Vjhpx",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }\n+                }\n+            }\n+\n+            UniValue response(UniValue::VARR);\n+            for (const auto& [xpub, descs] : wallet_xpubs) {\n+                bool has_xprv = false;\n+                UniValue descriptors(UniValue::VARR);\n+                for (const auto& [desc, active, has_priv] : descs) {\n+                    UniValue d(UniValue::VOBJ);\n+                    d.pushKV(\"desc\", desc);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 87,
      "original_position": 82,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nNot important but I think I would suggest switching to `auto&` in the loops above and using `std::move(desc)` here to avoid copying strings when not necessary.",
      "created_at": "2023-12-22T22:52:24Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435376241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435376241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 899,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435377746",
      "pull_request_review_id": 1795206875,
      "id": 1435377746,
      "node_id": "PRRC_kwDOABII585VjiBS",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }\n+                }\n+            }\n+\n+            UniValue response(UniValue::VARR);\n+            for (const auto& [xpub, descs] : wallet_xpubs) {\n+                bool has_xprv = false;\n+                UniValue descriptors(UniValue::VARR);\n+                for (const auto& [desc, active, has_priv] : descs) {\n+                    UniValue d(UniValue::VOBJ);\n+                    d.pushKV(\"desc\", desc);\n+                    d.pushKV(\"active\", active);\n+                    has_xprv |= has_priv;\n+\n+                    descriptors.push_back(d);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add gethdkeys RPC\" (5deafad2f61f626b50b6c173558ac7236cceff13)\r\n\r\nCould use std::move here and on line 906 as well to avoid copying univalue objects. I will stop commenting about copies, though. I don't think they are important, I just figure it's very easy to avoid copying and we don't need 3 copies of each descriptor string so why not avoid it.",
      "created_at": "2023-12-22T22:56:22Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435377746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435377746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 898,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435381067",
      "pull_request_review_id": 1795206875,
      "id": 1435381067,
      "node_id": "PRRC_kwDOABII585Vji1L",
      "diff_hunk": "@@ -3553,6 +3553,25 @@ void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n     }\n }\n \n+uint256 CWallet::SetupDescriptorScriptPubKeyMan(WalletBatch& batch, const CExtKey& master_key, const OutputType& output_type, bool internal)\n+{\n+    AssertLockHeld(cs_wallet);\n+    auto spk_manager = std::unique_ptr<DescriptorScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, m_keypool_size));\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            throw std::runtime_error(std::string(__func__) + \": Wallet is locked, cannot setup new descriptors\");\n+        }\n+        if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "280d26b19e9222afa902ad09cd7b42c2eb3e0044",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: Refactor function for single DescSPKM setup\" (280d26b19e9222afa902ad09cd7b42c2eb3e0044)\r\n\r\nSeems like the &batch argument option is replaced with nullptr here. This seems like a bug, but if it is intended behavior should definitely have a comment explaining the nullptr.",
      "created_at": "2023-12-22T23:05:00Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435381067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435381067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435383694",
      "pull_request_review_id": 1795206875,
      "id": 1435383694,
      "node_id": "PRRC_kwDOABII585VjjeO",
      "diff_hunk": "@@ -3553,6 +3553,25 @@ void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n     }\n }\n \n+uint256 CWallet::SetupDescriptorScriptPubKeyMan(WalletBatch& batch, const CExtKey& master_key, const OutputType& output_type, bool internal)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "280d26b19e9222afa902ad09cd7b42c2eb3e0044",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: Refactor function for single DescSPKM setup\" (280d26b19e9222afa902ad09cd7b42c2eb3e0044)\r\n\r\nNot important, but I think it would be a little better to return DescriptorScriptPubKeyMan& to make the return type self-documenting. Also to avoid the need for callers to have to look up the keyman object after they just created it.",
      "created_at": "2023-12-22T23:11:32Z",
      "updated_at": "2023-12-23T00:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435383694",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435383694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435387051",
      "pull_request_review_id": 1795206875,
      "id": 1435387051,
      "node_id": "PRRC_kwDOABII585VjkSr",
      "diff_hunk": "@@ -624,6 +624,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n \n     bool IsHDEnabled() const override;\n \n+    static WalletDescriptor GenerateWalletDescriptor(const CExtKey& master_key, const OutputType& output_type, bool internal);",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "fc3ccf068fbbf429eff9dce072bc33d78ad27509",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, descspkm: Refactor wallet descriptor generation to static func\" (fc3ccf068fbbf429eff9dce072bc33d78ad27509)\r\n\r\nNot important, but it doesn't seem like it makes sense for this function to be attached to the keyman class. If you want it to be a static method, it would probably make more sense being a static method of WalletDescriptor, since it is basically just a constructor for it. But I would probably make it a standalone function not attached to any class, just to reduce interdependencies in this code.\r\n\r\nAlso since the private key is not used here, I think it would be clearer for this to take a CExtPubKey parameter instead of a CPubKey.",
      "created_at": "2023-12-22T23:21:18Z",
      "updated_at": "2023-12-23T00:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435387051",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435387051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 627,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435387959",
      "pull_request_review_id": 1795206875,
      "id": 1435387959,
      "node_id": "PRRC_kwDOABII585Vjkg3",
      "diff_hunk": "@@ -1044,6 +1044,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     //! Whether the (external) signer performs R-value signature grinding\n     bool CanGrindR() const;\n+\n+    //! Find the single xpub used by all active descriptors, or return nullopt\n+    std::optional<CExtPubKey> GetActiveHDPubKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n+    //! Find the private key for the given public key from the wallet's descriptors\n+    std::optional<CKey> CWallet::GetKey(const CPubKey& pubkey) const;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 9,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "647118e36563ef421b6c4f6edeac33ce6aff5588",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: Add GetActiveHDPubKey to retrieve hd key from active descriptors\" (647118e36563ef421b6c4f6edeac33ce6aff5588)\r\n\r\nThis is probably in the wrong commit, I don't see this method being added here.",
      "created_at": "2023-12-22T23:24:06Z",
      "updated_at": "2023-12-23T00:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435387959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435387959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1052,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435391901",
      "pull_request_review_id": 1795206875,
      "id": 1435391901,
      "node_id": "PRRC_kwDOABII585Vjled",
      "diff_hunk": "@@ -4365,4 +4365,37 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey() const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) return std::nullopt;\n+\n+    std::optional<CExtPubKey> active_xpub;\n+    for (const auto& spkm : GetActiveScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // We can only determine the active hd key if all descriptors have exactly 1 xpub\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            return std::nullopt;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        // All active descriptors must have the same xpub",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "647118e36563ef421b6c4f6edeac33ce6aff5588",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: Add GetActiveHDPubKey to retrieve hd key from active descriptors\" (647118e36563ef421b6c4f6edeac33ce6aff5588)\r\n\r\nI'm confused. Is this actually true? I thought `importdescriptors` let you freely import descriptors with different keys and control which ones are active.\r\n\r\nIf this is always true, it would be helpful if comment mentioned what was enforcing it (since it's not obvious where to look). If it's not true, I think would be better if this function returned `std::set<CExtPubKey>` instead of `std::optional<CExtPubKey>` and callers decided what to do if the set size is more than 1.",
      "created_at": "2023-12-22T23:33:49Z",
      "updated_at": "2023-12-23T00:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435391901",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435391901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435398854",
      "pull_request_review_id": 1795206875,
      "id": 1435398854,
      "node_id": "PRRC_kwDOABII585VjnLG",
      "diff_hunk": "@@ -913,6 +913,108 @@ RPCHelpMan gethdkeys()\n     };\n }\n \n+static RPCHelpMan createwalletdescriptor()\n+{\n+    return RPCHelpMan{\"createwalletdescriptor\",\n+        \"Creates the wallet's descriptor for the given address type. \"\n+        \"Only works on wallets that contain automatically generated descriptors. \"\n+        \"The address type must be one that the wallet does not already have a descriptor for.\"\n+        + HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"address_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address type the descriptor will produce. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", \\\"bech32\\\", and \\\"bech32m\\\".\"},\n+            {\"internal\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"Both external and internal will be generated unless this parameter is specified\"}, \"Whether to only make one descriptor that is internal (if parameter is true) or external (if parameter is false)\"},\n+            {\"hdkey\", RPCArg::Type::STR, RPCArg::DefaultHint{\"The HD key used by all other active descriptors\"}, \"The HD key that the wallet knows the private key of, listed using 'gethdkeys', to use for this descriptor's key\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "01b2aab1f8f61bc85345e106893e0ff2e590a56a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet, rpc: Add createwalletdescriptor RPC\" (01b2aab1f8f61bc85345e106893e0ff2e590a56a)\r\n\r\nWould suggest making the internal and hdkey paramers name-only parameters using OBJ_NAMED_PARAMS (see earlier comment https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435366492) to avoid usage errors and make it easier to add new options and arguments later.\r\n\r\nWould suggest keeping address_type as a positional parameter, though, since it's required and the values are unambiguous. Also could consider renaming \"address_type\" to just \"type\" to make it easier to pass by name and because maybe we will want to support creating other types of descriptors that don't correspond exactly to address types.",
      "created_at": "2023-12-22T23:56:11Z",
      "updated_at": "2023-12-23T00:05:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435398854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435398854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 924,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 926,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435423974",
      "pull_request_review_id": 1795367297,
      "id": 1435423974,
      "node_id": "PRRC_kwDOABII585VjtTm",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435375318,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`cs_wallet` is being held earlier, and that will prevent the wallet from locked.",
      "created_at": "2023-12-23T01:22:47Z",
      "updated_at": "2023-12-23T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435423974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435423974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 882,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436394",
      "pull_request_review_id": 1795372509,
      "id": 1435436394,
      "node_id": "PRRC_kwDOABII585VjwVq",
      "diff_hunk": "@@ -2137,6 +2138,35 @@ std::map<CKeyID, CKey> DescriptorScriptPubKeyMan::GetKeys() const\n     return m_map_keys;\n }\n \n+bool DescriptorScriptPubKeyMan::HasPrivKey(const CPubKey& pubkey) const",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "484711baa994d482110edaf510377181b8b2b465",
      "in_reply_to_id": 1435355508,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:10:45Z",
      "updated_at": "2023-12-23T02:10:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436422",
      "pull_request_review_id": 1795372516,
      "id": 1435436422,
      "node_id": "PRRC_kwDOABII585VjwWG",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435366492,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-12-23T02:10:52Z",
      "updated_at": "2023-12-23T02:10:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 822,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 823,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436471",
      "pull_request_review_id": 1795372530,
      "id": 1435436471,
      "node_id": "PRRC_kwDOABII585VjwW3",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 66,
      "original_position": 61,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435369940,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a `CHECK_NONFATAL` (one of the linters doesn't like `Assert`)",
      "created_at": "2023-12-23T02:11:03Z",
      "updated_at": "2023-12-23T02:11:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436471",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436629",
      "pull_request_review_id": 1795372564,
      "id": 1435436629,
      "node_id": "PRRC_kwDOABII585VjwZV",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435372329,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:11:31Z",
      "updated_at": "2023-12-23T02:11:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 871,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436652",
      "pull_request_review_id": 1795372573,
      "id": 1435436652,
      "node_id": "PRRC_kwDOABII585VjwZs",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }\n+                }\n+            }\n+\n+            UniValue response(UniValue::VARR);\n+            for (const auto& [xpub, descs] : wallet_xpubs) {\n+                bool has_xprv = false;\n+                UniValue descriptors(UniValue::VARR);\n+                for (const auto& [desc, active, has_priv] : descs) {\n+                    UniValue d(UniValue::VOBJ);\n+                    d.pushKV(\"desc\", desc);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 87,
      "original_position": 82,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435376241,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:11:39Z",
      "updated_at": "2023-12-23T02:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 899,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436670",
      "pull_request_review_id": 1795372596,
      "id": 1435436670,
      "node_id": "PRRC_kwDOABII585VjwZ-",
      "diff_hunk": "@@ -813,6 +813,106 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            const bool active_only = !request.params[0].isNull() && request.params[0].get_bool();\n+            const bool priv = !request.params[1].isNull() && request.params[1].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto spkm : spkms) {\n+                auto desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey)) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }\n+                }\n+            }\n+\n+            UniValue response(UniValue::VARR);\n+            for (const auto& [xpub, descs] : wallet_xpubs) {\n+                bool has_xprv = false;\n+                UniValue descriptors(UniValue::VARR);\n+                for (const auto& [desc, active, has_priv] : descs) {\n+                    UniValue d(UniValue::VOBJ);\n+                    d.pushKV(\"desc\", desc);\n+                    d.pushKV(\"active\", active);\n+                    has_xprv |= has_priv;\n+\n+                    descriptors.push_back(d);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "5deafad2f61f626b50b6c173558ac7236cceff13",
      "in_reply_to_id": 1435377746,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:11:43Z",
      "updated_at": "2023-12-23T02:11:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 898,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436690",
      "pull_request_review_id": 1795372622,
      "id": 1435436690,
      "node_id": "PRRC_kwDOABII585VjwaS",
      "diff_hunk": "@@ -3553,6 +3553,25 @@ void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n     }\n }\n \n+uint256 CWallet::SetupDescriptorScriptPubKeyMan(WalletBatch& batch, const CExtKey& master_key, const OutputType& output_type, bool internal)\n+{\n+    AssertLockHeld(cs_wallet);\n+    auto spk_manager = std::unique_ptr<DescriptorScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, m_keypool_size));\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            throw std::runtime_error(std::string(__func__) + \": Wallet is locked, cannot setup new descriptors\");\n+        }\n+        if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "280d26b19e9222afa902ad09cd7b42c2eb3e0044",
      "in_reply_to_id": 1435381067,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, fixed.",
      "created_at": "2023-12-23T02:11:52Z",
      "updated_at": "2023-12-23T02:11:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436779",
      "pull_request_review_id": 1795372651,
      "id": 1435436779,
      "node_id": "PRRC_kwDOABII585Vjwbr",
      "diff_hunk": "@@ -624,6 +624,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n \n     bool IsHDEnabled() const override;\n \n+    static WalletDescriptor GenerateWalletDescriptor(const CExtKey& master_key, const OutputType& output_type, bool internal);",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "fc3ccf068fbbf429eff9dce072bc33d78ad27509",
      "in_reply_to_id": 1435387051,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:12:05Z",
      "updated_at": "2023-12-23T02:12:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 627,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436813",
      "pull_request_review_id": 1795372662,
      "id": 1435436813,
      "node_id": "PRRC_kwDOABII585VjwcN",
      "diff_hunk": "@@ -1044,6 +1044,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     //! Whether the (external) signer performs R-value signature grinding\n     bool CanGrindR() const;\n+\n+    //! Find the single xpub used by all active descriptors, or return nullopt\n+    std::optional<CExtPubKey> GetActiveHDPubKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n+    //! Find the private key for the given public key from the wallet's descriptors\n+    std::optional<CKey> CWallet::GetKey(const CPubKey& pubkey) const;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 9,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "647118e36563ef421b6c4f6edeac33ce6aff5588",
      "in_reply_to_id": 1435387959,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved to the right commit.",
      "created_at": "2023-12-23T02:12:14Z",
      "updated_at": "2023-12-23T02:12:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435436813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435436813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1052,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435437218",
      "pull_request_review_id": 1795372884,
      "id": 1435437218,
      "node_id": "PRRC_kwDOABII585Vjwii",
      "diff_hunk": "@@ -4365,4 +4365,37 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey() const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) return std::nullopt;\n+\n+    std::optional<CExtPubKey> active_xpub;\n+    for (const auto& spkm : GetActiveScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // We can only determine the active hd key if all descriptors have exactly 1 xpub\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            return std::nullopt;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        // All active descriptors must have the same xpub",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "647118e36563ef421b6c4f6edeac33ce6aff5588",
      "in_reply_to_id": 1435391901,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This function was intended to only return a `CExtPubKey` if all active descriptors shared the same xpub, so if they differed, it would return `std::nullopt`. The comment was stating what it was attempting to do, not what it was expecting.\r\n\r\nIn any case, having the caller determine what to do if there is more than one xpub in the active descriptors is probably better, so I've changed it to do that and this comment is no longer relevant.",
      "created_at": "2023-12-23T02:14:11Z",
      "updated_at": "2023-12-23T02:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435437218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435437218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435437249",
      "pull_request_review_id": 1795372892,
      "id": 1435437249,
      "node_id": "PRRC_kwDOABII585VjwjB",
      "diff_hunk": "@@ -913,6 +913,108 @@ RPCHelpMan gethdkeys()\n     };\n }\n \n+static RPCHelpMan createwalletdescriptor()\n+{\n+    return RPCHelpMan{\"createwalletdescriptor\",\n+        \"Creates the wallet's descriptor for the given address type. \"\n+        \"Only works on wallets that contain automatically generated descriptors. \"\n+        \"The address type must be one that the wallet does not already have a descriptor for.\"\n+        + HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"address_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address type the descriptor will produce. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", \\\"bech32\\\", and \\\"bech32m\\\".\"},\n+            {\"internal\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"Both external and internal will be generated unless this parameter is specified\"}, \"Whether to only make one descriptor that is internal (if parameter is true) or external (if parameter is false)\"},\n+            {\"hdkey\", RPCArg::Type::STR, RPCArg::DefaultHint{\"The HD key used by all other active descriptors\"}, \"The HD key that the wallet knows the private key of, listed using 'gethdkeys', to use for this descriptor's key\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "01b2aab1f8f61bc85345e106893e0ff2e590a56a",
      "in_reply_to_id": 1435398854,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested.",
      "created_at": "2023-12-23T02:14:18Z",
      "updated_at": "2023-12-23T02:14:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435437249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435437249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": 924,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 926,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435439477",
      "pull_request_review_id": 1795373568,
      "id": 1435439477,
      "node_id": "PRRC_kwDOABII585VjxF1",
      "diff_hunk": "@@ -3553,6 +3553,25 @@ void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n     }\n }\n \n+uint256 CWallet::SetupDescriptorScriptPubKeyMan(WalletBatch& batch, const CExtKey& master_key, const OutputType& output_type, bool internal)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "280d26b19e9222afa902ad09cd7b42c2eb3e0044",
      "in_reply_to_id": 1435383694,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-12-23T02:22:37Z",
      "updated_at": "2023-12-23T02:22:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435439477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435439477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435607572",
      "pull_request_review_id": 1795440020,
      "id": 1435607572,
      "node_id": "PRRC_kwDOABII585VkaIU",
      "diff_hunk": "@@ -813,6 +813,216 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan gethdkeys()\n+{\n+    return RPCHelpMan{\n+        \"gethdkeys\",\n+        \"\\nList all BIP 32 HD keys in the wallet and which descriptors use them.\\n\",\n+        {\n+            {\"options\", RPCArg::Type::OBJ_NAMED_PARAMS, RPCArg::Optional::OMITTED, \"\", {\n+                {\"active_only\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show the keys for only active descriptors\"},\n+                {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private keys.\"}\n+            }},\n+        },\n+        RPCResult{RPCResult::Type::ARR, \"\", \"\", {\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\", {\n+                    {RPCResult::Type::STR, \"xpub\", \"The extended public key\"},\n+                    {RPCResult::Type::BOOL, \"has_private\", \"Whether the wallet has the private key for this xpub\"},\n+                    {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The extended private key if private is true\"},\n+                    {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects that use this HD key\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", {\n+                            {RPCResult::Type::STR, \"desc\", \"Descriptor string representation\"},\n+                            {RPCResult::Type::BOOL, \"active\", \"Whether this descriptor is currently used to generate new addresses\"},\n+                        }},\n+                    }},\n+                }},\n+            }\n+        }},\n+        RPCExamples{\n+            HelpExampleCli(\"gethdkeys\", \"\") + HelpExampleRpc(\"gethdkeys\", \"\")\n+            + HelpExampleCli(\"gethdkeys\", \"true\") + HelpExampleRpc(\"gethdkeys\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return UniValue::VNULL;\n+\n+            if (!wallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"gethdkeys is not available for non-descriptor wallets\");\n+            }\n+\n+            LOCK(wallet->cs_wallet);\n+\n+            UniValue options{request.params[0].isNull() ? UniValue::VOBJ : request.params[0]};\n+            const bool active_only{options.exists(\"active_only\") ? options[\"active_only\"].get_bool() : false};\n+            const bool priv{options.exists(\"private\") ? options[\"private\"].get_bool() : false};\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*wallet);\n+            }\n+\n+\n+            std::set<ScriptPubKeyMan*> spkms;\n+            if (active_only) {\n+                spkms = wallet->GetActiveScriptPubKeyMans();\n+            } else {\n+                spkms = wallet->GetAllScriptPubKeyMans();\n+            }\n+\n+            std::map<CExtPubKey, std::set<std::tuple<std::string, bool, bool>>> wallet_xpubs;\n+            std::map<CExtPubKey, CExtKey> wallet_xprvs;\n+            for (auto* spkm : spkms) {\n+                auto* desc_spkm{dynamic_cast<DescriptorScriptPubKeyMan*>(spkm)};\n+                CHECK_NONFATAL(desc_spkm);\n+                LOCK(desc_spkm->cs_desc_man);\n+                WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+                // Retrieve the pubkeys from the descriptor\n+                std::set<CPubKey> desc_pubkeys;\n+                std::set<CExtPubKey> desc_xpubs;\n+                w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+                for (const CExtPubKey& xpub : desc_xpubs) {\n+                    wallet_xpubs[xpub].emplace(w_desc.descriptor->ToString(), wallet->IsActiveScriptPubKeyMan(spkm), desc_spkm->HasPrivKey(xpub.pubkey.GetID()));\n+                    if (std::optional<CKey> key = desc_spkm->GetKey(xpub.pubkey.GetID())) {\n+                        wallet_xprvs[xpub] = CExtKey(xpub, *key);\n+                    }\n+                }\n+            }\n+\n+            UniValue response(UniValue::VARR);\n+            for (const auto& [xpub, descs] : wallet_xpubs) {\n+                bool has_xprv = false;\n+                UniValue descriptors(UniValue::VARR);\n+                for (const auto& [desc, active, has_priv] : descs) {\n+                    UniValue d(UniValue::VOBJ);\n+                    d.pushKV(\"desc\", std::move(desc));\n+                    d.pushKV(\"active\", active);\n+                    has_xprv |= has_priv;\n+\n+                    descriptors.push_back(std::move(d));\n+                }\n+                UniValue xpub_info(UniValue::VOBJ);\n+                xpub_info.pushKV(\"xpub\", EncodeExtPubKey(xpub));\n+                xpub_info.pushKV(\"has_private\", has_xprv);\n+                if (priv) {\n+                    xpub_info.pushKV(\"xprv\", EncodeExtKey(wallet_xprvs.at(xpub)));\n+                }\n+                xpub_info.pushKV(\"descriptors\", std::move(descriptors));\n+\n+                response.push_back(std::move(xpub_info));\n+            }\n+\n+            return response;\n+        },\n+    };\n+}\n+\n+static RPCHelpMan createwalletdescriptor()",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 109,
      "original_position": 109,
      "commit_id": "c10150b6150083440af4f0aa1110c8aa99ba2dc8",
      "original_commit_id": "e0ad5bce210681c40eebd892bcfbca25c1c63136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since this PR is adding the `createwalletdescriptor` method, maybe this is a good place to list some ways it could be extended in the future:\r\n\r\n- Probably it would be good not to require wallet to be unlocked when dealing with public keys. Currently the specified `hdkey` is unencrypted and reencrypted, but this shouldn't be necessary because the key is already in the wallet. (The only reason this seems to happen now is to copy the key, because internally we store keys in a slightly denormalized format, once per descriptor.)\r\n\r\n- It would be nice if `hdkey` parameter accepted not just public hd keys, but also private hd keys, and a \"generate\" value in a blank wallet so users don't need to chain together multiple commands to accomplish simple tasks, and so we only need two RPC methods which add descriptors and keys to the wallet: `importdescriptors` and `createwalletdescriptor`, without a third `addhdkey` method. Examples:\r\n  ```shell\r\n  # In a blank wallet, generate an hd key and use it in a new descriptor\r\n  createwalletdescriptor bech32 generate\r\n\r\n   # In a blank wallet, import an hd key and use it in a new descriptor\r\n  createwalletdescriptor bech32 xprv...\r\n  ```\r\n\r\n- It sounds like we want to discourage having multiple hd keys per wallet, and encourage having separate wallets instead. But if we did want to allow these, we could add a `force` option to allow creating descriptors with new hd keys even when existing hd keys are present. We could also allow a `rotate` option to allow this and additionally set descriptors using old keys to be inactive.\r\n\r\n- The `hdkey` parameter could accept hd master keys in different formats, for example as seed keys like the current `sethdseed` method, or seed hex strings like [#29054](https://github.com/bitcoin/bitcoin/pull/29054/commits/840516148cdb6ed6ce956d2d2c96a1cacc12bc85), or seed shares like [#27351](https://github.com/bitcoin/bitcoin/pull/27351/commits/e29e656cbdd7e230cd5d04910e93c1cc562d593b).\r\n\r\n- It would be nice if `type` parameter accepted a \"defaults\" value to set up descriptors for all default output types. Examples:\r\n  ```shell\r\n  # In a blank wallet, generate an hd key and generate default set of descriptors\r\n  createwalletdescriptor defaults generate\r\n\r\n  # Add missing descriptors to an existing wallet. For example, upgrade\r\n  # an older wallet not supporting bech32m to support it.\r\n  createwalletdescriptor defaults\r\n  ```\r\n\r\n- To support multisig, `type` parameter could accept an \"hdkey\" value to generate an [unused](https://github.com/bitcoin/bitcoin/pull/29136#issuecomment-1868202696) hd key in a blank wallet:\r\n  ```shell\r\n  # In a blank wallet, generate an hd key in an unused descriptor and output unused(xpub...)\r\n  createwalletdescriptor hdkey generate\r\n\r\n  # Alternately, import an unused key\r\n  createwalletdescriptor hdkey xprv...\r\n\r\n  # Import multisig descriptor with wallet public keys\r\n  importdescriptors [...]\r\n  ```\r\n\r\n- Maybe in the future to make multisig setup easier, `type` parameter could accept a \"multisig\" value and additional options to make it easier to create the descriptor using the right keys without doing extra work or using an outside tool.\r\n\r\n- Not recommending it, but I could imagine `type` and `hdkey` parameters being extended to accept other values in the future. For example maybe with [#27351](https://github.com/bitcoin/bitcoin/pull/27351), a \"codex32\" type could be useful. And if a wallet didn't have the same hdkey for every output type, it might be useful to be able specify \"default' for the hdkey parameter to use the hd key from the default output type, like `getnewaddress`.\r\n\r\n- It could sense for `createwalletdescriptor` and `importdescriptors` to have other options in common. For example, it might make sense for `createwalletdescriptor` to accept a `timestamp` option when adding a descriptor with an existing hdkey, to rescan for transactions with the new descriptor.  In general `createwalletdescriptor` could be a higher level alternative to `importdescriptors` that is less flexible but easier to use for common tasks.",
      "created_at": "2023-12-23T13:45:20Z",
      "updated_at": "2023-12-26T14:10:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29130#discussion_r1435607572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435607572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29130"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 921,
      "original_line": 921,
      "side": "RIGHT"
    }
  ]
}