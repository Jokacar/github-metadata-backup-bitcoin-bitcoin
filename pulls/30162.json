{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162",
    "id": 1885183569,
    "node_id": "PR_kwDOABII585wXZ5R",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30162",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30162.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30162.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30162",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30162/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
    "number": 30162,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: MiniWallet: respect passed feerate for padded txs (using `target_weight`)",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "MiniWallet allows to create padded transactions that are equal or slightly above a certain `target_weight` (first introduced in PR #25379, commit 1d6b438ef0ccd05e1522ac38b44f847c1d93e72f), which can be useful especially for mempool-related tests, e.g. for policy limit checks or scenarios to trigger mempool eviction. Currently the `target_weight` parameter doesn't play together with `fee_rate` though, as the fee calculation is incorrectly based on the tx vsize before the padding output is added, so the fee-rate is consequently far off. This means users are forced to pass an absolute fee, which can be quite inconvenient and leads to lots of duplicated \"calculate absolute fee from fee-rate and vsize\" code with the pattern `fee = (feerate / 1000) * (weight // 4)` on the call-sites.\r\n\r\nThis PR first improves the tx padding itself to be more accurate, adds a functional test for it, and fixes the `fee_rate` treatment for the `{create,send}_self_transfer` methods. (Next step would be to enable this also for the `_self_transfer_multi` methods, but those currently don't even offer a `fee_rate` parameter). Finally, the ability to pass both `target_weight` and `fee_rate` is used in the `mempool_limit.py` functional test. There might be more use-cases in other tests, that could be done in a follow-up.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-05-23T18:09:33Z",
    "updated_at": "2024-05-30T08:16:00Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "b8e9a9c935574a4d8100050b6ae9fb48725f9eb2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "theStack:202405-test-MiniWallet_target_weight_improvements",
      "ref": "202405-test-MiniWallet_target_weight_improvements",
      "sha": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 204970720,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDQ5NzA3MjA=",
        "name": "bitcoin",
        "full_name": "theStack/bitcoin",
        "owner": {
          "login": "theStack",
          "id": 91535,
          "node_id": "MDQ6VXNlcjkxNTM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theStack",
          "html_url": "https://github.com/theStack",
          "followers_url": "https://api.github.com/users/theStack/followers",
          "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
          "organizations_url": "https://api.github.com/users/theStack/orgs",
          "repos_url": "https://api.github.com/users/theStack/repos",
          "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theStack/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theStack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theStack/bitcoin",
        "archive_url": "https://api.github.com/repos/theStack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theStack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theStack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theStack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theStack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theStack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theStack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theStack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theStack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theStack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theStack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theStack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theStack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theStack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theStack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theStack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theStack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theStack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theStack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theStack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theStack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theStack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theStack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theStack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theStack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theStack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theStack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theStack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theStack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theStack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theStack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theStack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theStack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theStack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theStack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theStack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theStack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theStack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theStack/bitcoin/hooks",
        "svn_url": "https://github.com/theStack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 241808,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-23T22:39:03Z",
        "created_at": "2019-08-28T15:59:29Z",
        "updated_at": "2022-12-07T18:05:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "413844f1c2a3d8f7cfef822f348f26df488b03c7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35436,
        "stargazers_count": 76584,
        "watchers_count": 76584,
        "size": 259940,
        "default_branch": "master",
        "open_issues_count": 689,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-30T08:56:28Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-05-30T08:53:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 77,
    "deletions": 17,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 15,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2127763294,
      "node_id": "IC_kwDOABII585-0xde",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2127763294",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:09:37Z",
      "updated_at": "2024-05-29T18:01:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30162).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/30162#pullrequestreview-2077346481), [rkrux](https://github.com/bitcoin/bitcoin/pull/30162#pullrequestreview-2080359105) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30157](https://github.com/bitcoin/bitcoin/pull/30157) (Fee Estimation via Fee rate Forecasters by ismaelsadeeq)\n* [#30076](https://github.com/bitcoin/bitcoin/pull/30076) (test: fix MiniWallet script-path spend (missing parity bit in leaf version) by theStack)\n* [#15218](https://github.com/bitcoin/bitcoin/pull/15218) (validation: sync chainstate to disk after syncing to tip by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#issuecomment-2127763294",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30162"
    },
    {
      "event": "labeled",
      "id": 12913548708,
      "node_id": "LE_lADOABII586J5gtEzwAAAAMBtR2k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12913548708",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:09:39Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkZGE4MGI3NTllOWE1OGJmYWU5NDFlZjYyOWJlZTQzZGE3OTE1MmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dda80b759e9a58bfae941ef629bee43da79152d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0dda80b759e9a58bfae941ef629bee43da79152d",
      "tree": {
        "sha": "d96ceed2cae91c14872f977a1f55cf4d7d447d83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d96ceed2cae91c14872f977a1f55cf4d7d447d83"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef44726918c05e158246cb695ae358db603653e9",
          "sha": "ef44726918c05e158246cb695ae358db603653e9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ef44726918c05e158246cb695ae358db603653e9"
        }
      ],
      "message": "test: MiniWallet: fix tx padding (`target_weight`) for large sizes, improve accuracy",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T18:12:11Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T16:20:58Z"
      },
      "sha": "0dda80b759e9a58bfae941ef629bee43da79152d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12913598460,
      "node_id": "HRFPE_lADOABII586J5gtEzwAAAAMBtd_8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12913598460",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:14:14Z"
    },
    {
      "event": "labeled",
      "id": 12913599189,
      "node_id": "LE_lADOABII586J5gtEzwAAAAMBteLV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12913599189",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:14:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2127770598,
      "node_id": "IC_kwDOABII585-0zPm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2127770598",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:14:20Z",
      "updated_at": "2024-05-23T18:14:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/25345334548</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#issuecomment-2127770598",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30162"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3MmU1YTc0OTJiMGJlYjYwZTA5NmVmYzk2YzExMzkxYTg4Y2IzMjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/372e5a7492b0beb60e096efc96c11391a88cb321",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/372e5a7492b0beb60e096efc96c11391a88cb321",
      "tree": {
        "sha": "a1790683b851acbda3db70f51e4d9e96ea44add1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1790683b851acbda3db70f51e4d9e96ea44add1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dda80b759e9a58bfae941ef629bee43da79152d",
          "sha": "0dda80b759e9a58bfae941ef629bee43da79152d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dda80b759e9a58bfae941ef629bee43da79152d"
        }
      ],
      "message": "test: add framework functional test for MiniWallet's tx padding",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T18:17:12Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T16:55:33Z"
      },
      "sha": "372e5a7492b0beb60e096efc96c11391a88cb321"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkzNTI3YjgyZTcwYzhlMTlkNzMxN2NlNTI4N2IwZWUyYTAwMjBmMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "tree": {
        "sha": "729ca35758ad1c641f0bc397766cb4b456d892a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/729ca35758ad1c641f0bc397766cb4b456d892a6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/372e5a7492b0beb60e096efc96c11391a88cb321",
          "sha": "372e5a7492b0beb60e096efc96c11391a88cb321",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/372e5a7492b0beb60e096efc96c11391a88cb321"
        }
      ],
      "message": "test: MiniWallet: respect fee_rate for target_weight, use in mempool_limit.py",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T18:17:15Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-05-23T17:38:32Z"
      },
      "sha": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12913629829,
      "node_id": "HRFPE_lADOABII586J5gtEzwAAAAMBtlqF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12913629829",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T18:17:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T21:27:15Z",
      "updated_at": "2024-05-23T21:27:15Z",
      "source": {
        "issue": {
          "id": 2288582058,
          "node_id": "PR_kwDOABII585vCbgF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30076",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30076/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30076/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30076/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/30076",
          "number": 30076,
          "state": "open",
          "state_reason": null,
          "title": "test: fix MiniWallet script-path spend (missing parity bit in leaf version)",
          "body": "This PR fixes a dormant bug in MiniWallet that exists since support for P2TR was initially added in #23371 (see commit 041abfebe49ae5e3e882c00cc5caea1365a27a49).\r\n    \r\nIn the course of spending the output, the leaf version byte of the control block in the witness stack doesn't set the parity bit, i.e. we were so far just lucky that the used combinations of relevant data (internal pubkey, leaf script / version) didn't result in a tweaked pubkey with odd y-parity. If that was the case, we'd get the following validation error:\r\n\r\n`mandatory-script-verify-flag-failed (Witness program hash mismatch) (-26)`\r\n    \r\nSince MiniWallets can now optionally be tagged (#29939), resulting in different internal pubkeys, the issue is more prevalent now. Fix it by passing the parity bit, as specified in BIP341.\r\n\r\nCan be tested with the following patch (fails on master, succeeds on PR):\r\n```diff\r\ndiff --git a/test/functional/test_framework/mempool_util.py b/test/functional/test_framework/mempool_util.py\r\nindex 148cc935ed..7ebe858681 100644\r\n--- a/test/functional/test_framework/mempool_util.py\r\n+++ b/test/functional/test_framework/mempool_util.py\r\n@@ -42,7 +42,7 @@ def fill_mempool(test_framework, node):\r\n     # Generate UTXOs to flood the mempool\r\n     # 1 to create a tx initially that will be evicted from the mempool later\r\n     # 75 transactions each with a fee rate higher than the previous one\r\n-    ephemeral_miniwallet = MiniWallet(node, tag_name=\"fill_mempool_ephemeral_wallet\")\r\n+    ephemeral_miniwallet = MiniWallet(node, tag_name=\"fill_mempool_ephemeral_wallet3\")\r\n     test_framework.generate(ephemeral_miniwallet, 1 + num_of_batches * tx_batch_size)\r\n \r\n     # Mine enough blocks so that the UTXOs are allowed to be spent\r\n```",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30076",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/30076",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/30076.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/30076.patch"
          },
          "created_at": "2024-05-09T22:52:38Z",
          "updated_at": "2024-05-23T21:27:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 12917354162,
      "node_id": "UNLE_lADOABII586J5gtEzwAAAAMB7y6y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12917354162",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T01:59:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2077346481,
      "node_id": "PRR_kwDOABII58570cqx",
      "url": null,
      "actor": null,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK!",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#pullrequestreview-2077346481",
      "submitted_at": "2024-05-24T16:15:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T17:57:10Z",
      "updated_at": "2024-05-24T17:57:10Z",
      "source": {
        "issue": {
          "id": 401128377,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2MTI4MDU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15218",
          "number": 15218,
          "state": "open",
          "state_reason": null,
          "title": "validation: sync chainstate to disk after syncing to tip",
          "body": "When finishing syncing the chainstate to tip, the chainstate is not persisted to disk until 24 hours after startup. This can cause [an issue where the unpersisted chainstate must be resynced if bitcoind is not cleanly shut down](https://github.com/bitcoin/bitcoin/issues/11600#issue-271011834). If using a large enough `dbcache`, it's possible the entire chainstate from genesis would have to be resynced.\r\n\r\nThis fixes the issue by persisting the chainstate to disk right after syncing to tip, but not clearing the utxo cache (using the `Sync` method introduced in https://github.com/bitcoin/bitcoin/pull/17487). This happens by scheduling a call to the new function `SyncCoinsTipAfterChainSync` every 30 seconds. This function checks that the node is out of IBD, and then checks if no new block has been added since the last call. Finally, it checks that there are no blocks currently being downloaded by peers. If all these conditions are met, then the chainstate is persisted and the function is no longer scheduled.\r\n\r\nResolves #11600.",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15218",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15218",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15218.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15218.patch"
          },
          "created_at": "2019-01-20T19:04:17Z",
          "updated_at": "2024-05-29T17:23:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2080359105,
      "node_id": "PRR_kwDOABII5857_8LB",
      "url": null,
      "actor": null,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Concept ACK [93527b8](https://github.com/bitcoin/bitcoin/pull/30162/commits/93527b82e70c8e19d7317ce5287b0ee2a0020f1b)\r\n\r\nMake is successful, so are all functional tests.\r\n\r\nI am in support of the changes in this PR because it fixes the tx fee calculation and improves the caller code in various places. Asked few questions and provided suggestion, would like to take another look later and provide ACK.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#pullrequestreview-2080359105",
      "submitted_at": "2024-05-27T09:04:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T18:07:45Z",
      "updated_at": "2024-05-29T18:07:45Z",
      "source": {
        "issue": {
          "id": 2312700303,
          "node_id": "PR_kwDOABII585wUc8Y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30157",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30157/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30157/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30157/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/30157",
          "number": 30157,
          "state": "open",
          "state_reason": null,
          "title": "Fee Estimation via Fee rate Forecasters",
          "body": "### This PR aims at improving Bitcoin Core fee estimation\r\n\r\n\r\n### The objectives of this improvement are to:\r\n\r\n- Reduce overestimation done by the current `CBlockPolicyEstimator`\r\n- Make the fee estimator aware of the state of the mempool, allowing it to respond to changing conditions immediately.\r\n- Empower node users to be self-sovereign and use their node's estimates, as is now, the majority rely on third parties for fee estimation.\r\n- Simplify the process of adding new fee estimation strategies in the future.\r\n\r\nThe PR creates a new `FeeEstimator` class which is responsible for getting estimates from one or more subscribed `Forcaster`'s.\r\n\r\nA `Forcaster` will register with the `FeeEstimator` as being able to provide estimates, and when an estimate is requested, should return two fee rate estimates (high and low) and a confidence level.\r\n\r\nThe estimator will then take (currently undecided):\r\n1. the lowest estimated rate, or\r\n1. the weighted average of all the estimated rates\r\n\r\n...and return the two 'high' and 'low' estimations to the user.\r\n\r\nThe `FeeEstimator` also owns access to the legacy estimator, accessible via a pointer.\r\n\r\nThis PR deliberately does **not** try to modify existing fee estimation code, but instead uses new modules with cleaner seperation. This will make new code and interfaces much easier to introduce, and also make it easier to, if desired in the future, drop legacy estimation code.\r\n\r\n### Currently, this PR implements two forecasters:\r\n\r\n1. Mempool-based forecaster (`MemPoolForecaster`): It estimates fees simply by generating a block template from the node's mempool and returns the 25th and 50th percentile mining scores as low-priority and high-priority fee estimates, respectively.\r\n1. Last 6 Blocks forecaster (`BlockForecaster`): Uses the transactions from the previous six blocks _which were also seen in the node's mempool_, to make an estimate.\r\n\r\n    It listens to the validation interface notifications for removed mempool transactions, linearizes the transactions using a mini miner, and saves the 25th and 50th percentile mining scores. When estimating fees, it averages the mining scores of the percentiles from the last six mined blocks.\r\n    \r\n    NB. As this **excludes** transactions that never entered the node's mempool, it's likely to undershoot slightly\r\n\r\nThese two forecasters both estimate fees for (1, 2) block confirmation targets, referred to as \"as soon as possible (ASAP)\" fee rate estimates.\r\n\r\nFor both forcasters use of RBF is strongly recommended in order that transactions can be fee-bumped if desired.\r\n\r\n### Next steps:\r\n\r\n- Give some statistics of estimates \"missing the block\" (~percentage of estimates below the 5th percentile mining score of the confirmed block) and \"over paying\" (~percentage of estimates above the 25th 50th and 75th percentiles mining score) \r\n\r\n- Extend the feature to the wallet; currently it's only exposed in an RPC `estimatefee`.\r\n- Update forecasters to return confidence levels in their estimates.\r\n\r\n### Confidence levels\r\n\r\nConfidence levels are determined by heuristics.\r\n\r\nFor the mempool-based forecaster:\r\n\r\n- Suspected high mining score transactions should be confirmed but aren't.\r\n- Most transactions in previously mined blocks were in our node's mempool.\r\n- High mining score mempool transactions are confirmed.\r\n\r\nFor the last 6 blocks forecaster:\r\n\r\n- Presence of empty blocks in the last 6 blocks.\r\n- Most of the last 6 blocks' transactions were seen in the node's mempool or not.\r\n\r\nThe fee estimator  will select the fee rate from the forecasters based on confidence level instead of just taking the lowest fee rate estimate.\r\n\r\n\r\n### How does this fit in with `CBlockPolicyEstimator`?\r\n\r\nThis fee estimator owns the legacy `CBlockPolicyEstimator` and does not change any of its interfaces. The wallet still uses `estimatesmartfee`, and RPCs also access it through the Fee Estimator.\r\nHowever, this will change when we switch to using estimates from `GetFeeEstimateFromForecasters`, which works much better than the `estimatesmartfee` in (1, 2) confirmation target scenarios.\r\n\r\nMoreover, when we have another forecaster that supports confirmation targets beyond (1, 2) and works better than `estimatesmartfee`, we will eventually phase out `CBlockPolicyEstimator` as the new Fee Estimator module makes it easy to do so.\r\n\r\nThis PR addresses two open issues and has been requested by users in the past.\r\n\r\n#27995\r\n#30009\r\n\r\n### FAQ\r\n\r\n1. **Will miners broadcast high fee rate transactions, and then evict them with a conflicting transaction in the next block, trick users of this fee estimator into making transactions with high fees?**\r\n   https://delvingbitcoin.org/t/mempool-based-fee-estimation-on-bitcoin-core/703/6?u=ismaelsadeeq\r\n\r\n   This PR addresses this concern by ensuring that the fee estimate does not surge immediately whenever this happens the mempool based forecaster estimate will be higher than last 6 block forecaster estimate. As such the last six blocks forecaster estimate will be returned, preventing users to be victims of this attack.\r\n\r\n2. **In times of high confirmation times or high block space demand, fee estimates tend to rise. If the mempool-based forecaster estimate rises, the fee estimator will fall back to the last six blocks fee estimate, if it's low, will that make transactions constructed with the estimate get stuck in the mempool?**\r\nThe ASAP fee estimate provides an estimate for transactions to confirm in the next one or two blocks. During periods of high confirmation times, fee rates rise due to congestion. Once a block is mined, the mempool clears high mining score transactions, making room for lower fee rate transactions. If congestion recurs and the transaction is time-sensitive, users can safely fee bump assuming it's an RBF-enabled transaction.\r\nIn times of immediate high block demand, if the mempool-based fee estimate surges while the last six blocks fee estimate is low, users can fee bump their transactions if they take longer to confirm. As more blocks are mined, the last six blocks forecaster will adjust and reflect the higher fee rates. When demand decreases, the mempool forecaster will immediately respond to the new conditions by providing a lower fee estimate and the fee estimator will return it instead.\r\n\r\n3. **Currently, getting a block template is expensive. How do you tackle that in the mempool-based forecaster?**\r\nThe forecaster cache the recently generated fee rate estimates and only generate a new block template when the time delta between the recent estimate and the current time exceeds 30 seconds.\r\n\r\n---\r\nThis is a collaborative work with @willcl-ark and a result of collecting insight from other contributors.\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30157",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/30157",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/30157.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/30157.patch"
          },
          "created_at": "2024-05-23T11:44:09Z",
          "updated_at": "2024-05-29T23:50:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2087576041,
      "node_id": "PRR_kwDOABII5858beHp",
      "url": null,
      "actor": null,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#pullrequestreview-2087576041",
      "submitted_at": "2024-05-30T08:16:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615703491",
      "pull_request_review_id": 2080359105,
      "id": 1615703491,
      "node_id": "PRRC_kwDOABII585gTa3D",
      "diff_hunk": "@@ -119,13 +121,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4\n-        tx.vout[-1].scriptPubKey = CScript([OP_RETURN, b'a' * dummy_vbytes])",
      "path": "test/functional/test_framework/wallet.py",
      "position": 28,
      "original_position": 20,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "0dda80b759e9a58bfae941ef629bee43da79152d",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the previous implementation, it seemed a little unusual that `b'a'` was added first, and then more padding was added later. The newer approach seems cleaner where padding is added only once.",
      "created_at": "2024-05-27T08:34:55Z",
      "updated_at": "2024-05-27T09:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615703491",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615703491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 122,
      "original_start_line": 122,
      "start_side": "LEFT",
      "line": 124,
      "original_line": 124,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615705400",
      "pull_request_review_id": 2080359105,
      "id": 1615705400,
      "node_id": "PRRC_kwDOABII585gTbU4",
      "diff_hunk": "@@ -119,13 +121,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4",
      "path": "test/functional/test_framework/wallet.py",
      "position": 27,
      "original_position": 19,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "0dda80b759e9a58bfae941ef629bee43da79152d",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Though it's older implementation, for my understanding, why is the actual weight more than the `target_weight`. Doesn't `target_weight` become a misnomer with this?",
      "created_at": "2024-05-27T08:36:27Z",
      "updated_at": "2024-05-27T09:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615705400",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615705400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615708591",
      "pull_request_review_id": 2080359105,
      "id": 1615708591,
      "node_id": "PRRC_kwDOABII585gTcGv",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test MiniWallet.\"\"\"\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_greater_than_or_equal,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+\n+class FeatureFrameworkMiniWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_tx_padding(self):\n+        \"\"\"Verify that MiniWallet's transaction padding (`target_weight` parameter)\n+           works accurately enough (i.e. at most 3 WUs higher) with all modes.\"\"\"\n+        for mode_name, wallet in self.wallets:\n+            self.log.info(f\"Test tx padding with MiniWallet mode {mode_name}...\")\n+            utxo = wallet.get_utxo(mark_as_spent=False)\n+            for target_weight in [1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 4000000,\n+                                  989,  2001, 4337, 13371, 23219, 49153, 102035, 223419, 3999989]:\n+                tx = wallet.create_self_transfer(utxo_to_spend=utxo, target_weight=target_weight)[\"tx\"]\n+                self.log.debug(f\"-> target weight: {target_weight}, actual weight: {tx.get_weight()}\")\n+                assert_greater_than_or_equal(tx.get_weight(), target_weight)\n+                assert_greater_than_or_equal(target_weight + 3, tx.get_weight())",
      "path": "test/functional/feature_framework_miniwallet.py",
      "position": 32,
      "original_position": 32,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "372e5a7492b0beb60e096efc96c11391a88cb321",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Non blocking nit: This seems to be testing for a specific piece and if you don't anticipate it to be updated later, WDYT about either adding this test in an existing functional test, or adding this in the unit tests of the functional test framework?",
      "created_at": "2024-05-27T08:38:59Z",
      "updated_at": "2024-05-27T09:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615708591",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615708591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 31,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615710140",
      "pull_request_review_id": 2080359105,
      "id": 1615710140,
      "node_id": "PRRC_kwDOABII585gTce8",
      "diff_hunk": "@@ -370,6 +371,10 @@ def create_self_transfer(\n             vsize = Decimal(168)  # P2PK (73 bytes scriptSig + 35 bytes scriptPubKey + 60 bytes other)\n         else:\n             assert False\n+        if target_weight and not fee:  # respect fee_rate if target weight is passed",
      "path": "test/functional/test_framework/wallet.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should there also be an assertion disallowing passing both `target_weight` and `fee`?",
      "created_at": "2024-05-27T08:40:17Z",
      "updated_at": "2024-05-27T09:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615710140",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615710140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 374,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615711645",
      "pull_request_review_id": 2080359105,
      "id": 1615711645,
      "node_id": "PRRC_kwDOABII585gTc2d",
      "diff_hunk": "@@ -370,6 +371,10 @@ def create_self_transfer(\n             vsize = Decimal(168)  # P2PK (73 bytes scriptSig + 35 bytes scriptPubKey + 60 bytes other)\n         else:\n             assert False\n+        if target_weight and not fee:  # respect fee_rate if target weight is passed\n+            # the actual weight might be off by 3 WUs, so calculate based on that (see self._bulk_tx)",
      "path": "test/functional/test_framework/wallet.py",
      "position": 13,
      "original_position": 13,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As per the code in `_bulk_tx`, the actual weight is indeed off by 3 WUs, consider getting rid of `might be` here, it adds a bit of uncertainty imo.",
      "created_at": "2024-05-27T08:41:21Z",
      "updated_at": "2024-05-27T09:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615711645",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615711645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 375,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615712714",
      "pull_request_review_id": 2080359105,
      "id": 1615712714,
      "node_id": "PRRC_kwDOABII585gTdHK",
      "diff_hunk": "@@ -59,7 +59,7 @@ def test_rbf_carveout_disallowed(self):\n         mempoolmin_feerate = node.getmempoolinfo()[\"mempoolminfee\"]\n         tx_A = self.wallet.send_self_transfer(\n             from_node=node,\n-            fee=(mempoolmin_feerate / 1000) * (A_weight // 4) + Decimal('0.000001'),\n+            fee_rate=mempoolmin_feerate,",
      "path": "test/functional/mempool_limit.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice to see the removal of many of these repetitive fee calculation code!",
      "created_at": "2024-05-27T08:42:16Z",
      "updated_at": "2024-05-27T09:04:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615712714",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615712714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 62,
      "original_start_line": 62,
      "start_side": "LEFT",
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615734654",
      "pull_request_review_id": 2080359105,
      "id": 1615734654,
      "node_id": "PRRC_kwDOABII585gTid-",
      "diff_hunk": "@@ -314,18 +314,20 @@ def run_test(self):\n         target_weight_each = 200000\n         assert_greater_than(target_weight_each * 2, node.getmempoolinfo()[\"maxmempool\"] - node.getmempoolinfo()[\"bytes\"])\n         # Should be a true CPFP: parent's feerate is just below mempool min feerate\n-        parent_fee = (mempoolmin_feerate / 1000) * (target_weight_each // 4) - Decimal(\"0.00001\")\n+        parent_feerate = mempoolmin_feerate - Decimal(\"0.000001\")  # 0.1 sats/vbyte below min feerate",
      "path": "test/functional/mempool_limit.py",
      "position": 46,
      "original_position": 46,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The previous implementation is 10^-5, and the newer one is 10^-6.\r\nIMO, it's worth creating it a constant with an expressive name to make reading this piece easier.",
      "created_at": "2024-05-27T08:58:59Z",
      "updated_at": "2024-05-27T09:04:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615734654",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615734654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 317,
      "original_start_line": 317,
      "start_side": "LEFT",
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615736403",
      "pull_request_review_id": 2080359105,
      "id": 1615736403,
      "node_id": "PRRC_kwDOABII585gTi5T",
      "diff_hunk": "@@ -314,18 +314,20 @@ def run_test(self):\n         target_weight_each = 200000\n         assert_greater_than(target_weight_each * 2, node.getmempoolinfo()[\"maxmempool\"] - node.getmempoolinfo()[\"bytes\"])\n         # Should be a true CPFP: parent's feerate is just below mempool min feerate\n-        parent_fee = (mempoolmin_feerate / 1000) * (target_weight_each // 4) - Decimal(\"0.00001\")\n+        parent_feerate = mempoolmin_feerate - Decimal(\"0.000001\")  # 0.1 sats/vbyte below min feerate\n         # Parent + child is above mempool minimum feerate\n-        child_fee = (worst_feerate_btcvb) * (target_weight_each // 4) - Decimal(\"0.00001\")\n+        child_feerate = (worst_feerate_btcvb * 1000) - Decimal(\"0.000001\")  # 0.1 sats/vbyte below worst feerate",
      "path": "test/functional/mempool_limit.py",
      "position": 49,
      "original_position": 49,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Preference style: Although this is not a fresh test, but IMHO it makes it far easier for the reviewer to read when the variable name contains the unit as well such as `child_feerate_satvb` or `child_fee_sat`.",
      "created_at": "2024-05-27T09:00:16Z",
      "updated_at": "2024-05-27T09:04:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615736403",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615736403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 319,
      "original_start_line": 319,
      "start_side": "LEFT",
      "line": 319,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615739344",
      "pull_request_review_id": 2080359105,
      "id": 1615739344,
      "node_id": "PRRC_kwDOABII585gTjnQ",
      "diff_hunk": "@@ -119,13 +121,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4\n-        tx.vout[-1].scriptPubKey = CScript([OP_RETURN, b'a' * dummy_vbytes])\n-        # Lower bound should always be off by at most 3\n+        # compensate for the compact-size encoded script length\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1",
      "path": "test/functional/test_framework/wallet.py",
      "position": 31,
      "original_position": 23,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "0dda80b759e9a58bfae941ef629bee43da79152d",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice catch here that fixes the calculation!",
      "created_at": "2024-05-27T09:02:32Z",
      "updated_at": "2024-05-27T09:04:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1615739344",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1615739344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616064751",
      "pull_request_review_id": 2080944224,
      "id": 1616064751,
      "node_id": "PRRC_kwDOABII585gUzDv",
      "diff_hunk": "@@ -119,13 +121,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4",
      "path": "test/functional/test_framework/wallet.py",
      "position": 27,
      "original_position": 19,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "0dda80b759e9a58bfae941ef629bee43da79152d",
      "in_reply_to_id": 1615705400,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Each byte in the output script counts as four weight units, so with the padding method used here, we can only ever increase the weight by multiples of four. If the weight of the unpadded tx is not a multiple of four already (i.e. tx.get_weight() % 4 != 0), it will also not be after the padding and the best we can do is to be not more off than 3 WUs in the worst case.\r\n\r\nIt would be nice if we could somehow do exact padding with weight unit precision, but to my knowledge there is no general way to add extra witness data to transactions without making them non-standard. (For example, the test feature_fastprune.py [uses an annex in the witness for padding](https://github.com/bitcoin/bitcoin/blob/327f08bb0cd91a22249395adeb34549e3c86ca76/test/functional/feature_fastprune.py#L22), but that is only consensus-valid, [not policy-valid](https://github.com/bitcoin/bitcoin/blob/327f08bb0cd91a22249395adeb34549e3c86ca76/src/policy/policy.cpp#L268-L271)).",
      "created_at": "2024-05-27T13:35:47Z",
      "updated_at": "2024-05-27T13:35:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1616064751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616064751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616064960",
      "pull_request_review_id": 2080944602,
      "id": 1616064960,
      "node_id": "PRRC_kwDOABII585gUzHA",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test MiniWallet.\"\"\"\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_greater_than_or_equal,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n+\n+\n+class FeatureFrameworkMiniWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_tx_padding(self):\n+        \"\"\"Verify that MiniWallet's transaction padding (`target_weight` parameter)\n+           works accurately enough (i.e. at most 3 WUs higher) with all modes.\"\"\"\n+        for mode_name, wallet in self.wallets:\n+            self.log.info(f\"Test tx padding with MiniWallet mode {mode_name}...\")\n+            utxo = wallet.get_utxo(mark_as_spent=False)\n+            for target_weight in [1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 4000000,\n+                                  989,  2001, 4337, 13371, 23219, 49153, 102035, 223419, 3999989]:\n+                tx = wallet.create_self_transfer(utxo_to_spend=utxo, target_weight=target_weight)[\"tx\"]\n+                self.log.debug(f\"-> target weight: {target_weight}, actual weight: {tx.get_weight()}\")\n+                assert_greater_than_or_equal(tx.get_weight(), target_weight)\n+                assert_greater_than_or_equal(target_weight + 3, tx.get_weight())",
      "path": "test/functional/feature_framework_miniwallet.py",
      "position": 32,
      "original_position": 32,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "372e5a7492b0beb60e096efc96c11391a88cb321",
      "in_reply_to_id": 1615708591,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We need a running node to create a MiniWallet instance, so unfortunately doing these checks in an unit test wouldn't work. I considered putting it into an existing functional test but wouldn't know which one to pick, so creating a new MiniWallet-specific test where features can tested independently seemed to make the most sense.",
      "created_at": "2024-05-27T13:36:00Z",
      "updated_at": "2024-05-27T13:36:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1616064960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616064960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": 31,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616065138",
      "pull_request_review_id": 2080944925,
      "id": 1616065138,
      "node_id": "PRRC_kwDOABII585gUzJy",
      "diff_hunk": "@@ -370,6 +371,10 @@ def create_self_transfer(\n             vsize = Decimal(168)  # P2PK (73 bytes scriptSig + 35 bytes scriptPubKey + 60 bytes other)\n         else:\n             assert False\n+        if target_weight and not fee:  # respect fee_rate if target weight is passed",
      "path": "test/functional/test_framework/wallet.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": 1615710140,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Passing `target_weight` with an absolute `fee` should still work fine. There is arguably less reason now to do so as passing a `fee_rate` is likely more convenient for most use-cases, but I don't think we have to disallow padding txs with an absolute fee.",
      "created_at": "2024-05-27T13:36:10Z",
      "updated_at": "2024-05-27T13:36:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1616065138",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616065138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 374,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616065536",
      "pull_request_review_id": 2080945639,
      "id": 1616065536,
      "node_id": "PRRC_kwDOABII585gUzQA",
      "diff_hunk": "@@ -370,6 +371,10 @@ def create_self_transfer(\n             vsize = Decimal(168)  # P2PK (73 bytes scriptSig + 35 bytes scriptPubKey + 60 bytes other)\n         else:\n             assert False\n+        if target_weight and not fee:  # respect fee_rate if target weight is passed\n+            # the actual weight might be off by 3 WUs, so calculate based on that (see self._bulk_tx)",
      "path": "test/functional/test_framework/wallet.py",
      "position": 13,
      "original_position": 13,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": 1615711645,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The actual weight can be larger by at most 3 WUs, [see comment above](https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1616064751).",
      "created_at": "2024-05-27T13:36:34Z",
      "updated_at": "2024-05-27T13:36:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1616065536",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1616065536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 375,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620213384",
      "pull_request_review_id": 2087557101,
      "id": 1620213384,
      "node_id": "PRRC_kwDOABII585gkn6I",
      "diff_hunk": "@@ -119,13 +121,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4",
      "path": "test/functional/test_framework/wallet.py",
      "position": 27,
      "original_position": 19,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "0dda80b759e9a58bfae941ef629bee43da79152d",
      "in_reply_to_id": 1615705400,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm from the way I understand this, addition of 3 is helpful in the case when `(target_weight - tx.get_weight() < 4` because otherwise the floor division by 4 will cause no padding to be added and the transaction will end up being same in vbytes. Is this the right way to understand this?\r\n\r\nTying this to an earlier comment of mine - if `target_weight` had been called `target_weight_wu`, the code would become more self explanatory.\r\n\r\nI feel this is worth adding as a comment for reference in the code, and thanks for the explanation!",
      "created_at": "2024-05-30T08:10:36Z",
      "updated_at": "2024-05-30T08:10:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1620213384",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620213384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620225868",
      "pull_request_review_id": 2087576041,
      "id": 1620225868,
      "node_id": "PRRC_kwDOABII585gkq9M",
      "diff_hunk": "@@ -119,13 +122,14 @@ def _bulk_tx(self, tx, target_weight):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target weight (or higher).\n         returns the tx\n         \"\"\"\n-        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, b'a'])))\n+        tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n         dummy_vbytes = (target_weight - tx.get_weight() + 3) // 4\n-        tx.vout[-1].scriptPubKey = CScript([OP_RETURN, b'a' * dummy_vbytes])\n-        # Lower bound should always be off by at most 3\n+        # compensate for the compact-size encoded script length\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1",
      "path": "test/functional/test_framework/wallet.py",
      "position": 31,
      "original_position": 31,
      "commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "original_commit_id": "93527b82e70c8e19d7317ce5287b0ee2a0020f1b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've been trying to think why 1 is subtracted here, but could not come up with a thorough reason. Is it somehow related to excluding the already serialised length of the output script before padding?",
      "created_at": "2024-05-30T08:16:00Z",
      "updated_at": "2024-05-30T08:16:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30162#discussion_r1620225868",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620225868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30162"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    }
  ]
}