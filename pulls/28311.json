{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311",
    "id": 1483797808,
    "node_id": "PR_kwDOABII585YcPUw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28311",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28311.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28311.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
    "number": 28311,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[WIP] BIP300 (Drivechains) consensus-level logic",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a (rough draft) clean rewrite of BIP300 (Drivechain) consensus-level code.\r\n\r\nInstead of a separate sidechain database (which may be prone to hard-to-review/test consistency issues), instead the unusable 8 MSB of the UTXO index are reserved for non-UTXO database entries, and the existing UTXO db and caching layer is shared. This can be refactored in the future, but I think it is the cleanest and most reviewable approach initially - open to other ideas, though. There's also some ugliness in the undo data to handle restoring the new data, but it's abstracted and shouldn't be too hard to reason about.\r\n\r\nUsing these new primitives, Drivechains can be reimplemented with a UTXO-like model. Note that there is zero activation logic in the current PR: the protocol changes are *always* active. Therefore, this will *not* work (at least not safely) on Bitcoin today, and cannot be deployed without significant additional changes to handle an activation.\r\n\r\nA new `SERIALIZE_TRANSACTION_FOR_WEIGHT` serialization flag is also added, that is meant only for weight counting. This allows for adjusting weight (upward) to fit additional resource requirements by new functionality. In this case, several Drivechain \"messages\" are expected to have a larger burden than their `OP_RETURN` encoding would otherwise weigh. However, the specific adjustments are not implemented in this draft.\r\n\r\nAs a consensus change, this can only be implemented with community support. Many people seem to have opinions, but please keep them to other forums. Despite providing and continuing this implementation, I myself do not thereby endorse or otherwise comment on the proposal itself.\r\n\r\nTherefore, not looking for concept ACKs/NACKs (ie, about Drivechains), just *Approach* ACKs / constructive criticism (ie, about *how* I'm implementing it).",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-22T01:17:13Z",
    "updated_at": "2023-08-30T15:56:44Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "8a508abd1f2cc66523bb6e835fb2e02d84c18824",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "luke-jr:bip300",
      "ref": "bip300",
      "sha": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 2514537,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNTE0NTM3",
        "name": "bitcoin",
        "full_name": "luke-jr/bitcoin",
        "owner": {
          "login": "luke-jr",
          "id": 1095675,
          "node_id": "MDQ6VXNlcjEwOTU2NzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/luke-jr",
          "html_url": "https://github.com/luke-jr",
          "followers_url": "https://api.github.com/users/luke-jr/followers",
          "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
          "organizations_url": "https://api.github.com/users/luke-jr/orgs",
          "repos_url": "https://api.github.com/users/luke-jr/repos",
          "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/luke-jr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/luke-jr/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/luke-jr/bitcoin",
        "archive_url": "https://api.github.com/repos/luke-jr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/luke-jr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/luke-jr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/luke-jr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/luke-jr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/luke-jr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/luke-jr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/luke-jr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/luke-jr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/luke-jr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/luke-jr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/luke-jr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/luke-jr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/luke-jr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/luke-jr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/luke-jr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/luke-jr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/luke-jr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/luke-jr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/luke-jr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/luke-jr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/luke-jr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/luke-jr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/luke-jr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/luke-jr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/luke-jr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/luke-jr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/luke-jr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/luke-jr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:luke-jr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/luke-jr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/luke-jr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/luke-jr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/luke-jr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/luke-jr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/luke-jr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/luke-jr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/luke-jr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/luke-jr/bitcoin/hooks",
        "svn_url": "https://github.com/luke-jr/bitcoin",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 21,
        "watchers_count": 21,
        "size": 260256,
        "default_branch": "readme",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-29T19:15:21Z",
        "created_at": "2011-10-04T20:22:23Z",
        "updated_at": "2023-08-27T17:15:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ded687334031f4790ef6a36b999fb30a79dcf7b3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35594,
        "stargazers_count": 71163,
        "watchers_count": 71163,
        "size": 238082,
        "default_branch": "master",
        "open_issues_count": 674,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-30T15:55:02Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-30T14:56:16Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 740,
    "deletions": 62,
    "changed_files": 23,
    "commits": 17,
    "review_comments": 11,
    "comments": 19
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlZTdmNmU2MTVlNTVmOTRjNmYxNDUzZWQ4YTdjZDZjMmMzMGM2MjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
      "tree": {
        "sha": "446baef2cd1b183ddc7424cd4eafcc64352c7791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/446baef2cd1b183ddc7424cd4eafcc64352c7791"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ded687334031f4790ef6a36b999fb30a79dcf7b3",
          "sha": "ded687334031f4790ef6a36b999fb30a79dcf7b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ded687334031f4790ef6a36b999fb30a79dcf7b3"
        }
      ],
      "message": "dbwrapper: Restore `CDBIterator::GetValueSize()`\n\nThis partially reverts commit fb38c6e21f064e23b63a46d15adb873029463cff.\nOriginal code written in 3499ce1e1ad87a86598d00b7124072c91ddad833.",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:47Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:47Z"
      },
      "sha": "7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjNmEyZTE0YjM4MDkwNmNlM2ViN2RiMjhhYzNlMWQwNWJmMGVjNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
      "tree": {
        "sha": "50c3127e9728a0286dc4d3ba8632622d745e058c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50c3127e9728a0286dc4d3ba8632622d745e058c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
          "sha": "7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623"
        }
      ],
      "message": "txdb: Support for flags which prevent opening with incompatible software",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-05-10T00:37:17Z"
      },
      "sha": "bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwYTUxZWJkZTQ5ZmIzN2NhNWJhYTNjZmQxMjliNWQ4YjBkYWI2MDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
      "tree": {
        "sha": "a9b204ac40babd7f758d946efbb31c5cb1fb7864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9b204ac40babd7f758d946efbb31c5cb1fb7864"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
          "sha": "bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c"
        }
      ],
      "message": "Hide COutPoint with n > 0x00ffffff from consensus/transaction handling\n\nThis should be safe since it is impossible for transactions to have more than ~0x0001c000 outputs.\n0xffffffff is used for the coinbase COutPoint n, but wouldn't be looked up in the coins db.",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-05-10T16:36:37Z"
      },
      "sha": "e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmMmMwMTIwN2YxYmExYmQ5MzQ5MmUzZDAwYjZlODQwMTVmMzYyNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df2c01207f1ba1bd93492e3d00b6e84015f36278",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df2c01207f1ba1bd93492e3d00b6e84015f36278",
      "tree": {
        "sha": "d926c0d4d19b6a2affa8405a0807e5f9d669c8a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d926c0d4d19b6a2affa8405a0807e5f9d669c8a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
          "sha": "e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605"
        }
      ],
      "message": "WIP Drivechain via UTXOs",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-10T22:54:43Z"
      },
      "sha": "df2c01207f1ba1bd93492e3d00b6e84015f36278"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjYTY5YzRhZmZlYjI2ZWU2ZjU5NmY5NmVkNTFiNjY3ZDA4Y2RmN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
      "tree": {
        "sha": "ae02a26e5b3362a4493e11c795ec45dc11da68d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae02a26e5b3362a4493e11c795ec45dc11da68d0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df2c01207f1ba1bd93492e3d00b6e84015f36278",
          "sha": "df2c01207f1ba1bd93492e3d00b6e84015f36278",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df2c01207f1ba1bd93492e3d00b6e84015f36278"
        }
      ],
      "message": "primitives/transaction: Implement CTxIn::SetNull",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:02:29Z"
      },
      "sha": "eca69c4affeb26ee6f596f96ed51b667d08cdf7f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0ZWI0NDRmNmJhNjMwZjBlZjAwOTk5OWI3MzI4MmM1MDY4ZWY0ZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
      "tree": {
        "sha": "6d54a4dc53521d71738a5983cbff9b574559f2a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d54a4dc53521d71738a5983cbff9b574559f2a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
          "sha": "eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eca69c4affeb26ee6f596f96ed51b667d08cdf7f"
        }
      ],
      "message": "Implement OP_DRIVECHAIN-based sidechain deposits/withdraws",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:03:28Z"
      },
      "sha": "d4eb444f6ba630f0ef009999b73282c5068ef4fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0OTNiMTVjYjA5NjM5Mzc4OTkzMmM3Y2EyMzcwZmU4Y2ZiMzEwZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2493b15cb096393789932c7ca2370fe8cfb310f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2493b15cb096393789932c7ca2370fe8cfb310f3",
      "tree": {
        "sha": "a77b531b5a7c8a94b6b7e532660828d7e15b6624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a77b531b5a7c8a94b6b7e532660828d7e15b6624"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
          "sha": "d4eb444f6ba630f0ef009999b73282c5068ef4fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4eb444f6ba630f0ef009999b73282c5068ef4fd"
        }
      ],
      "message": "Add SERIALIZE_TRANSACTION_FOR_WEIGHT flag",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:20:23Z"
      },
      "sha": "2493b15cb096393789932c7ca2370fe8cfb310f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjZDc1ZjU1Y2ZlZmRkNDQxYmMxNTA1MjA4Y2ZjNWI2ZGE1Y2UwMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
      "tree": {
        "sha": "a617f7891f842738c6732c7ed59be0c86d767917",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a617f7891f842738c6732c7ed59be0c86d767917"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2493b15cb096393789932c7ca2370fe8cfb310f3",
          "sha": "2493b15cb096393789932c7ca2370fe8cfb310f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2493b15cb096393789932c7ca2370fe8cfb310f3"
        }
      ],
      "message": "primitives/transaction: Stub weight increases for drivechains",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:42:35Z"
      },
      "sha": "ecd75f55cfefdd441bc1505208cfc5b6da5ce035"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjMDIxOTA0ODc5MTBjNDE2YWIzNDIzMjEzZTg2N2QyNmRiYmQ4M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c02190487910c416ab3423213e867d26dbbd83f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c02190487910c416ab3423213e867d26dbbd83f",
      "tree": {
        "sha": "2d02d4869e70e76f4c2e9f5537a530dea7c69c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d02d4869e70e76f4c2e9f5537a530dea7c69c7d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
          "sha": "ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ecd75f55cfefdd441bc1505208cfc5b6da5ce035"
        }
      ],
      "message": "sidechain: Expire sidechain/withdraw proposals",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T17:48:05Z"
      },
      "sha": "4c02190487910c416ab3423213e867d26dbbd83f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0NzgzYTliMGY3Mzc2ZGQxZDJhYTZhYTA1ZjRiYThkY2NkNzBkZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
      "tree": {
        "sha": "57ad858ae57a2d63278c8004986f0f0a54f0e131",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57ad858ae57a2d63278c8004986f0f0a54f0e131"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c02190487910c416ab3423213e867d26dbbd83f",
          "sha": "4c02190487910c416ab3423213e867d26dbbd83f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c02190487910c416ab3423213e867d26dbbd83f"
        }
      ],
      "message": "fixups, simplify record_id confusion in various places",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T18:04:20Z"
      },
      "sha": "04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4ODY3MTMyN2E4NjlmMDNhM2VlYzgyYzg5MWM0NWQ2ZTJmMWI5ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
      "tree": {
        "sha": "182d4dd5cbe46e2f73d26ddc631a11c61dc708c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/182d4dd5cbe46e2f73d26ddc631a11c61dc708c0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
          "sha": "04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2"
        }
      ],
      "message": "sidechain: Hash blinded withdraw hashes with the sidechain id to avoid conflicts",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T18:41:32Z"
      },
      "sha": "d88671327a869f03a3eec82c891c45d6e2f1b9d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdjOGQ3ZTJkNjVmMzYwMWI2Yjg1OTY5OGNlYzg1Y2Q2NjdjMWVkNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
      "tree": {
        "sha": "bfcda83972caaa9854b7fae73e43ab38062fa199",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfcda83972caaa9854b7fae73e43ab38062fa199"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
          "sha": "d88671327a869f03a3eec82c891c45d6e2f1b9d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d88671327a869f03a3eec82c891c45d6e2f1b9d9"
        }
      ],
      "message": "sidechain: INCOMPLETE sidechain activation",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T22:51:05Z"
      },
      "sha": "7c8d7e2d65f3601b6b859698cec85cd667c1ed49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY1NDQ1ODE1MGNkMjczNDNmODg0MmI0ZmU1MDk1M2Q0YzM0MWI3ZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f54458150cd27343f8842b4fe50953d4c341b7f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f54458150cd27343f8842b4fe50953d4c341b7f5",
      "tree": {
        "sha": "8e8ddbe3e7382b82735773ea46c06791427bb7b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e8ddbe3e7382b82735773ea46c06791427bb7b0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
          "sha": "7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8d7e2d65f3601b6b859698cec85cd667c1ed49"
        }
      ],
      "message": "fixups, cast changes to avoid narrowing conversion warnings",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T22:54:24Z"
      },
      "sha": "f54458150cd27343f8842b4fe50953d4c341b7f5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxOTJiYTEyM2QyODNmZWUxOTllZDU5YTI0MGEyYWI4MDI3NTI0MGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2192ba123d283fee199ed59a240a2ab80275240e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2192ba123d283fee199ed59a240a2ab80275240e",
      "tree": {
        "sha": "b5d6e1b120b2a57368db71ebc33636f2b0e467f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5d6e1b120b2a57368db71ebc33636f2b0e467f7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f54458150cd27343f8842b4fe50953d4c341b7f5",
          "sha": "f54458150cd27343f8842b4fe50953d4c341b7f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f54458150cd27343f8842b4fe50953d4c341b7f5"
        }
      ],
      "message": "sidechain: Detect several invalid conditions",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T23:35:19Z"
      },
      "sha": "2192ba123d283fee199ed59a240a2ab80275240e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmOTgxNWE5OGRhMmMxZjRkYmRkOWM3NTI5NWIwNjUwZTliMTkxMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
      "tree": {
        "sha": "0774f00cab8866326ae9f5d19c211a7912af795a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0774f00cab8866326ae9f5d19c211a7912af795a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2192ba123d283fee199ed59a240a2ab80275240e",
          "sha": "2192ba123d283fee199ed59a240a2ab80275240e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2192ba123d283fee199ed59a240a2ab80275240e"
        }
      ],
      "message": "Add push1[sidechain id] OP_TRUE after OP_DRIVECHAIN",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T00:47:29Z"
      },
      "sha": "ff9815a98da2c1f4dbdd9c75295b0650e9b19101"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhOGMxYTk2MDQ0NWJkMjUyOWUzOWQ1OGIwMGJlMTM2Y2NkZjM0ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
      "tree": {
        "sha": "8230926fbc9711c7567a6b089213457517b5d1db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8230926fbc9711c7567a6b089213457517b5d1db"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
          "sha": "ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff9815a98da2c1f4dbdd9c75295b0650e9b19101"
        }
      ],
      "message": "sidechain: Setup DBIDX_SIDECHAIN_CTIP_INFO",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T00:47:47Z"
      },
      "sha": "ea8c1a960445bd2529e39d58b00be136ccdf34d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmYzk3NWJiNjAyOWU5ODJlMmJkNTQyMGQxOGU3Y2EwZDRmNDQxM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "tree": {
        "sha": "88cd3e6cf34c0977a5be6fbdf2c8c5b28a1bd331",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88cd3e6cf34c0977a5be6fbdf2c8c5b28a1bd331"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
          "sha": "ea8c1a960445bd2529e39d58b00be136ccdf34d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea8c1a960445bd2529e39d58b00be136ccdf34d9"
        }
      ],
      "message": "sidechain: Detect more edge cases and document TODOs",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T01:28:11Z"
      },
      "sha": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e"
    },
    {
      "event": "commented",
      "id": 1687269373,
      "node_id": "IC_kwDOABII585kka_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687269373",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T01:17:16Z",
      "updated_at": "2023-08-30T06:21:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [aceofbitcoin](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1697913869), [RicYashiroLee](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698057367) |\n| Concept ACK | [psztorc](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688540988), [CheemsCommander](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1690244473) |\n| Approach NACK | [russeree](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687311408), [petertodd](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687922922), [ns-xvrn](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688401439), [amtriorix](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698560268) |\n| Ignored review | [john-light](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687421696), [jaybny](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688825978) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28280](https://github.com/bitcoin/bitcoin/pull/28280) (Don't empty dbcache on prune flushes: >30% faster IBD by andrewtoth)\n* [#28251](https://github.com/bitcoin/bitcoin/pull/28251) (validation: fix coins disappearing mid-package evaluation by glozow)\n* [#28195](https://github.com/bitcoin/bitcoin/pull/28195) (blockstorage: Drop legacy -txindex check by MarcoFalke)\n* [#28051](https://github.com/bitcoin/bitcoin/pull/28051) (Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly by ryanofsky)\n* [#26331](https://github.com/bitcoin/bitcoin/pull/26331) (Implement `CCoinsViewErrorCatcher::HaveCoin` and check disk space periodically by aureleoules)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687269373",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "subscribed",
      "id": 10152231792,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdHsNw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152231792",
      "actor": {
        "login": "alltheseas",
        "id": 64376233,
        "node_id": "MDQ6VXNlcjY0Mzc2MjMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/64376233?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alltheseas",
        "html_url": "https://github.com/alltheseas",
        "followers_url": "https://api.github.com/users/alltheseas/followers",
        "following_url": "https://api.github.com/users/alltheseas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alltheseas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alltheseas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alltheseas/subscriptions",
        "organizations_url": "https://api.github.com/users/alltheseas/orgs",
        "repos_url": "https://api.github.com/users/alltheseas/repos",
        "events_url": "https://api.github.com/users/alltheseas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alltheseas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:13:07Z"
    },
    {
      "event": "commented",
      "id": 1687311408,
      "node_id": "IC_kwDOABII585kklQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687311408",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:15:32Z",
      "updated_at": "2023-08-22T04:26:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach NACK; using bip300 `OP_DRIVECHAIN` to achieve consensus about the validity of a spend is prone to errors or manipulation by miners as to the state of the sidechain thus introducing additional incentives into bitcoin.\r\n\r\nPlease don't take this personally, I love the work you do, personally I want to see a more 'trustless' method of pegouts before adding sidechain communication and spend conditions into Bitcoin Core.",
      "user": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687311408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "labeled",
      "id": 10152310328,
      "node_id": "LE_lADOABII585u40PJzwAAAAJdH_Y4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152310328",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:30:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1588200210,
      "node_id": "PRR_kwDOABII585eqgMS",
      "url": null,
      "actor": null,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#pullrequestreview-1588200210",
      "submitted_at": "2023-08-22T03:04:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
    },
    {
      "event": "commented",
      "id": 1687421696,
      "node_id": "IC_kwDOABII585klAMA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687421696",
      "actor": {
        "login": "john-light",
        "id": 9424721,
        "node_id": "MDQ6VXNlcjk0MjQ3MjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9424721?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/john-light",
        "html_url": "https://github.com/john-light",
        "followers_url": "https://api.github.com/users/john-light/followers",
        "following_url": "https://api.github.com/users/john-light/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/john-light/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/john-light/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/john-light/subscriptions",
        "organizations_url": "https://api.github.com/users/john-light/orgs",
        "repos_url": "https://api.github.com/users/john-light/repos",
        "events_url": "https://api.github.com/users/john-light/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/john-light/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T04:57:50Z",
      "updated_at": "2023-08-22T04:57:50Z",
      "author_association": "NONE",
      "body": "@russeree \r\n\r\n> Approach NACK; using bip300 OP_DRIVECHAIN to achieve consensus about the validity of a spend is prone to errors or manipulation by miners as to the state of the sidechain thus introducing additional incentives into bitcoin... personally I want to see a more 'trustless' method of pegouts before adding sidechain communication and spend conditions into BitcoinCore.\r\n\r\nThis comment seems to me like a \"Concept NACK\", not an \"Approach NACK\". Per @luke-jr's [request](https://github.com/bitcoin/bitcoin/pull/28311#issue-1860387785):\r\n\r\n> Many people seem to have opinions, but please keep them to other forums... not looking for concept ACKs/NACKs, just Approach ACKs / constructive criticism.\r\n\r\nIn case this request was missed, or there was a misunderstanding about the request, by \"just Approach ACK / constructive criticism\" Luke is saying he only wants feedback on his specific _approach_ taken to implement BIP300 in this PR. If a reviewer likes this approach, or does not like this approach and can suggest a better approach to implementing the BIP300 spec, then that is the kind of feedback Luke is looking for. On the other hand, if a reviewer has feedback about the _general concept_ of BIP300 then Luke requests that that feedback be shared elsewhere -- may I suggest the [bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev) mailing list or the new [Delving Bitcoin](https://delvingbitcoin.org) forum?",
      "user": {
        "login": "john-light",
        "id": 9424721,
        "node_id": "MDQ6VXNlcjk0MjQ3MjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9424721?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/john-light",
        "html_url": "https://github.com/john-light",
        "followers_url": "https://api.github.com/users/john-light/followers",
        "following_url": "https://api.github.com/users/john-light/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/john-light/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/john-light/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/john-light/subscriptions",
        "organizations_url": "https://api.github.com/users/john-light/orgs",
        "repos_url": "https://api.github.com/users/john-light/repos",
        "events_url": "https://api.github.com/users/john-light/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/john-light/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687421696",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "mentioned",
      "id": 10152982336,
      "node_id": "MEE_lADOABII585u40PJzwAAAAJdKjdA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152982336",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T04:57:50Z"
    },
    {
      "event": "subscribed",
      "id": 10152982346,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdKjdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152982346",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T04:57:50Z"
    },
    {
      "event": "mentioned",
      "id": 10152982359,
      "node_id": "MEE_lADOABII585u40PJzwAAAAJdKjdX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152982359",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T04:57:50Z"
    },
    {
      "event": "subscribed",
      "id": 10152982377,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdKjdp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152982377",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T04:57:50Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T08:47:48Z",
      "updated_at": "2023-08-22T08:47:48Z",
      "source": {
        "issue": {
          "id": 1853990384,
          "node_id": "PR_kwDOABII585YGslf",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28280",
          "number": 28280,
          "state": "open",
          "state_reason": null,
          "title": "Don't empty dbcache on prune flushes: >30% faster IBD",
          "body": "Since https://github.com/bitcoin/bitcoin/pull/17487 we no longer need to clear the coins cache when syncing to disk. A warm coins cache significantly speeds up block connection, and only needs to be fully flushed when nearing the `dbcache` limit.\r\n\r\nFor frequent pruning flushes there's no need to empty the cache and kill connect block speed. However, simply using `Sync` in place of `Flush` actually slows down a pruned full IBD with a high `dbcache` value. This is because as the cache grows, sync takes longer since every coin in the cache is scanned to check if it's dirty. For frequent prune flushes and a large cache this constant scanning starts to really slow IBD down, and just emptying the cache on every prune becomes faster.\r\n\r\nTo fix this, we can add two pointers to each cache entry and construct a doubly linked list of dirty entries. We can then only iterate through all dirty entries on each `Sync`, and simply clear the pointers after.\r\n\r\nWith this approach a full IBD with `dbcache=16384` and `prune=550` was 32% faster than master. For default `dbcache=450` speedup was ~9%. All benchmarks were run with `stopatheight=800000`.\r\n\r\n|  | prune | dbcache | time | max RSS | speedup |\r\n|-----------:|----------:|------------:|--------:|-------------:|--------------:|\r\n| master | 550 | 16384 | 8:52:57 | 2,417,464k | - |\r\n| branch | 550 | 16384 | 6:01:00 | 16,216,736k | 32% |\r\n| branch | 550 | 450 | 8:05:08 | 2,818,072k | 8.8% |\r\n| master | 10000 | 5000 | 8:19:59 | 2,962,752k | - |\r\n| branch | 10000 | 5000| 5:56:39 | 6,179,764k | 28.8% |\r\n| master | 0 | 16384 | 4:51:53 | 14,726,408k | - |\r\n| branch | 0 | 16384 | 4:43:11 | 16,526,348k | 2.7% |\r\n| master | 0 | 450 | 7:08:07 | 3,005,892k | - |\r\n| branch | 0 | 450 | 6:57:24 | 3,013,556k |2.6%|\r\n\r\nWhile the 2 pointers add memory to each cache entry, it did not slow down IBD. For non-pruned IBD results were similar for this branch and master. A non-pruned IBD with full `dbcache` to tip ended up using 12% more memory, but it was also 2.7% faster somehow. For smaller `dbcache` values the `dbcache` limit is respected so does not consume more memory, and the potentially more frequent flushes were not significant enough to cause any slowdown.\r\n\r\nInspired by [this comment](https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457720636).\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/11315.",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28280",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28280.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28280.patch"
          },
          "created_at": "2023-08-16T22:38:19Z",
          "updated_at": "2023-08-30T07:52:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T10:01:57Z",
      "updated_at": "2023-08-22T10:01:57Z",
      "source": {
        "issue": {
          "id": 1830961084,
          "node_id": "PR_kwDOABII585W5KNz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28195",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28195/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28195/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28195/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28195",
          "number": 28195,
          "state": "open",
          "state_reason": null,
          "title": "blockstorage: Drop legacy -txindex check",
          "body": "The only reason for the check was to print a warning about an increase in storage use. Now that 22.x is EOL and everyone should have migrated (or decided to not care about storage use), remove the check.\r\n\r\nAlso, a move-only commit is included. (Rebased from https://github.com/bitcoin/bitcoin/pull/22242)",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 219890555,
              "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
              "name": "Block storage",
              "color": "000000",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28195",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28195",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28195.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28195.patch"
          },
          "created_at": "2023-08-01T10:29:42Z",
          "updated_at": "2023-08-22T10:01:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1687922922,
      "node_id": "IC_kwDOABII585km6jq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687922922",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T10:27:41Z",
      "updated_at": "2023-08-22T10:27:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach NACK: given that drivechains has fundamental flaws unrelated to the exact implementation, there's no reason to distract Bitcoin Core development with this pull-req, even in draft form. What's holding Drivechains back is the idea itself, not the code.\r\n\r\nYou haven't even bothered to write or link a high-level BIP-style overview of this take on the idea. Writing a bunch of detailed code is a waste of time.",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687922922",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1688160759,
      "node_id": "IC_kwDOABII585kn0n3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688160759",
      "actor": {
        "login": "Gudnessuche",
        "id": 120573631,
        "node_id": "U_kgDOBy_Ovw",
        "avatar_url": "https://avatars.githubusercontent.com/u/120573631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Gudnessuche",
        "html_url": "https://github.com/Gudnessuche",
        "followers_url": "https://api.github.com/users/Gudnessuche/followers",
        "following_url": "https://api.github.com/users/Gudnessuche/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Gudnessuche/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Gudnessuche/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Gudnessuche/subscriptions",
        "organizations_url": "https://api.github.com/users/Gudnessuche/orgs",
        "repos_url": "https://api.github.com/users/Gudnessuche/repos",
        "events_url": "https://api.github.com/users/Gudnessuche/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Gudnessuche/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T13:10:36Z",
      "updated_at": "2023-08-22T13:10:36Z",
      "author_association": "NONE",
      "body": "I refute the claim by Storkz and his fan boys that there are no risks or that all MEV risks are solved by Blind Merge Mining. \r\n\r\nPlus the peg out reintroduces having to trust, doesn't that seem scammy?",
      "user": {
        "login": "Gudnessuche",
        "id": 120573631,
        "node_id": "U_kgDOBy_Ovw",
        "avatar_url": "https://avatars.githubusercontent.com/u/120573631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Gudnessuche",
        "html_url": "https://github.com/Gudnessuche",
        "followers_url": "https://api.github.com/users/Gudnessuche/followers",
        "following_url": "https://api.github.com/users/Gudnessuche/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Gudnessuche/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Gudnessuche/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Gudnessuche/subscriptions",
        "organizations_url": "https://api.github.com/users/Gudnessuche/orgs",
        "repos_url": "https://api.github.com/users/Gudnessuche/repos",
        "events_url": "https://api.github.com/users/Gudnessuche/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Gudnessuche/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688160759",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "unsubscribed",
      "id": 10158436908,
      "node_id": "UE_lADOABII585u40PJzwAAAAJdfXIs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10158436908",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T13:11:53Z"
    },
    {
      "event": "commented",
      "id": 1688166989,
      "node_id": "IC_kwDOABII585kn2JN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688166989",
      "actor": {
        "login": "Gudnessuche",
        "id": 120573631,
        "node_id": "U_kgDOBy_Ovw",
        "avatar_url": "https://avatars.githubusercontent.com/u/120573631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Gudnessuche",
        "html_url": "https://github.com/Gudnessuche",
        "followers_url": "https://api.github.com/users/Gudnessuche/followers",
        "following_url": "https://api.github.com/users/Gudnessuche/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Gudnessuche/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Gudnessuche/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Gudnessuche/subscriptions",
        "organizations_url": "https://api.github.com/users/Gudnessuche/orgs",
        "repos_url": "https://api.github.com/users/Gudnessuche/repos",
        "events_url": "https://api.github.com/users/Gudnessuche/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Gudnessuche/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T13:14:19Z",
      "updated_at": "2023-08-22T13:14:19Z",
      "author_association": "NONE",
      "body": "\"Despite providing and continuing this implementation, I myself do not thereby endorse or otherwise comment on the proposal itself.\"\r\n\r\nHow do you reconcile this statement Luke. Pls don't support this misallocation of time, funds and energy. FUCK SYNTHETIC BITCOIN!!!",
      "user": {
        "login": "Gudnessuche",
        "id": 120573631,
        "node_id": "U_kgDOBy_Ovw",
        "avatar_url": "https://avatars.githubusercontent.com/u/120573631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Gudnessuche",
        "html_url": "https://github.com/Gudnessuche",
        "followers_url": "https://api.github.com/users/Gudnessuche/followers",
        "following_url": "https://api.github.com/users/Gudnessuche/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Gudnessuche/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Gudnessuche/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Gudnessuche/subscriptions",
        "organizations_url": "https://api.github.com/users/Gudnessuche/orgs",
        "repos_url": "https://api.github.com/users/Gudnessuche/repos",
        "events_url": "https://api.github.com/users/Gudnessuche/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Gudnessuche/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688166989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "reviewed",
      "id": 1589433555,
      "node_id": "PRR_kwDOABII585evNTT",
      "url": null,
      "actor": null,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "handful of questions and comment",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#pullrequestreview-1589433555",
      "submitted_at": "2023-08-22T13:46:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T14:14:36Z",
      "updated_at": "2023-08-22T14:14:36Z",
      "source": {
        "issue": {
          "id": 1794480203,
          "node_id": "PR_kwDOABII585U9_dX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
          "number": 28051,
          "state": "open",
          "state_reason": null,
          "title": "Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly",
          "body": "This change just removes some code and gets rid of an unnecessary layer of indirection after #27861\r\n\r\nThis also gets rid of the `kernel::g_context` global and exceptions thrown by the `SignalInterrupt` class mentioned https://github.com/bitcoin/bitcoin/pull/27861#discussion_r1255496707",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28051.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28051.patch"
          },
          "created_at": "2023-07-07T22:26:18Z",
          "updated_at": "2023-08-25T06:25:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1688401439,
      "node_id": "IC_kwDOABII585kovYf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688401439",
      "actor": {
        "login": "ns-xvrn",
        "id": 120062368,
        "node_id": "U_kgDOBygBoA",
        "avatar_url": "https://avatars.githubusercontent.com/u/120062368?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ns-xvrn",
        "html_url": "https://github.com/ns-xvrn",
        "followers_url": "https://api.github.com/users/ns-xvrn/followers",
        "following_url": "https://api.github.com/users/ns-xvrn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ns-xvrn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ns-xvrn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ns-xvrn/subscriptions",
        "organizations_url": "https://api.github.com/users/ns-xvrn/orgs",
        "repos_url": "https://api.github.com/users/ns-xvrn/repos",
        "events_url": "https://api.github.com/users/ns-xvrn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ns-xvrn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T15:21:46Z",
      "updated_at": "2023-08-22T15:22:13Z",
      "author_association": "NONE",
      "body": "Approach NACK\r\n\r\nYou yourself have said that this will not work \"without significant additional changes to handle an activation\". So what's the point of writing, reviewing and merging this code without completely knowing those \"significant changes\" ahead of time?\r\n\r\nAnd surely people have opinions about Drivechain in general because the big debate around it is about mining pool centralization and valid perverse incentives(and since this will lead a way for that to happen on the Bitcoin system instead of an independent sidechain implementation those opinions are also somewhat valid given this is incomplete work).",
      "user": {
        "login": "ns-xvrn",
        "id": 120062368,
        "node_id": "U_kgDOBygBoA",
        "avatar_url": "https://avatars.githubusercontent.com/u/120062368?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ns-xvrn",
        "html_url": "https://github.com/ns-xvrn",
        "followers_url": "https://api.github.com/users/ns-xvrn/followers",
        "following_url": "https://api.github.com/users/ns-xvrn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ns-xvrn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ns-xvrn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ns-xvrn/subscriptions",
        "organizations_url": "https://api.github.com/users/ns-xvrn/orgs",
        "repos_url": "https://api.github.com/users/ns-xvrn/repos",
        "events_url": "https://api.github.com/users/ns-xvrn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ns-xvrn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688401439",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T15:37:42Z",
      "updated_at": "2023-08-22T15:37:42Z",
      "source": {
        "issue": {
          "id": 1412882138,
          "node_id": "PR_kwDOABII585A_5y8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26331",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26331/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26331/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26331/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26331",
          "number": 26331,
          "state": "open",
          "state_reason": null,
          "title": "Implement `CCoinsViewErrorCatcher::HaveCoin` and check disk space periodically",
          "body": "Attempt to fix #26112.\r\n\r\nAs suggested by sipa in https://github.com/bitcoin/bitcoin/issues/26112#issuecomment-1249683401:\r\n> CCoinsViewErrorCatcher, the wrapper class used around CCoinsViewDB that's supposed to detect these problems and forcefully exit the application, has an override for GetCoins. But in CheckTxInputs, HaveInputs is first invoked, which on its turn calls HaveCoin. HaveCoin is implemented in CCoinsViewDB, but not in CCoinsViewErrorCatcher, and thus the disk read exception escapes.\r\n> A solution may be to just add an override for HaveCoin in CCoinsViewErrorCatcher.\r\n\r\nI implemented `CCoinsViewErrorCatcher::HaveCoin` and also added a periodic disk space check that shutdowns the node if there is not enough space left on disk, the minimum here is 50MB.\r\n\r\nFor reviewers, it's possible to saturate disk space to test the PR by creating large files with `fallocate -l 50G test.bin`",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26331",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26331",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26331.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26331.patch"
          },
          "created_at": "2022-10-18T09:29:31Z",
          "updated_at": "2023-08-22T15:37:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1688540988,
      "node_id": "IC_kwDOABII585kpRc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688540988",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T16:26:25Z",
      "updated_at": "2023-08-22T16:26:25Z",
      "author_association": "NONE",
      "body": "> Approach NACK: given that drivechains has fundamental flaws unrelated to the exact implementation, there's no reason to distract Bitcoin Core development with this pull-req, even in draft form. What's holding Drivechains back is the idea itself, not the code.\r\n\r\nI have engaged Peter (and compensated him financially) to write a report on these \"fundamental flaws\", but I have not yet heard or seen anything.\r\n\r\nPeter, until you publish these flaws, we have no way of evaluating them. (Nor would this be the place to do that, even if you had. Per Luke's comment on Concept ACK/NACKs.)",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688540988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "subscribed",
      "id": 10161052542,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdpVt-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10161052542",
      "actor": {
        "login": "capitalist42",
        "id": 68190719,
        "node_id": "MDQ6VXNlcjY4MTkwNzE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/68190719?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/capitalist42",
        "html_url": "https://github.com/capitalist42",
        "followers_url": "https://api.github.com/users/capitalist42/followers",
        "following_url": "https://api.github.com/users/capitalist42/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/capitalist42/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/capitalist42/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/capitalist42/subscriptions",
        "organizations_url": "https://api.github.com/users/capitalist42/orgs",
        "repos_url": "https://api.github.com/users/capitalist42/repos",
        "events_url": "https://api.github.com/users/capitalist42/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/capitalist42/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T17:00:08Z"
    },
    {
      "event": "unsubscribed",
      "id": 10161261310,
      "node_id": "UE_lADOABII585u40PJzwAAAAJdqIr-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10161261310",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T17:25:08Z"
    },
    {
      "event": "subscribed",
      "id": 10161261589,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdqIwV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10161261589",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T17:25:10Z"
    },
    {
      "event": "commented",
      "id": 1688790502,
      "node_id": "IC_kwDOABII585kqOXm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688790502",
      "actor": {
        "login": "jaybny",
        "id": 777326,
        "node_id": "MDQ6VXNlcjc3NzMyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/777326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jaybny",
        "html_url": "https://github.com/jaybny",
        "followers_url": "https://api.github.com/users/jaybny/followers",
        "following_url": "https://api.github.com/users/jaybny/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jaybny/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jaybny/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jaybny/subscriptions",
        "organizations_url": "https://api.github.com/users/jaybny/orgs",
        "repos_url": "https://api.github.com/users/jaybny/repos",
        "events_url": "https://api.github.com/users/jaybny/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jaybny/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T19:21:00Z",
      "updated_at": "2023-08-22T19:46:48Z",
      "author_association": "NONE",
      "body": "> I want to see a more 'trustless' method of pegouts\r\n\r\nwhat exactly do you mean by trustless? what can be more trustless than hash-rate escrow? After years of research, all other approaches rely on actual centralized custodians like liquid does. Hash rate escrow leverages the assumption that sha256 hash rate is sufficiently distributed for bitcoin censorship resistance properties. \r\n",
      "user": {
        "login": "jaybny",
        "id": 777326,
        "node_id": "MDQ6VXNlcjc3NzMyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/777326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jaybny",
        "html_url": "https://github.com/jaybny",
        "followers_url": "https://api.github.com/users/jaybny/followers",
        "following_url": "https://api.github.com/users/jaybny/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jaybny/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jaybny/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jaybny/subscriptions",
        "organizations_url": "https://api.github.com/users/jaybny/orgs",
        "repos_url": "https://api.github.com/users/jaybny/repos",
        "events_url": "https://api.github.com/users/jaybny/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jaybny/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688790502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1688825978,
      "node_id": "IC_kwDOABII585kqXB6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1688825978",
      "actor": {
        "login": "jaybny",
        "id": 777326,
        "node_id": "MDQ6VXNlcjc3NzMyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/777326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jaybny",
        "html_url": "https://github.com/jaybny",
        "followers_url": "https://api.github.com/users/jaybny/followers",
        "following_url": "https://api.github.com/users/jaybny/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jaybny/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jaybny/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jaybny/subscriptions",
        "organizations_url": "https://api.github.com/users/jaybny/orgs",
        "repos_url": "https://api.github.com/users/jaybny/repos",
        "events_url": "https://api.github.com/users/jaybny/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jaybny/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T19:45:25Z",
      "updated_at": "2023-08-22T19:45:25Z",
      "author_association": "NONE",
      "body": "Meta Approach ACK - i like the approach of developing an implementation, independent of the concept ack/nack \r\n\r\nhaving said that, regarding the concept.. We need to be laser focused (no pun intended) on scaling bitcoins utxo p2p money utility, and while the idea of a 2way peg sidechains using hash rate escrow via `bip300` is one such solution, (in addition to larger block size,` bip119` and other covenants), the abstract bling merged mining in `bip301`, opens bitcoin incentives to things other than p2p money bitcoin. \r\n\r\nthe solution here is to \"_limit_\" sidechains to the p2p money utility. this will keep miner incentives as is, and scale bitcoin with bitcoin script. such a solution can be achieved, but first requires this explicit social consensus intent and explicit designer and implementor intent. \r\n\r\nwith such intent in place, the miners _Nash_ equilibrium is to follow intent, due to the implied `UASF` which already implicitly secures `bip300` in the first place. ",
      "user": {
        "login": "jaybny",
        "id": 777326,
        "node_id": "MDQ6VXNlcjc3NzMyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/777326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jaybny",
        "html_url": "https://github.com/jaybny",
        "followers_url": "https://api.github.com/users/jaybny/followers",
        "following_url": "https://api.github.com/users/jaybny/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jaybny/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jaybny/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jaybny/subscriptions",
        "organizations_url": "https://api.github.com/users/jaybny/orgs",
        "repos_url": "https://api.github.com/users/jaybny/repos",
        "events_url": "https://api.github.com/users/jaybny/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jaybny/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1688825978",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1690244473,
      "node_id": "IC_kwDOABII585kvxV5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1690244473",
      "actor": {
        "login": "CheemsCommander",
        "id": 138122743,
        "node_id": "U_kgDOCDuV9w",
        "avatar_url": "https://avatars.githubusercontent.com/u/138122743?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CheemsCommander",
        "html_url": "https://github.com/CheemsCommander",
        "followers_url": "https://api.github.com/users/CheemsCommander/followers",
        "following_url": "https://api.github.com/users/CheemsCommander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CheemsCommander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CheemsCommander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CheemsCommander/subscriptions",
        "organizations_url": "https://api.github.com/users/CheemsCommander/orgs",
        "repos_url": "https://api.github.com/users/CheemsCommander/repos",
        "events_url": "https://api.github.com/users/CheemsCommander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CheemsCommander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T16:11:50Z",
      "updated_at": "2023-08-23T16:11:50Z",
      "author_association": "NONE",
      "body": "Cheemsburger ACK!",
      "user": {
        "login": "CheemsCommander",
        "id": 138122743,
        "node_id": "U_kgDOCDuV9w",
        "avatar_url": "https://avatars.githubusercontent.com/u/138122743?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CheemsCommander",
        "html_url": "https://github.com/CheemsCommander",
        "followers_url": "https://api.github.com/users/CheemsCommander/followers",
        "following_url": "https://api.github.com/users/CheemsCommander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CheemsCommander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CheemsCommander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CheemsCommander/subscriptions",
        "organizations_url": "https://api.github.com/users/CheemsCommander/orgs",
        "repos_url": "https://api.github.com/users/CheemsCommander/repos",
        "events_url": "https://api.github.com/users/CheemsCommander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CheemsCommander/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1690244473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "unsubscribed",
      "id": 10172132516,
      "node_id": "UE_lADOABII585u40PJzwAAAAJeTmyk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10172132516",
      "actor": {
        "login": "alltheseas",
        "id": 64376233,
        "node_id": "MDQ6VXNlcjY0Mzc2MjMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/64376233?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alltheseas",
        "html_url": "https://github.com/alltheseas",
        "followers_url": "https://api.github.com/users/alltheseas/followers",
        "following_url": "https://api.github.com/users/alltheseas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alltheseas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alltheseas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alltheseas/subscriptions",
        "organizations_url": "https://api.github.com/users/alltheseas/orgs",
        "repos_url": "https://api.github.com/users/alltheseas/repos",
        "events_url": "https://api.github.com/users/alltheseas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alltheseas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T16:15:15Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T12:49:08Z",
      "updated_at": "2023-08-25T12:49:08Z",
      "source": {
        "issue": {
          "id": 1845150879,
          "node_id": "PR_kwDOABII585XozoF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28251",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28251/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28251/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28251/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28251",
          "number": 28251,
          "state": "open",
          "state_reason": null,
          "title": "validation: fix coins disappearing mid-package evaluation",
          "body": "While we are evaluating a package, we split it into \"subpackages\" for evaluation (currently subpackages all have size 1 except the last one). If a subpackage has size 1, we may add a tx to mempool and call `LimitMempoolSize()`, which evicts transactions if the mempool gets full. We handle the case where the just-submitted transaction is evicted immediately, but we don't handle the case in which a transaction from a previous subpackage (either just submitted or already in mempool) is evicted. Mainly, since the coins created by the evicted transaction are cached in `m_view`, we don't realize the UTXO has disappeared until `CheckInputsFromMempoolAndCache` asserts that they exist. Also, the returned `PackageMempoolAcceptResult` reports that the transaction is in mempool even though it isn't anymore.\r\n\r\nFix this by not calling `LimitMempoolSize()` until the very end, and editing the results map with \"mempool full\" if things fall out.\r\n\r\nPointed out by instagibbs in https://github.com/bitcoin/bitcoin/commit/faeed687e5cde5e32750d93818dd1d4add837f24 on top of the v3 PR.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28251",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28251",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28251.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28251.patch"
          },
          "created_at": "2023-08-10T13:04:19Z",
          "updated_at": "2023-08-30T13:21:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "subscribed",
      "id": 10208057926,
      "node_id": "SE_lADOABII585u40PJzwAAAAJgcppG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10208057926",
      "actor": {
        "login": "nakamotocryptocard",
        "id": 129814842,
        "node_id": "U_kgDOB7zROg",
        "avatar_url": "https://avatars.githubusercontent.com/u/129814842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nakamotocryptocard",
        "html_url": "https://github.com/nakamotocryptocard",
        "followers_url": "https://api.github.com/users/nakamotocryptocard/followers",
        "following_url": "https://api.github.com/users/nakamotocryptocard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nakamotocryptocard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nakamotocryptocard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nakamotocryptocard/subscriptions",
        "organizations_url": "https://api.github.com/users/nakamotocryptocard/orgs",
        "repos_url": "https://api.github.com/users/nakamotocryptocard/repos",
        "events_url": "https://api.github.com/users/nakamotocryptocard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nakamotocryptocard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-28T11:26:01Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "lucasdcf",
        "id": 68931156,
        "node_id": "MDQ6VXNlcjY4OTMxMTU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/68931156?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lucasdcf",
        "html_url": "https://github.com/lucasdcf",
        "followers_url": "https://api.github.com/users/lucasdcf/followers",
        "following_url": "https://api.github.com/users/lucasdcf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lucasdcf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lucasdcf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lucasdcf/subscriptions",
        "organizations_url": "https://api.github.com/users/lucasdcf/orgs",
        "repos_url": "https://api.github.com/users/lucasdcf/repos",
        "events_url": "https://api.github.com/users/lucasdcf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lucasdcf/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T02:25:45Z",
      "updated_at": "2023-08-29T02:25:45Z",
      "source": {
        "issue": {
          "id": 1834617363,
          "node_id": "I_kwDOHi0ngs5tWgoT",
          "url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/9",
          "repository_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org",
          "labels_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/9/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/9/comments",
          "events_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/9/events",
          "html_url": "https://github.com/saopaulobitdevs/saopaulobitdevs.org/issues/9",
          "number": 9,
          "state": "open",
          "state_reason": null,
          "title": "Tópicos Agosto/2023",
          "body": "Issue reservada para proposta de tópicos para o encontro de agosto de 2023",
          "user": {
            "login": "lorenzolfm",
            "id": 38786333,
            "node_id": "MDQ6VXNlcjM4Nzg2MzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lorenzolfm",
            "html_url": "https://github.com/lorenzolfm",
            "followers_url": "https://api.github.com/users/lorenzolfm/followers",
            "following_url": "https://api.github.com/users/lorenzolfm/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lorenzolfm/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lorenzolfm/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lorenzolfm/subscriptions",
            "organizations_url": "https://api.github.com/users/lorenzolfm/orgs",
            "repos_url": "https://api.github.com/users/lorenzolfm/repos",
            "events_url": "https://api.github.com/users/lorenzolfm/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lorenzolfm/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5694222796,
              "node_id": "LA_kwDOHi0ngs8AAAABU2bxzA",
              "url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/labels/discussion",
              "name": "discussion",
              "description": "",
              "color": "E9652D",
              "default": false
            }
          ],
          "assignee": {
            "login": "jaonoctus",
            "id": 7918067,
            "node_id": "MDQ6VXNlcjc5MTgwNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7918067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaonoctus",
            "html_url": "https://github.com/jaonoctus",
            "followers_url": "https://api.github.com/users/jaonoctus/followers",
            "following_url": "https://api.github.com/users/jaonoctus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jaonoctus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jaonoctus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jaonoctus/subscriptions",
            "organizations_url": "https://api.github.com/users/jaonoctus/orgs",
            "repos_url": "https://api.github.com/users/jaonoctus/repos",
            "events_url": "https://api.github.com/users/jaonoctus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jaonoctus/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "jaonoctus",
              "id": 7918067,
              "node_id": "MDQ6VXNlcjc5MTgwNjc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7918067?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/jaonoctus",
              "html_url": "https://github.com/jaonoctus",
              "followers_url": "https://api.github.com/users/jaonoctus/followers",
              "following_url": "https://api.github.com/users/jaonoctus/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/jaonoctus/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/jaonoctus/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/jaonoctus/subscriptions",
              "organizations_url": "https://api.github.com/users/jaonoctus/orgs",
              "repos_url": "https://api.github.com/users/jaonoctus/repos",
              "events_url": "https://api.github.com/users/jaonoctus/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/jaonoctus/received_events",
              "type": "User",
              "site_admin": false
            },
            {
              "login": "brunoerg",
              "id": 19480819,
              "node_id": "MDQ6VXNlcjE5NDgwODE5",
              "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/brunoerg",
              "html_url": "https://github.com/brunoerg",
              "followers_url": "https://api.github.com/users/brunoerg/followers",
              "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
              "organizations_url": "https://api.github.com/users/brunoerg/orgs",
              "repos_url": "https://api.github.com/users/brunoerg/repos",
              "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/brunoerg/received_events",
              "type": "User",
              "site_admin": false
            },
            {
              "login": "lorenzolfm",
              "id": 38786333,
              "node_id": "MDQ6VXNlcjM4Nzg2MzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/38786333?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/lorenzolfm",
              "html_url": "https://github.com/lorenzolfm",
              "followers_url": "https://api.github.com/users/lorenzolfm/followers",
              "following_url": "https://api.github.com/users/lorenzolfm/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/lorenzolfm/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/lorenzolfm/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/lorenzolfm/subscriptions",
              "organizations_url": "https://api.github.com/users/lorenzolfm/orgs",
              "repos_url": "https://api.github.com/users/lorenzolfm/repos",
              "events_url": "https://api.github.com/users/lorenzolfm/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/lorenzolfm/received_events",
              "type": "User",
              "site_admin": false
            },
            {
              "login": "lucasdcf",
              "id": 68931156,
              "node_id": "MDQ6VXNlcjY4OTMxMTU2",
              "avatar_url": "https://avatars.githubusercontent.com/u/68931156?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/lucasdcf",
              "html_url": "https://github.com/lucasdcf",
              "followers_url": "https://api.github.com/users/lucasdcf/followers",
              "following_url": "https://api.github.com/users/lucasdcf/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/lucasdcf/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/lucasdcf/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/lucasdcf/subscriptions",
              "organizations_url": "https://api.github.com/users/lucasdcf/orgs",
              "repos_url": "https://api.github.com/users/lucasdcf/repos",
              "events_url": "https://api.github.com/users/lucasdcf/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/lucasdcf/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 29,
          "created_at": "2023-08-03T09:08:17Z",
          "updated_at": "2023-08-29T15:55:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1697913869,
      "node_id": "IC_kwDOABII585lNBwN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697913869",
      "actor": {
        "login": "aceofbitcoin",
        "id": 16897964,
        "node_id": "MDQ6VXNlcjE2ODk3OTY0",
        "avatar_url": "https://avatars.githubusercontent.com/u/16897964?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aceofbitcoin",
        "html_url": "https://github.com/aceofbitcoin",
        "followers_url": "https://api.github.com/users/aceofbitcoin/followers",
        "following_url": "https://api.github.com/users/aceofbitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aceofbitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aceofbitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aceofbitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/aceofbitcoin/orgs",
        "repos_url": "https://api.github.com/users/aceofbitcoin/repos",
        "events_url": "https://api.github.com/users/aceofbitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aceofbitcoin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:11:16Z",
      "updated_at": "2023-08-29T18:31:56Z",
      "author_association": "NONE",
      "body": "NACK.  I say NJET, NADA, NIENTE, NOPE, NO, いいえ  I quote @__B__T__C__  \"... the miners mine on the layer based & hold it & the users get some shit tokens or shit coins on the drive... \"  personally I totally agree with Pete Todd This BIP300 should not be accepted for several reasons.  Another reason, the rewards system looks like a pyramid scheme if this get through.  This will have technical, legal and ethical implications.  This is a trojan horse code injection to fundamental things of bitcoin.  And yes, belief what You want who I am.  Satoshin",
      "user": {
        "login": "aceofbitcoin",
        "id": 16897964,
        "node_id": "MDQ6VXNlcjE2ODk3OTY0",
        "avatar_url": "https://avatars.githubusercontent.com/u/16897964?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aceofbitcoin",
        "html_url": "https://github.com/aceofbitcoin",
        "followers_url": "https://api.github.com/users/aceofbitcoin/followers",
        "following_url": "https://api.github.com/users/aceofbitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aceofbitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aceofbitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aceofbitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/aceofbitcoin/orgs",
        "repos_url": "https://api.github.com/users/aceofbitcoin/repos",
        "events_url": "https://api.github.com/users/aceofbitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aceofbitcoin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1697913869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1697942392,
      "node_id": "IC_kwDOABII585lNIt4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697942392",
      "actor": {
        "login": "Satoshin-Btc",
        "id": 60997115,
        "node_id": "MDQ6VXNlcjYwOTk3MTE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/60997115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Satoshin-Btc",
        "html_url": "https://github.com/Satoshin-Btc",
        "followers_url": "https://api.github.com/users/Satoshin-Btc/followers",
        "following_url": "https://api.github.com/users/Satoshin-Btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Satoshin-Btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Satoshin-Btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Satoshin-Btc/subscriptions",
        "organizations_url": "https://api.github.com/users/Satoshin-Btc/orgs",
        "repos_url": "https://api.github.com/users/Satoshin-Btc/repos",
        "events_url": "https://api.github.com/users/Satoshin-Btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Satoshin-Btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:34:16Z",
      "updated_at": "2023-08-29T18:34:16Z",
      "author_association": "NONE",
      "body": "Look drivechains are good for only a couple of things such as security, and\r\ndeploying a token possibly while being backed by Bitcoin. It's not a good\r\nidea as a side chain to run simultaneously because it would slow\r\ntransactions as well as screw with the parsing and verification. How ever\r\ncreating a personal drive chain can add a layer of security but can be\r\nmessed up if you don't pay attention to how the drive chain is configured.\r\n\r\nOn Mon, Aug 21, 2023, 6:20 PM Luke Dashjr ***@***.***> wrote:\r\n\r\n> This is a (rough draft) clean rewrite of BIP300 (Drivechain)\r\n> consensus-level code.\r\n>\r\n> Instead of a separate sidechain database (which may be prone to\r\n> hard-to-review/test consistency issues), instead the unusable 8 MSB of the\r\n> UTXO index are reserved for non-UTXO database entries, and the existing\r\n> UTXO db and caching layer is shared. This can be refactored in the future,\r\n> but I think it is the cleanest and most reviewable approach initially -\r\n> open to other ideas, though. There's also some ugliness in the undo data to\r\n> handle restoring the new data, but it's abstracted and shouldn't be too\r\n> hard to reason about.\r\n>\r\n> Using these new primitives, Drivechains can be reimplemented with a\r\n> UTXO-like model. Note that there is zero activation logic in the current\r\n> PR: the protocol changes are *always* active. Therefore, this will *not*\r\n> work (at least not safely) on Bitcoin today, and cannot be deployed without\r\n> significant additional changes to handle an activation.\r\n>\r\n> A new SERIALIZE_TRANSACTION_FOR_WEIGHT serialization flag is also added,\r\n> that is meant only for weight counting. This allows for adjusting weight\r\n> (upward) to fit additional resource requirements by new functionality. In\r\n> this case, several Drivechain \"messages\" are expected to have a larger\r\n> burden than their OP_RETURN encoding would otherwise weigh. However, the\r\n> specific adjustments are not implemented in this draft.\r\n>\r\n> As a consensus change, this can only be implemented with community\r\n> support. Many people seem to have opinions, but please keep them to other\r\n> forums. Despite providing and continuing this implementation, I myself do\r\n> not thereby endorse or otherwise comment on the proposal itself.\r\n>\r\n> Therefore, not looking for concept ACKs/NACKs, just *Approach* ACKs /\r\n> constructive criticism.\r\n> ------------------------------\r\n> You can view, comment on, or merge this pull request online at:\r\n>\r\n>   https://github.com/bitcoin/bitcoin/pull/28311\r\n> Commit Summary\r\n>\r\n>    - 7ee7f6e\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623>\r\n>    dbwrapper: Restore `CDBIterator::GetValueSize()`\r\n>    - bc6a2e1\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c>\r\n>    txdb: Support for flags which prevent opening with incompatible software\r\n>    - e0a51eb\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605>\r\n>    Hide COutPoint with n > 0x00ffffff from consensus/transaction handling\r\n>    - df2c012\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/df2c01207f1ba1bd93492e3d00b6e84015f36278>\r\n>    WIP Drivechain via UTXOs\r\n>    - eca69c4\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/eca69c4affeb26ee6f596f96ed51b667d08cdf7f>\r\n>    primitives/transaction: Implement CTxIn::SetNull\r\n>    - d4eb444\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/d4eb444f6ba630f0ef009999b73282c5068ef4fd>\r\n>    Implement OP_DRIVECHAIN-based sidechain deposits/withdraws\r\n>    - 2493b15\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/2493b15cb096393789932c7ca2370fe8cfb310f3>\r\n>    Add SERIALIZE_TRANSACTION_FOR_WEIGHT flag\r\n>    - ecd75f5\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/ecd75f55cfefdd441bc1505208cfc5b6da5ce035>\r\n>    primitives/transaction: Stub weight increases for drivechains\r\n>    - 4c02190\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/4c02190487910c416ab3423213e867d26dbbd83f>\r\n>    sidechain: Expire sidechain/withdraw proposals\r\n>    - 04783a9\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2>\r\n>    fixups, simplify record_id confusion in various places\r\n>    - d886713\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/d88671327a869f03a3eec82c891c45d6e2f1b9d9>\r\n>    sidechain: Hash blinded withdraw hashes with the sidechain id to avoid\r\n>    conflicts\r\n>    - 7c8d7e2\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/7c8d7e2d65f3601b6b859698cec85cd667c1ed49>\r\n>    sidechain: INCOMPLETE sidechain activation\r\n>    - f544581\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/f54458150cd27343f8842b4fe50953d4c341b7f5>\r\n>    fixups, cast changes to avoid narrowing conversion warnings\r\n>    - 2192ba1\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/2192ba123d283fee199ed59a240a2ab80275240e>\r\n>    sidechain: Detect several invalid conditions\r\n>    - ff9815a\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/ff9815a98da2c1f4dbdd9c75295b0650e9b19101>\r\n>    Add push1[sidechain id] OP_TRUE after OP_DRIVECHAIN\r\n>    - ea8c1a9\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/ea8c1a960445bd2529e39d58b00be136ccdf34d9>\r\n>    sidechain: Setup DBIDX_SIDECHAIN_CTIP_INFO\r\n>    - afc975b\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/commits/afc975bb6029e982e2bd5420d18e7ca0d4f4413e>\r\n>    sidechain: Detect more edge cases and document TODOs\r\n>\r\n> File Changes\r\n>\r\n> (23 files <https://github.com/bitcoin/bitcoin/pull/28311/files>)\r\n>\r\n>    - *M* src/Makefile.am\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-4cb884d03ebb901069e4ee5de5d02538c40dd9b39919c615d8eaa9d364bbbd77>\r\n>    (3)\r\n>    - *M* src/coins.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-f0ed73d62dae6ca28ebd3045e5fc0d5d02eaaacadb4c2a292985a3fbd7e1c77c>\r\n>    (24)\r\n>    - *M* src/coins.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-095ce1081a930998a10b37358fae5499ac47f8cb6f25f5df5d88e920a54e0341>\r\n>    (26)\r\n>    - *M* src/consensus/validation.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-829bb21fff2a0d0648adb348a52928b2227f1cd05a54f44ce78d84091f8060d4>\r\n>    (6)\r\n>    - *M* src/dbwrapper.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-44bef8fa93d168379ef331d9e11d333be06ce98a8f37ec65f8a987846b90a151>\r\n>    (5)\r\n>    - *M* src/dbwrapper.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-ac5fbeb5de6f28370bc348a579fc465fe7f7b91df0e0483c6edbf10273278c0d>\r\n>    (3)\r\n>    - *M* src/primitives/transaction.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-32f83e93b123235079fbadc3f68f8158c56c67d031a579475e16c6857edbecbf>\r\n>    (30)\r\n>    - *M* src/rpc/blockchain.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-decae4be02fb8a47ab4557fe74a9cb853bdfa3ec0fa1b515c0a1e5de91f4ad0b>\r\n>    (1)\r\n>    - *M* src/script/interpreter.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19>\r\n>    (2)\r\n>    - *M* src/script/script.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-6da39bed8a76fcaae51f021f0cdd906748aa99fdbf2d41981947f6a1b18fbe7b>\r\n>    (11)\r\n>    - *M* src/script/script.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-93c5ddf703879287802d651b68c9c6199644afe23db0dd3ff77e8d1ce3c20045>\r\n>    (4)\r\n>    - *A* src/sidechain.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-068cca671b293f3ee6f24c0a950c8357fc42518631e8409876c810da7c03ebb9>\r\n>    (466)\r\n>    - *A* src/sidechain.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-c5edaee37a176f59597dc09ce65d926090bca357709bcfd7466f4c239ceb5d6c>\r\n>    (65)\r\n>    - *M* src/test/coins_tests.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-3d0856e8b7f136c588b229e0cbd3b2e2c309cd097ade0879521daba4e1bb2a33>\r\n>    (29)\r\n>    - *M* src/test/fuzz/coins_view.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-1ef3b6a1936b50f3d5ec4a1786d9e2d63d1a3e1815b103e67f20601995f355b4>\r\n>    (14)\r\n>    - *M* src/test/fuzz/coinscache_sim.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-a8f78513bc27f9bf679eead54819a8e5be720401c6ae40858da226a66ca002e2>\r\n>    (10)\r\n>    - *M* src/test/fuzz/tx_pool.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-07fe07ecfff4dd7c233a453006567140ff20d226fd73a20406df14982b1e415b>\r\n>    (2)\r\n>    - *M* src/txdb.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-cafbe1353eff6084b73fd3b6c3dee603e0827348fdd2fe12dfad1e01003a84ed>\r\n>    (36)\r\n>    - *M* src/txdb.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-d102b6032635ce90158c1e6e614f03b50e4449aa46ce23370da5387a658342fd>\r\n>    (6)\r\n>    - *M* src/txmempool.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-c065d4cd2398ad0dbcef393c5dfc53f465bf44723348892395fffd2fb3bac522>\r\n>    (4)\r\n>    - *M* src/txmempool.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-8a2230436880b65a205db9299ab2e4e4adb1d4069146791b5db566f3fb752ada>\r\n>    (2)\r\n>    - *M* src/undo.h\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-75c400fd71ce89e9dab36f9fc4d079746981836b474c2e868135c37eb5139555>\r\n>    (2)\r\n>    - *M* src/validation.cpp\r\n>    <https://github.com/bitcoin/bitcoin/pull/28311/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98>\r\n>    (51)\r\n>\r\n> Patch Links:\r\n>\r\n>    - https://github.com/bitcoin/bitcoin/pull/28311.patch\r\n>    - https://github.com/bitcoin/bitcoin/pull/28311.diff\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bitcoin/pull/28311>, or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AORL367L5NQUE7TACLIEHOTXWQCODANCNFSM6AAAAAA3ZE4L3M>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
      "user": {
        "login": "Satoshin-Btc",
        "id": 60997115,
        "node_id": "MDQ6VXNlcjYwOTk3MTE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/60997115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Satoshin-Btc",
        "html_url": "https://github.com/Satoshin-Btc",
        "followers_url": "https://api.github.com/users/Satoshin-Btc/followers",
        "following_url": "https://api.github.com/users/Satoshin-Btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Satoshin-Btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Satoshin-Btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Satoshin-Btc/subscriptions",
        "organizations_url": "https://api.github.com/users/Satoshin-Btc/orgs",
        "repos_url": "https://api.github.com/users/Satoshin-Btc/repos",
        "events_url": "https://api.github.com/users/Satoshin-Btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Satoshin-Btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1697942392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1697964685,
      "node_id": "IC_kwDOABII585lNOKN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697964685",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:52Z",
      "updated_at": "2023-08-29T18:51:52Z",
      "author_association": "MEMBER",
      "body": "@luke-jr @petertodd As someone that can claim to be your technical peer and with experience in consensus development, I would appreciate if you can publish on the communication space of your convenience the contractual commitment excerpts linking your work on drivechain to the proposal authors themselves . The amount and all personal matters are no public business, though at the very least I hope you have minimal provisions protecting the autonomy of your creative work or ensuring the intellectual outcome respect FOSS licenses.\r\n\r\nWith all my respect, I’m not questioning the legitimacy as an independent technical expert who has accumulated years of hard works of being paid to offer a grounded and in-depth technical opinion on a subject in the scope of its competence. Here I’m just asking for transparency on potential conflict of interest that one would request in all walk of life (law, health, energy) when experts are expressing themselves on a complex subject with potential large-scale and serious impact on the end-users (financial) life.\r\n\r\nPersonally, I have the competence and knowledge to evaluate the proposal both in code and its associated documentation without relying on “domain experts”, though I think other folks in the community would appreciate the ethical effort. \r\n\r\nI understand it’s delicate as a remark though as Rusty Russell [observed](https://rusty-lightning.medium.com/the-corrosion-of-ethics-in-cryptocurrencies-f7ba77e9dfc3) a while back in matters of open-source cryptocurrency development ethics, we’re keeping each other in check as peers. I’ve been in the same situation early last year when I’ve been approached to do a paid security review of the CTV soft-fork and I politely declined. My professional policy for years have been to decline any work commitment related to consensus changes to preserve the independence of my views.\r\n\r\nIf you would like feedback on how to construct ethically and legally such agreement, I’m staying available out of band to provide my viewpoint and relevant information. I don’t think the discussion is appropriate for the GH repository. I’m staying available to discuss the ethics and ideal development process of consensus changes on the mailing list or other forum of discussions. As a community, I think we’re still paying the trauma of a group of Bitcoin dev experts raising millions in VC-funding almost a decade ago to promise new technology and corresponding consensus changes and finding themselves in a massive situation of conflict of interests with the rest of the ecosystem, whatever the great achievements they have realized on a lot of significant fronts.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1697964685",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "mentioned",
      "id": 10224706104,
      "node_id": "MEE_lADOABII585u40PJzwAAAAJhcKI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224706104",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:52Z"
    },
    {
      "event": "subscribed",
      "id": 10224706112,
      "node_id": "SE_lADOABII585u40PJzwAAAAJhcKJA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224706112",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:52Z"
    },
    {
      "event": "mentioned",
      "id": 10224706122,
      "node_id": "MEE_lADOABII585u40PJzwAAAAJhcKJK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224706122",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:52Z"
    },
    {
      "event": "subscribed",
      "id": 10224706131,
      "node_id": "SE_lADOABII585u40PJzwAAAAJhcKJT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224706131",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:52Z"
    },
    {
      "event": "commented",
      "id": 1698057367,
      "node_id": "IC_kwDOABII585lNkyX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1698057367",
      "actor": {
        "login": "RicYashiroLee",
        "id": 111360343,
        "node_id": "U_kgDOBqM5Vw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111360343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RicYashiroLee",
        "html_url": "https://github.com/RicYashiroLee",
        "followers_url": "https://api.github.com/users/RicYashiroLee/followers",
        "following_url": "https://api.github.com/users/RicYashiroLee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RicYashiroLee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RicYashiroLee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RicYashiroLee/subscriptions",
        "organizations_url": "https://api.github.com/users/RicYashiroLee/orgs",
        "repos_url": "https://api.github.com/users/RicYashiroLee/repos",
        "events_url": "https://api.github.com/users/RicYashiroLee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RicYashiroLee/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T20:06:25Z",
      "updated_at": "2023-08-29T20:06:25Z",
      "author_association": "NONE",
      "body": "> This is a (rough draft) clean rewrite of BIP300 (Drivechain) consensus-level code.\r\n> \r\n> Instead of a separate sidechain database (which may be prone to hard-to-review/test consistency issues), instead the unusable 8 MSB of the UTXO index are reserved for non-UTXO database entries, and the existing UTXO db and caching layer is shared. This can be refactored in the future, but I think it is the cleanest and most reviewable approach initially - open to other ideas, though. There's also some ugliness in the undo data to handle restoring the new data, but it's abstracted and shouldn't be too hard to reason about.\r\n> \r\n> Using these new primitives, Drivechains can be reimplemented with a UTXO-like model. Note that there is zero activation logic in the current PR: the protocol changes are _always_ active. Therefore, this will _not_ work (at least not safely) on Bitcoin today, and cannot be deployed without significant additional changes to handle an activation.\r\n> \r\n> A new `SERIALIZE_TRANSACTION_FOR_WEIGHT` serialization flag is also added, that is meant only for weight counting. This allows for adjusting weight (upward) to fit additional resource requirements by new functionality. In this case, several Drivechain \"messages\" are expected to have a larger burden than their `OP_RETURN` encoding would otherwise weigh. However, the specific adjustments are not implemented in this draft.\r\n> \r\n> As a consensus change, this can only be implemented with community support. Many people seem to have opinions, but please keep them to other forums. Despite providing and continuing this implementation, I myself do not thereby endorse or otherwise comment on the proposal itself.\r\n> \r\n> Therefore, not looking for concept ACKs/NACKs (ie, about Drivechains), just _Approach_ ACKs / constructive criticism (ie, about _how_ I'm implementing it).\r\n\r\nNACK, concept, approach, all. IMV Bitcoin is NOT made for the BIP/PR mania, Core Devs profit absolutely from. Any Core Devs, are by definition, not the ones to decide anything due to lack of exemption as service providers in Bitcoin, not unbiased customers/node operators(the only unbiased who must decide about their OWN property). It is for long been that Devs keep pushing node operators out of the decisions that belong solely to them as owners of Bitcoin, NOT to Devs, NOT to miners. Instead of coding every time an OPTION in full nodes software to allow (UN)SUPPORT for each non-stop new BIP/PR mania non-bug fixing CHANGE to Bitcoin, they discretely discuss things in a 'only for the experts central Hub' environment, like this one in GitHub and less user friendly, MS-DOS/command prompt like and as geeky as possible, JUST LIKE ALTCOINERS DID when inventing a lot of weird new jargon for things that always existed, so that all the idiots could eat their very shady technical jargon in speculative marvel and fiat dollar signs in their eyes.",
      "user": {
        "login": "RicYashiroLee",
        "id": 111360343,
        "node_id": "U_kgDOBqM5Vw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111360343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RicYashiroLee",
        "html_url": "https://github.com/RicYashiroLee",
        "followers_url": "https://api.github.com/users/RicYashiroLee/followers",
        "following_url": "https://api.github.com/users/RicYashiroLee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RicYashiroLee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RicYashiroLee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RicYashiroLee/subscriptions",
        "organizations_url": "https://api.github.com/users/RicYashiroLee/orgs",
        "repos_url": "https://api.github.com/users/RicYashiroLee/repos",
        "events_url": "https://api.github.com/users/RicYashiroLee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RicYashiroLee/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698057367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1698069523,
      "node_id": "IC_kwDOABII585lNnwT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1698069523",
      "actor": {
        "login": "curly60e",
        "id": 55191248,
        "node_id": "MDQ6VXNlcjU1MTkxMjQ4",
        "avatar_url": "https://avatars.githubusercontent.com/u/55191248?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/curly60e",
        "html_url": "https://github.com/curly60e",
        "followers_url": "https://api.github.com/users/curly60e/followers",
        "following_url": "https://api.github.com/users/curly60e/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/curly60e/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/curly60e/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/curly60e/subscriptions",
        "organizations_url": "https://api.github.com/users/curly60e/orgs",
        "repos_url": "https://api.github.com/users/curly60e/repos",
        "events_url": "https://api.github.com/users/curly60e/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/curly60e/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T20:17:11Z",
      "updated_at": "2023-08-29T20:17:11Z",
      "author_association": "NONE",
      "body": "I emphatically do not support this Pull request.",
      "user": {
        "login": "curly60e",
        "id": 55191248,
        "node_id": "MDQ6VXNlcjU1MTkxMjQ4",
        "avatar_url": "https://avatars.githubusercontent.com/u/55191248?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/curly60e",
        "html_url": "https://github.com/curly60e",
        "followers_url": "https://api.github.com/users/curly60e/followers",
        "following_url": "https://api.github.com/users/curly60e/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/curly60e/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/curly60e/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/curly60e/subscriptions",
        "organizations_url": "https://api.github.com/users/curly60e/orgs",
        "repos_url": "https://api.github.com/users/curly60e/repos",
        "events_url": "https://api.github.com/users/curly60e/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/curly60e/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698069523",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1698560268,
      "node_id": "IC_kwDOABII585lPfkM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1698560268",
      "actor": {
        "login": "amtriorix",
        "id": 39158975,
        "node_id": "MDQ6VXNlcjM5MTU4OTc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39158975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amtriorix",
        "html_url": "https://github.com/amtriorix",
        "followers_url": "https://api.github.com/users/amtriorix/followers",
        "following_url": "https://api.github.com/users/amtriorix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amtriorix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amtriorix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amtriorix/subscriptions",
        "organizations_url": "https://api.github.com/users/amtriorix/orgs",
        "repos_url": "https://api.github.com/users/amtriorix/repos",
        "events_url": "https://api.github.com/users/amtriorix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amtriorix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T06:21:27Z",
      "updated_at": "2023-08-30T06:21:27Z",
      "author_association": "NONE",
      "body": "Approach NACK.  Also the promotor does block people who debate on this issue on twitter.  If You propose a BIP You defend it with arguments, not with money and propaganda.  This proposal paves the way to abuse the reward system.  People who contribute to mine bitcoin have the right to receive real bitcoin not some reward on a sidechain.  And what happens if the sidechain gets issues with the mainchain to merge etc.  This idea is totally unsafe and my eye is on stratum.",
      "user": {
        "login": "amtriorix",
        "id": 39158975,
        "node_id": "MDQ6VXNlcjM5MTU4OTc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39158975?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amtriorix",
        "html_url": "https://github.com/amtriorix",
        "followers_url": "https://api.github.com/users/amtriorix/followers",
        "following_url": "https://api.github.com/users/amtriorix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amtriorix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amtriorix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amtriorix/subscriptions",
        "organizations_url": "https://api.github.com/users/amtriorix/orgs",
        "repos_url": "https://api.github.com/users/amtriorix/repos",
        "events_url": "https://api.github.com/users/amtriorix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amtriorix/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698560268",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1698616829,
      "node_id": "IC_kwDOABII585lPtX9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1698616829",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T07:09:29Z",
      "updated_at": "2023-08-30T07:09:29Z",
      "author_association": "NONE",
      "body": "I thought that this part was admirably clear:\n\n> Many people seem to have opinions, but please keep them to other forums. Despite providing and continuing this implementation, I myself do not thereby endorse or otherwise comment on the proposal itself.\n> \n> Therefore, not looking for concept ACKs/NACKs (ie, about Drivechains), just Approach ACKs / constructive criticism (ie, about how I'm implementing it).\n\nThis area is for discussing the Approach/Implementation. Everything else is off-topic.\n\nAny skeptics or opponents of DC should at least pretend to want to see a real implementation, before dismissing it. After all, pre-implementation the idea is inherently unfinished.",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1698616829",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "commented",
      "id": 1699442534,
      "node_id": "IC_kwDOABII585lS29m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699442534",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T15:56:43Z",
      "updated_at": "2023-08-30T15:56:43Z",
      "author_association": "MEMBER",
      "body": "@psztorc\r\n\r\n> This area is for discussing the Approach/Implementation. Everything else is off-topic.\r\n\r\nThere is an uncertainty on the open-source status of the technical contributions due to the apparent mode of financial compensation of the \"champions\" developers, among other issues. While this might be acceptable for a lot of contributions in other areas of the Bitcoin ecosystem, here we're talking about consensus changes in a $500B ecosystem, any exposure due to uncertain license on key components might taint the rest of the open-source Bitcoin software. I think we've already enough issues with CSW lawsuits from now on to minimize the legal exposure of all ecosystem stakeholders, in my reasonable opinion.\r\n\r\nThis type of discussion happens, among other forums, on the Github repository. E.g #28175.\r\n\r\n> Any skeptics or opponents of DC should at least pretend to want to see a real implementation, before dismissing it. After all, pre-implementation the idea is inherently unfinished.\r\n\r\nI've never seen any Bitcoin Core commit or substantial review on delicate critical components realized under your pseudonym, or even substantial technical contributions on deployed and with real-world usage multi-party applications or contracting protocols (e.g payment channels), so I don't know your level of understanding of the Bitcoin network, protocols architecture and ecosystem. Even when an idea is fully fleshed out in code and once it deployed you have unmeasurable security, safety and compatibility maintenance costs beared by the whole ecosystem ad vitam aeternam (i.e\r\nas long as Bitcoin is around for the next decaces/centuries hopefully). Additionally, it also increases the development cost on all the affected Bitcoin systems: miner stack, mempool and transaction-relay, lightning, vaults, data carriage cost as investigating for the lack or the finding of potentially harmful interactions due to modified miner incentives is a very high technical bar.\r\n\r\nPersonally, I don't have strong technical opinion on DC / sidechains, as with any complex technical matter this is far from being a \"binary\" subject. All I know is we're Aug 30 (depending your timezone) and there is far enough hard technical issues to review and test for the coming year (package relay, assumeutxo, libitcoinkernel, bip324, _maybe maybe_ APO, transaction-relay policy improvement for data carriage usage). Speaking for myself and myself only, this is not worthy to allocate high-caliber technical review time (in a pure FOSS fashion without financial compensation to preserve independence of my judgement) on a consensus changes project with that level of uncertainty in its development process, at the very least until next year Aug 30 2024. By then, I hope project champions will have clarified the development and technical evaluation process of DC.\r\n\r\nIf you would like to discuss in depth the ethics of Bitcoin consensus changes, what lessons can be sketched out from the failed activation of CTV by its champion Jeremy Rubin last year or the best development practices of critical Bitcoin components, I'm staying available to discuss it during in person at a panel or another public format at a Bitcoin conference during the coming years.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1699442534",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "mentioned",
      "id": 10234874799,
      "node_id": "MEE_lADOABII585u40PJzwAAAAJiC8uv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10234874799",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T15:56:44Z"
    },
    {
      "event": "subscribed",
      "id": 10234874814,
      "node_id": "SE_lADOABII585u40PJzwAAAAJiC8u-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10234874814",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T15:56:44Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300852973",
      "pull_request_review_id": 1588200210,
      "id": 1300852973,
      "node_id": "PRRC_kwDOABII585NiXDt",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];\n+            // TODO: Implement formats 3+? Or at least validate\n+                // NOTE data_format 2 changed to 0 FIXME\n+                // TODO: (new) data format 2 sets it to the ACKs from the previous block - but those aren't known, have the same cost, and encourages blind upvoting; so can we get rid of it?\n+                // TODO: data format 3 upvotes any bundle leading its rivals by at least 50 ACKs -- also encourages blind upvoting :/\n+            // TODO: How is vote vector actually encoded?\n+            // TODO: Block is invalid if there are no bundles proposed at all\n+            // FIXME: Presumably blocks should only be able to vote once - this is missing in the BIP\n+            for (int sidechain_id = 0; sidechain_id < 0x100; ++sidechain_id) {\n+                // FIXME: bounds checking\n+                // FIXME: skip votes for sidechains with no proposals\n+                uint16_t vote = out.scriptPubKey[6 + (sidechain_id * data_format)];\n+                if (data_format == 2) {\n+                    vote |= uint16_t{out.scriptPubKey[6 + (sidechain_id * data_format) + 1]} << 8;\n+                } else if (vote >= 0xfe) {\n+                    vote |= 0xff00;\n+                }\n+\n+                if (vote == 0xffff) continue;  // abstain\n+\n+                // FIXME: what if it's missing?\n+                CDataStream withdraw_proposals = GetDBEntry(view, {uint256{(uint8_t)sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST});\n+                uint256 bundle_hash;\n+                bool found_bundle{false};\n+                for (uint16_t bundle_hash_num = 0; !withdraw_proposals.eof(); ++bundle_hash_num) {\n+                    withdraw_proposals >> bundle_hash;\n+                    if (bundle_hash_num == vote) found_bundle = true;\n+                    IncrementDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, (bundle_hash_num == vote) ? 1 : -1);\n+                }\n+                if ((!found_bundle) && vote != 0xfffe) {\n+                    return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-ack-nonexistent\");\n+                }\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_PROPOSE)) {\n+            if (out.scriptPubKey.size() != 0x26) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            uint256 bundle_hash;\n+            uint8_t sidechain_id;\n+            try {\n+                s >> bundle_hash;\n+                s >> sidechain_id;\n+            } catch (...) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+\n+            if (GetDBEntry(view, {uint256{sidechain_id}, DBIDX_SIDECHAIN_DATA}).empty()) {\n+                // \"M3 is ignored...if it is for a sidechain that doesn't exist.\"\n+                continue;\n+            }\n+\n+            // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+            // TODO: maybe define this in the BIP and M3 ?\n+            bundle_hash = CalculateDrivechainWithdrawInternalHash(bundle_hash, sidechain_id);\n+\n+            // \"M3 is invalid if...This block already has an M3 for that nSidechain.\"\n+            if (saw_withdraw_proposed_for_sidechain.find(sidechain_id) != saw_withdraw_proposed_for_sidechain.end()) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-multiple\");\n+            }\n+            saw_withdraw_proposed_for_sidechain.insert(sidechain_id);\n+\n+            // FIXME: \"M3 is invalid if...A bundle with this hash already paid out. A bundle with this hash was rejected in the past.\" is not practical to track!\n+\n+            if (!GetDBEntry(view, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}).empty()) {\n+                // Withdraw has already been proposed, invalid\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-duplicate\");\n+            }\n+\n+            ModifyDBEntry(view, txundo, block_height, {uint256{sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST}, [&bundle_hash](CDataStream& withdraw_proposals){\n+                withdraw_proposals << bundle_hash;\n+            });\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, s);\n+\n+            withdraw_proposal_list.resize(withdraw_proposal_list.size() + bundle_hash.size());\n+            memcpy(&withdraw_proposal_list.data()[withdraw_proposal_list.size() - bundle_hash.size()], bundle_hash.data(), bundle_hash.size());  // FIXME: C++ify\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_ACK)) {\n+            if (saw_sidechain_acks) {\n+                // FIXME: shouldn't it be possible to ACK multiple proposals for different sidechain ids??\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-multiple\");\n+            }\n+            saw_sidechain_acks = true;\n+\n+            if (out.scriptPubKey.size() != 0x25) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unparsable\");\n+            }\n+            const uint256 sidechain_proposal_hash{Span{&out.scriptPubKey[5], 0x20}};\n+            try {\n+                IncrementDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, 1);\n+            } catch (...) {  // TODO: make this explicitly for a non-existent entry\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unknown\");\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_PROPOSE)) {\n+            if (proposed_a_sidechain) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-multiple\");\n+            }\n+            proposed_a_sidechain = true;\n+\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            Sidechain proposed;\n+            try {\n+                s >> proposed;\n+            } catch (...) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-unparsable\");\n+            }\n+\n+            // TODO: block is invalid if proposed matches the current sidechain\n+\n+            uint256 sidechain_proposal_hash;\n+            CSHA256().Write(out.scriptPubKey.data() + 5, out.scriptPubKey.size() - 5).Finalize(sidechain_proposal_hash.data());\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL}, s);\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, s);\n+\n+            sidechain_proposal_list.resize(sidechain_proposal_list.size() + sidechain_proposal_hash.size());\n+            memcpy(&sidechain_proposal_list.data()[sidechain_proposal_list.size() - sidechain_proposal_hash.size()], sidechain_proposal_hash.data(), sidechain_proposal_hash.size());  // FIXME: C++ify\n+        }\n+    }\n+\n+    if (!(sidechain_proposal_list.empty() && withdraw_proposal_list.empty())) {\n+        CDataStream proposal_list(SER_NETWORK, PROTOCOL_VERSION);\n+        proposal_list << sidechain_proposal_list;\n+        proposal_list << withdraw_proposal_list;\n+        CreateDBEntry(view, txundo, block_height, {ArithToUint256(arith_uint256{(uint64_t)block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST}, proposal_list);\n+    }\n+\n+    // Perform sidechain overwriting/expiry and withdraw expiry\n+    int completed_block_height = block_height - (SIDECHAIN_WITHDRAW_PERIOD - 1);\n+    COutPoint record_id{ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST};\n+    CDataStream completed_proposal_list = GetDBEntry(view, record_id);\n+    if (!completed_proposal_list.empty()) {\n+        DeleteDBEntry(view, txundo, record_id);\n+        completed_proposal_list >> sidechain_proposal_list;\n+        completed_proposal_list >> withdraw_proposal_list;\n+\n+        for (size_t i = 0; i < sidechain_proposal_list.size(); i += uint256::size()) {\n+            uint256 sidechain_proposal_hash{Span{&sidechain_proposal_list[i], uint256::size()}};\n+            record_id.hash = sidechain_proposal_hash;\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL_ACKS;\n+            uint16_t acks;\n+            {\n+                CDataStream acks_s = GetDBEntry(view, record_id);\n+                Assert(!acks_s.empty());\n+                acks_s >> acks;\n+            }\n+            if (acks >= SIDECHAIN_WITHDRAW_THRESHOLD) {\n+                // Overwrite an existing sidechain with a new one\n+                CDataStream proposal_s = GetDBEntry(view, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL});\n+                Assert(!proposal_s.empty());\n+                Sidechain proposal;\n+                proposal_s >> proposal;\n+\n+                COutPoint sidechain_record_id{uint256{proposal.idnum}, DBIDX_SIDECHAIN_DATA};\n+                DeleteDBEntry(view, txundo, sidechain_record_id);\n+                CreateDBEntry(view, txundo, block_height, sidechain_record_id, proposal_s);\n+            }\n+            DeleteDBEntry(view, txundo, record_id);\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL;\n+            DeleteDBEntry(view, txundo, record_id);\n+        }\n+\n+        for (size_t i = 0; i < withdraw_proposal_list.size(); i += uint256::size()) {\n+            uint256 withdraw_proposal_hash{Span{&withdraw_proposal_list[i], uint256::size()}};\n+            // FIXME: remove from DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST\n+            DeleteDBEntry(view, txundo, {withdraw_proposal_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS});\n+        }\n+    }\n+\n+    // New sidechain activation\n+    completed_block_height = block_height - (SIDECHAIN_ACTIVATION_PERIOD - 1);\n+    completed_proposal_list = GetDBEntry(view, {ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST});\n+    if (!completed_proposal_list.empty()) {\n+        completed_proposal_list >> sidechain_proposal_list;\n+        completed_proposal_list >> withdraw_proposal_list;\n+\n+        std::vector<unsigned char> sidechain_proposal_list_new;\n+        std::set<uint8_t> new_sidechains_activated;\n+        for (size_t i = 0; i < sidechain_proposal_list.size(); i += uint256::size()) {\n+            uint256 sidechain_proposal_hash{Span{&sidechain_proposal_list[i], uint256::size()}};\n+            CDataStream proposal_s = GetDBEntry(view, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL});\n+            Assert(!proposal_s.empty());\n+            Sidechain proposal;\n+            proposal_s >> proposal;\n+\n+            COutPoint sidechain_record_id{uint256{proposal.idnum}, DBIDX_SIDECHAIN_DATA};\n+            CDataStream old_sidechain_s = GetDBEntry(view, sidechain_record_id);\n+            if (!old_sidechain_s.empty()) {\n+                // This would be an overwrite, so it must wait for the final completion after SIDECHAIN_WITHDRAW_PERIOD\n+                sidechain_proposal_list_new.resize(sidechain_proposal_list_new.size() + sidechain_proposal_hash.size());\n+                memcpy(&sidechain_proposal_list_new.data()[sidechain_proposal_list_new.size() - sidechain_proposal_hash.size()], sidechain_proposal_hash.data(), sidechain_proposal_hash.size());  // FIXME: C++ify\n+                continue;\n+            }\n+\n+            record_id.hash = sidechain_proposal_hash;\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL_ACKS;\n+            uint16_t acks;\n+            {\n+                CDataStream acks_s = GetDBEntry(view, record_id);\n+                Assert(!acks_s.empty());\n+                acks_s >> acks;\n+            }\n+            if (acks >= SIDECHAIN_ACTIVATION_THRESHOLD) {\n+                // Activate new sidechain\n+                CreateDBEntry(view, txundo, block_height, sidechain_record_id, proposal_s);\n+                new_sidechains_activated.insert(proposal.idnum);\n+            }\n+            DeleteDBEntry(view, txundo, record_id);\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL;\n+            DeleteDBEntry(view, txundo, record_id);\n+        }\n+\n+        if (!new_sidechains_activated.empty()) {\n+            Assume(sidechain_proposal_list.size() != sidechain_proposal_list_new.size());\n+            // Assign CTIPs\n+            for (size_t output_index = 0; output_index < tx.vout.size(); ++output_index) {\n+                if (!tx.vout[output_index].scriptPubKey.IsDrivechain()) continue;\n+\n+                const uint8_t sidechain_id = tx.vout[output_index].scriptPubKey[DRIVECHAIN_SCRIPT_SIDECHAIN_ID_OFFSET];\n+                if (new_sidechains_activated.find(sidechain_id) == new_sidechains_activated.end()) {\n+                    // TODO: OP_DRIVECHAIN (or OP_NOP5) for a non-activating sidechain id; should this be invalid??\n+                    continue;\n+                }\n+\n+                CDataStream ctip_info(SER_NETWORK, PROTOCOL_VERSION);\n+                ctip_info << sidechain_id;\n+                CreateDBEntry(view, txundo, block_height, {tx.GetHash(), DBIDX_SIDECHAIN_CTIP_INFO}, ctip_info);\n+            }\n+            if (!new_sidechains_activated.empty()) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-activated-without-ctip\");\n+            }\n+        }\n+\n+        if (sidechain_proposal_list.size() != sidechain_proposal_list_new.size()) {\n+            Assume(!new_sidechains_activated.empty());\n+            COutPoint record_id{ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST};\n+            DeleteDBEntry(view, txundo, record_id);\n+\n+            if (!(sidechain_proposal_list_new.empty() && withdraw_proposal_list.empty())) {\n+                CDataStream proposal_list(SER_NETWORK, PROTOCOL_VERSION);\n+                proposal_list << sidechain_proposal_list_new;\n+                proposal_list << withdraw_proposal_list;\n+                CreateDBEntry(view, txundo, block_height, record_id, proposal_list);\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool VerifyDrivechainSpend(const CTransaction& tx, const unsigned int sidechain_input_n, const std::vector<CTxOut>& spent_outputs, const CCoinsViewCache& view, TxValidationState& state) {\n+    const CTxIn& sidechain_input = tx.vin[sidechain_input_n];\n+    // TODO: Do we want to verify there's only one sidechain involved? BIP300 says yes, but why?\n+\n+    // Lookup sidechain number from CTIP and ensure this is in fact a CTIP to begin with\n+    // FIXME: It might be a good idea to include the sidechain # in the tx itself somewhere?",
      "path": "src/sidechain.cpp",
      "position": 363,
      "original_position": 363,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if you had the tx commit to the sidechain number somewhere, I think you could remove it from `CalculateDrivechainWithdrawInternalHash`? ",
      "created_at": "2023-08-22T03:04:05Z",
      "updated_at": "2023-08-22T03:04:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1300852973",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300852973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301640710",
      "pull_request_review_id": 1589433555,
      "id": 1301640710,
      "node_id": "PRRC_kwDOABII585NlXYG",
      "diff_hunk": "@@ -591,6 +591,8 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     break;\n                 }\n \n+                // NOTE: OP_DRIVECHAIN (OP_NOP5) is enforced in VerifyDrivechainSpend\n+\n                 case OP_NOP1: case OP_NOP4: case OP_NOP5:",
      "path": "src/script/interpreter.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OP_NOP2 is no longer here because of CLTV. should we have the `case OP_NOP5:` in the same arm of the switch as `OP_DRIVECHAIN`? Would make it more clear to future readers that OP_NOP5 is the same",
      "created_at": "2023-08-22T13:21:36Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301640710",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301640710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 596,
      "original_line": 596,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301644600",
      "pull_request_review_id": 1589433555,
      "id": 1301644600,
      "node_id": "PRRC_kwDOABII585NlYU4",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {",
      "path": "src/sidechain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do we also need to unwind sidechain db operations (like incrementing of `DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS`) in the undo data?",
      "created_at": "2023-08-22T13:24:24Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301644600",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301644600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301649645",
      "pull_request_review_id": 1589433555,
      "id": 1301649645,
      "node_id": "PRRC_kwDOABII585NlZjt",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1",
      "path": "src/sidechain.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I read the intent here as: the counter will never be < 0. If that's an important correctness property for the sidechain voting, would be nice to spell it out in a comment and/or reify it in an assert after the counter change on line 65",
      "created_at": "2023-08-22T13:27:53Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301649645",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301649645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301656272",
      "pull_request_review_id": 1589433555,
      "id": 1301656272,
      "node_id": "PRRC_kwDOABII585NlbLQ",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains",
      "path": "src/sidechain.cpp",
      "position": 79,
      "original_position": 79,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "between this comment and the fact that the first in/out of the tx are nulled for computing the hash, it sounds like the same withdrawal tx could be provided for multiple sidechains. Is that desired?",
      "created_at": "2023-08-22T13:32:24Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301656272",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301656272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301660385",
      "pull_request_review_id": 1589433555,
      "id": 1301660385,
      "node_id": "PRRC_kwDOABII585NlcLh",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];\n+            // TODO: Implement formats 3+? Or at least validate\n+                // NOTE data_format 2 changed to 0 FIXME\n+                // TODO: (new) data format 2 sets it to the ACKs from the previous block - but those aren't known, have the same cost, and encourages blind upvoting; so can we get rid of it?\n+                // TODO: data format 3 upvotes any bundle leading its rivals by at least 50 ACKs -- also encourages blind upvoting :/\n+            // TODO: How is vote vector actually encoded?\n+            // TODO: Block is invalid if there are no bundles proposed at all\n+            // FIXME: Presumably blocks should only be able to vote once - this is missing in the BIP\n+            for (int sidechain_id = 0; sidechain_id < 0x100; ++sidechain_id) {\n+                // FIXME: bounds checking",
      "path": "src/sidechain.cpp",
      "position": 111,
      "original_position": 111,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "probably something like `out.scriptPubKey.size() >= 6 + (0x100 * data_format)`  before we start counting votes",
      "created_at": "2023-08-22T13:35:20Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301660385",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301660385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301663764",
      "pull_request_review_id": 1589433555,
      "id": 1301663764,
      "node_id": "PRRC_kwDOABII585NldAU",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];",
      "path": "src/sidechain.cpp",
      "position": 102,
      "original_position": 102,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is `data_format` variable? if it was something fixed, we could statically determine the block weight increase and also check the size of the scriptpubkey above (after line 94) and bail early if ifs not well-formed",
      "created_at": "2023-08-22T13:37:46Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301663764",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301663764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301667255",
      "pull_request_review_id": 1589433555,
      "id": 1301667255,
      "node_id": "PRRC_kwDOABII585Nld23",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {",
      "path": "src/sidechain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": 1301644600,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah, I see now that `CreateDbEntry` and `DeleteDbEntry` create undo data, and `ModifyDbEntry` calls both of them. Nevermind. Leaving this comment here for future reviewers",
      "created_at": "2023-08-22T13:40:10Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301667255",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301667255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301673754",
      "pull_request_review_id": 1589433555,
      "id": 1301673754,
      "node_id": "PRRC_kwDOABII585Nlfca",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];\n+            // TODO: Implement formats 3+? Or at least validate\n+                // NOTE data_format 2 changed to 0 FIXME\n+                // TODO: (new) data format 2 sets it to the ACKs from the previous block - but those aren't known, have the same cost, and encourages blind upvoting; so can we get rid of it?\n+                // TODO: data format 3 upvotes any bundle leading its rivals by at least 50 ACKs -- also encourages blind upvoting :/\n+            // TODO: How is vote vector actually encoded?\n+            // TODO: Block is invalid if there are no bundles proposed at all\n+            // FIXME: Presumably blocks should only be able to vote once - this is missing in the BIP\n+            for (int sidechain_id = 0; sidechain_id < 0x100; ++sidechain_id) {\n+                // FIXME: bounds checking\n+                // FIXME: skip votes for sidechains with no proposals\n+                uint16_t vote = out.scriptPubKey[6 + (sidechain_id * data_format)];\n+                if (data_format == 2) {\n+                    vote |= uint16_t{out.scriptPubKey[6 + (sidechain_id * data_format) + 1]} << 8;\n+                } else if (vote >= 0xfe) {\n+                    vote |= 0xff00;\n+                }\n+\n+                if (vote == 0xffff) continue;  // abstain\n+\n+                // FIXME: what if it's missing?\n+                CDataStream withdraw_proposals = GetDBEntry(view, {uint256{(uint8_t)sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST});\n+                uint256 bundle_hash;\n+                bool found_bundle{false};\n+                for (uint16_t bundle_hash_num = 0; !withdraw_proposals.eof(); ++bundle_hash_num) {\n+                    withdraw_proposals >> bundle_hash;\n+                    if (bundle_hash_num == vote) found_bundle = true;\n+                    IncrementDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, (bundle_hash_num == vote) ? 1 : -1);\n+                }\n+                if ((!found_bundle) && vote != 0xfffe) {\n+                    return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-ack-nonexistent\");\n+                }\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_PROPOSE)) {\n+            if (out.scriptPubKey.size() != 0x26) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            uint256 bundle_hash;\n+            uint8_t sidechain_id;\n+            try {\n+                s >> bundle_hash;\n+                s >> sidechain_id;\n+            } catch (...) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+\n+            if (GetDBEntry(view, {uint256{sidechain_id}, DBIDX_SIDECHAIN_DATA}).empty()) {\n+                // \"M3 is ignored...if it is for a sidechain that doesn't exist.\"\n+                continue;\n+            }\n+\n+            // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+            // TODO: maybe define this in the BIP and M3 ?\n+            bundle_hash = CalculateDrivechainWithdrawInternalHash(bundle_hash, sidechain_id);\n+\n+            // \"M3 is invalid if...This block already has an M3 for that nSidechain.\"\n+            if (saw_withdraw_proposed_for_sidechain.find(sidechain_id) != saw_withdraw_proposed_for_sidechain.end()) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-multiple\");\n+            }\n+            saw_withdraw_proposed_for_sidechain.insert(sidechain_id);\n+\n+            // FIXME: \"M3 is invalid if...A bundle with this hash already paid out. A bundle with this hash was rejected in the past.\" is not practical to track!\n+\n+            if (!GetDBEntry(view, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}).empty()) {\n+                // Withdraw has already been proposed, invalid\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-duplicate\");\n+            }\n+\n+            ModifyDBEntry(view, txundo, block_height, {uint256{sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST}, [&bundle_hash](CDataStream& withdraw_proposals){\n+                withdraw_proposals << bundle_hash;\n+            });\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, s);\n+\n+            withdraw_proposal_list.resize(withdraw_proposal_list.size() + bundle_hash.size());\n+            memcpy(&withdraw_proposal_list.data()[withdraw_proposal_list.size() - bundle_hash.size()], bundle_hash.data(), bundle_hash.size());  // FIXME: C++ify\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_ACK)) {\n+            if (saw_sidechain_acks) {\n+                // FIXME: shouldn't it be possible to ACK multiple proposals for different sidechain ids??\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-multiple\");\n+            }\n+            saw_sidechain_acks = true;\n+\n+            if (out.scriptPubKey.size() != 0x25) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unparsable\");\n+            }\n+            const uint256 sidechain_proposal_hash{Span{&out.scriptPubKey[5], 0x20}};\n+            try {\n+                IncrementDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, 1);\n+            } catch (...) {  // TODO: make this explicitly for a non-existent entry\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unknown\");\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_PROPOSE)) {\n+            if (proposed_a_sidechain) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-multiple\");\n+            }\n+            proposed_a_sidechain = true;\n+\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            Sidechain proposed;\n+            try {\n+                s >> proposed;\n+            } catch (...) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-unparsable\");\n+            }\n+\n+            // TODO: block is invalid if proposed matches the current sidechain\n+\n+            uint256 sidechain_proposal_hash;\n+            CSHA256().Write(out.scriptPubKey.data() + 5, out.scriptPubKey.size() - 5).Finalize(sidechain_proposal_hash.data());\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL}, s);\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, s);\n+\n+            sidechain_proposal_list.resize(sidechain_proposal_list.size() + sidechain_proposal_hash.size());\n+            memcpy(&sidechain_proposal_list.data()[sidechain_proposal_list.size() - sidechain_proposal_hash.size()], sidechain_proposal_hash.data(), sidechain_proposal_hash.size());  // FIXME: C++ify\n+        }\n+    }\n+\n+    if (!(sidechain_proposal_list.empty() && withdraw_proposal_list.empty())) {\n+        CDataStream proposal_list(SER_NETWORK, PROTOCOL_VERSION);\n+        proposal_list << sidechain_proposal_list;\n+        proposal_list << withdraw_proposal_list;\n+        CreateDBEntry(view, txundo, block_height, {ArithToUint256(arith_uint256{(uint64_t)block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST}, proposal_list);\n+    }\n+\n+    // Perform sidechain overwriting/expiry and withdraw expiry\n+    int completed_block_height = block_height - (SIDECHAIN_WITHDRAW_PERIOD - 1);\n+    COutPoint record_id{ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST};\n+    CDataStream completed_proposal_list = GetDBEntry(view, record_id);\n+    if (!completed_proposal_list.empty()) {\n+        DeleteDBEntry(view, txundo, record_id);\n+        completed_proposal_list >> sidechain_proposal_list;\n+        completed_proposal_list >> withdraw_proposal_list;\n+\n+        for (size_t i = 0; i < sidechain_proposal_list.size(); i += uint256::size()) {\n+            uint256 sidechain_proposal_hash{Span{&sidechain_proposal_list[i], uint256::size()}};\n+            record_id.hash = sidechain_proposal_hash;\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL_ACKS;\n+            uint16_t acks;\n+            {\n+                CDataStream acks_s = GetDBEntry(view, record_id);\n+                Assert(!acks_s.empty());\n+                acks_s >> acks;\n+            }\n+            if (acks >= SIDECHAIN_WITHDRAW_THRESHOLD) {\n+                // Overwrite an existing sidechain with a new one",
      "path": "src/sidechain.cpp",
      "position": 255,
      "original_position": 255,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do we want to also explicitly delete any lingering `DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST` entries for the deleted sidechain?",
      "created_at": "2023-08-22T13:44:47Z",
      "updated_at": "2023-08-22T13:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1301673754",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1301673754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302103707",
      "pull_request_review_id": 1590185947,
      "id": 1302103707,
      "node_id": "PRRC_kwDOABII585NnIab",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];",
      "path": "src/sidechain.cpp",
      "position": 102,
      "original_position": 102,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": 1301663764,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree. I'm not sure what the intent is for it. It seems to be based on a mistaken assumption that serialized bytes are a resource to minimise. But for now, this implements [most of] the current BIP draft.",
      "created_at": "2023-08-22T19:32:30Z",
      "updated_at": "2023-08-22T19:32:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1302103707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302103707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    }
  ]
}