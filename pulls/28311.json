{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311",
    "id": 1483797808,
    "node_id": "PR_kwDOABII585YcPUw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28311",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28311.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28311.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
    "number": 28311,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[WIP] BIP300 (Drivechains) consensus-level logic",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a (rough draft) clean rewrite of BIP300 (Drivechain) consensus-level code.\r\n\r\nInstead of a separate sidechain database (which may be prone to hard-to-review/test consistency issues), instead the unusable 8 MSB of the UTXO index are reserved for non-UTXO database entries, and the existing UTXO db and caching layer is shared. This can be refactored in the future, but I think it is the cleanest and most reviewable approach initially - open to other ideas, though. There's also some ugliness in the undo data to handle restoring the new data, but it's abstracted and shouldn't be too hard to reason about.\r\n\r\nUsing these new primitives, Drivechains can be reimplemented with a UTXO-like model. Note that there is zero activation logic in the current PR: the protocol changes are *always* active. Therefore, this will *not* work (at least not safely) on Bitcoin today, and cannot be deployed without significant additional changes to handle an activation.\r\n\r\nA new `SERIALIZE_TRANSACTION_FOR_WEIGHT` serialization flag is also added, that is meant only for weight counting. This allows for adjusting weight (upward) to fit additional resource requirements by new functionality. In this case, several Drivechain \"messages\" are expected to have a larger burden than their `OP_RETURN` encoding would otherwise weigh. However, the specific adjustments are not implemented in this draft.\r\n\r\nAs a consensus change, this can only be implemented with community support. Many people seem to have opinions, but please keep them to other forums. Despite providing and continuing this implementation, I myself do not thereby endorse or otherwise comment on the proposal itself.\r\n\r\nTherefore, not looking for concept ACKs/NACKs, just *Approach* ACKs / constructive criticism.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-22T01:17:13Z",
    "updated_at": "2023-08-22T03:04:06Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "a3d1262e14dddbe31847c6cb91511b0b22c4a767",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "luke-jr:bip300",
      "ref": "bip300",
      "sha": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 2514537,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNTE0NTM3",
        "name": "bitcoin",
        "full_name": "luke-jr/bitcoin",
        "owner": {
          "login": "luke-jr",
          "id": 1095675,
          "node_id": "MDQ6VXNlcjEwOTU2NzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/luke-jr",
          "html_url": "https://github.com/luke-jr",
          "followers_url": "https://api.github.com/users/luke-jr/followers",
          "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
          "organizations_url": "https://api.github.com/users/luke-jr/orgs",
          "repos_url": "https://api.github.com/users/luke-jr/repos",
          "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/luke-jr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/luke-jr/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/luke-jr/bitcoin",
        "archive_url": "https://api.github.com/repos/luke-jr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/luke-jr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/luke-jr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/luke-jr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/luke-jr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/luke-jr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/luke-jr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/luke-jr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/luke-jr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/luke-jr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/luke-jr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/luke-jr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/luke-jr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/luke-jr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/luke-jr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/luke-jr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/luke-jr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/luke-jr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/luke-jr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/luke-jr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/luke-jr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/luke-jr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/luke-jr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/luke-jr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/luke-jr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/luke-jr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/luke-jr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/luke-jr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/luke-jr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:luke-jr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/luke-jr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/luke-jr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/luke-jr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/luke-jr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/luke-jr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/luke-jr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/luke-jr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/luke-jr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/luke-jr/bitcoin/hooks",
        "svn_url": "https://github.com/luke-jr/bitcoin",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 20,
        "watchers_count": 20,
        "size": 259186,
        "default_branch": "readme",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-22T00:59:24Z",
        "created_at": "2011-10-04T20:22:23Z",
        "updated_at": "2023-03-18T20:43:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ded687334031f4790ef6a36b999fb30a79dcf7b3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35572,
        "stargazers_count": 71006,
        "watchers_count": 71006,
        "size": 236690,
        "default_branch": "master",
        "open_issues_count": 673,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-22T02:55:52Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-22T03:49:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 740,
    "deletions": 62,
    "changed_files": 23,
    "commits": 17,
    "review_comments": 1,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlZTdmNmU2MTVlNTVmOTRjNmYxNDUzZWQ4YTdjZDZjMmMzMGM2MjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
      "tree": {
        "sha": "446baef2cd1b183ddc7424cd4eafcc64352c7791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/446baef2cd1b183ddc7424cd4eafcc64352c7791"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ded687334031f4790ef6a36b999fb30a79dcf7b3",
          "sha": "ded687334031f4790ef6a36b999fb30a79dcf7b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ded687334031f4790ef6a36b999fb30a79dcf7b3"
        }
      ],
      "message": "dbwrapper: Restore `CDBIterator::GetValueSize()`\n\nThis partially reverts commit fb38c6e21f064e23b63a46d15adb873029463cff.\nOriginal code written in 3499ce1e1ad87a86598d00b7124072c91ddad833.",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:47Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:47Z"
      },
      "sha": "7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjNmEyZTE0YjM4MDkwNmNlM2ViN2RiMjhhYzNlMWQwNWJmMGVjNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
      "tree": {
        "sha": "50c3127e9728a0286dc4d3ba8632622d745e058c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50c3127e9728a0286dc4d3ba8632622d745e058c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
          "sha": "7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee7f6e615e55f94c6f1453ed8a7cd6c2c30c623"
        }
      ],
      "message": "txdb: Support for flags which prevent opening with incompatible software",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-05-10T00:37:17Z"
      },
      "sha": "bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwYTUxZWJkZTQ5ZmIzN2NhNWJhYTNjZmQxMjliNWQ4YjBkYWI2MDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
      "tree": {
        "sha": "a9b204ac40babd7f758d946efbb31c5cb1fb7864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9b204ac40babd7f758d946efbb31c5cb1fb7864"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
          "sha": "bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6a2e14b380906ce3eb7db28ac3e1d05bf0ec4c"
        }
      ],
      "message": "Hide COutPoint with n > 0x00ffffff from consensus/transaction handling\n\nThis should be safe since it is impossible for transactions to have more than ~0x0001c000 outputs.\n0xffffffff is used for the coinbase COutPoint n, but wouldn't be looked up in the coins db.",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-05-10T16:36:37Z"
      },
      "sha": "e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmMmMwMTIwN2YxYmExYmQ5MzQ5MmUzZDAwYjZlODQwMTVmMzYyNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df2c01207f1ba1bd93492e3d00b6e84015f36278",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df2c01207f1ba1bd93492e3d00b6e84015f36278",
      "tree": {
        "sha": "d926c0d4d19b6a2affa8405a0807e5f9d669c8a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d926c0d4d19b6a2affa8405a0807e5f9d669c8a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
          "sha": "e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a51ebde49fb37ca5baa3cfd129b5d8b0dab605"
        }
      ],
      "message": "WIP Drivechain via UTXOs",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-10T22:54:43Z"
      },
      "sha": "df2c01207f1ba1bd93492e3d00b6e84015f36278"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjYTY5YzRhZmZlYjI2ZWU2ZjU5NmY5NmVkNTFiNjY3ZDA4Y2RmN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
      "tree": {
        "sha": "ae02a26e5b3362a4493e11c795ec45dc11da68d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae02a26e5b3362a4493e11c795ec45dc11da68d0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df2c01207f1ba1bd93492e3d00b6e84015f36278",
          "sha": "df2c01207f1ba1bd93492e3d00b6e84015f36278",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df2c01207f1ba1bd93492e3d00b6e84015f36278"
        }
      ],
      "message": "primitives/transaction: Implement CTxIn::SetNull",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:02:29Z"
      },
      "sha": "eca69c4affeb26ee6f596f96ed51b667d08cdf7f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0ZWI0NDRmNmJhNjMwZjBlZjAwOTk5OWI3MzI4MmM1MDY4ZWY0ZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
      "tree": {
        "sha": "6d54a4dc53521d71738a5983cbff9b574559f2a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d54a4dc53521d71738a5983cbff9b574559f2a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
          "sha": "eca69c4affeb26ee6f596f96ed51b667d08cdf7f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eca69c4affeb26ee6f596f96ed51b667d08cdf7f"
        }
      ],
      "message": "Implement OP_DRIVECHAIN-based sidechain deposits/withdraws",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:03:28Z"
      },
      "sha": "d4eb444f6ba630f0ef009999b73282c5068ef4fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0OTNiMTVjYjA5NjM5Mzc4OTkzMmM3Y2EyMzcwZmU4Y2ZiMzEwZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2493b15cb096393789932c7ca2370fe8cfb310f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2493b15cb096393789932c7ca2370fe8cfb310f3",
      "tree": {
        "sha": "a77b531b5a7c8a94b6b7e532660828d7e15b6624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a77b531b5a7c8a94b6b7e532660828d7e15b6624"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4eb444f6ba630f0ef009999b73282c5068ef4fd",
          "sha": "d4eb444f6ba630f0ef009999b73282c5068ef4fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4eb444f6ba630f0ef009999b73282c5068ef4fd"
        }
      ],
      "message": "Add SERIALIZE_TRANSACTION_FOR_WEIGHT flag",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:20:23Z"
      },
      "sha": "2493b15cb096393789932c7ca2370fe8cfb310f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjZDc1ZjU1Y2ZlZmRkNDQxYmMxNTA1MjA4Y2ZjNWI2ZGE1Y2UwMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
      "tree": {
        "sha": "a617f7891f842738c6732c7ed59be0c86d767917",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a617f7891f842738c6732c7ed59be0c86d767917"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2493b15cb096393789932c7ca2370fe8cfb310f3",
          "sha": "2493b15cb096393789932c7ca2370fe8cfb310f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2493b15cb096393789932c7ca2370fe8cfb310f3"
        }
      ],
      "message": "primitives/transaction: Stub weight increases for drivechains",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T01:42:35Z"
      },
      "sha": "ecd75f55cfefdd441bc1505208cfc5b6da5ce035"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjMDIxOTA0ODc5MTBjNDE2YWIzNDIzMjEzZTg2N2QyNmRiYmQ4M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c02190487910c416ab3423213e867d26dbbd83f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c02190487910c416ab3423213e867d26dbbd83f",
      "tree": {
        "sha": "2d02d4869e70e76f4c2e9f5537a530dea7c69c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d02d4869e70e76f4c2e9f5537a530dea7c69c7d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
          "sha": "ecd75f55cfefdd441bc1505208cfc5b6da5ce035",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ecd75f55cfefdd441bc1505208cfc5b6da5ce035"
        }
      ],
      "message": "sidechain: Expire sidechain/withdraw proposals",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T17:48:05Z"
      },
      "sha": "4c02190487910c416ab3423213e867d26dbbd83f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0NzgzYTliMGY3Mzc2ZGQxZDJhYTZhYTA1ZjRiYThkY2NkNzBkZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
      "tree": {
        "sha": "57ad858ae57a2d63278c8004986f0f0a54f0e131",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57ad858ae57a2d63278c8004986f0f0a54f0e131"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c02190487910c416ab3423213e867d26dbbd83f",
          "sha": "4c02190487910c416ab3423213e867d26dbbd83f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c02190487910c416ab3423213e867d26dbbd83f"
        }
      ],
      "message": "fixups, simplify record_id confusion in various places",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T18:04:20Z"
      },
      "sha": "04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4ODY3MTMyN2E4NjlmMDNhM2VlYzgyYzg5MWM0NWQ2ZTJmMWI5ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
      "tree": {
        "sha": "182d4dd5cbe46e2f73d26ddc631a11c61dc708c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/182d4dd5cbe46e2f73d26ddc631a11c61dc708c0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
          "sha": "04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04783a9b0f7376dd1d2aa6aa05f4ba8dccd70df2"
        }
      ],
      "message": "sidechain: Hash blinded withdraw hashes with the sidechain id to avoid conflicts",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T18:41:32Z"
      },
      "sha": "d88671327a869f03a3eec82c891c45d6e2f1b9d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdjOGQ3ZTJkNjVmMzYwMWI2Yjg1OTY5OGNlYzg1Y2Q2NjdjMWVkNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
      "tree": {
        "sha": "bfcda83972caaa9854b7fae73e43ab38062fa199",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfcda83972caaa9854b7fae73e43ab38062fa199"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88671327a869f03a3eec82c891c45d6e2f1b9d9",
          "sha": "d88671327a869f03a3eec82c891c45d6e2f1b9d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d88671327a869f03a3eec82c891c45d6e2f1b9d9"
        }
      ],
      "message": "sidechain: INCOMPLETE sidechain activation",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T22:51:05Z"
      },
      "sha": "7c8d7e2d65f3601b6b859698cec85cd667c1ed49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY1NDQ1ODE1MGNkMjczNDNmODg0MmI0ZmU1MDk1M2Q0YzM0MWI3ZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f54458150cd27343f8842b4fe50953d4c341b7f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f54458150cd27343f8842b4fe50953d4c341b7f5",
      "tree": {
        "sha": "8e8ddbe3e7382b82735773ea46c06791427bb7b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e8ddbe3e7382b82735773ea46c06791427bb7b0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
          "sha": "7c8d7e2d65f3601b6b859698cec85cd667c1ed49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8d7e2d65f3601b6b859698cec85cd667c1ed49"
        }
      ],
      "message": "fixups, cast changes to avoid narrowing conversion warnings",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T22:54:24Z"
      },
      "sha": "f54458150cd27343f8842b4fe50953d4c341b7f5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxOTJiYTEyM2QyODNmZWUxOTllZDU5YTI0MGEyYWI4MDI3NTI0MGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2192ba123d283fee199ed59a240a2ab80275240e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2192ba123d283fee199ed59a240a2ab80275240e",
      "tree": {
        "sha": "b5d6e1b120b2a57368db71ebc33636f2b0e467f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5d6e1b120b2a57368db71ebc33636f2b0e467f7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f54458150cd27343f8842b4fe50953d4c341b7f5",
          "sha": "f54458150cd27343f8842b4fe50953d4c341b7f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f54458150cd27343f8842b4fe50953d4c341b7f5"
        }
      ],
      "message": "sidechain: Detect several invalid conditions",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-20T23:35:19Z"
      },
      "sha": "2192ba123d283fee199ed59a240a2ab80275240e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmOTgxNWE5OGRhMmMxZjRkYmRkOWM3NTI5NWIwNjUwZTliMTkxMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
      "tree": {
        "sha": "0774f00cab8866326ae9f5d19c211a7912af795a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0774f00cab8866326ae9f5d19c211a7912af795a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2192ba123d283fee199ed59a240a2ab80275240e",
          "sha": "2192ba123d283fee199ed59a240a2ab80275240e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2192ba123d283fee199ed59a240a2ab80275240e"
        }
      ],
      "message": "Add push1[sidechain id] OP_TRUE after OP_DRIVECHAIN",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T00:47:29Z"
      },
      "sha": "ff9815a98da2c1f4dbdd9c75295b0650e9b19101"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhOGMxYTk2MDQ0NWJkMjUyOWUzOWQ1OGIwMGJlMTM2Y2NkZjM0ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
      "tree": {
        "sha": "8230926fbc9711c7567a6b089213457517b5d1db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8230926fbc9711c7567a6b089213457517b5d1db"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
          "sha": "ff9815a98da2c1f4dbdd9c75295b0650e9b19101",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff9815a98da2c1f4dbdd9c75295b0650e9b19101"
        }
      ],
      "message": "sidechain: Setup DBIDX_SIDECHAIN_CTIP_INFO",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T00:47:47Z"
      },
      "sha": "ea8c1a960445bd2529e39d58b00be136ccdf34d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmYzk3NWJiNjAyOWU5ODJlMmJkNTQyMGQxOGU3Y2EwZDRmNDQxM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "tree": {
        "sha": "88cd3e6cf34c0977a5be6fbdf2c8c5b28a1bd331",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88cd3e6cf34c0977a5be6fbdf2c8c5b28a1bd331"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea8c1a960445bd2529e39d58b00be136ccdf34d9",
          "sha": "ea8c1a960445bd2529e39d58b00be136ccdf34d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea8c1a960445bd2529e39d58b00be136ccdf34d9"
        }
      ],
      "message": "sidechain: Detect more edge cases and document TODOs",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-08-22T00:58:54Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2023-07-21T01:28:11Z"
      },
      "sha": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e"
    },
    {
      "event": "commented",
      "id": 1687269373,
      "node_id": "IC_kwDOABII585kka_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687269373",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T01:17:16Z",
      "updated_at": "2023-08-22T02:16:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach NACK | [russeree](https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687311408) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687269373",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "subscribed",
      "id": 10152231792,
      "node_id": "SE_lADOABII585u40PJzwAAAAJdHsNw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152231792",
      "actor": {
        "login": "alltheseas",
        "id": 64376233,
        "node_id": "MDQ6VXNlcjY0Mzc2MjMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/64376233?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alltheseas",
        "html_url": "https://github.com/alltheseas",
        "followers_url": "https://api.github.com/users/alltheseas/followers",
        "following_url": "https://api.github.com/users/alltheseas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alltheseas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alltheseas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alltheseas/subscriptions",
        "organizations_url": "https://api.github.com/users/alltheseas/orgs",
        "repos_url": "https://api.github.com/users/alltheseas/repos",
        "events_url": "https://api.github.com/users/alltheseas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alltheseas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:13:07Z"
    },
    {
      "event": "commented",
      "id": 1687311408,
      "node_id": "IC_kwDOABII585kklQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687311408",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:15:32Z",
      "updated_at": "2023-08-22T02:16:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach NACK; using bip300 `OP_DRIVECHAIN` to achieve consensus about the validity of a spend is prone to errors or manipulation by miners as to the state of the sidechain thus introducing additional incentives into bitcoin.\r\n\r\nPlease don't take this personally, I love the work you do, personally I want to see a more 'trustless' method of pegouts before adding sidechain communication and spend conditions into BitcoinCore.",
      "user": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#issuecomment-1687311408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28311"
    },
    {
      "event": "labeled",
      "id": 10152310328,
      "node_id": "LE_lADOABII585u40PJzwAAAAJdH_Y4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152310328",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:30:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1588200210,
      "node_id": "PRR_kwDOABII585eqgMS",
      "url": null,
      "actor": null,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#pullrequestreview-1588200210",
      "submitted_at": "2023-08-22T03:04:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300852973",
      "pull_request_review_id": 1588200210,
      "id": 1300852973,
      "node_id": "PRRC_kwDOABII585NiXDt",
      "diff_hunk": "@@ -0,0 +1,466 @@\n+// Copyright (c) 2017-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <sidechain.h>\n+\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <undo.h>\n+#include <util/check.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+\n+void CreateDBUndoData(CTxUndo &txundo, const uint8_t type, const COutPoint& record_id, const Coin& encoded_data) {\n+    Assert(record_id.n <= COutPoint::MAX_INDEX);\n+    Coin& undo = txundo.vprevout.emplace_back();\n+    undo = encoded_data;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    s << record_id;\n+    Assert(s.size() == 0x24);\n+    auto& undo_data = undo.out.scriptPubKey;\n+    undo_data.insert(undo_data.begin(), 1 + s.size(), type);\n+    memcpy(&undo_data[1], &s[0], s.size());  // TODO: figure out how to jump through C++'s hoops to do this right\n+}\n+\n+void CreateDBEntry(CCoinsViewCache& cache, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const Span<const std::byte>& record_data) {\n+    CScript scriptPubKey(UCharCast(record_data.begin()), UCharCast(record_data.end()));\n+    cache.AddCoin(record_id, Coin(CTxOut{0, scriptPubKey}, block_height, /*fCoinbase=*/false), /*overwrite=*/false);\n+\n+    // Create undo data to tell DisconnectBlock to delete it\n+    Coin undo;\n+    CreateDBUndoData(txundo, 1, record_id, undo);\n+}\n+\n+void DeleteDBEntry(CCoinsViewCache& inputs, CTxUndo &txundo, const COutPoint& record_id) {\n+    Coin undo;\n+    bool is_spent = inputs.SpendCoin(record_id, &undo);\n+    assert(is_spent);\n+    CreateDBUndoData(txundo, 0, record_id, undo);\n+}\n+\n+CDataStream GetDBEntry(const CCoinsViewCache& inputs, const COutPoint& record_id) {\n+    const Coin& coin = inputs.AccessCoin(record_id);\n+    return CDataStream(MakeByteSpan(coin.out.scriptPubKey), SER_NETWORK, PROTOCOL_VERSION);\n+}\n+\n+void ModifyDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const std::function<void(CDataStream&)>& modify_func) {\n+    CDataStream s = GetDBEntry(view, record_id);\n+    const bool new_entry = s.empty();\n+    modify_func(s);\n+    if (!new_entry) DeleteDBEntry(view, txundo, record_id);\n+    CreateDBEntry(view, txundo, block_height, record_id, s);\n+}\n+\n+void IncrementDBEntry(CCoinsViewCache& view, CTxUndo &txundo, const int block_height, const COutPoint& record_id, const int change) {\n+    ModifyDBEntry(view, txundo, block_height, record_id, [change](CDataStream& s){\n+        uint16_t counter;\n+        s >> counter;\n+        if (change < 0 && !counter) return;  // may be surprising if change is <-1\n+        counter += change;\n+        s.clear();\n+        s << counter;\n+    });\n+}\n+\n+uint256 CalculateDrivechainWithdrawBlindedHash(const CTransaction& tx) {\n+    CMutableTransaction mtx(tx);\n+    mtx.vin[0].SetNull();\n+    mtx.vout[0].SetNull();\n+    return mtx.GetHash();\n+}\n+\n+uint256 CalculateDrivechainWithdrawInternalHash(const uint256& blinded_hash, const uint8_t sidechain_id) {\n+    // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+    uint256 internal_hash;\n+    CSHA256().Write(blinded_hash.data(), blinded_hash.size()).Write(&sidechain_id, sizeof(sidechain_id)).Finalize(internal_hash.data());\n+    return internal_hash;\n+}\n+\n+bool UpdateDrivechains(const CTransaction& tx, CCoinsViewCache& view, CTxUndo &txundo, int block_height, BlockValidationState& state)\n+{\n+    Assert(tx.IsCoinBase());\n+\n+    std::vector<unsigned char> sidechain_proposal_list, withdraw_proposal_list;\n+    std::set<uint8_t> saw_withdraw_proposed_for_sidechain;\n+    bool proposed_a_sidechain{false}, saw_sidechain_acks{false};\n+\n+    for (auto& out : tx.vout) {\n+        if (out.scriptPubKey.size() < 5) continue;\n+        if (out.scriptPubKey[0] != OP_RETURN) continue;\n+        // FIXME: The rest should probably be serialised, but neither BIP300 nor its reference implementation does that\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_PROPOSE[] = {0xd5, 0xe0, 0xc4, 0xaf};  // n.b. 20 sigops\n+        static constexpr uint8_t BIP300_HEADER_SIDECHAIN_ACK[]     = {0xd6, 0xe1, 0xc5, 0xbf};\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_PROPOSE[]  = {0xd4, 0x5a, 0xa9, 0x43};  // n.b. 67 byte push followed by only 32 bytes\n+        static constexpr uint8_t BIP300_HEADER_WITHDRAW_ACK[]      = {0xd7, 0x7d, 0x17, 0x76};  // n.b. 23-byte push followed by variable bytes\n+        if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_ACK)) {\n+            const uint8_t data_format = out.scriptPubKey[6];\n+            // TODO: Implement formats 3+? Or at least validate\n+                // NOTE data_format 2 changed to 0 FIXME\n+                // TODO: (new) data format 2 sets it to the ACKs from the previous block - but those aren't known, have the same cost, and encourages blind upvoting; so can we get rid of it?\n+                // TODO: data format 3 upvotes any bundle leading its rivals by at least 50 ACKs -- also encourages blind upvoting :/\n+            // TODO: How is vote vector actually encoded?\n+            // TODO: Block is invalid if there are no bundles proposed at all\n+            // FIXME: Presumably blocks should only be able to vote once - this is missing in the BIP\n+            for (int sidechain_id = 0; sidechain_id < 0x100; ++sidechain_id) {\n+                // FIXME: bounds checking\n+                // FIXME: skip votes for sidechains with no proposals\n+                uint16_t vote = out.scriptPubKey[6 + (sidechain_id * data_format)];\n+                if (data_format == 2) {\n+                    vote |= uint16_t{out.scriptPubKey[6 + (sidechain_id * data_format) + 1]} << 8;\n+                } else if (vote >= 0xfe) {\n+                    vote |= 0xff00;\n+                }\n+\n+                if (vote == 0xffff) continue;  // abstain\n+\n+                // FIXME: what if it's missing?\n+                CDataStream withdraw_proposals = GetDBEntry(view, {uint256{(uint8_t)sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST});\n+                uint256 bundle_hash;\n+                bool found_bundle{false};\n+                for (uint16_t bundle_hash_num = 0; !withdraw_proposals.eof(); ++bundle_hash_num) {\n+                    withdraw_proposals >> bundle_hash;\n+                    if (bundle_hash_num == vote) found_bundle = true;\n+                    IncrementDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, (bundle_hash_num == vote) ? 1 : -1);\n+                }\n+                if ((!found_bundle) && vote != 0xfffe) {\n+                    return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-ack-nonexistent\");\n+                }\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_WITHDRAW_PROPOSE)) {\n+            if (out.scriptPubKey.size() != 0x26) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            uint256 bundle_hash;\n+            uint8_t sidechain_id;\n+            try {\n+                s >> bundle_hash;\n+                s >> sidechain_id;\n+            } catch (...) {\n+                // \"M3 is ignored if it does not parse\"\n+                continue;\n+            }\n+\n+            if (GetDBEntry(view, {uint256{sidechain_id}, DBIDX_SIDECHAIN_DATA}).empty()) {\n+                // \"M3 is ignored...if it is for a sidechain that doesn't exist.\"\n+                continue;\n+            }\n+\n+            // Internally, we hash the bundle_hash with the sidechain_id to avoid conflicts between sidechains\n+            // TODO: maybe define this in the BIP and M3 ?\n+            bundle_hash = CalculateDrivechainWithdrawInternalHash(bundle_hash, sidechain_id);\n+\n+            // \"M3 is invalid if...This block already has an M3 for that nSidechain.\"\n+            if (saw_withdraw_proposed_for_sidechain.find(sidechain_id) != saw_withdraw_proposed_for_sidechain.end()) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-multiple\");\n+            }\n+            saw_withdraw_proposed_for_sidechain.insert(sidechain_id);\n+\n+            // FIXME: \"M3 is invalid if...A bundle with this hash already paid out. A bundle with this hash was rejected in the past.\" is not practical to track!\n+\n+            if (!GetDBEntry(view, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}).empty()) {\n+                // Withdraw has already been proposed, invalid\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-withdraw-propose-duplicate\");\n+            }\n+\n+            ModifyDBEntry(view, txundo, block_height, {uint256{sidechain_id}, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST}, [&bundle_hash](CDataStream& withdraw_proposals){\n+                withdraw_proposals << bundle_hash;\n+            });\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {bundle_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS}, s);\n+\n+            withdraw_proposal_list.resize(withdraw_proposal_list.size() + bundle_hash.size());\n+            memcpy(&withdraw_proposal_list.data()[withdraw_proposal_list.size() - bundle_hash.size()], bundle_hash.data(), bundle_hash.size());  // FIXME: C++ify\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_ACK)) {\n+            if (saw_sidechain_acks) {\n+                // FIXME: shouldn't it be possible to ACK multiple proposals for different sidechain ids??\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-multiple\");\n+            }\n+            saw_sidechain_acks = true;\n+\n+            if (out.scriptPubKey.size() != 0x25) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unparsable\");\n+            }\n+            const uint256 sidechain_proposal_hash{Span{&out.scriptPubKey[5], 0x20}};\n+            try {\n+                IncrementDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, 1);\n+            } catch (...) {  // TODO: make this explicitly for a non-existent entry\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-ack-unknown\");\n+            }\n+        } else if (std::equal(&out.scriptPubKey[1], &out.scriptPubKey[5], BIP300_HEADER_SIDECHAIN_PROPOSE)) {\n+            if (proposed_a_sidechain) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-multiple\");\n+            }\n+            proposed_a_sidechain = true;\n+\n+            CDataStream s(MakeByteSpan(out.scriptPubKey).subspan(5), SER_NETWORK, PROTOCOL_VERSION);\n+            Sidechain proposed;\n+            try {\n+                s >> proposed;\n+            } catch (...) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-sidechain-propose-unparsable\");\n+            }\n+\n+            // TODO: block is invalid if proposed matches the current sidechain\n+\n+            uint256 sidechain_proposal_hash;\n+            CSHA256().Write(out.scriptPubKey.data() + 5, out.scriptPubKey.size() - 5).Finalize(sidechain_proposal_hash.data());\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL}, s);\n+\n+            s.clear();\n+            s << uint16_t{0};\n+            CreateDBEntry(view, txundo, block_height, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL_ACKS}, s);\n+\n+            sidechain_proposal_list.resize(sidechain_proposal_list.size() + sidechain_proposal_hash.size());\n+            memcpy(&sidechain_proposal_list.data()[sidechain_proposal_list.size() - sidechain_proposal_hash.size()], sidechain_proposal_hash.data(), sidechain_proposal_hash.size());  // FIXME: C++ify\n+        }\n+    }\n+\n+    if (!(sidechain_proposal_list.empty() && withdraw_proposal_list.empty())) {\n+        CDataStream proposal_list(SER_NETWORK, PROTOCOL_VERSION);\n+        proposal_list << sidechain_proposal_list;\n+        proposal_list << withdraw_proposal_list;\n+        CreateDBEntry(view, txundo, block_height, {ArithToUint256(arith_uint256{(uint64_t)block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST}, proposal_list);\n+    }\n+\n+    // Perform sidechain overwriting/expiry and withdraw expiry\n+    int completed_block_height = block_height - (SIDECHAIN_WITHDRAW_PERIOD - 1);\n+    COutPoint record_id{ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST};\n+    CDataStream completed_proposal_list = GetDBEntry(view, record_id);\n+    if (!completed_proposal_list.empty()) {\n+        DeleteDBEntry(view, txundo, record_id);\n+        completed_proposal_list >> sidechain_proposal_list;\n+        completed_proposal_list >> withdraw_proposal_list;\n+\n+        for (size_t i = 0; i < sidechain_proposal_list.size(); i += uint256::size()) {\n+            uint256 sidechain_proposal_hash{Span{&sidechain_proposal_list[i], uint256::size()}};\n+            record_id.hash = sidechain_proposal_hash;\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL_ACKS;\n+            uint16_t acks;\n+            {\n+                CDataStream acks_s = GetDBEntry(view, record_id);\n+                Assert(!acks_s.empty());\n+                acks_s >> acks;\n+            }\n+            if (acks >= SIDECHAIN_WITHDRAW_THRESHOLD) {\n+                // Overwrite an existing sidechain with a new one\n+                CDataStream proposal_s = GetDBEntry(view, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL});\n+                Assert(!proposal_s.empty());\n+                Sidechain proposal;\n+                proposal_s >> proposal;\n+\n+                COutPoint sidechain_record_id{uint256{proposal.idnum}, DBIDX_SIDECHAIN_DATA};\n+                DeleteDBEntry(view, txundo, sidechain_record_id);\n+                CreateDBEntry(view, txundo, block_height, sidechain_record_id, proposal_s);\n+            }\n+            DeleteDBEntry(view, txundo, record_id);\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL;\n+            DeleteDBEntry(view, txundo, record_id);\n+        }\n+\n+        for (size_t i = 0; i < withdraw_proposal_list.size(); i += uint256::size()) {\n+            uint256 withdraw_proposal_hash{Span{&withdraw_proposal_list[i], uint256::size()}};\n+            // FIXME: remove from DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_LIST\n+            DeleteDBEntry(view, txundo, {withdraw_proposal_hash, DBIDX_SIDECHAIN_WITHDRAW_PROPOSAL_ACKS});\n+        }\n+    }\n+\n+    // New sidechain activation\n+    completed_block_height = block_height - (SIDECHAIN_ACTIVATION_PERIOD - 1);\n+    completed_proposal_list = GetDBEntry(view, {ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST});\n+    if (!completed_proposal_list.empty()) {\n+        completed_proposal_list >> sidechain_proposal_list;\n+        completed_proposal_list >> withdraw_proposal_list;\n+\n+        std::vector<unsigned char> sidechain_proposal_list_new;\n+        std::set<uint8_t> new_sidechains_activated;\n+        for (size_t i = 0; i < sidechain_proposal_list.size(); i += uint256::size()) {\n+            uint256 sidechain_proposal_hash{Span{&sidechain_proposal_list[i], uint256::size()}};\n+            CDataStream proposal_s = GetDBEntry(view, {sidechain_proposal_hash, DBIDX_SIDECHAIN_PROPOSAL});\n+            Assert(!proposal_s.empty());\n+            Sidechain proposal;\n+            proposal_s >> proposal;\n+\n+            COutPoint sidechain_record_id{uint256{proposal.idnum}, DBIDX_SIDECHAIN_DATA};\n+            CDataStream old_sidechain_s = GetDBEntry(view, sidechain_record_id);\n+            if (!old_sidechain_s.empty()) {\n+                // This would be an overwrite, so it must wait for the final completion after SIDECHAIN_WITHDRAW_PERIOD\n+                sidechain_proposal_list_new.resize(sidechain_proposal_list_new.size() + sidechain_proposal_hash.size());\n+                memcpy(&sidechain_proposal_list_new.data()[sidechain_proposal_list_new.size() - sidechain_proposal_hash.size()], sidechain_proposal_hash.data(), sidechain_proposal_hash.size());  // FIXME: C++ify\n+                continue;\n+            }\n+\n+            record_id.hash = sidechain_proposal_hash;\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL_ACKS;\n+            uint16_t acks;\n+            {\n+                CDataStream acks_s = GetDBEntry(view, record_id);\n+                Assert(!acks_s.empty());\n+                acks_s >> acks;\n+            }\n+            if (acks >= SIDECHAIN_ACTIVATION_THRESHOLD) {\n+                // Activate new sidechain\n+                CreateDBEntry(view, txundo, block_height, sidechain_record_id, proposal_s);\n+                new_sidechains_activated.insert(proposal.idnum);\n+            }\n+            DeleteDBEntry(view, txundo, record_id);\n+            record_id.n = DBIDX_SIDECHAIN_PROPOSAL;\n+            DeleteDBEntry(view, txundo, record_id);\n+        }\n+\n+        if (!new_sidechains_activated.empty()) {\n+            Assume(sidechain_proposal_list.size() != sidechain_proposal_list_new.size());\n+            // Assign CTIPs\n+            for (size_t output_index = 0; output_index < tx.vout.size(); ++output_index) {\n+                if (!tx.vout[output_index].scriptPubKey.IsDrivechain()) continue;\n+\n+                const uint8_t sidechain_id = tx.vout[output_index].scriptPubKey[DRIVECHAIN_SCRIPT_SIDECHAIN_ID_OFFSET];\n+                if (new_sidechains_activated.find(sidechain_id) == new_sidechains_activated.end()) {\n+                    // TODO: OP_DRIVECHAIN (or OP_NOP5) for a non-activating sidechain id; should this be invalid??\n+                    continue;\n+                }\n+\n+                CDataStream ctip_info(SER_NETWORK, PROTOCOL_VERSION);\n+                ctip_info << sidechain_id;\n+                CreateDBEntry(view, txundo, block_height, {tx.GetHash(), DBIDX_SIDECHAIN_CTIP_INFO}, ctip_info);\n+            }\n+            if (!new_sidechains_activated.empty()) {\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-drivechain-activated-without-ctip\");\n+            }\n+        }\n+\n+        if (sidechain_proposal_list.size() != sidechain_proposal_list_new.size()) {\n+            Assume(!new_sidechains_activated.empty());\n+            COutPoint record_id{ArithToUint256(arith_uint256{(uint64_t)completed_block_height}), DBIDX_SIDECHAIN_PROPOSAL_LIST};\n+            DeleteDBEntry(view, txundo, record_id);\n+\n+            if (!(sidechain_proposal_list_new.empty() && withdraw_proposal_list.empty())) {\n+                CDataStream proposal_list(SER_NETWORK, PROTOCOL_VERSION);\n+                proposal_list << sidechain_proposal_list_new;\n+                proposal_list << withdraw_proposal_list;\n+                CreateDBEntry(view, txundo, block_height, record_id, proposal_list);\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool VerifyDrivechainSpend(const CTransaction& tx, const unsigned int sidechain_input_n, const std::vector<CTxOut>& spent_outputs, const CCoinsViewCache& view, TxValidationState& state) {\n+    const CTxIn& sidechain_input = tx.vin[sidechain_input_n];\n+    // TODO: Do we want to verify there's only one sidechain involved? BIP300 says yes, but why?\n+\n+    // Lookup sidechain number from CTIP and ensure this is in fact a CTIP to begin with\n+    // FIXME: It might be a good idea to include the sidechain # in the tx itself somewhere?",
      "path": "src/sidechain.cpp",
      "position": 363,
      "original_position": 363,
      "commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "original_commit_id": "afc975bb6029e982e2bd5420d18e7ca0d4f4413e",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if you had the tx commit to the sidechain number somewhere, I think you could remove it from `CalculateDrivechainWithdrawInternalHash`? ",
      "created_at": "2023-08-22T03:04:05Z",
      "updated_at": "2023-08-22T03:04:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28311#discussion_r1300852973",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1300852973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28311"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    }
  ]
}