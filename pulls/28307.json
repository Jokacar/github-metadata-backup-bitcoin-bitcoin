{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
    "id": 1483724058,
    "node_id": "PR_kwDOABII585Yb9Ua",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28307",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28307.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28307.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a0ebb929e865903ca1cc2674e74906a806e73109",
    "number": 28307,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "rpc, wallet: fix incorrect segwit redeem script size limit",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixing https://github.com/bitcoin/bitcoin/issues/28250#issuecomment-1674830104 and more.\r\n\r\nCurrently, redeem scripts longer than 520 bytes, which are technically valid under segwit rules, have flaws in the following processes:\r\n1) The multisig creation process fails to deduce the output descriptor, resulting in the generation of an incorrect descriptor. Additionally, the accompanying user warning is also inaccurate.\r\n2) The `signrawtransactionwithkey` RPC command fail to sign them.\r\n3) The legacy wallet `addmultisigaddress` wrongly discards them.\r\n\r\nThe issue arises because most of these flows are utilizing the legacy spkm keystore, which imposes\r\nthe [p2sh max redeem script size rule](https://github.com/bitcoin/bitcoin/blob/ded687334031f4790ef6a36b999fb30a79dcf7b3/src/script/signingprovider.cpp#L160) on all scripts. Which blocks segwit redeem scripts longer than\r\nthe max element size in all the previously mentioned processes (`createmultisig`, `addmultisigaddress`, and\r\n`signrawtransactionwithkey`).\r\n\r\nThis PR fixes the problem, enabling the creation of multisig output descriptors involving more than 15 keys and\r\nallowing the signing of these scripts, along with other post-segwit redeem scripts that surpass the 520-byte\r\np2sh limit.\r\n\r\nImportant note:\r\nInstead of adding support for these longer redeem scripts in the legacy wallet, an \"unsupported operation\"\r\nerror has been added. The reasons behind this decision are:\r\n\r\n1) The introduction of this feature brings about a compatibility-breaking change that requires downgrade\r\n    protection; older wallets would be unable to interact with these \"new\" legacy wallets.\r\n\r\n2) Considering the ongoing deprecation of the legacy spkm, this issue provides another compelling\r\n    reason to transition towards descriptors.\r\n\r\nTesting notes:\r\nTo easily verify each of the fixes, I decoupled the tests into standalone commits. So they can be\r\ncherry-picked on top of master. Where `rpc_createmultisig.py` (with and without the `--legacy-wallet`\r\narg) will fail without the bugs fixes commits.\r\n\r\nExtra note:\r\nThe initial commits improves the `rpc_createmultisig.py` test in many ways. I found this test very\r\nantiquated, screaming for an update and cleanup.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-21T23:18:02Z",
    "updated_at": "2024-05-03T16:55:13Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "9508050d786b04be649ca8765099abe761a6a154",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "furszy:2023_invalid_segwit_redeem_script_limit",
      "ref": "2023_invalid_segwit_redeem_script_limit",
      "sha": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 401521,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-02T23:28:45Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2024-05-02T23:29:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e3b68b3b833984973401ceff43930f7c56a83f29",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35332,
        "stargazers_count": 76156,
        "watchers_count": 76156,
        "size": 258023,
        "default_branch": "master",
        "open_issues_count": 692,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-03T16:37:04Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-05-03T16:52:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 167,
    "deletions": 140,
    "changed_files": 11,
    "commits": 10,
    "review_comments": 21,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 1687186422,
      "node_id": "IC_kwDOABII585kkGv2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687186422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-21T23:18:05Z",
      "updated_at": "2024-05-03T15:37:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2038429816) |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845552797) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30024](https://github.com/bitcoin/bitcoin/pull/30024) (doc: replace remaining \"520\" magic nums with MAX_SCRIPT_ELEMENT_SIZE by jonatack)\n* [#30019](https://github.com/bitcoin/bitcoin/pull/30019) (test: create assert_less_than util by kevkevinpal)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1687186422",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "labeled",
      "id": 10151905950,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJdGcqe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10151905950",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T00:56:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10151941308,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJdGlS8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10151941308",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T01:04:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T01:33:17Z",
      "updated_at": "2023-08-22T01:33:17Z",
      "source": {
        "issue": {
          "id": 1860398095,
          "node_id": "PR_kwDOABII585YcRa2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28312",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28312/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28312/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28312/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28312",
          "number": 28312,
          "state": "open",
          "state_reason": null,
          "title": "test: fix `keys_to_multisig_script` (P2MS) helper for n/k > 16",
          "body": "While reviewing #28307, I noticed that the test framework's `key_to_multisig_script` helper (introduced in #23305) is broken for pubkey count (n) and threshold (k) values larger than 16. This is due to the implementation currently enforcing a direct single-byte data push (using `CScriptOp.encode_op_n`), which obviously fails for values 17+. Fix that by passing the numbers directly to the CScript list, where it's automatically converted to minimally-encoded pushes (see class method `CScript.__coerce_instance`, branch `isinstance(other, int)`). \r\n\r\n\r\n\r\nThe second commit adds a unit test to ensure that the encoding  is correct.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28312",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28312",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28312.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28312.patch"
          },
          "created_at": "2023-08-22T01:33:16Z",
          "updated_at": "2024-04-26T20:17:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 10152299193,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAJdH8q5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152299193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:27:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T13:59:53Z",
      "updated_at": "2023-08-22T13:59:53Z",
      "source": {
        "issue": {
          "id": 1844958951,
          "node_id": "I_kwDOABII585t99bn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28250",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28250/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28250/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28250/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28250",
          "number": 28250,
          "state": "closed",
          "state_reason": "completed",
          "title": "RPC `createmultisig` outputs a `sh(addr(...))` descriptor when address_type field is \"p2sh-segwit\"",
          "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current behaviour\r\n\r\nWhile executing rpc createmultisig it outputs a addr descriptor wrapped around sh.  Addr descriptor is supposed to be a top level descriptor. Please refer to [this gist](https://gist.github.com/Vasu-08/57c1ff479baf2e70e7e2195d31575651) for further details.\r\n\r\n### Expected behaviour\r\n\r\nNot sure. \r\n\r\n### Steps to reproduce\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/107955853/a5c3cb23-0ca7-43ee-9106-5a1dc0bf6d37)\r\n\r\n\r\n### Relevant log output\r\n\r\n2023-08-10T10:28:08Z ERROR: FillableSigningProvider::AddCScript(): redeemScripts > 520 bytes are invalid\r\n\r\n### How did you obtain Bitcoin Core\r\n\r\nCompiled from source\r\n\r\n### What version of Bitcoin Core are you using?\r\n\r\nv25.0rc2\r\n\r\n### Operating system and version\r\n\r\n\"Ubuntu 22.04 LTS\"\r\n\r\n### Machine specifications\r\n\r\n_No response_",
          "user": {
            "login": "Vasu-08",
            "id": 107955853,
            "node_id": "U_kgDOBm9GjQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/107955853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vasu-08",
            "html_url": "https://github.com/Vasu-08",
            "followers_url": "https://api.github.com/users/Vasu-08/followers",
            "following_url": "https://api.github.com/users/Vasu-08/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Vasu-08/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Vasu-08/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Vasu-08/subscriptions",
            "organizations_url": "https://api.github.com/users/Vasu-08/orgs",
            "repos_url": "https://api.github.com/users/Vasu-08/repos",
            "events_url": "https://api.github.com/users/Vasu-08/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Vasu-08/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 6,
          "closed_at": "2023-08-11T06:28:35Z",
          "created_at": "2023-08-10T11:07:42Z",
          "updated_at": "2023-08-22T13:59:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T20:22:47Z",
      "updated_at": "2023-08-22T20:22:47Z",
      "source": {
        "issue": {
          "id": 1584692334,
          "node_id": "PR_kwDOABII585J-QiA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27101/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27101",
          "number": 27101,
          "state": "open",
          "state_reason": null,
          "title": "Support JSON-RPC 2.0 when requested by client",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/2960\r\n\r\nBitcoin Core's JSONRPC server behaves with a special blend of 1.0, 1.1 and 2.0 behaviors. This introduces compliance issues with more strict clients. There are the major misbehaviors that I found:\r\n- returning non-200 HTTP codes for RPC errors like \"Method not found\" (this is not a server error or an HTTP error)\r\n- returning both `\"error\"` and `\"result\"` fields together in a response object.\r\n- different error-handling behavior for single and batched RPC requests (batches contain errors in the response but single requests will actually throw HTTP errors)\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/15495 added regression tests after a discussion in https://github.com/bitcoin/bitcoin/pull/15381 to kinda lock in our RPC behavior to preserve backwards compatibility. \r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/12435 was an attempt to allow strict 2.0 compliance behind a flag, but was abandoned. \r\n\r\nThe approach in this PR is not strict and preserves backwards compatibility in a familiar bitcoin-y way: all old behavior is preserved, but new rules are applied to clients that opt in. One of the rules in the [JSON RPC 2.0 spec](https://www.jsonrpc.org/specification#request_object) is that the kv pair `\"jsonrpc\": \"2.0\"` must be present in the request. Well, let's just use that to trigger strict 2.0 behavior! When that kv pair is included in a request object, the [response will adhere to strict JSON-RPC 2.0 rules](https://www.jsonrpc.org/specification#response_object), essentially:\r\n\r\n- always return HTTP 200 \"OK\" unless there really is a server error or malformed request\r\n- either return `\"error\"` OR `\"result\"` but never both\r\n- same behavior for single and batch requests\r\n\r\nIf this is merged next steps can be:\r\n\r\n- Refactor bitcoin-cli to always use strict 2.0\r\n- Refactor the python test framework to always use strict 2.0 for everything\r\n- Begin deprecation process for 1.0/1.1 behavior (?)\r\n\r\nIf we can one day remove the old 1.0/1.1 behavior we can clean up the rpc code quite a bit.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27101",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27101",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27101.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27101.patch"
          },
          "created_at": "2023-02-14T19:13:42Z",
          "updated_at": "2024-05-01T19:39:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10255000869,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJjPuUl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10255000869",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T09:06:26Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-02T14:19:07Z",
      "updated_at": "2023-09-02T14:19:07Z",
      "source": {
        "issue": {
          "id": 1878672083,
          "node_id": "PR_kwDOABII585ZZ1nx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28392",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28392/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28392/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28392/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28392",
          "number": 28392,
          "state": "closed",
          "state_reason": null,
          "title": "test: Use pathlib over os path",
          "body": "In reference to issue  #28362  refactoring of functional tests to use pathlib over os.path to reduce verbosity and increase the intuitiveness of managing file access.",
          "user": {
            "login": "nsvrn",
            "id": 120062368,
            "node_id": "U_kgDOBygBoA",
            "avatar_url": "https://avatars.githubusercontent.com/u/120062368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nsvrn",
            "html_url": "https://github.com/nsvrn",
            "followers_url": "https://api.github.com/users/nsvrn/followers",
            "following_url": "https://api.github.com/users/nsvrn/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/nsvrn/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/nsvrn/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/nsvrn/subscriptions",
            "organizations_url": "https://api.github.com/users/nsvrn/orgs",
            "repos_url": "https://api.github.com/users/nsvrn/repos",
            "events_url": "https://api.github.com/users/nsvrn/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/nsvrn/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "closed",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 116,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-12-08T10:41:40Z",
            "closed_at": "2023-12-04T13:27:46Z"
          },
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28392",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28392",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28392.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28392.patch"
          },
          "closed_at": "2023-10-11T18:08:34Z",
          "created_at": "2023-09-02T12:40:05Z",
          "updated_at": "2023-10-11T18:08:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10267589042,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJj_vmy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10267589042",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T22:40:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10283637149,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAJk89md",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10283637149",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T13:19:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1708716996,
      "node_id": "IC_kwDOABII585l2PPE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708716996",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T16:29:01Z",
      "updated_at": "2023-09-06T16:29:01Z",
      "author_association": "MEMBER",
      "body": "concept ACK db38b584e6\r\n\r\nConfirmed this branch fixes the issue mentioned in #28250 \r\n\r\nCode review to follow...\r\n\r\n```\r\n{\r\n  \"address\": \"3JDRACdkEs41yxtYLi6kiqQJdQHLPDxehc\",\r\n  \"redeemScript\": \"602102f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b2103d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad9367221021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed2103a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc92102a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db21032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a210370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea12103878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf210248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec8942103f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac421023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e73722102e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d0159621020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae2103725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce9447421031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41210235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc652102ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c210282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e210279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03210293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d0114ae\",\r\n  \"descriptor\": \"sh(wsh(multi(16,02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b,03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672,021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed,03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9,02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db,032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a,0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1,03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf,0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894,03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4,023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372,02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596,020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae,03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474,031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41,0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65,02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c,0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e,0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03,0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d)))#xfjxuvgn\"\r\n}\r\n```",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1708716996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "reviewed",
      "id": 1613931820,
      "node_id": "PRR_kwDOABII585gMqUs",
      "url": null,
      "actor": null,
      "commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1613931820",
      "submitted_at": "2023-09-06T18:10:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10300538105,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJl9bz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10300538105",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T20:59:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10300543759,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJl9dMP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10300543759",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T21:00:27Z"
    },
    {
      "event": "reviewed",
      "id": 1614210961,
      "node_id": "PRR_kwDOABII585gNueR",
      "url": null,
      "actor": null,
      "commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks @pinheadmz. [Small diff ](https://github.com/bitcoin/bitcoin/compare/db38b584e62b76218ad4e74e18e10bca62fc3b7f..cc056d3ea312352fcb9a61141eb67d6a6171d30e).\r\n\r\nAdded coverage for `createmultisig` +20 keys error.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1614210961",
      "submitted_at": "2023-09-06T21:02:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T05:26:31Z",
      "updated_at": "2023-09-25T05:26:31Z",
      "source": {
        "issue": {
          "id": 1910622235,
          "node_id": "PR_kwDOABII585bE94H",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
          "number": 28528,
          "state": "closed",
          "state_reason": null,
          "title": "test: Use test framework utils in functional tests",
          "body": "Replaces bare asserts with test framework utils across both the functional tests and the test framework itself.\r\n\r\nAlso adds the `assert_not_equal`, `assert_less_than`, and `assert_less_than_or_equal` util functions for greater readability.\r\n\r\nFixes #23119.\r\n",
          "user": {
            "login": "osagie98",
            "id": 23225617,
            "node_id": "MDQ6VXNlcjIzMjI1NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/23225617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/osagie98",
            "html_url": "https://github.com/osagie98",
            "followers_url": "https://api.github.com/users/osagie98/followers",
            "following_url": "https://api.github.com/users/osagie98/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/osagie98/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/osagie98/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/osagie98/subscriptions",
            "organizations_url": "https://api.github.com/users/osagie98/orgs",
            "repos_url": "https://api.github.com/users/osagie98/repos",
            "events_url": "https://api.github.com/users/osagie98/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/osagie98/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28528",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28528.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28528.patch"
          },
          "closed_at": "2024-02-22T17:40:49Z",
          "created_at": "2023-09-25T04:14:06Z",
          "updated_at": "2024-02-22T17:40:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T02:47:02Z",
      "updated_at": "2023-10-24T02:47:02Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2024-04-26T22:25:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11470360988,
      "node_id": "LE_lADOABII585u4fvyzwAAAAKrr9Gc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11470360988",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T15:05:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-18T23:51:16Z",
      "updated_at": "2024-01-18T23:51:16Z",
      "source": {
        "issue": {
          "id": 2089150264,
          "node_id": "PR_kwDOABII585keJKk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29278",
          "number": 29278,
          "state": "open",
          "state_reason": null,
          "title": "Wallet:  Add `maxfeerate` wallet startup option",
          "body": "This PR fixes #29220\r\n\r\n- The PR adds a wallet `-maxfeerate` startup option, as the upper limit of wallet transactions fee rate.\r\n\r\n- This fixes the ambiguity of using `maxtxfee` value to check the upper limit of transactions fee rate.\r\n\r\n-  Wallet will not create a transaction with fee rate above `maxfeerate` value. And you can not set wallet fee rate with `settxfee` RPC above `maxfeerate` value.\r\n\r\n- This PR adds a functional test that ensure the behavior is enforced.\r\n \r\n\r\n\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29278",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29278",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29278.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29278.patch"
          },
          "created_at": "2024-01-18T22:23:49Z",
          "updated_at": "2024-05-02T05:57:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-22T13:42:10Z",
      "updated_at": "2024-01-22T13:42:10Z",
      "source": {
        "issue": {
          "id": 2004707236,
          "node_id": "PR_kwDOABII585gC0HT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28923",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28923/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28923/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28923/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28923",
          "number": 28923,
          "state": "open",
          "state_reason": null,
          "title": "script/sign: avoid duplicated signature verification after signing (+introduce signing benchmarks)",
          "body": "This PR is a small performance improvement on the `SignTransaction` function, which is used mostly by the wallet (obviously) and the `signrawtransactionwithkey` RPC. The lower-level function `ProduceSignature` already calls `VerifyScript` internally as last step in order to check whether the signature data is complete:\r\nhttps://github.com/bitcoin/bitcoin/blob/daa56f7f665183bcce3df146f143be37f33c123e/src/script/sign.cpp#L568-L570\r\n\r\nIf and only if that is the case, the `complete` field of the `SignatureData` is set to `true` accordingly and there is no need then to verify the script after again, as we already know that it would succeed.\r\n\r\nThis leads to a rough ~20% speed-up for `SignTransaction` for single-input ECDSA or Taproot transactions, according to the newly introduced `SignTransaction{ECDSA,Taproot}` benchmarks:\r\n\r\n```\r\n$ ./src/bench/bench_bitcoin --filter=SignTransaction.*\r\n```\r\n\r\nwithout commit 18185f4f578b8795fdaa75926630a691e9c8d0d4:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          185,597.79 |            5,388.00 |    1.6% |      0.22 | `SignTransactionECDSA`\r\n|          141,323.95 |            7,075.94 |    2.1% |      0.17 | `SignTransactionSchnorr`\r\n\r\nwith commit 18185f4f578b8795fdaa75926630a691e9c8d0d4:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          149,757.86 |            6,677.45 |    1.4% |      0.18 | `SignTransactionECDSA`\r\n|          108,284.40 |            9,234.94 |    2.0% |      0.13 | `SignTransactionSchnorr`\r\n\r\n\r\n\r\nNote that there are already signing benchmarks in the secp256k1 library, but `SignTransaction` does much more than just the cryptographical parts, i.e.:\r\n* calculate the unsigned tx's `PrecomputedTransactionData` if necessary\r\n* apply Solver on the prevout scriptPubKey, fetch the relevant keys from the signing provider\r\n* perform the actual signing operation (for ECDSA signatures, that could be more than once due to low-R grinding)\r\n* verify if the signatures are correct by calling `VerifyScript` (more than once currently, which is fixed by this PR)\r\n\r\nso it probably makes sense to also have benchmarks from that higher-level application perspective.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 326918230,
              "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
              "name": "Resource usage",
              "color": "981023",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28923",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28923",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28923.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28923.patch"
          },
          "created_at": "2023-11-21T16:30:59Z",
          "updated_at": "2024-04-17T22:17:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1845552797,
      "node_id": "PRR_kwDOABII585uAOad",
      "url": null,
      "actor": null,
      "commit_id": "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845552797",
      "submitted_at": "2024-01-26T13:29:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlMWE2MDEwZTg1ODE4ZWY4Yzk0ZmM5MmJlZjllM2EzM2Y2MWViNTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e1a6010e85818ef8c94fc92bef9e3a33f61eb58",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1a6010e85818ef8c94fc92bef9e3a33f61eb58",
      "tree": {
        "sha": "2567a626ea6308772166b82915076ec876d28a54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2567a626ea6308772166b82915076ec876d28a54"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2567a626ea6308772166b82915076ec876d28a54\nparent 60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126\nauthor furszy <matiasfurszyfer@protonmail.com> 1692449670 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277178 -0300\n\ntest: rpc_createmultisig, remove manual wallet initialization\n\nThere is no need to manually initialize the wallets within the test\ncase. The test framework already initializes them when `_requires_wallet`\nis true.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuToACgkQXdI8zGhq\npiMAbg//XEPvazZ90wX4cpI/2g1KSHjuBNgpDBUIRdtb6u94Gxih9refJi8Ham9r\n+u+AI/gkl2+l2ksTA4uaTYA2aaO0Y5hO7fy6Rj+L6XVb4gUwwsyfZBlpCZkK1XCU\nC4pcBETyxkIT8Gi28c8H0Y2NnPRZOCfuh8kF/8xJC1OkXsRwkvob4enafELHBw18\nP2uueQh1Ah5mM3j243AS5yvdzuTSoBozr7CwKehzxPTpw7QJ3XKeAsiYe4s3otiq\ngMJZLa4o30PEzTLdX3OPghzkNcsLsC+RIDpx+SPUsaUEib3owXJ7w10OzZhG9DXS\nRZhy13+s7jHKAQ5+0sAC+PkC93vpIaU1NNaos4DqlNrnd3y9FRIYt9IdvAIVtWR9\nrsF8sa6fJ1iGiQQAqzlt2XsOWX41otZuYTofnEbD26AYxBrZ+4MAOjnQPfGqQ+/e\nkvIAScJpKfVtcpw79oqBNhFguQAzZ4+VsV4cLQcyDkV3n8/Dcyj+7OJ+FeYrrpR3\nkLRv8mHXUDntQAu96djKfU9k5y10CJQQHWGLYScsHdpGJBkm/0KZMrelQx43/vaw\nR6jxHrIFJZxOEqykxtHbenJPX1n2OiOfZsx3Tc2LBqcTgmJ5c15lkAGoKRBVlNSl\n59ToOc7ktPDXDFEAlJ4U0gNOrIGmlVrnAwj6eqaRDRIJUGer0IM=\n=SlVT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126",
          "sha": "60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126"
        }
      ],
      "message": "test: rpc_createmultisig, remove manual wallet initialization\n\nThere is no need to manually initialize the wallets within the test\ncase. The test framework already initializes them when `_requires_wallet`\nis true.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:52:58Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T12:54:30Z"
      },
      "sha": "5e1a6010e85818ef8c94fc92bef9e3a33f61eb58"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjYzZkYjc5MDE1YjM5OTU3MjNmZGUwNGMwNjc5MDBhNzI1NTNjN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcc6db79015b3995723fde04c067900a72553c7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fcc6db79015b3995723fde04c067900a72553c7a",
      "tree": {
        "sha": "545d06686965bcf17ee59b0bb60ea5a5b9a1a13d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/545d06686965bcf17ee59b0bb60ea5a5b9a1a13d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 545d06686965bcf17ee59b0bb60ea5a5b9a1a13d\nparent 5e1a6010e85818ef8c94fc92bef9e3a33f61eb58\nauthor furszy <matiasfurszyfer@protonmail.com> 1692474474 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277179 -0300\n\ntest: refactor, multiple cleanups in rpc_createmultisig.py\n\nCleaning up the test in the following ways:\n\n* Generate priv-pub key pairs used for testing only once (instead of doing it 4 times).\n* Simplifies 'wmulti' wallet creation, load and unload process.\n* Removes confusing class members initialized and updated inside a nested for-loop.\n* Simplifies do_multisig() outpoint detection:\n  The outpoint index information is already contained in MiniWallet's\n  `send_to` return value dictionary as \"sent_vout\".\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuTsACgkQXdI8zGhq\npiNi1BAAjZe678EjgtEaywzS5VhGrJVufOW94IV4lLe/0fb8ACYz6oUmACTDBz64\n6dru14Bd4vIxVy6a1P0Xc+1iGwFpUlewpdNkFhkAPPYHVx1p6VF4YEw+uCkhmKF1\neoZrad0GaSjnW13i5NVxKrrkNpiMFdn2+CLolQwaU/95QiDQn0dtaJbtzMcSyyN0\nA/jgdGGixwn8JqVAUCIOvCUC2GGmfsLXeEwIQw8FY6O/bPS1UptNMQ212v1RZrBj\nveTAmU+LHtc4+AXhm4TuTjbP26y4j3/5Hfq6GzaTDicidGnXV6gzqUya0zK7qThI\nR5PojVUFXaQunCzigYUX/EqXoYorsGaH3H++g3PgSZBCsJ1PLm84gXxTfWOc4AaC\nW21kfF7fR3qoDt5SJQjYQVwnQ8LUlMmwjeXyoyejgH8L5ZRfDWoDLpSPoHMoOFWQ\n53tx5oPLMb3grP1+FCopxprDyAK4MCRC2CPhaqpkzkoD/45yw56v4dXleJMqEp4j\nPGSjRwmY3ED6cSTvj4fUVaF7+9H+HyBfHdQye3h5EPYQzj3g+ltc9zsZKc2GgJw4\n4jR0MkWtJWyiBXHKpSFVHP0iWrypkL4AuzLQZLVU8/whVgVy8dGWPRfrdD9vLpe/\nWF6snNYQuzxEUevUFbKn/wbZMGEvdZHaocP0dZV7uZnPpAw6C+A=\n=m2DO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e1a6010e85818ef8c94fc92bef9e3a33f61eb58",
          "sha": "5e1a6010e85818ef8c94fc92bef9e3a33f61eb58",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1a6010e85818ef8c94fc92bef9e3a33f61eb58"
        }
      ],
      "message": "test: refactor, multiple cleanups in rpc_createmultisig.py\n\nCleaning up the test in the following ways:\n\n* Generate priv-pub key pairs used for testing only once (instead of doing it 4 times).\n* Simplifies 'wmulti' wallet creation, load and unload process.\n* Removes confusing class members initialized and updated inside a nested for-loop.\n* Simplifies do_multisig() outpoint detection:\n  The outpoint index information is already contained in MiniWallet's\n  `send_to` return value dictionary as \"sent_vout\".\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:52:59Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T19:47:54Z"
      },
      "sha": "fcc6db79015b3995723fde04c067900a72553c7a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZkZjdkMmNlNWE0YzBiMzFmM2EyNTRhNzYwN2FlODgxMjYwNmI4NDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
      "tree": {
        "sha": "4398cc2cd5905ad964c995176612ef21810e9c97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4398cc2cd5905ad964c995176612ef21810e9c97"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4398cc2cd5905ad964c995176612ef21810e9c97\nparent fcc6db79015b3995723fde04c067900a72553c7a\nauthor furszy <matiasfurszyfer@protonmail.com> 1692481866 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277243 -0300\n\ntest: rpc_createmultisig, remove unnecessary checkbalances()\n\nThe function exists merely to check that the node2's wallet\nreceived the transactions created during all the 'do_multisig()'\ncalls.\nIt was created as a standalone function because 'getbalance()'\nonly returns something when transactions are confirmed. So,\nthe rationale on that time was to have a method mining blocks\nto confirm the recently created transactions to be able to\ncheck the incoming balance.\nThis is why we have the \"moved\" class field.\n\nThis change removes all the hardcoded amounts and verifies\nnode2 balance reception directly inside 'do_multisig()'.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXsACgkQXdI8zGhq\npiMXKRAAmqE4o9HaxVra0gKIyeXje8wvoylzLWWAwiRnEfH8yMZAuMXpk0XDdOxi\ndwDb1BOxDXpO3osqH1u+j8M89l6X0iZ5OTCYdEtbryf1mjdTBf2x/I7/pr/A2YQX\nkMpHp2Fmb5n2MRmCr+PXHPmH+kKV3LhYonWmuQMaE4FO/A69a1v6Yjh8SAL/vxfZ\nOyDPTxsaKAepr5YQ4lgPonxAKUWt4gduTWRhVkn7DzQQVjW7JYlDKrQEqrsKSgp/\nzjH88i7dDT+2tVZQDXWhGVHpSyI3RGuLdFW2iPoHpfIowxMu0LTMUcDWtz5jGD+M\ncFMD8rElROfS01Gw0rpB57DTQRD2yXQNRnso6tmm4j6MU40ahEuk3EQTNcQ93Mi2\nFQKLE8AUpzB45yYic8uWJzFkGutyQGvZYH2tgZL1crZButL2e8aNYGZtVmh+n30D\nVRFP38BYDKTks7JSJ6UzK/3J+FqRWHBJN0HJQB4q98q7m6O9JpIosIvOkE/WF0YJ\njhsdIq1warar6/BQnz8xZRC/qP/0EEqZM7yeZen+PBP4gpoDiq18qxK4xVqZfzP0\nUMMQo5Apo+qwZEpj68OfZpwG46ruY5TD43K4yW6kwYmfW5X2hmPRFWjMzg3woE51\nMYiwwrtL7RRGMHItvYufDV5iAv1XW8ETT1aIQC642kSqtToA5Oc=\n=Gh//\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcc6db79015b3995723fde04c067900a72553c7a",
          "sha": "fcc6db79015b3995723fde04c067900a72553c7a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fcc6db79015b3995723fde04c067900a72553c7a"
        }
      ],
      "message": "test: rpc_createmultisig, remove unnecessary checkbalances()\n\nThe function exists merely to check that the node2's wallet\nreceived the transactions created during all the 'do_multisig()'\ncalls.\nIt was created as a standalone function because 'getbalance()'\nonly returns something when transactions are confirmed. So,\nthe rationale on that time was to have a method mining blocks\nto confirm the recently created transactions to be able to\ncheck the incoming balance.\nThis is why we have the \"moved\" class field.\n\nThis change removes all the hardcoded amounts and verifies\nnode2 balance reception directly inside 'do_multisig()'.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:03Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T21:51:06Z"
      },
      "sha": "6df7d2ce5a4c0b31f3a254a7607ae8812606b840"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmZmE5YmI5YTAyZTA2ZGM1N2E2MWYzMDFmOGVmZjNkM2NkNzE0MmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "tree": {
        "sha": "6b992c90efd42231f653628cdf10ca42f6c0b5e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b992c90efd42231f653628cdf10ca42f6c0b5e2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6b992c90efd42231f653628cdf10ca42f6c0b5e2\nparent 6df7d2ce5a4c0b31f3a254a7607ae8812606b840\nauthor furszy <matiasfurszyfer@protonmail.com> 1692483480 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277243 -0300\n\ntest: rpc_createmultisig, decouple 'test_mixing_uncompressed_and_compressed_keys'\n\nAnd also, simplified the test a bit by re-using the already existing 'wallet_multi'\n(instead of creating a new one). Plus, removed the 'is_bdb_compiled()' calls\nwhich were there basically to check if the test has the wallet compiled or not.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXsACgkQXdI8zGhq\npiM/4BAAwULll6xnzxxkvqg14GbSf97O+vKMXXx/xptexe2EPx3fV36p+YPtsOYv\nv0oNtQXmYJzzN9BwSxQXEmTjDfhC8z4HIsjs287wUUbVqbLSgTsXoIjm+MQHanHi\nZ6HMph1ps7NlhO11fmUZwdPf1yavmat7BPbPhMWhVQDgIlhjPlu5AqkXnpyrtxGW\nDpFHgCm+LdUKxNPePUHWNsAURnP95uL96wk+d2HUKEGzmDzUIEG8d+NLg9HPyoJE\nmbWHgLVvzl10rIPnk6gTYB1ahDAlagOY4KbGKPZzboeKMLWagDBQzYP/TV8dTAyC\nYon4uRUZgCeRhk7BlsYfiY4X8zBiEOMJZJ5dC0XvHpbv0QIk88R4laXPMaemd+JI\n6knbcSUp5V0P/HgJE2rHE6DAEeqhvHEdp2aeySi5Xnfb7DtPtkT8BAOgWBLSL4HI\nhCxsHq07wNuKkq82RBxXVLQXQUAIVYWrXpd+3vpEUvi9SwxWLMLDuuVmtEVEUtpf\nPObD+TXxU7zYpZaleFy9ptZdS/4sabkv6ohcbQqfwRQ7PrCJFTyd+5AifZc59sNZ\n5kF/xGaGkej0srIyKYjzVNxNzg9YuI9grkF1G3Yvwtdsxzbm3vRPdOSG3EQbWXZs\nSMLAlU5u8Qy/oF3F54o9FpCNb8PiMvaXK9bNtG+QQ6dw/FnRm8A=\n=FoKo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
          "sha": "6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6df7d2ce5a4c0b31f3a254a7607ae8812606b840"
        }
      ],
      "message": "test: rpc_createmultisig, decouple 'test_mixing_uncompressed_and_compressed_keys'\n\nAnd also, simplified the test a bit by re-using the already existing 'wallet_multi'\n(instead of creating a new one). Plus, removed the 'is_bdb_compiled()' calls\nwhich were there basically to check if the test has the wallet compiled or not.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:03Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T22:18:00Z"
      },
      "sha": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1OWFlYjdiY2ExOGYwNzRjNWI3Y2NhZjcyMGMzMmIyMTI2YTIyY2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459aeb7bca18f074c5b7ccaf720c32b2126a22cc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/459aeb7bca18f074c5b7ccaf720c32b2126a22cc",
      "tree": {
        "sha": "4e9df4d9c0daab78f11a8d3b486235e99a651eb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e9df4d9c0daab78f11a8d3b486235e99a651eb0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4e9df4d9c0daab78f11a8d3b486235e99a651eb0\nparent fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a\nauthor furszy <matiasfurszyfer@protonmail.com> 1692483604 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277243 -0300\n\ntest: rpc_createmultisig, decouple 'test_sortedmulti_descriptors_bip67'\n\nMove-only commit. No behavior change.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXsACgkQXdI8zGhq\npiMxvA//W8HlmFdBM1u6YUm2us1/7NynDuoY3SNxhjeabg9cY/h9o3Od188r/ZXS\nWwoigHccKzCyLwhvmR8WICqpS4LKp86kf9ABPk2jGvT9lMuRUZlsKy0LomIjqUH7\nyPVQNVFnzqYdxd3Nnx0/kTQyBPjUbAJu6AQCWftB0xnK1cPFK98LzZ4VxHCMuJQ+\n7PtUndzwgG25NU4xutsWUlApd92ZB5ecfSHe87PfYbKOxTR6gd6pR4kpJx7u8QJu\njIsg8vqz8qPy/r/Zu1U5QEq3gYYkhA4eb4LdQGQ0gst3shKqIs87kkvQO6c5l0T3\nWZtkfy5lpz3DoK6j+kjEzXZxahzAUMi5lXyd3oreEcstgX3R/Nop45hGdgDUkoKg\nzqld1sNLWeuRMfXURlILrVVFShIrffkms6Xoo2IM1QroTXuZqr5zxVMgwKLl2XxR\nd7dXjfSKnBQVpRYgqF14ebK7uUwwB6xdA2YhmxswU5UYR3MWeBQqrsIkt2dwUJF3\nAAaOzhjbtCyxkaCsjf6FS9QogPBUTHCNFtT/JOMv/rTJxTAHClQVFiU2KgxJDf5D\nUDKuzCQnKGx2xaIphIb4nTDy/D/tDJklcImi8dljusXfPYsg23R53Jm+q7uCSwOl\ngZsYGJMjN2Nk6JoSIRQ00ZY4cYZhkoiBFX8tsc6+Yi4DM/MK140=\n=Uw+N\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
          "sha": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a"
        }
      ],
      "message": "test: rpc_createmultisig, decouple 'test_sortedmulti_descriptors_bip67'\n\nMove-only commit. No behavior change.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:03Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T22:20:04Z"
      },
      "sha": "459aeb7bca18f074c5b7ccaf720c32b2126a22cc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0MjZmNzIzMTI2OWYwODhkNjU1YzY2ODQ0ZWE1OWZjMTJlOWFjMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3426f7231269f088d655c66844ea59fc12e9ac13",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3426f7231269f088d655c66844ea59fc12e9ac13",
      "tree": {
        "sha": "2d2e48b7a62c24c28d9e72d8b3911bc17f5fca30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d2e48b7a62c24c28d9e72d8b3911bc17f5fca30"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2d2e48b7a62c24c28d9e72d8b3911bc17f5fca30\nparent 459aeb7bca18f074c5b7ccaf720c32b2126a22cc\nauthor furszy <matiasfurszyfer@protonmail.com> 1692650734 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277243 -0300\n\nfix incorrect multisig redeem script size limit for segwit\n\nThe multisig script generation process currently fails when\nthe user exceeds 15 keys, even when it shouldn't. The maximum\nnumber of keys allowed for segwit redeem scripts (p2sh-segwit\nand bech32) is 20 keys.\nThis is because the redeem script placed in the witness is not\nrestricted by the item size limit.\n\nThe reason behind this issue is the utilization of the legacy\np2sh redeem script restrictions on segwit ones. Redeem scripts\nlonger than 520 bytes are blocked from being inserted into the\nkeystore, which causes the signing process and the descriptor\ninference process to fail.\n\nThis occurs because the multisig generation flow uses the same\nkeystore as the legacy spkm (FillableSigningProvider), which\ncontains the 520-byte limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXwACgkQXdI8zGhq\npiOSwQ/9Glen9nku8KXtSC67+iHkV8OzaGOlPQ7BEmoPgMhGzri/HmPmRx50yjg4\neLG+xpiawGAyM3kyScyrKOArOsra/yApPXVbIX70imMlyPXE2fD9z2J8CGCWtFml\n6OE3n17jJjuoXCP30h6YT8iYHsUUmmZxdxKrYm+4YngE05g8YWzp5YyYF01g8U3H\nU6aAZfU/rOr3qPTAfDj71W3rtnkYWfuXmpEF6/jMSruEithyAOXOEsrv9JEsdJvg\nlVj4+6t5kQKvdZp74hDOz1JudLwsXgGMav2htq3/c07FOnvajhIFI0CvyCHUl49i\n6oapVw8fgQ7T6+HN5I7F0NN2tsOtblcERB/2V2k1NXnmCx0eN9nmZPrsG0w1cfeD\n69tq2fzMveSIDHJKawP7LMXxs9XGBFyUlqB+JZp/8p3YQ/zRH7CXJT1rG3CiqP8U\nudU8+yoerzBPPjAZb22t5tkXqholgG8EbO+Yp1lvpYkFWIe8/9orUTdL+VlD0c/O\nNXL1B0ep+bPMic5cuASm61+uzOQd+q8rqPe/VsVjoaj+KbXlMWpagXPq2NlPTwH3\n8TnfPv2r7QIa6jaSrOw7ptX9rssb+z9TmOcpaVOqlE9O4YvSrmWIf40H7ipH2TM9\n7C5loWNHy84oZ7q/FR87NlZd02J2jbjo4PruNMZaCgG1Y1M+2UI=\n=F3UI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459aeb7bca18f074c5b7ccaf720c32b2126a22cc",
          "sha": "459aeb7bca18f074c5b7ccaf720c32b2126a22cc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/459aeb7bca18f074c5b7ccaf720c32b2126a22cc"
        }
      ],
      "message": "fix incorrect multisig redeem script size limit for segwit\n\nThe multisig script generation process currently fails when\nthe user exceeds 15 keys, even when it shouldn't. The maximum\nnumber of keys allowed for segwit redeem scripts (p2sh-segwit\nand bech32) is 20 keys.\nThis is because the redeem script placed in the witness is not\nrestricted by the item size limit.\n\nThe reason behind this issue is the utilization of the legacy\np2sh redeem script restrictions on segwit ones. Redeem scripts\nlonger than 520 bytes are blocked from being inserted into the\nkeystore, which causes the signing process and the descriptor\ninference process to fail.\n\nThis occurs because the multisig generation flow uses the same\nkeystore as the legacy spkm (FillableSigningProvider), which\ncontains the 520-byte limit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:03Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:45:34Z"
      },
      "sha": "3426f7231269f088d655c66844ea59fc12e9ac13"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5NTFkMTZiNGU5OGMyNTQzMTNiNTY0YzRlOWFkODFhNDU5MDMxMmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e951d16b4e98c254313b564c4e9ad81a4590312d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e951d16b4e98c254313b564c4e9ad81a4590312d",
      "tree": {
        "sha": "64253af676794d531c2f2d45da3b72de669f03c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64253af676794d531c2f2d45da3b72de669f03c5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 64253af676794d531c2f2d45da3b72de669f03c5\nparent 3426f7231269f088d655c66844ea59fc12e9ac13\nauthor furszy <matiasfurszyfer@protonmail.com> 1692651009 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277244 -0300\n\nrpc: bugfix, incorrect segwit redeem script size used in signrawtransactionwithkey\n\nThe process currently fails to sign redeem scripts that are longer than\n520 bytes. Even when it shouldn't. The 520 bytes redeem scripts limit\nis a legacy p2sh rule, and not a segwit limitation.\n\nSegwit redeem scripts are not restricted by the script item size limit.\n\nThe reason why this occurs, is the usage of the same keystore used by\nthe legacy spkm. Which contains blockage for any redeem scripts longer\nthan the script item size limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXwACgkQXdI8zGhq\npiPLtQ/9EXpPoKDAafkYePdezqfPiuihfzPJn8CeJybeexHFr7HbeqhbNht9NV99\nhYvV+vBTShCH79kyrreRJHLIviRRI02BsMZ+5lVm5zCiKCcUGB8nLgtbImBaVbJ2\nMcDmVl4NWzb6Znw7nlsWSFc/iIbiH9hLq+gcnoioyoremU2GdJRH6nF715hoiv/Z\nG+C4A+P4a/w3qslRier4RiVmeCMTzUf1ybgUpARBIljCNZ5G/X/GZMra9gCWuVYn\nQlu/QFviD+ecsDQvvDOgawZVC1OpGiRhdW0gMbA3UjoS6J11sbykqa8XPP5dgtG+\nfOP/0/DfCzeOqbV8HS8vQNIxj8agPiVQDfNy0r+peo4XzmC8bRmfKP+enEzjmYYt\n8jE+N6l6xv/Lrd9Ovlx5nnC1A574Mm9svsH5NVToQa7svnWGH1CxWJ7rav2/0m+b\nOXKvu1+2umxN1NjSDpOSAqclTuha51XmvdVITf3kpq664tebbvJrvoQBc+AgDLjt\nN/qMnA0aptTCXxEnjqr3xaujimDPz+1ZJ5lWKyNoQCx+PAZPL9sztf0lHPcEEsT9\nhCUFDsvEGsB4xXXZFI8fZGpdx5SzeitjLa/YlCbN7kjC7NK8tIBzONn3GsYejdw+\nF40fCcyelFOr2gxgI1T4L8BAKKjxBKoI80Uyj730LhvuVwMN2ac=\n=X2NC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3426f7231269f088d655c66844ea59fc12e9ac13",
          "sha": "3426f7231269f088d655c66844ea59fc12e9ac13",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3426f7231269f088d655c66844ea59fc12e9ac13"
        }
      ],
      "message": "rpc: bugfix, incorrect segwit redeem script size used in signrawtransactionwithkey\n\nThe process currently fails to sign redeem scripts that are longer than\n520 bytes. Even when it shouldn't. The 520 bytes redeem scripts limit\nis a legacy p2sh rule, and not a segwit limitation.\n\nSegwit redeem scripts are not restricted by the script item size limit.\n\nThe reason why this occurs, is the usage of the same keystore used by\nthe legacy spkm. Which contains blockage for any redeem scripts longer\nthan the script item size limit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:04Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:50:09Z"
      },
      "sha": "e951d16b4e98c254313b564c4e9ad81a4590312d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5ZTdiYjgwY2JjMzVkY2NiNDA2ODFkN2ZiOTc2MjgyMDZhNGVjOGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "tree": {
        "sha": "648f53af316b115dda1708ac569a92da350927ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/648f53af316b115dda1708ac569a92da350927ee"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 648f53af316b115dda1708ac569a92da350927ee\nparent e951d16b4e98c254313b564c4e9ad81a4590312d\nauthor furszy <matiasfurszyfer@protonmail.com> 1692651526 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277244 -0300\n\ntest: coverage for 16-20 segwit multisig scripts\n\nThis exercises the bug fixed by previous commits, where\nwe were unable to generate and sign for segwit redeem scripts\n(in this case multisig redeem scripts) longer than 520 bytes.\n\nand also, this adds coverage for legacy 15-15 multisig script\ngeneration and signing.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXwACgkQXdI8zGhq\npiODzw//WqjBs9P2qHcIo4eTWU7y8kVlcHtThF79VniN7aada7CtNsSHKjsqWsvV\nYDvmJAIxsW332pXQvyw67Ww7vWdm4/nCEMuP6qEtOC+BaIRwGn46LWtYeo9AkvDB\nTn9NFl7Ai1N9LLG/ez8mNg982AA5OAYNHahJXfcv2pVvuW50+2zbjo2WgWQvbIoY\nrp/0tHwZ7JGKqqhJLm33EhNE2fjzEi01dHr+JlT3ju/hfIUX9opdUrutLp2A8oJV\n05m7T7gHxFB7XCdmbIUabOAi3agjcqZaOBaAAtde1Az0GRTbNy6l22272hnnwsnn\nBssS/YBWUWBN9cJplaAyGtJN8lPUKhLVj7d2zGdKpQulDz7B/UkCjx3buFpONJrQ\nEOYUSD8Z14X30r9R76EWrUAttRTGebQTgr02x+791zJwFiWY6S5tp5N3AdoMkflq\nADO3ZyYy2YOmrvRudJQdgK+omrwYg+Ob9oMfPqDGrcyrV2QrzILmToviUUbG+8md\n6pgNv+awRfSiF2kLzvnZM+e8z4D2ntpAfZlyUOeKgSucfJjL/mP7r1CLROvaGSmY\nTm5MXaU6TPkMlo7FDI3grm8wORsxqQ5g4m7roF+acW6yMof3F1dEqDVFbWmi14fG\nSbyQxlfhFzt80/YWfxVMUNg9RRXoCGIAKlJtzToWqV7uV/Q25U4=\n=1mY7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e951d16b4e98c254313b564c4e9ad81a4590312d",
          "sha": "e951d16b4e98c254313b564c4e9ad81a4590312d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e951d16b4e98c254313b564c4e9ad81a4590312d"
        }
      ],
      "message": "test: coverage for 16-20 segwit multisig scripts\n\nThis exercises the bug fixed by previous commits, where\nwe were unable to generate and sign for segwit redeem scripts\n(in this case multisig redeem scripts) longer than 520 bytes.\n\nand also, this adds coverage for legacy 15-15 multisig script\ngeneration and signing.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:04Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:58:46Z"
      },
      "sha": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5OTc3OTFlYmExYzEwYmI0ZDEyZGRmMWZkMjVkZjU5Njg2NGM0ZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "tree": {
        "sha": "de014f7f1ab9a761ccb2c83d3dcd34dd7b43711a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de014f7f1ab9a761ccb2c83d3dcd34dd7b43711a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree de014f7f1ab9a761ccb2c83d3dcd34dd7b43711a\nparent 29e7bb80cbc35dccb40681d7fb97628206a4ec8b\nauthor furszy <matiasfurszyfer@protonmail.com> 1692652601 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277244 -0300\n\nbugfix: addmultisigaddress, add unsupported operation for redeem scripts over 520 bytes\n\nDue to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed\non 'p2sh-segwit' and 'bech32' redeem scripts.\nAlthough redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are technically valid for\nsegwit output types, we don't want to enable this feature in legacy wallets for the\nfollowing reasons:\n\n1) It introduces a compatibility-breaking change requiring downgrade protection; older\n   wallets would be unable to interact with these \"new\" legacy wallets.\n\n2) Considering the ongoing deprecation of the legacy spkm, this issue adds another\n   good reason to transition towards descriptors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXwACgkQXdI8zGhq\npiMHKQ//VmQo6svFboVnl0Ly5ovDH8Q+8o2LyG+aE35eVoQm4uGCq4krg8DJF+bH\nHfDcwBkS3prxVyXH1rD6GVpXc6gTFXIQz82w/VWOB643IuXMzjbHpkwodu4lWWSH\ntZ03oe+H2k7j0bDt8VEm5Lyk3Tw7gh9VlP1drisaMIMx5WOpcYJGF0OC+Nbskz3V\n4BF9fT74kAX8a1WzbG6z/XMAW8xFgw/7ZULYqB2DhIgO04E7g/ZLCX1pSkBS/sCp\nXL1dy4b00NXiE705HsRjVhn8Sk1pVmpvjkvQX5feZV2C80fHh1xT/+5A4Jb9dvPy\n2NxuVZmUzQv8uRrST1rG3GUykwENF9WzPHJNRjlEMtIF6CXSILiyQLKMc7KlIinX\nz/87klNCtTG2njzl7LYLkdESGOc17eACRuJmTX6YsNRJMb7F5sQ7e9ImTCV/2vwg\nW5d8M2ykhbG2k6JekzAR0Du/TVjS+WEn2OS9KLEGJ5JUvsbKmVMM3I9qTI+swuB3\nfhI9jpcBypPcZ/XreSDDxe0IleLDvDrYk6rdHUYFNwkmprEBo9fcn69/QEh345Bw\nk5iXKKA9viOwmCKTPAGIAJIUfB5MoEnaqH5cPiMPG1ofRELq3ZHDsYRfrfS+wLnH\n07pf7kNlPZ052lQIK2yf8GQLQT+jhj6YZnvkbhylQQC4cldnBY0=\n=3O66\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
          "sha": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29e7bb80cbc35dccb40681d7fb97628206a4ec8b"
        }
      ],
      "message": "bugfix: addmultisigaddress, add unsupported operation for redeem scripts over 520 bytes\n\nDue to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed\non 'p2sh-segwit' and 'bech32' redeem scripts.\nAlthough redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are technically valid for\nsegwit output types, we don't want to enable this feature in legacy wallets for the\nfollowing reasons:\n\n1) It introduces a compatibility-breaking change requiring downgrade protection; older\n   wallets would be unable to interact with these \"new\" legacy wallets.\n\n2) Considering the ongoing deprecation of the legacy spkm, this issue adds another\n   good reason to transition towards descriptors.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:04Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T21:16:41Z"
      },
      "sha": "3997791eba1c10bb4d12ddf1fd25df596864c4ea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwZWJiOTI5ZTg2NTkwM2NhMWNjMjY3NGU3NDkwNmE4MDZlNzMxMDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0ebb929e865903ca1cc2674e74906a806e73109",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a0ebb929e865903ca1cc2674e74906a806e73109",
      "tree": {
        "sha": "5b470204ce94b03627f563b7323bed2686957ebc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b470204ce94b03627f563b7323bed2686957ebc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5b470204ce94b03627f563b7323bed2686957ebc\nparent 3997791eba1c10bb4d12ddf1fd25df596864c4ea\nauthor furszy <matiasfurszyfer@protonmail.com> 1692652680 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706277244 -0300\n\ntest: addmultisigaddress, coverage for script size limits\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWzuXwACgkQXdI8zGhq\npiMgPw/8D4bmYf+IIgpbynF7ve2Uluydf6H+I14xjSiGwIaGTPMFrVwZQMObSHIv\nyYWWQmgV7L996fa+HIpmopVdRpytPXcoqgrUU7bs02ndXfPptdfZCM23FvAjHl0h\nhp+XfNsoXcrhr0MyB+JQrBN6JP2UN2+LrtaLKtChggq0o2C4g7kC1gVLtG5V8VNp\nRx4mxC7Hjgti4v93pQp/j5M2tCjQ/emkDiENcCDGq7Vb8AMDb7FDPgpEiU/tYbpz\neCVruTaen7i9OLe/G9j1p1uB47so5H4ij6ZXJ39HoDwILlMsMN4TmUrDwZcTuRo9\nVT7Ky98GH2N9rprj0Ud703ix4+YDtWQaFS7yhcyeeLTvy+WiwD4k3EO4dTg2JHxF\nEh6xkQjHrYx7uDjMw+MMmUFj6vaC62Bp0LQqDRb2YEF0hyuYMvFjf5TBLc8OIqji\nJOETWIKwJCEMK4z+6JfXt1MOt8sy0qqvdbXBqHSFFJhUt+2XMudzoj5RvCb0sgT9\nbOjLIYz2jl6ItyaExEjQWYz6Wy/bxAhbV1nItGaQPB6zsUPtQh7i7b4NBM/BhpgA\nYxjv7qK46fXIs785xarhgPbJY8gSB06BXM6E0CtAc3TviYZ56YX6dhoVVVZ6r6SB\nM+Sh7fv/XEcyrG8B7prGoZyFzJwrJ130ljbI4VuqDaK3FTe8Vnk=\n=N5xw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3997791eba1c10bb4d12ddf1fd25df596864c4ea",
          "sha": "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3997791eba1c10bb4d12ddf1fd25df596864c4ea"
        }
      ],
      "message": "test: addmultisigaddress, coverage for script size limits",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-26T13:54:04Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T21:18:00Z"
      },
      "sha": "a0ebb929e865903ca1cc2674e74906a806e73109"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11609210857,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAKz9n_p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609210857",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T13:56:24Z"
    },
    {
      "event": "reviewed",
      "id": 1845803551,
      "node_id": "PRR_kwDOABII585uBLof",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks theStack.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845803551",
      "submitted_at": "2024-01-26T13:57:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "unlabeled",
      "id": 11609928305,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAK0AXJx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609928305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T15:06:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1970177563,
      "node_id": "PRR_kwDOABII5851boYb",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Ack [a0ebb92](https://github.com/bitcoin/bitcoin/pull/28307/commits/a0ebb929e865903ca1cc2674e74906a806e73109)\r\n\r\nTesting Methodology:\r\n1. Make, successful\r\n2. All functional tests, successful\r\n3. Executed `createmultisig` command with the following output - don't see `Unable to make chosen address type, please ensure no uncompressed public keys are present.` warning anymore, nor do I see `ERROR: FillableSigningProvider::AddCScript(): redeemScripts > 520 bytes are invalid` message in the logs.\r\n\r\n```\r\nbcli createmultisig 16 \"[\\\"02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b\\\",\\\"03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672\\\",\\\"021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed\\\",\\\"03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9\\\",\\\"02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db\\\",\\\"032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a\\\",\\\"0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1\\\",\\\"03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf\\\",\\\"0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894\\\",\\\"03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4\\\",\\\"023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372\\\",\\\"02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596\\\",\\\"020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae\\\",\\\"03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474\\\",\\\"031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41\\\",\\\"0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65\\\",\\\"02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c\\\",\\\"0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e\\\",\\\"0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03\\\",\\\"0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d\\\"]\" \"p2sh-segwit\"\r\n{\r\n  \"address\": \"2N9mdDwZmrKZNBkX61qidLnPZqkVW8gx3KR\",\r\n  \"redeemScript\": \"602102f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b2103d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad9367221021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed2103a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc92102a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db21032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a210370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea12103878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf210248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec8942103f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac421023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e73722102e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d0159621020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae2103725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce9447421031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41210235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc652102ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c210282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e210279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03210293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d0114ae\",\r\n  \"descriptor\": \"sh(wsh(multi(16,02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b,03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672,021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed,03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9,02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db,032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a,0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1,03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf,0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894,03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4,023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372,02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596,020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae,03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474,031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41,0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65,02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c,0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e,0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03,0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d)))#xfjxuvgn\"\r\n}\r\n```",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1970177563",
      "submitted_at": "2024-03-31T11:40:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:12:32Z",
      "updated_at": "2024-05-02T14:12:32Z",
      "source": {
        "issue": {
          "id": 2274453019,
          "node_id": "PR_kwDOABII585uTTKR",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30019",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30019/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30019/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30019/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/30019",
          "number": 30019,
          "state": "open",
          "state_reason": null,
          "title": "test: create assert_less_than util",
          "body": "In the functional tests there are lots of cases where we assert < which we now swap with assert_less_than to be more readable\r\n\r\nThis is motivated/uses logic from this PR which was closed https://github.com/bitcoin/bitcoin/pull/28528\r\nThis partially helps https://github.com/bitcoin/bitcoin/issues/23119\r\n\r\nI've broken it up to just assert_less_than to keep the PR smaller as suggested in https://github.com/bitcoin/bitcoin/pull/28528#issuecomment-1959945805\r\n\r\n[Similar change for assert_not_equal](https://github.com/bitcoin/bitcoin/pull/29500)\r\n\r\nI did not use the scripted-diff for the last commit since it either included a <= or there was already a () which did not match the pattern of the rest\r\n\r\nif you run this command on this branch it should come back empty\r\n`git grep -nri -e \"assert .*< \" --and --not -e \"assert .*!=\" -- ./test/functional`",
          "user": {
            "login": "kevkevinpal",
            "id": 15950706,
            "node_id": "MDQ6VXNlcjE1OTUwNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevkevinpal",
            "html_url": "https://github.com/kevkevinpal",
            "followers_url": "https://api.github.com/users/kevkevinpal/followers",
            "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
            "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
            "repos_url": "https://api.github.com/users/kevkevinpal/repos",
            "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30019",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/30019",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/30019.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/30019.patch"
          },
          "created_at": "2024-05-02T01:56:45Z",
          "updated_at": "2024-05-02T14:12:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T04:14:02Z",
      "updated_at": "2024-05-03T04:14:02Z",
      "source": {
        "issue": {
          "id": 2276112879,
          "node_id": "PR_kwDOABII585uY_0g",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30024",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30024/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30024/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30024/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/30024",
          "number": 30024,
          "state": "closed",
          "state_reason": null,
          "title": "doc: replace remaining \"520\" magic nums with MAX_SCRIPT_ELEMENT_SIZE",
          "body": "Noticed these while reviewing BIPs yesterday.\r\n\r\nIt would be clearer and more future-proof to refer to their constant name.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30024",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/30024",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/30024.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/30024.patch"
          },
          "closed_at": "2024-05-03T16:37:05Z",
          "created_at": "2024-05-02T17:35:37Z",
          "updated_at": "2024-05-03T16:37:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2038429816,
      "node_id": "PRR_kwDOABII5855f_h4",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK a0ebb929e865903ca1cc2674e74906a806e73109\r\n\r\nDiff since last ACK is minimal, just nits in tests. Since it's been a while, I re-reviewed the whole PR anyway. Most of the changes are cleanup refactors in the relevant tests which I agree are worthwhile. The main bugfix is switching from `FillableSigningProvider` to `FlatSigningProvider` when adding a CScript in`AddAndGetDestinationForScript()`, because the latter does not require that `redeemScript.size() <= MAX_SCRIPT_ELEMENT_SIZE`\r\n\r\nThe script element size check is preserved (appropriately only for LEGACY output types) in the calling function `AddAndGetMultisigDestination()`\r\n\r\nConfirmed the test fails on master with `redeemScripts > 520 bytes are invalid` (had to manually revert a few refactors to run it on master) and passes on the branch.\r\n\r\nAlso ran the `createmultisig` RPC on PR branch and master to ensure the bug is fixed: https://gist.github.com/pinheadmz/856f94c1c483343f63e6f144638ac96f\r\n\r\nI do have one concern which is that RPC `signrawtransactionwithkey` is modified but I do not think it is tested directly with a legacy multisig with > 15 keys. Such a template would have to be constructed manually because our own RPC `createmultisig` will not do it. Just looking at the code I think it would be possible for a user to sign an invalid legacy transaction, if they could find a way to construct one. I may try to write this test later today and will report back!\r\n\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK a0ebb929e865903ca1cc2674e74906a806e73109\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmY0/dIACgkQ5+KYS2KJ\r\nyTrKJg/+PuYRj9moqfODqMb2nXQwhsS6qMp8iLA77aNLiXGTZzOl1b3T3JqP0/6l\r\n1sgdfrqHNMnqJ9HCkazLUcx5a5ZyK/3QjmxhgrxybmQ+m1QFr+GfHqZjehekgWP+\r\nkgpJ9YSFL3i/lNCQZBNCnZfFynK6zb+jD/5NSPWEWIDM/C8VMGWNr6ZvOyOJZvH7\r\nYvV4gJx3CGYT8n0KGIyDDU6PdxHqspa6pHjhmVgN0Uy/ghaiofC7IuNSznJ7R6xH\r\nPLPRArXh9u3kO8gzPU1NJjnzrclQZnfHHbIqP5gk5uXBFXU2IcMaWt0hfYeWtOr+\r\nJw0nVQj5yd2RH+TpsJbrEy+hfhjQL0ZtoXcZp21/psD/GhEP/ke0kcVDza6t+WJX\r\nqmvw6HZ0Shxi0wiGqtRTpKTfDxA5PXBcdARQljVE0eIgw+dg8neKW1vYFLZQ1bdG\r\n9f9qsusf1QoMDzP2fomYYBYgtpCdb6q+IBigNVJ0+pmEzvrhs6L8BKau5Yvf7AEo\r\n79BkSmT11l+1X+E+xl2rxB8j4GIMItto6DG57sGt5VlTzkxqmxvY7fPEpwsYBEOQ\r\nuOjVcIgdyNsdvR5h5rKfu6KMCTtLurC/ny56H3dqhbAH/uuRYAESP/g1JNZ+2n2n\r\npk8cmwdSpRHFnlm0B5YWDOHhWFK+HAq/wTbsPvho2rWhsY88cYU=\r\n=Aora\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2038429816",
      "submitted_at": "2024-05-03T15:37:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "review_requested",
      "id": 12698063490,
      "node_id": "RRE_lADOABII585u4fvyzwAAAAL03RKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698063490",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T15:37:29Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 12698835878,
      "node_id": "LE_lADOABII585u4fvyzwAAAAL06Num",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698835878",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T16:55:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2093395999,
      "node_id": "IC_kwDOABII5858xrAf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093395999",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T16:55:12Z",
      "updated_at": "2024-05-03T16:55:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2093395999",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724",
      "pull_request_review_id": 1613931820,
      "id": 1317649724,
      "node_id": "PRRC_kwDOABII585Oib08",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just curious, why doesn't `FlatSigningProvider` have a `AddCScript()` method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.",
      "created_at": "2023-09-06T18:02:30Z",
      "updated_at": "2023-09-06T18:10:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675",
      "pull_request_review_id": 1613931820,
      "id": 1317654675,
      "node_id": "PRRC_kwDOABII585OidCT",
      "diff_hunk": "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 144,
      "original_position": 145,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do we need to cover m=21 here to catch the error in segwit multisig?",
      "created_at": "2023-09-06T18:07:48Z",
      "updated_at": "2023-09-06T18:10:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254",
      "pull_request_review_id": 1614119645,
      "id": 1317766254,
      "node_id": "PRRC_kwDOABII585Oi4Ru",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Just curious, why doesn't FlatSigningProvider have a AddCScript() method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.\r\n\r\n`FillableSigningProvider` is the legacy counterpart. All other `SigningProvider` subclasses were introduced with the output descriptors implementation.\r\n\r\nIf you look at the new providers, all of them are loaded in place and stay constant over time. They are only accessed through the `SigningProvider` interface methods and not directly (this interface only present getters). In contraposition, the legacy provider fulfills both roles. It implements the `SigningProvider` methods and, at the same time, allows new scripts and keys to be added over time.\r\nThis reflects the legacy vs descriptors difference: each new import in the descriptors wallet refers to a new spkm, while in the legacy wallet, it  refers to a new script/key added into the single legacy spkm.",
      "created_at": "2023-09-06T20:01:02Z",
      "updated_at": "2023-09-06T20:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411",
      "pull_request_review_id": 1614121997,
      "id": 1317768411,
      "node_id": "PRRC_kwDOABII585Oi4zb",
      "diff_hunk": "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 144,
      "original_position": 145,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317654675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, good idea. Will add it.",
      "created_at": "2023-09-06T20:02:43Z",
      "updated_at": "2023-09-06T20:02:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862",
      "pull_request_review_id": 1614133652,
      "id": 1317778862,
      "node_id": "PRRC_kwDOABII585Oi7Wu",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?",
      "created_at": "2023-09-06T20:11:06Z",
      "updated_at": "2023-09-06T20:11:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935",
      "pull_request_review_id": 1614163358,
      "id": 1317798935,
      "node_id": "PRRC_kwDOABII585OjAQX",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?\r\n\r\nAs uses to be in software development, the answer is \"it depends\".\r\nAs far as I can tell, the idea was to hide the `SigningProvider` implementation. Which is sound.\r\n\r\nI haven't looked at all the places where the `FlatSigningProvider` is used but most of them should be inside the `descriptor.cpp` and similar related processes where the parent process invokes a function to load the provider with some keys/scripts, to then use them and discard the provider.\r\n\r\nWhen I said \"allows new scripts and keys to be added over time\" was referring to keep it in-memory. And continually add new elements to it. Which should not be happening with `FlatSigningProvider` anywhere.",
      "created_at": "2023-09-06T20:29:21Z",
      "updated_at": "2023-09-06T20:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980",
      "pull_request_review_id": 1845552797,
      "id": 1467521980,
      "node_id": "PRRC_kwDOABII585XeJu8",
      "diff_hunk": "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 6,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC, the right part of this expression seems redundant?\r\n```suggestion\r\n        self._requires_wallet = self.is_wallet_compiled()\r\n```\r\nIf a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nConsequently, the `self.has_wallet` member is not needed anymore, and can simply be replaced by `self.is_wallet_compiled()` calls?",
      "created_at": "2024-01-26T11:04:50Z",
      "updated_at": "2024-01-26T13:29:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522",
      "pull_request_review_id": 1845798508,
      "id": 1467681522,
      "node_id": "PRRC_kwDOABII585Xewry",
      "diff_hunk": "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 6,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "in_reply_to_id": 1467521980,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nYeah sure. Removed the right part of the statement.\r\n\r\n> Consequently, the self.has_wallet member is not needed anymore, and can simply be replaced by self.is_wallet_compiled() calls?\r\n\r\nSure. Done.",
      "created_at": "2024-01-26T13:54:44Z",
      "updated_at": "2024-01-26T13:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304",
      "pull_request_review_id": 1970177563,
      "id": 1545613304,
      "node_id": "PRRC_kwDOABII585cIC_4",
      "diff_hunk": "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 17,
      "original_position": 9,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?",
      "created_at": "2024-03-31T11:01:17Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545613304",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823",
      "pull_request_review_id": 1970177563,
      "id": 1545616823,
      "node_id": "PRRC_kwDOABII585cID23",
      "diff_hunk": "@@ -139,22 +131,6 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n-\n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n-\n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n-",
      "path": "test/functional/rpc_createmultisig.py",
      "position": null,
      "original_position": 63,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1 on removing these hard-coded values!",
      "created_at": "2024-03-31T11:06:05Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545616823",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": 142,
      "start_side": "LEFT",
      "line": null,
      "original_line": 157,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378",
      "pull_request_review_id": 1970177563,
      "id": 1545617378,
      "node_id": "PRRC_kwDOABII585cID_i",
      "diff_hunk": "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 312,
      "original_position": 73,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `err_msg_list`",
      "created_at": "2024-03-31T11:08:41Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617378",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723",
      "pull_request_review_id": 1970177563,
      "id": 1545617723,
      "node_id": "PRRC_kwDOABII585cIEE7",
      "diff_hunk": "@@ -56,12 +56,13 @@ def run_test(self):\n         self.generate(self.wallet, 149)\n \n         wallet_multi = self.create_wallet(node1, 'wmulti') if self._requires_wallet else None\n-        self.create_keys(5)\n-        for nkeys in [3, 5]:\n-            for nsigs in [2, 3]:\n-                for output_type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\n-                    self.do_multisig(nkeys, nsigs, output_type, wallet_multi)\n+        self.create_keys(21)  # max number of allowed keys + 1\n+        m_of_n = [(2, 3), (3, 3), (2, 5), (3, 5), (10, 15), (15, 15)]\n+        for (sigs, keys) in m_of_n:",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 74,
      "original_position": 11,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1 on creating a list of (sigs, keys) instead!",
      "created_at": "2024-03-31T11:10:12Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617723",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 60,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": 61,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073",
      "pull_request_review_id": 1970177563,
      "id": 1545618073,
      "node_id": "PRRC_kwDOABII585cIEKZ",
      "diff_hunk": "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 150,
      "original_position": 36,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, addr_type)\r\n```",
      "created_at": "2024-03-31T11:12:11Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545618073",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 99,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069",
      "pull_request_review_id": 1970177563,
      "id": 1545619069,
      "node_id": "PRRC_kwDOABII585cIEZ9",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 172,
      "original_position": 172,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', addr_type)\r\n```",
      "created_at": "2024-03-31T11:14:56Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545619069",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 110,
      "original_start_line": 110,
      "start_side": "RIGHT",
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376",
      "pull_request_review_id": 1970177563,
      "id": 1545621376,
      "node_id": "PRRC_kwDOABII585cIE-A",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.",
      "created_at": "2024-03-31T11:22:49Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621376",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668",
      "pull_request_review_id": 1970177563,
      "id": 1545621668,
      "node_id": "PRRC_kwDOABII585cIFCk",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 239,
      "original_position": 239,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.",
      "created_at": "2024-03-31T11:24:03Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621668",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129",
      "pull_request_review_id": 1971399064,
      "id": 1546405129,
      "node_id": "PRRC_kwDOABII585cLEUJ",
      "diff_hunk": "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 17,
      "original_position": 9,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "in_reply_to_id": 1545613304,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?\r\n\r\nYes.",
      "created_at": "2024-04-01T14:45:54Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546405129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622",
      "pull_request_review_id": 1971399064,
      "id": 1546414622,
      "node_id": "PRRC_kwDOABII585cLGoe",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": 1545621376,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.\r\n\r\nThe goal of the function is to test the complete multisig workflow. You will probably end up duplicating code if you decouple it in smaller functions. But feel free to try it locally and push a follow-up PR if you get a better structure.",
      "created_at": "2024-04-01T14:56:12Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546414622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037",
      "pull_request_review_id": 1971399064,
      "id": 1546416037,
      "node_id": "PRRC_kwDOABII585cLG-l",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 239,
      "original_position": 239,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": 1545621668,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.\r\n\r\nSure. Will leave it as is to not continue expanding the diff. Feel free to tackle it on a follow-up.",
      "created_at": "2024-04-01T14:57:39Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546416037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289",
      "pull_request_review_id": 2026656842,
      "id": 1581838289,
      "node_id": "PRRC_kwDOABII585eSO_R",
      "diff_hunk": "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 312,
      "original_position": 73,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "in_reply_to_id": 1545617378,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, will change it if I have to retouch the code.",
      "created_at": "2024-04-27T14:22:17Z",
      "updated_at": "2024-04-27T14:22:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453",
      "pull_request_review_id": 2026656977,
      "id": 1581838453,
      "node_id": "PRRC_kwDOABII585eSPB1",
      "diff_hunk": "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 150,
      "original_position": 36,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": 1545618073,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, will change it if I have to retouch this code.",
      "created_at": "2024-04-27T14:23:20Z",
      "updated_at": "2024-04-27T14:23:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 99,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    }
  ]
}