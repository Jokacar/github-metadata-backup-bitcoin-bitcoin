{
  "type": "issue",
  "issue": {
    "id": 2288833341,
    "node_id": "I_kwDOABII586IbNM9",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30077",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30077/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30077/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30077/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30077",
    "number": 30077,
    "state": "open",
    "state_reason": null,
    "title": "RPC: Internal bug in `walletprocesspsbt` when non_witness_utxo is not provided and a witness signature is invalid",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nCalling `walletprocesspsbt` on a signed PSBT that only includes a `witness_utxo` (no `non_witness_utxo`) with an invalid signature produces an internal bug (`CHECK_NONFATAL`):\r\n\r\n```\r\n‚ùØ bitcoin-cli walletprocesspsbt \"cHNidP8BAJoCAAAAAq3g8bgaDs84DkYQ6urdGcuevx4mTtc5ImnEuw/RKiZ2AAAAAAD9////O+qpBnMQ44R69kLMIMPrviyL4ml4zSC1iA8Ec7ux/8YBAAAAAP3///8ClnsOAAAAAAAWABQ1vvbTc5DqIMQ7qVHMKjCDEWY5m+DhDQAAAAAAFgAUWIMWf8n1WEfQh3v8yh+J7jCs/a577QIAAAEBH9C6DQAAAAAAFgAUsPZp8CKeWQmHjCFZ2elo6XlxIAEAAQEflqMOAAAAAAAWABRNIMqZK+4V6Fbf76G+CxrSoMafyQEIawJHMEQCIG7dSys9CpWsVOhrVH4aPc4s2hWr0gkYAwOZDWMczlweAiAj7av+wVmv37x4BNEWygqRxeP/GUblTMYzFePeJa5x0QEhA4Uz0JSTf/5CkbMHXfV7C5q8HjcjKGH6frUU57sDbHYDAAAA\"\r\nerror code: -1\r\nerror message:\r\nInternal bug detected: FinalizeAndExtractPSBT(psbtx, mtx)\r\nwallet/rpc/spend.cpp:1618 (operator())\r\nBitcoin Core v27.99.0-24572cf76816\r\nPlease report this issue here: https://github.com/bitcoin/bitcoin/issues\r\n```\n\n### Expected behaviour\n\nThis scenario should be handled gracefully either with an explanatory error message or by ignoring those bad signatures (the latter happens when `non_witness_utxo` is provided). There are many reasons why a previously added signature could be invalid, e.g. if new inputs were added, outputs modified, etc.\r\n\r\nA concrete example is a Payjoin transaction, where the receiver contributes inputs of their own after the sender has signed an initial PSBT. That's the scenario I was testing when I stumbled onto this (see discussion [here](https://github.com/payjoin/rust-payjoin/issues/51#issuecomment-2083231756)).\r\n\n\n### Steps to reproduce\n\nI produced a minimal repro by modifying the rpc_psbt.py functional test: https://github.com/grizznaut/bitcoin/commit/0ddee75a59d33ceed11f5f8a5e59bbc46054676b). After signing the initial PSBT, it substitutes the output address and attempts to call `walletprocesspsbt` again, but fails:\r\n\r\n```\r\n2024-05-10T02:42:01.177000Z TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/Users/jaad/bin/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.run_test()\r\n  File \"/Users/jaad/bin/bitcoin/test/functional/rpc_psbt.py\", line 601, in run_test                                                                                                                                                               self.test_utxo_conversion()                                                                                                                                                                                                                 File \"/Users/jaad/bin/bitcoin/test/functional/rpc_psbt.py\", line 118, in test_utxo_conversion\r\n    signed_psbt = offline_node.walletprocesspsbt(signed_psbt_new.to_base64())\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/jaad/bin/bitcoin/test/functional/test_framework/coverage.py\", line 50, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                                                                                                     File \"/Users/jaad/bin/bitcoin/test/functional/test_framework/authproxy.py\", line 129, in __call__                                                                                                                                               raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: Internal bug detected: FinalizeAndExtractPSBT(psbtx, mtx)\r\nwallet/rpc/spend.cpp:1618 (operator())\r\n```\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster@98dd4e7\n\n### Operating system and version\n\nMacOS Ventura 13.6\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "grizznaut",
      "id": 144076611,
      "node_id": "U_kgDOCJZvQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/144076611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grizznaut",
      "html_url": "https://github.com/grizznaut",
      "followers_url": "https://api.github.com/users/grizznaut/followers",
      "following_url": "https://api.github.com/users/grizznaut/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/grizznaut/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/grizznaut/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/grizznaut/subscriptions",
      "organizations_url": "https://api.github.com/users/grizznaut/orgs",
      "repos_url": "https://api.github.com/users/grizznaut/repos",
      "events_url": "https://api.github.com/users/grizznaut/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/grizznaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2024-05-10T03:15:00Z",
    "updated_at": "2024-05-15T15:12:43Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 12819625224,
      "node_id": "LE_lADOABII586IbNM9zwAAAAL8G_UI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12819625224",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T15:12:43Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    }
  ]
}