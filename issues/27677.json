{
  "type": "issue",
  "issue": {
    "id": 1712437859,
    "node_id": "I_kwDOABII585mEbpj",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/27677",
    "number": 27677,
    "state": "open",
    "state_reason": null,
    "title": "Proposal for a new mempool design",
    "body": "@sipa and I gave a presentation to some other developers recently about some work we've been doing to redesign how the mempool works, and I wanted to share a writeup outlining our thoughts with a broader audience to further the discussion.  I've also attached a PDF of slides that go along with this: [Reinventing the Mempool.pdf](https://github.com/bitcoin/bitcoin/files/11490409/Reinventing.the.Mempool.pdf).\r\n\r\n--------\r\n\r\n# Summary\r\n\r\nThe current mempool is primarily designed around maintaining two different sort orders, where for each transaction we keep track of its position in an ancestor-feerate-sort and in a descendant-feerate-sort.  We then use those two cached sort orders in order to implement eviction and mining.\r\n\r\nThose algorithms are deficient in several ways. In particular, the eviction algorithm (which removes the transaction with lowest descendant feerate, along with its descendants) does not guarantee that the first transaction evicted would be the last transaction mined, and there exist situations where we could evict a transaction that would otherwise actually be mined in the next block.\r\n\r\nFurthermore, the mining algorithm is more complex than the ancestor feerate sort we maintain, and it is insufficient to merely do lookups into our ancestor feerate index to determine which of two transactions will be mined from the mempool first. This lack of a total ordering on mempool transactions makes RBF calculations difficult to align with miner incentives, and creates distortions where we sometimes can replace transactions via RBF that would actually be better for a miner than the replacement.\r\n\r\nTo solve all these problems, we propose maintaining a total ordering on mempool transactions, which we use to implement a mining and eviction algorithm that are symmetrically opposite and provide better RBF rules for determining when to allow a replacement to occur.\r\n\r\n# Background\r\n\r\n## [Eviction and mining are not opposite](#eviction-mining-not-opposite)\r\n\r\nSometimes our eviction criteria might remove something that would be mined in the next block from our mempool. Consider the following transaction graph _(with (ancestor, descendant) feerates in sat/byte in parentheses)_:\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[\"Tx A: size 250, fee 250 (1, 2)\"]-->B;\r\n    A-->C;\r\n    A-->E[\"Tx E: size 250, fee 49750 (100, 199)\"];\r\n    B[\"Tx B: size 50000, fee 50000 (1, 2.02)\"]-->D[\"Tx D: size 500, fee 52000 (1.51, 104)\"];\r\n    C[\"Tx C: size 50000, fee 50000 (1, 2.02)\"]-->D;\r\n```\r\n\r\nNote that the ancestor feerate of E is 100 sat/byte, while the descendant feerate of A is 2 sat/byte.  In particular, the descendant feerate of A is lowest among all transactions in this diagram, so if it were also the lowest descendant feerate package in the mempool, then we might evict A, and therefore E, even though (A, E) might otherwise be selected for the next block.\r\n\r\n## RBF is not incentive compatible\r\n\r\nThere are many forms of incentive incompatibility baked into the BIP 125 replacement rules:\r\n * The \"no-new-parents\" rule doesn't consider the replacement transaction's desirability to a miner -- it might be better than all the to-be-replaced transactions, despite the new unconfirmed parent.\r\n * The rule requiring that a new transaction pays a higher feerate than its direct conflicts is insufficient to ensure that the new transaction is more desirable than what is being evicted. One of the direct conflicts could have a smaller set of unconfirmed parents than the new transaction, resulting in a higher ancestor feerate. Moreover, because we don't compare feerates of any indirect conflicts -- that is, descendants of direct conflicts -- with the feerate of the new transaction, it's possible that we're evicting a child transaction that would otherwise be mined in the next block with something that will not be mined for a long time.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/26451 for more discussion of the second point.\r\n\r\n# Proposed solution\r\n\r\nIf we're able to maintain a total ordering on the mempool, then we can design efficient algorithms that will solve these problems.\r\n\r\n## How to maintain a total ordering\r\n\r\nWith the current algorithm and rules, it is infeasible to continuously maintain a fully-ordered mempool at all times. Ordering an $n$-transaction mempool from scratch scales with $O(d n \\log n)$, where $d$ is the descendant limit (default 25), which quickly becomes too much when the mempool grows beyond a trivial size. And unfortunately, doing this incrementally (just re-ordering affected transactions whenever updates happen) does not help, because even a single added transaction can change the ordering of all remaining ones.\r\n\r\n[_Edited to use a better example_] As an example of this effect, consider the following transaction graph (all transactions are same size, with ancestor feerates of children in parentheses):\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[Tx A: fee 16]-->D[\"Tx D: fee 17 (16.5)\"];\r\n    A-->E[\"Tx E: fee 19 (16)\"];\r\n    B[Tx B: fee 13]-->E;\r\n    B-->F[\"Tx F: fee 23 (14.67)\"];\r\n    C[Tx C: fee 8]-->F;\r\n```\r\n\r\nWith these ancestor feerates, Tx D should be included first along with its parent Tx A. Once Tx A is included, Tx E will have the next highest ancestor feerate and it is included next with its parent, and so on to produce the ordering: [A, D, B, E, C, F].\r\n\r\nNow consider a single transaction being added, Tx G:\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[Tx A: fee 16]-->D[\"Tx D: fee 17 (16.5)\"];\r\n    A-->E[\"Tx E: fee 19 (16)\"];\r\n    B[Tx B: fee 13]-->E;\r\n    B-->F[\"Tx F: fee 23 (14.67)\"];\r\n    C[Tx C: fee 8]-->F;\r\n    C-->G[\"Tx G: fee 29 (18.5)\"]\r\n```\r\n\r\nTransaction G now has the highest ancestor feerate, and so it would be chosen first in our ancestor-feerate-based ordering. Once Tx G and its parent Tx C are included, Tx F will see its ancestor feerate increase (as it only has one remaining ancestor) to 18, making it the next best to include (along with its parent Tx B). Once Tx B is in, Tx E has the next highest ancestor feerate and we can see that the final ordering of transactions is: [C, G, B, F, A, E, D]. Note that the order in which the child transactions appear has been reversed, and moreover, the number of transactions in this graph could be extended arbitrarily while retaining this behavior.\r\n\r\nFundamentally this means that we need to bound the number of transactions whose ordering can be affected by individual changes to the mempool. Our main insight is that this number is exactly the size of the largest \"cluster\" of transactions that we might have in the mempool, where a \"cluster\" is a maximal set of transactions that are connected via ancestor/descendant relationships in the transaction graph.\r\n\r\nOur proposal is thus to introduce a limit on the size of clusters in the mempool. It then becomes feasible to maintain an ordering for all the individual clusters at all times, and perform a quick merge sort over all of them whenever a total ordering of the entire mempool is needed.\r\n\r\n### Definitions\r\n\r\n#### Clusters\r\n\r\nWe associate the transactions in the mempool with a graph, where each transaction corresponds to a vertex and two transactions are adjacent (ie have an edge between them) if one spends any outputs of the other. We say that two transactions are in the same cluster if there exists a path of edges between them. The overall graph of transactions is partitioned into disjoint clusters, where each transaction is in exactly one cluster. \r\n\r\n#### Linearizations\r\n\r\nWe introduce the term \"linearization\" to refer to any topologically valid ordering of transactions, that is, any ordering of transactions that would be valid in a block under Bitcoin's consensus rules. This could be an ancestor-feerate-based ordering of transactions (like we use in the mining code today), or it could be the optimal ordering (one where we choose amongst all possible subsets of transactions the topologically valid subset that maximizes feerate, and repeat until all transactions are selected).  Or it could be something in between; for the purposes of discussion we abstract away the details of the cluster ordering algorithm, or \"linearization\", that we might settle on.\r\n\r\n#### Chunks\r\n\r\nOur intuition for cluster linearization algorithms is that we often will choose transactions with lower feerate before we choose transactions with higher feerate, because of topology constraints. This is a consequence of behaviors like \"child- pays-for-parent\".  So when thinking about how we might compare transactions from two different clusters to determine which  one is \"better\" (eg for mining) or \"worse\" (eg for eviction), we don't just want to look at the first or last transaction in the cluster. Instead, our intuition is that we want to look at the same package of transactions that our ordering algorithm would have used in coming up with the ordering in the first place.\r\n\r\nThis concept, that transactions should be looked at in some aggregate with other transactions, can be generalized in a way that is indifferent to the underlying linearization algorithm that is used. For a given linearized cluster  $[tx_1, ..., tx_n]$, we can partition the cluster into a series of disjoint \"chunks\" $[c_1, c_2, ..., c_j]$ where $c_1 = [tx_1, ..., tx_{i_1}]$, $c_2 = [tx_{i_1+1}, ..., tx_{i_2}]$ ,..., $c_j = [tx_{i_{j-1}+1}, ..., tx_n]$, such that the feerate of each chunk is no greater than the feerate of the chunk that precedes it. \r\n\r\nAnother way of putting it: chunks are the partitioning of a cluster that respects the linearization in a way that ensures that feerates from one chunk to the next are monotonically decreasing.\r\n\r\n(_Note that due to ties there can be more than one chunking that is compatible with the given definition; generally we'll prefer smaller chunks and therefore not merge together chunks with the same feerate._)\r\n\r\nGiven any cluster linearization, it turns out that it's possible to construct the chunks for the cluster in linear time, and this operation is independent of the linearization algorithm that may have been used.\r\n\r\n### Implementing fundamental mempool operations\r\n\r\nFor the sake of discussion below, let's now imagine that our mempool is grouped into its different clusters, and each cluster is linearized using some algorithm (perhaps the ancestor-feerate-based mining algorithm in use today, or perhaps an optimal ordering), and those linearized clusters are each chunked into their monotonically decreasing feerate order.  Given such a mempool, we can design algorithms to implement the fundamental mempool operations.\r\n\r\n#### Mining\r\n\r\nOur goal with mining is to maximize the fees in a block template, and we do so by applying a greedy algorithm. \r\n\r\n1. Make a highest-feerate-sorted heap consisting of the first chunk from each cluster.  Note that these will be each cluster's highest feerate chunk.\r\n2. While the candidate block is not yet full:\r\n    i. Remove the top of the heap and add to the block candidate.\r\n    ii. If the cluster from which the selection was made has more chunks left, insert the next best chunk from that cluster into the heap.\r\n\r\nNote that when we approach the end of a block, we run into a knapsack problem where chunks may not fit. How we might optimize the end of a block is deferred for later discussion.\r\n\r\n#### Eviction\r\n\r\nOur goal with eviction is to remove the transactions that would be the last ones selected by our mining algorithm. With a  fully ordered mempool, this calculation is straightforward and mirrors the mining algorithm.\r\n\r\n1. Make a lowest-feerate-sorted heap consisting of the last chunk from each cluster. Note that these will be each cluster's lowest feerate chunk.\r\n2. While the mempool is over its size limit:\r\n    i. Remove the top of the heap and evict from the mempool.\r\n    ii. If the cluster from which the selection was made has more chunks left, insert the next lowest feerate chunk from that cluster into the heap.\r\n\r\nAs with our current eviction algorithm, we will also bump up the mempool's minimum fee to be an increment above the highest feerate chunk that was evicted.\r\n\r\n#### [RBF](#RBF)\r\n\r\nOur goal with RBF is to allow a \"better\" transaction (something a miner would prefer to have) to evict some existing, conflicting transactions in a way that is DoS-resistant but is otherwise as permissible as practical.\r\n\r\nGiven a mempool where all clusters are ordered and chunked, we can assign a score to a transaction which is the chunk feerate of the chunk to which it belongs.  Then our main RBF incentive compatibility rule just becomes:\r\n\r\n1. A replacement transaction must have a chunk feerate greater than that of all transactions which it would evict.\r\n\r\nThis would eliminate the BIP 125 rule against replacements introducing new unconfirmed parents and replaces the BIP 125 feerate rule in which a replacement transaction must have a higher individual feerate than all direct conflicts.\r\n\r\nHowever, at least for now, we would retain some of the additional anti-DoS rules:\r\n\r\n1. A replacement transaction must pay more total fees than the sum of fees paid by all evicted transactions.\r\n2. A replacement transaction must not evict more than (100?) existing transactions.\r\n\r\nThe first of those rules prevents free-relay attacks, while some version of the second rule is necessary to prevent us from needing to re-cluster/re-order too much of the mempool while processing a single transaction.\r\n\r\n## Some open questions\r\n\r\n1. Philosophically, is it problematic for RBF rules to be even more of a \"black box\" than the BIP 125 algorithm?\r\n2. Are there usage patterns for wallets or other protocols that would be fundamentally harmed by cluster size limits? Do we know what values would be acceptable or what values would be insufficient?\r\n3. What can we do if a high feerate transaction arrives that would violate the cluster limit? Can we design some sort of \"cluster-sibling eviction\" algorithm that is DoS-resistant and would help reduce the downsides of cluster size limits?\r\n4. Is it problematic if linearization algorithms used on the network are non-deterministic?\r\n   * We could imagine using a variety of linearization algorithms at any given moment -- perhaps for small clusters we use an exponential run-time optimal ordering algorithm, while for medium sized clusters we do something different, like an ancestor-feerate-based ordering, or an optimal ordering with some bounded computation limits.\r\n   * Are there situations where different nodes having different orders causes meaningful user-facing issues with transactions not relaying effectively, eg because of the use of chunk feerates in the RBF algorithm?\r\n6. Chunk sizes should be bounded in vbytes, so that we don't exacerbate the knapsack problem during mining. However, what is the best way to do that?\r\n   * We could just bound the vbytes allowed in a single cluster, which would guarantee that chunks are not too big.\r\n   * Or we could design linearization algorithms and adapt our chunking logic to never produce chunks bigger than a certain size -- but this would come at the expense of chunks within a cluster no longer having monotonically decreasing feerates. This may be possible to do, but is the need for large clusters (measured in vbytes) great enough to warrant the complexity that this would introduce in our algorithms?\r\n\r\n# Current status and next steps\r\n\r\n1. First draft implementation of this logic is done (link to be added).\r\n2. Analyzing effects of this logic on historical transaction data is in process, to try to answer questions like:\r\n   * How big are the clusters we've historically seen / what is the cluster size distribution on the network today\r\n   * How would the network have been affected if we'd had cluster sizes bounded at various different values in the past\r\n3. Performance analysis of all the mempool operations (particularly as a function of cluster size) to ensure that mempool operations are optimized with this approach.\r\n4. The information gathered will (eventually) inform a concrete proposal for what cluster size limits we might consider (along with chunk vbyte and/or cluster vbyte limits).\r\n",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 13,
    "created_at": "2023-05-16T17:29:33Z",
    "updated_at": "2024-02-13T19:08:12Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 9260719798,
      "node_id": "MEE_lADOABII585mEbpjzwAAAAIn-162",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9260719798",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T17:29:34Z"
    },
    {
      "event": "subscribed",
      "id": 9260719803,
      "node_id": "SE_lADOABII585mEbpjzwAAAAIn-167",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9260719803",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T17:29:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T17:49:17Z",
      "updated_at": "2023-05-16T17:49:17Z",
      "source": {
        "issue": {
          "id": 1706003746,
          "node_id": "PR_kwDOCCK3eM5QTXDk",
          "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/1114",
          "repository_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io",
          "labels_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/1114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/1114/comments",
          "events_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/1114/events",
          "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/1114",
          "number": 1114,
          "state": "closed",
          "state_reason": null,
          "title": "Newsletters: add 251 (2023-05-17)",
          "body": "- [x] News and PRs @harding \r\n- [x] Lede, releases/RCs, and topic entries @harding \r\n- [x] Why do we have a mempool? @glozow \r\n- [x] PR to be assigned @Xekyo \r\n- [x] Suggestion: Coredev meeting summary notes (https://github.com/bitcointranscripts/bitcointranscripts/pull/247)",
          "user": {
            "login": "harding",
            "id": 61096,
            "node_id": "MDQ6VXNlcjYxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harding",
            "html_url": "https://github.com/harding",
            "followers_url": "https://api.github.com/users/harding/followers",
            "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
            "organizations_url": "https://api.github.com/users/harding/orgs",
            "repos_url": "https://api.github.com/users/harding/repos",
            "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/harding/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/pulls/1114",
            "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/1114",
            "diff_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/1114.diff",
            "patch_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/1114.patch"
          },
          "closed_at": "2023-05-17T12:28:59Z",
          "created_at": "2023-05-11T15:01:10Z",
          "updated_at": "2023-05-17T12:28:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T00:50:25Z",
      "updated_at": "2023-05-17T00:50:25Z",
      "source": {
        "issue": {
          "id": 1681693734,
          "node_id": "I_kwDOExOzMs5kPJwm",
          "url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/19",
          "repository_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com",
          "labels_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/19/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/19/comments",
          "events_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/19/events",
          "html_url": "https://github.com/austinbitdevs/austinbitdevs.com/issues/19",
          "number": 19,
          "state": "closed",
          "state_reason": "completed",
          "title": "May topics",
          "body": null,
          "user": {
            "login": "justinmoon",
            "id": 4335621,
            "node_id": "MDQ6VXNlcjQzMzU2MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4335621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinmoon",
            "html_url": "https://github.com/justinmoon",
            "followers_url": "https://api.github.com/users/justinmoon/followers",
            "following_url": "https://api.github.com/users/justinmoon/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/justinmoon/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/justinmoon/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/justinmoon/subscriptions",
            "organizations_url": "https://api.github.com/users/justinmoon/orgs",
            "repos_url": "https://api.github.com/users/justinmoon/repos",
            "events_url": "https://api.github.com/users/justinmoon/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/justinmoon/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 11,
          "closed_at": "2023-05-19T23:55:42Z",
          "created_at": "2023-04-24T17:03:26Z",
          "updated_at": "2023-05-19T23:55:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1551056767,
      "node_id": "IC_kwDOABII585ccz9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551056767",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T09:25:59Z",
      "updated_at": "2023-05-17T09:26:34Z",
      "author_association": "MEMBER",
      "body": "Nice! Here's the transcript of the above mentioned presentation: https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-mempool-clustering/\r\n\r\n It's also worth noting that although this proposal introduces a new limit, for the cluster size, it could potentially supersede some other limits (e.g. `-limitancestorcount`, `-limitancestorsize`, `-limitdescendantcount`, `-limitdescendantsize`) if the maximum cluster size is large enough. Though if the limit is in vbytes, then someone assuming a limit in count might still hit a non backwards compatible policy limit.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551056767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1551620933,
      "node_id": "IC_kwDOABII585ce9tF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551620933",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T15:34:36Z",
      "updated_at": "2023-05-17T15:34:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for sharing all those details, this is great!\r\nI can only comment as someone who relies a lot on mempool/transaction relay for lightning: my opinion may thus be biased.\r\nI believe that lightning's security will *always* depend on the ability to get specific transactions confirmed before a given block, so anything that can help transaction propagation is important for us (and I believe this will be true for most L2 contracts).\r\n\r\n> Philosophically, is it problematic for RBF rules to be even more of a \"black box\" than the BIP 125 algorithm?\r\n\r\nIt isn't for me, as long as we can *somehow* RBF once we're ready to pay the price.\r\nThe way lightning implementations currently RBF is via trial-and-error, not by trying to abide by the BIP 125 rules.\r\nWe simply lower the change output of the transaction we're trying to RBF and/or add another input, try broadcasting, and try again with more fees if `bitcoind` rejects it (or if we still don't see our transaction confirming).\r\nSo we're already treating RBF as a black box, and don't care about making it \"more\" of a black box.\r\n\r\n> Are there usage patterns for wallets or other protocols that would be fundamentally harmed by cluster size limits? Do we know what values would be acceptable or what values would be insufficient?\r\n\r\nMost L2 contracts will only start once the \"contract transaction\" (channel funding transaction in the lightning case) is confirmed.\r\nIn the lightning case, the cluster we generate currently consists of:\r\n\r\n- a commitment transaction (no unconfirmed ancestors)\r\n- a CPFP child for that commitment transaction (which may bring its set of unconfirmed ancestors)\r\n\r\nThe commitment transaction may be as large as `MAX_STANDARD_TX_WEIGHT`, so we want the cluster size to allow that (but it's obvious that the limit needs to be higher than that anyway). Since L2 contracts generate trees of transactions, I believe they should always be able to get away with confirming each level of that tree independently, which means they only ever need one transaction and one CPFP child, nothing more (but we can probably make those contracts more fee-efficient if the cluster size allows more than that). @instagibbs does that fundamentally change with Eltoo? I guess not.\r\n\r\nThe CPFP child brings its own cluster with it, so the larger the cluster size limit is, the more of our utxos we're able to use to create our CPFP transaction. The limits chosen here will have to be arbitrary, and wallets will simply have to make sure their utxos confirm to be able to use them for CPFP. This is already the case because of the descendant limits, so it shouldn't be fundamentally more harmful?\r\n",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551620933",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "mentioned",
      "id": 9271041848,
      "node_id": "MEE_lADOABII585mEbpjzwAAAAIomN84",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9271041848",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T15:34:36Z"
    },
    {
      "event": "subscribed",
      "id": 9271041893,
      "node_id": "SE_lADOABII585mEbpjzwAAAAIomN9l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9271041893",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T15:34:36Z"
    },
    {
      "event": "commented",
      "id": 1551776409,
      "node_id": "IC_kwDOABII585cfjqZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551776409",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T17:10:18Z",
      "updated_at": "2023-05-17T17:10:18Z",
      "author_association": "MEMBER",
      "body": "> does that fundamentally change with Eltoo? I guess not.\r\n\r\nNo, all pin-avoiding designs I've thought of are 0-fee parent, CPFP-ing child.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551776409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1551970982,
      "node_id": "IC_kwDOABII585cgTKm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551970982",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:59:25Z",
      "updated_at": "2023-05-17T19:59:25Z",
      "author_association": "MEMBER",
      "body": "> The commitment transaction may be as large as `MAX_STANDARD_TX_WEIGHT`, so we want the cluster size to allow that (but it's obvious that the limit needs to be higher than that anyway).\r\n\r\n`MAX_STANDARD_TX_WEIGHT` is 400,000 weight units. If 65 byte transactions are (made) standard, and assuming those are at least 100 weight units, that's a maximum of ~4000 per cluster. My understanding was that doing an optimal sort for a given cluster, requires it to have a few dozen transactions. Though less than perfect sort may be fine. 1/10th of a block sounds a fairly big though.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551970982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1551974824,
      "node_id": "IC_kwDOABII585cgUGo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551974824",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:02:48Z",
      "updated_at": "2023-05-17T20:03:37Z",
      "author_association": "MEMBER",
      "body": ">  My understanding was that doing an optimal sort for a given cluster, requires it to have a few dozen transactions. \r\n\r\nIt's the opposite really. A cluster with 1 transaction is always optimally ordered (because only one order exists). The bigger a cluster (in number of transactions) is, the harder it is to find the optimal ordering. Up to 15-20 transactions we may be able to find it using an exponential-time algorithm; above that we need to either just use the ancestor-feerate based order, or some heuristical algorithm that may approach optimality.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551974824",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1551974872,
      "node_id": "IC_kwDOABII585cgUHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551974872",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:02:51Z",
      "updated_at": "2023-05-17T20:02:51Z",
      "author_association": "MEMBER",
      "body": "@t-bast Thanks for your comments!\r\n\r\n> The commitment transaction may be as large as MAX_STANDARD_TX_WEIGHT, so we want the cluster size to allow that (but it's obvious that the limit needs to be higher than that anyway).\r\n\r\nFYI -- I was thinking that the easiest approach here would be if we can cap cluster vbytes to the ancestor/descendant size limits of 101kvB, or just above the max standard transaction weight.  This would have the benefit of not making block construction any less efficient (due to the knapsack problem that occurs as we approach the end of a block).\r\n\r\n> The limits chosen here will have to be arbitrary, and wallets will simply have to make sure their utxos confirm to be able to use them for CPFP. This is already the case because of the descendant limits, so it shouldn't be fundamentally more harmful?\r\n\r\nYes, the comparison to descendant limits is appropriate I think -- my belief is that any use case that would be impacted by a limit on the number of transactions in the same cluster would also have been affected by the descendant count limit, which is outside a single user's control (ie if you're trying to spend the output of an unconfirmed transaction, unless the transaction's outputs are all under your control, you can't be sure that someone else hasn't chained a bunch of transactions to bump up against the descendant limit and prevent your spend from being relayed). So fundamentally I don't _think_ a limit on number of transactions in a cluster ought to be raising any issues that don't already exist...",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1551974872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "mentioned",
      "id": 9273257077,
      "node_id": "MEE_lADOABII585mEbpjzwAAAAIouqx1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273257077",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:02:51Z"
    },
    {
      "event": "subscribed",
      "id": 9273257093,
      "node_id": "SE_lADOABII585mEbpjzwAAAAIouqyF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273257093",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:02:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "nickfarrow",
        "id": 24557779,
        "node_id": "MDQ6VXNlcjI0NTU3Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/24557779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nickfarrow",
        "html_url": "https://github.com/nickfarrow",
        "followers_url": "https://api.github.com/users/nickfarrow/followers",
        "following_url": "https://api.github.com/users/nickfarrow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nickfarrow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nickfarrow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nickfarrow/subscriptions",
        "organizations_url": "https://api.github.com/users/nickfarrow/orgs",
        "repos_url": "https://api.github.com/users/nickfarrow/repos",
        "events_url": "https://api.github.com/users/nickfarrow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nickfarrow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T23:26:44Z",
      "updated_at": "2023-05-17T23:26:44Z",
      "source": {
        "issue": {
          "id": 1686552522,
          "node_id": "I_kwDOIMGQa85khr_K",
          "url": "https://api.github.com/repos/MelbourneBitDevs/meetup/issues/6",
          "repository_url": "https://api.github.com/repos/MelbourneBitDevs/meetup",
          "labels_url": "https://api.github.com/repos/MelbourneBitDevs/meetup/issues/6/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/MelbourneBitDevs/meetup/issues/6/comments",
          "events_url": "https://api.github.com/repos/MelbourneBitDevs/meetup/issues/6/events",
          "html_url": "https://github.com/MelbourneBitDevs/meetup/issues/6",
          "number": 6,
          "state": "closed",
          "state_reason": "completed",
          "title": "May 2023 Meeting Topics",
          "body": "Link anything you'd like to discuss: news, demos, drama, whatever!",
          "user": {
            "login": "nickfarrow",
            "id": 24557779,
            "node_id": "MDQ6VXNlcjI0NTU3Nzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24557779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickfarrow",
            "html_url": "https://github.com/nickfarrow",
            "followers_url": "https://api.github.com/users/nickfarrow/followers",
            "following_url": "https://api.github.com/users/nickfarrow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/nickfarrow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/nickfarrow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/nickfarrow/subscriptions",
            "organizations_url": "https://api.github.com/users/nickfarrow/orgs",
            "repos_url": "https://api.github.com/users/nickfarrow/repos",
            "events_url": "https://api.github.com/users/nickfarrow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/nickfarrow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "closed_at": "2023-05-30T09:35:31Z",
          "created_at": "2023-04-27T10:18:00Z",
          "updated_at": "2023-05-30T09:35:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1553565821,
      "node_id": "IC_kwDOABII585cmYh9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553565821",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T19:50:10Z",
      "updated_at": "2023-05-18T19:57:43Z",
      "author_association": "MEMBER",
      "body": "Having the number of allowed evictions be a function of the descendant limit makes replacements easier to reason about from a pinning perspective. e.g., limit of 25/100 means that you can batch CPFP 4 transactions safely, ignoring other pinning vectors(we'll get around to those!). Another smaller point is currently people opting into larger descendant limits for whatever reason can cause this to fall to possibly 0. i.e. a chain of 101 txns that can't have eldest tx evicted.\r\n\r\n> \"cluster-sibling eviction\" algorithm that is DoS-resistant and would help reduce the downsides of cluster size limits?\r\n\r\ngoing to call this \"cluster limit pinning\" to parallel package limit pinning, which is already a pinning problem today, which is what Ephemeral Anchors are intended to solve. Will think on this...",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1553565821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1553666857,
      "node_id": "IC_kwDOABII585cmxMp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553666857",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T21:26:44Z",
      "updated_at": "2023-05-18T21:26:44Z",
      "author_association": "MEMBER",
      "body": "> Having the number of allowed evictions be a function of the descendant limit makes replacements easier to reason about from a pinning perspective. e.g., limit of 25/100 means that you can batch CPFP 4 transactions safely, ignoring other pinning vectors(we'll get around to those!). Another smaller point is currently people opting into larger descendant limits for whatever reason can cause this to fall to possibly 0. i.e. a chain of 101 txns that can't have eldest tx evicted.\r\n\r\nThanks for mentioning this.  If indeed the only concern with a lot of evictions is due to the number of clusters that would need to be re-sorted, then we could either have the limit be a maximum number of **direct** conflicts (since indirect conflicts are always in the same cluster as one of the direct conflicts), or we could just have the limit explicitly be in terms of the number of **clusters** that would be affected, rather than the number of transactions that are in conflict.  \r\n\r\nRight now I'm imagining that the descendant limits (on count and vbytes) would go away entirely.  I tend to think that we should continue to enforce that no transaction have more than 101kvb of size-with-ancestors (either explicitly, or as a consequence of a maximum cluster size if that gets set to the same value).  It's unclear to me whether we should retain the ancestor count limit, because I think it might have an impact on the runtime of the ancestor-feerate-based linearization algorithm that I suspect will be part of the initial implementation, so this will be something to revisit in the future.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1553666857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "labeled",
      "id": 9288471098,
      "node_id": "LE_lADOABII585mEbpjzwAAAAIpotI6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9288471098",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T11:28:28Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "labeled",
      "id": 9288471103,
      "node_id": "LE_lADOABII585mEbpjzwAAAAIpotI_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9288471103",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T11:28:28Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 1554708843,
      "node_id": "IC_kwDOABII585cqvlr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554708843",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T14:51:21Z",
      "updated_at": "2023-05-19T14:57:31Z",
      "author_association": "MEMBER",
      "body": "Either conflict limit sounds good to me. N direct conflicts or N clusters has the same result: Someone trying to avoid \"rule#5\" type pinning will only try to CPFP up to N transactions, I believe.\r\n\r\nIt also means there's a fundamental tension here between CPFP/RBF strategies and how large we allow clusters to be. Smaller clusters means we can allow more clusters to be modified, likely?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1554708843",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1555806652,
      "node_id": "IC_kwDOABII585cu7m8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1555806652",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-20T07:40:13Z",
      "updated_at": "2023-05-20T07:40:13Z",
      "author_association": "MEMBER",
      "body": "> > My understanding was that doing an optimal sort for a given cluster, requires it to have a few dozen transactions.\r\n> \r\n> It's the opposite really. [...] Up to 15-20 transactions we may be able to find it using an exponential-time algorithm; above that [...]\r\n\r\nI meant to say \"no more than a few dozen transactions\".\r\n\r\nSo I guess we're ok with falling back to less than optimal sorting _within_ each cluster?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1555806652",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-20T15:34:43Z",
      "updated_at": "2023-05-20T15:34:43Z",
      "source": {
        "issue": {
          "id": 1687322173,
          "node_id": "I_kwDOH7emps5kkn49",
          "url": "https://api.github.com/repos/0xBEEFCAF3/bostonbitdevs/issues/20",
          "repository_url": "https://api.github.com/repos/0xBEEFCAF3/bostonbitdevs",
          "labels_url": "https://api.github.com/repos/0xBEEFCAF3/bostonbitdevs/issues/20/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/0xBEEFCAF3/bostonbitdevs/issues/20/comments",
          "events_url": "https://api.github.com/repos/0xBEEFCAF3/bostonbitdevs/issues/20/events",
          "html_url": "https://github.com/0xBEEFCAF3/bostonbitdevs/issues/20",
          "number": 20,
          "state": "closed",
          "state_reason": "completed",
          "title": "Socratic Seminar 16 Reading List (May 2023)",
          "body": "Drop links here!",
          "user": {
            "login": "satsie",
            "id": 1823216,
            "node_id": "MDQ6VXNlcjE4MjMyMTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satsie",
            "html_url": "https://github.com/satsie",
            "followers_url": "https://api.github.com/users/satsie/followers",
            "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
            "organizations_url": "https://api.github.com/users/satsie/orgs",
            "repos_url": "https://api.github.com/users/satsie/repos",
            "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/satsie/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 13,
          "closed_at": "2023-05-29T14:33:22Z",
          "created_at": "2023-04-27T17:58:37Z",
          "updated_at": "2023-05-29T14:33:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T09:12:53Z",
      "updated_at": "2023-05-25T09:12:53Z",
      "source": {
        "issue": {
          "id": 1668056618,
          "node_id": "I_kwDOABII585jbIYq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27463",
          "number": 27463,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay Project Tracking",
          "body": "This issue will be edited frequently to reflect the current status of the project.\r\n\r\n### What is ready for review now?\r\n:point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down:\r\n#28950 + #29242 + #29424\r\n:point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up:\r\n\r\n### Why does the roadmap look like this?\r\n:point_right: #29319 :point_left: \r\n\r\n### Tasks and PRs\r\n**(1) multi-parent-1-child package validation**\r\n\r\nWhat we get: the ability to validate multiple transactions, including CPFP of transactions below the mempool minimum feerate. An RPC to submit things locally.\r\n\r\n- Enable validation of multiple transactions in MemPoolAccept\r\n  - [x] Dependency: #21062\r\n  - [x] Dependency: #23381\r\n  - [x] Main feature 1/2: #20833\r\n  - [x] Main feature 2/2: #21800\r\n  - [x] Followup: #22084\r\n- Enable package CPFP\r\n  - [x] Main feature 1/2: #22674\r\n  - [x] Followup: #24310\r\n  - [x] Followup: #23804\r\n  - [x] Main feature 2/2: #24152\r\n  - [x] short term bug fix: avoid the risk of below-minrelaytxfee transactions hanging around forever in the mempool  #26933\r\n- RPC access\r\n  - [x] #24836\r\n  - [x] #26646\r\n  - [x] #27609\r\n  - [x] #28848\r\n  - [ ] #28950\r\n- Fuzzing\r\n  - [x] #28450\r\n  - [x] #28764\r\n  - [x] #28825 \r\n  - [x] Bug fix: #28251\r\n  - [x] Bug fix: #28471\r\n  - [x] Bug fix: #28472\r\n\r\n**(2) 1-parent-1-child package relay**\r\n\r\nWhat we get: package relay of 1-parent-1-child packages.\r\nProtocols like LN can use this to create 0-fee presigned transactions with a single, 0-value anchor output; 0-fee commitment transactions can replace each other using the fees of the child attached to the anchor.\r\nThis makes CPFP carve out unnecessary, so we can remove that and switch from ancestor/descendant package limits to cluster limits (see next step).\r\n\r\n- Add v3 rules that make transactions/packages easier to work with\r\n  - [x] Main feature: #28948\r\n  - [ ] Followup: #29424\r\n- Enable Package RBF for 1-parent-1-child situations. Enables things like LN to sign things 0-fee, add fees at broadcast, and avoid some pinning attacks (assuming package relay is available)\r\n   - [x] Dependency: #22796 \r\n   - [x] Dependency: #22675 \r\n   - [x] Dependency: #22855\r\n   - [ ] Dependency: #29242\r\n   - [ ] Main feature: #28984\r\n- Opportunistically submit 1-parent-1-child packages\r\n  - [x] Dependency: #28785\r\n  - [ ] WIP #28970\r\n- Try multiple peers for orphan resolution, make orphanage more robust\r\n  - [x] Dependency: #28785\r\n  - [x] Dependency: #28199\r\n  - [x] Dependency: #28364\r\n  - [ ] Main feature: #28031 \r\n  - [ ] WIP: token bucket orphanage protection\r\n\r\n**(3) cluster mempool**\r\n\r\nWhat we get: the ability to quickly assess the incentive compatibility of transactions, safer eviction, more incentive-compatible and pinning-free RBF rules.\r\n\r\n- [ ] Cluster Mempool #27677\r\n  - [ ] #28676\r\n\r\n\r\n**(4) TBD / other parts of package relay**\r\n\r\nGoals: propagate incentive-compatible packages that are more compelx than 1p1c, safely evaluate replacements within packages, handle orphans better.\r\n\r\n- WIP: Package RBF with less restrictive topologies\r\n- WIP: Package validation of less restrictive topologies\r\n- Ephemeral Anchors\r\n  - #29001\r\n  - bitcoin/bips/pull/1524\r\n- [ ] use BIP 331 ancestor package relay for orphan-handling\r\n  - [ ] bitcoin/bips/pull/1382\r\n  - [ ] #27742 \r\n- [ ] Some sender-initiated package relay protocol using chunks (?)\r\n\r\n<details><summary>See also:</summary>\r\n\r\nSuperseded/Deferred Work\r\n- Sub-package evaluation with ancestor packages\r\n- [x] #28758\r\n  - [x] #28808\r\n  - #26711 \r\n  - #28813\r\n- #27018\r\n- #25038\r\n- #26403\r\n\r\nPrehistory\r\n- [x] #16400 \r\n- #16401 \r\n- #14895 \r\n- #19621 \r\n- https://gist.github.com/sdaftuar/8756699bfcad4d3806ba9f3396d4e66a\r\n</details>",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "created_at": "2023-04-14T11:14:50Z",
          "updated_at": "2024-02-12T14:36:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1572647968,
      "node_id": "IC_kwDOABII585dvLQg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1572647968",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T19:21:52Z",
      "updated_at": "2023-06-01T19:23:42Z",
      "author_association": "MEMBER",
      "body": "From my understanding of the proposal, there is an intuition of aligning mining (i.e the maximum fees in a block template)\r\nand transactions evicted from our local mempools. The proposed changes goals would be to make the transactions that would be the last ones selected by our mining algorithm, the first ones to be removed from the mempool based e.g on an ancestor-feerate-based mining algorithm.\r\n\r\nWhile this symmetrization of block template construction and mempool eviction should work in light of today mining algorithms, I don't know if this will bind in considerations of other changes in the ecosystem. In the past, there have been [discussion](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019846.html) on the mailing list if our RBF algorithm was the most income-maximising in face of different transactions traffic. Namely, high-feerate evictated/replaced chunks of transactions could be kept in a buffer of transactions ordered by their last descendants outputs. When a new package comes in, in case of missing parents outputs, a lookup is realized in the buffer to see if the package attached to evicted/replaced chunks ancestor-feerate is above the cluster spending the same utxo or above the bottom mempool chunks.\r\n\r\nWhile this type of broadcast pattern can seem odd today, as new chunks should have been broadcast by the same transaction issuer, and therefore the fee bidding monotonically increasing, this assumption might not be true with more deployment of multi-party applications or contracting protocols, where counterparties are competing for the spend of utxos with packages offering different absolutes fees/feerates (e.g Lightning commitment transactions). Further, you might have\r\nnew flows where the first component of the package is shared (e.g a [dual-funding/splicing](https://bitcoinops.org/en/topics/splicing/) between N parties) though where each party attaches a different CPFP due to asymmetries in liquidity preferences.\r\n\r\nBased on cluster pattern analysis, future mining algorithms might attach a prediction weight to each chunk part of the\r\nevicted/replaced chunks and decide which to keep in the space-limited buffer in case of eviction needed there too. Note,\r\nwhile the issue can be alleviated by bumping the size of both your mempool and hypothetical future replacement buffers\r\n(i.e `-maxmempool`), there will still be a need to efficiently traverse them, as you need to provide one block template to your mining devices due to the probabilistic nature of mining.\r\n\r\nSo do we have a separation of concerns between the proposed total ordering and a future hypothetical replacement cache\r\noptimizing block template construction, or turning the question differently is the proposed total ordering approach going\r\nto work well for mining algorithms optimizations buffering replaced transactions ?\r\n\r\nThere is a second line of thinking about this proposal, namely the workload in term of CPU cycles and what is the worst-case\r\nworkload we're designing for in term of incoming transaction-relay traffic. I think the main risk we're aiming to hedge against\r\nis huge payload of transactions being injected on a miner mempool forcing computationally-expensive replacement or eviction traversals on the clusters and therefore delaying the construction of a block template, a latency sensitive operation in the mining arm race.\r\n\r\nI think we're certaintly bounded on the transaction-relay download limits here, i.e `MAX_PEER_TX_ANNOUNCEMENTS`,\r\n`MAX_PEER_TX_REQUEST_IN_FLIGHT` and the default number of transaction-relay peers (though we can probably reason by reduction to a single peer for the purpose of DoS analysis) and should we adopt them for the worst-case perfomance\r\nanalysis of all the mempool operations ? \r\n\r\nBeyond transaction-relay performance heavy events to consider, I think we have to encompass block-relay related events such as shallow reorgs.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1572647968",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1572728184,
      "node_id": "IC_kwDOABII585dve14",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1572728184",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T20:23:39Z",
      "updated_at": "2023-06-01T20:23:39Z",
      "author_association": "MEMBER",
      "body": "> Namely, high-feerate evictated/replaced chunks of transactions could be kept in a buffer of transactions ordered by their last descendants outputs. When a new package comes in, in case of missing parents outputs, a lookup is realized in the buffer to see if the package attached to evicted/replaced chunks ancestor-feerate is above the cluster spending the same utxo or above the bottom mempool chunks.\r\n\r\n[snip additional comments related to this]\r\n\r\nIf I'm understanding your post correctly, you're asking whether the mempool design I'm proposing is consistent with having some sort of external-to-the-mempool cache of transactions?  That really sounds like a p2p optimization and not a mempool issue, and I think there are a lot of questions you'd have to answer in designing such a cache, including how to make it DoS resistant so that an adversary can't overrun it, but fundamentally I don't think anything I'm proposing would make designing such a thing any harder than our current mempool design does.  Really I think what you're describing is orthogonal to how the mempool operates.\r\n\r\nOverall the new mempool design should make it easier to reason about RBF, so that in situations where an RBF attempt is competing with a CPFP attempt we'll do the right thing more often.  Moreover I think a total mempool ordering will allow for future new policy rules that could make this even better in the future, as (unlike today) we might be able to consider rules in  that would involve where a transaction sorts in the global mempool as a condition for transaction acceptance -- something which is computationally impractical to use in today's mempool design.  (Such a rule has been proposed in the past as a way to potentially eliminate RBF-pinning while still permitting legitimate CPFP attempts.)\r\n\r\n> There is a second line of thinking about this proposal, namely the workload in term of CPU cycles and what is the worst-case workload we're designing for in term of incoming transaction-relay traffic. \r\n\r\nYes, I'm definitely concerned with CPU usage required to sort a single cluster, and coming up with policy limits that ensure this is a fast-enough operation.  I don't think the concern will be with transaction acceptance or block construction, which should be very fast in this design, but instead the concern will be around how expensive it is to update the mempool after a block is found (as that can cause thousands of clusters to be re-sorted, in the worst case).  However, as our primary goal when a block is found is to update the mempool in such a way that a new block template can be generated as quickly as possible, I think there are optimizations we can make that take advantage of this new design, even before we've finished fully updating the mempool and re-sorting all the affected clusters.  (One possible idea: we might pre-compute 2 or 3 blocks worth of transactions, instead of just 1, when getblocktemplate is called.  Then, when a block is found, we only need to remove conflicts and confirmed transactions from our precomputed blocks in order to be able to return a reasonably good block template while the mempool finishes re-sorting.)\r\n\r\nI think similar optimizations are possible after a re-org; in theory we could defer fully re-sorting clusters when transactions are added back from disconnected blocks and instead do a simple topological sort or merge-sort of newly created clusters in order to optimize for producing a valid block as quickly as possible.  Note also that the current mempool is already pretty slow to update during a reorg, due to the caching of ancestor and descendant state, which I believe we'll be able to completely remove in the new design (resulting in improvements to CPU usage, memory, and -- perhaps best of all -- code simplification!).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1572728184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "commented",
      "id": 1590309442,
      "node_id": "IC_kwDOABII585eyjJC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590309442",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T01:38:28Z",
      "updated_at": "2023-06-14T01:38:28Z",
      "author_association": "MEMBER",
      "body": "> If I'm understanding your post correctly, you're asking whether the mempool design I'm proposing is consistent with having some sort of external-to-the-mempool cache of transactions? That really sounds like a p2p optimization and not a mempool issue, and I think there are a lot of questions you'd have to answer in designing such a cache, including how to make it DoS resistant so that an adversary can't overrun it, but fundamentally I don't think anything I'm proposing would make designing such a thing any harder than our current mempool design does. Really I think what you're describing is orthogonal to how the mempool operates.\r\n\r\nYes the idea is to have some external-to-the-mempool cache of transactions to a) connect high-fee child to an evicted/replaced parent and b) resurrect this chain of transaction in the mempool if it constitutes a better ancestor feerate package than the current chain of transaction spending a UTXO/TXO. In light of collaborative transactions constructions between LN nodes, where participants can either RBF or CPFP in an asynchronous  fashion, I think this propagation pattern will become more likely. An optimizing miner will seek to maintain such external-to-the-mempool caches to build the highest income-return block template.\r\n\r\nI agree that such cache design will have to be DoS resistant (in the same way than orphans buffer has to be) though I maintain it's a mempool issue as for each high-fee child discovered, you'll  have to traverse some mempool subgraphs to evaluate if it's a better candidate to \"resurrect\" in the mempool. This ressurection could trigger the generation of a new block template to downstream miners if the template feerate is more compelling. As long as the performance is roughly the same for all historic class of workload there shouldn't be detrimental impacts on miner operations, discussions in #27854 and related to Stratum V2 can be informative in that sense.\r\n\r\n> Overall the new mempool design should make it easier to reason about RBF, so that in situations where an RBF attempt is competing with a CPFP attempt we'll do the right thing more often. Moreover I think a total mempool ordering will allow for future new policy rules that could make this even better in the future, as (unlike today) we might be able to consider rules in that would involve where a transaction sorts in the global mempool as a condition for transaction acceptance -- something which is computationally impractical to use in today's mempool design. (Such a rule has been proposed in the past as a way to potentially eliminate RBF-pinning while still permitting legitimate CPFP attempts.)\r\n\r\nYes if such total mempool ordering enables to give the transaction sort in the global mempool feerate groups this information could be yield by the fee-estimator directly (and consumed by L2 nodes), even beyond any broadcast/ replacement attempt. If such feerate groups evolution can be tracked over time this would be very beneficial for Lightning liquidity management engine (where the question is not \"what is the feerate to include a transaction *now*\" rather \"what will be the feerate group for confirmation X blocks from *now* with indices of prediction accuracy\" therefore opening/closing channels efficiently). If this direction is followed, I think this is okay if the RBF rules become more a \"black box\" if we can have the \"chunk\" feerate yield by the mempool interface if we give it the non-finalized package we aim to broadcast ? This would simplify greatly Lightning transaction broadcast backends.\r\n\r\n> One possible idea: we might pre-compute 2 or 3 blocks worth of transactions, instead of just 1, when getblocktemplate is called. Then, when a block is found, we only need to remove conflicts and confirmed transactions from our preco> mputed blocks in order to be able to return a reasonably good block template while the mempool finishes re-sorting.)\r\n\r\nYes I think this optimization is in line with upgrades brought by Stratum V2, where speculated non-empty blocks can be send in advances to client (`NewMiningJob` with `min_ntime` unset). There is still the implications on how good pre-computation will be in face of \"super\" high fee transactions provoking a re-computation of the 2 or 3 cached blocks worth of transactions. The DoS nightmare would be some combination of transactions acceptance and re-orgs knocking out the topological re-sorting for a while that can be cheaply triggered by an adversary. Generally, I think in the future cluster computation will be not only a critical-path for block template construction though also for Lightning nodes liquidity allocation, where you might evaluate your ~1000 opened channels and pending broadcasts against pending mempool clusters, and decide if you force-close channels/merge broadcast packages.\r\n\r\n--------------\r\n\r\nLooking forward when there is a draft implementation ready to look on. This would make the design proposal review more concrete, especially to evaluate the potential impacts on Lightning/L2 transaction backends!",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1590309442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677"
    },
    {
      "event": "unsubscribed",
      "id": 9529766491,
      "node_id": "UE_lADOABII585mEbpjzwAAAAI4BLJb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9529766491",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:46:30Z"
    },
    {
      "event": "subscribed",
      "id": 9529766936,
      "node_id": "SE_lADOABII585mEbpjzwAAAAI4BLQY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9529766936",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:46:31Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T16:11:34Z",
      "updated_at": "2023-06-27T16:11:34Z",
      "source": {
        "issue": {
          "id": 1500046485,
          "node_id": "PR_kwDOABII585FocrT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
          "number": 26711,
          "state": "closed",
          "state_reason": null,
          "title": "validate package transactions with their in-package ancestor sets",
          "body": "This contains everything to make mempool/validation logic ready for package relay (see #27463).\r\n\r\nDesign goals:\r\n- Be able to gracefully deal with any arbitrary list of transactions (these come from p2p)\r\n- Validate any ancestor package so that the incentive-compatible transactions end up in our mempool.\r\n  - If the transactions would be accepted individually, they should also be accepted through `AcceptPackage`. We don't want to accidentally reject things just because we happened to download them as a package.\r\n  - Bug prior to these changes: we required `IsChildWithParents` but if there were dependencies between the parents, we could end up (1) accepting a low-feerate child or (2) rejecting a high-feerate parent CPFPing another parent. See the \"interdependent parents\" test case for a specific example.\r\n- Be DoS-resistant.\r\n   - Avoid quadratic validation costs.\r\n   - Avoid loading a lot of stuff from disk, or loading repeatedly.\r\n\r\nThere are 2 main improvements to package evaluation here:\r\n(1) We submit transactions with their in-package ancestor sets.\r\n\t-  See unit test `package_ppfp`: without this change, we would reject everything.\r\n\t- See unit test `package_ppfc`: shows that this doesn't let us do \"parent pays for child;\" we only do this when the individual and ancestor feerates meet mempool minimum feerate\r\n(2) We linearize the package transactions based on ancestor set scoring.\r\n\t- See unit test `package_needs_reorder`: without this change, if we use the original order of transactions, we would only accept 1 grandparent, even if we submit subpackages.\r\n\t- See unit test `package_desc_limits`: without this change, we accept one of the lower-feerate transactions (a bit more of a \"nice to have\" than a \"must have\" example).\r\n\r\nA description of the package validation logic (originally https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1647523520):\r\n\r\n- Basic sanitization. Quit if it's too big, inconsistent, etc.\r\n- Linearize (Topological sort only)\r\n- **PreChecks loop** For each tx, grab UTXOs to calculate fees and filter out anything we should skip:\r\n    - If already in mempool (or same txid in mempool), mark as skip\r\n    - If missing inputs or conflict, record this failure and mark this and all descendants as skip.\r\n    - If no failures or TX_SINGLE_FAILURE, continue\r\n    - For some failures that we expect due to differing chainstates, skip these transactions and their descendants, but continue.\r\n    - Otherwise, record this failure and mark that we will `quit_early` (i.e. not do the Subpackage validation loop).\r\n- Refine our linearization using the fee information.\r\n- **Subpackage validation loop** For each transaction in the new linearized order:\r\n    - Get the transaction's ancestor subpackage.\r\n    - If the feerate of this transaction is insufficient, continue;\r\n    - If the feerate of this subpackage is insufficient, continue;\r\n    - Otherwise, try to submit the subpackage, using `AcceptSingleTransaction()` if it's just 1 tx\r\n    - if at any point we get a non-fee-related error, abort all.\r\n- Call `LimitMempoolSize`\r\n- Backfill results:\r\n    - If the transaction was in mempool, check to see if it's still there in case it was trimmed in `LimitMempoolSize`.\r\n    - Try to use results from the subpackage validation loop.\r\n    - If that doesn't exist (i.e. we quit early), use results from prechecks loop.\r\n    - If that doesn't exist (i.e. we quit early and we hadn't found a failure with it yet), fill with `TX_UNKNOWN`.\r\n\r\nThis means we will call `PreChecks` for each transaction 2 times (fewer if we quit early), and run all other validation checks at most 1 time. A transaction shouldn't be validated in the subpackage validation loop more than once.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26711.patch"
          },
          "closed_at": "2023-11-10T14:21:17Z",
          "created_at": "2022-12-16T11:27:00Z",
          "updated_at": "2023-11-10T14:21:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T11:50:20Z",
      "updated_at": "2023-07-31T11:50:20Z",
      "source": {
        "issue": {
          "id": 1816950867,
          "node_id": "PR_kwDOABII585WKAv-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28130",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28130/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28130/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28130/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28130",
          "number": 28130,
          "state": "closed",
          "state_reason": null,
          "title": "Remove arbitrary restrictions on OP_RETURN by default",
          "body": "Any number or size of data-carrying OP_RETURN outputs are allowed, and the `-datacarrier` option is removed. For those who want to limit data carrying outputs, `-datacarriersize` is still supported, and has the functionality of applying the specified data carrier limit as well as limiting the number of data carrying OP_RETURN outputs to one. If `-datacarriersize=0` is set, no data carrying output is allowed.\r\n    \r\nRational: there's lots of ways for people to publish data in the Bitcoin chain, and lots of data has been published.  There's no reason for us to place artificial limits on this particular method.\r\n\r\nReplaces https://github.com/bitcoin/bitcoin/pull/27261\r\n",
          "user": {
            "login": "petertodd",
            "id": 7042,
            "node_id": "MDQ6VXNlcjcwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petertodd",
            "html_url": "https://github.com/petertodd",
            "followers_url": "https://api.github.com/users/petertodd/followers",
            "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
            "organizations_url": "https://api.github.com/users/petertodd/orgs",
            "repos_url": "https://api.github.com/users/petertodd/repos",
            "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/petertodd/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "too heated",
          "comments": 107,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28130",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28130",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28130.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28130.patch"
          },
          "closed_at": "2023-08-10T13:18:36Z",
          "created_at": "2023-07-23T01:33:30Z",
          "updated_at": "2023-08-10T13:18:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vnprc",
        "id": 9425366,
        "node_id": "MDQ6VXNlcjk0MjUzNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9425366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vnprc",
        "html_url": "https://github.com/vnprc",
        "followers_url": "https://api.github.com/users/vnprc/followers",
        "following_url": "https://api.github.com/users/vnprc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vnprc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vnprc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vnprc/subscriptions",
        "organizations_url": "https://api.github.com/users/vnprc/orgs",
        "repos_url": "https://api.github.com/users/vnprc/repos",
        "events_url": "https://api.github.com/users/vnprc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vnprc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T01:49:55Z",
      "updated_at": "2023-08-03T01:49:55Z",
      "source": {
        "issue": {
          "id": 1834131375,
          "node_id": "I_kwDOGW9Qmc5tUp-v",
          "url": "https://api.github.com/repos/TriangleBitDevs/TriangleBitDevs.github.io/issues/10",
          "repository_url": "https://api.github.com/repos/TriangleBitDevs/TriangleBitDevs.github.io",
          "labels_url": "https://api.github.com/repos/TriangleBitDevs/TriangleBitDevs.github.io/issues/10/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/TriangleBitDevs/TriangleBitDevs.github.io/issues/10/comments",
          "events_url": "https://api.github.com/repos/TriangleBitDevs/TriangleBitDevs.github.io/issues/10/events",
          "html_url": "https://github.com/TriangleBitDevs/TriangleBitDevs.github.io/issues/10",
          "number": 10,
          "state": "closed",
          "state_reason": "completed",
          "title": "Socratic Seminar 20",
          "body": "# Welcome\r\n\r\nHello Bitcoiners! This is where we'll organize the topics of discussion for our upcoming Socratic Seminar.\r\n\r\nPlease use this issue to suggest topics that you'd like to see discussed at the seminar. To suggest a topic, simply add a new comment to this issue with the topic title as the comment's title.\r\n\r\nAs we work through organizing the topics, feel free to edit and update your comments as needed. This will help us keep everything organized and easy to follow.\r\n\r\nTo help get us started, here are some main topics of discussion that we could consider:\r\n\r\n- Bitcoin Core\r\n- Lightning Network\r\n- Scaling\r\n- Privacy\r\n- Media\r\n- Miscellaneous\r\n-\r\nRemember, this is **Bitcoin only**, do not post about your favorite clown-coin.<br>\r\nThank you for your contributions and we look forward to a great seminar!\r\n",
          "user": {
            "login": "vnprc",
            "id": 9425366,
            "node_id": "MDQ6VXNlcjk0MjUzNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9425366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnprc",
            "html_url": "https://github.com/vnprc",
            "followers_url": "https://api.github.com/users/vnprc/followers",
            "following_url": "https://api.github.com/users/vnprc/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vnprc/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vnprc/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vnprc/subscriptions",
            "organizations_url": "https://api.github.com/users/vnprc/orgs",
            "repos_url": "https://api.github.com/users/vnprc/repos",
            "events_url": "https://api.github.com/users/vnprc/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vnprc/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 18,
          "closed_at": "2023-08-12T15:11:14Z",
          "created_at": "2023-08-03T01:37:05Z",
          "updated_at": "2023-08-12T15:11:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T09:12:05Z",
      "updated_at": "2023-08-09T09:12:05Z",
      "source": {
        "issue": {
          "id": 1566660823,
          "node_id": "PR_kwDOABII585JCXFm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27018",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27018/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27018/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27018/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27018",
          "number": 27018,
          "state": "closed",
          "state_reason": null,
          "title": "mempool / miner: regularly flush <=0-fee entries and mine everything in the mempool",
          "body": "This was suggested in https://github.com/bitcoin/bitcoin/pull/26933#issuecomment-1412320818.\r\n\r\n**The Problem**\r\nPackage CPFP (only accessible through regtest-only RPC submitpackage) allows 0-fee (or otherwise below min relay feerate) transactions if they are bumped by a child. We need to know what to do with these transactions if they lose their sponsor, e.g. due to a replacement that removed the input spending this 0-fee transaction.\r\n\r\nThis is made slightly more complicated by the fact that our \"selection scoring\" (BlockAssembler) is different from our \"eviction scoring.\" Roughly, we select based on ancestor feerate and evict based on descendant feerate. This may lead to [evicting things we would actually want to mine](https://github.com/bitcoin/bitcoin/pull/27018#issuecomment-1424742766) and [not evicting things that we will never mine](https://github.com/bitcoin/bitcoin/pull/26933#issuecomment-1400143991).\r\n\r\nThis PR's approach is to remove the 1sat/vB `-blockmintxfee` and have BlockAssembler select anything in the mempool (still based on ancestor packages, but not stopping at 1sat/vB). It also adds logic to `TrimToSize()` to evict anything paying <=0 fees. The idea is, if we're getting to the bottom of our mempool, we scrape up all the sats we can. Anything that pays *some* fee is worth adding to the block template.\r\n\r\nA major advantage of this approach is that 0-fee, non-v3 transactions can be bumped in package CPFP.\r\n\r\nA few observations which may or may not be problematic:\r\n- This increases the potential work after a reorg, since we add an extra step of removing the below-minrelayfeerate entries.\r\n- This increases the number of transactions that may be evicted in a replacement (from the worst case scenario we discussed before, it's up to 2500 entries).\r\n- This means you can remove a transaction from your own mempool by calling prioritisetransaction with a negative value.\r\n",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27018",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27018",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27018.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27018.patch"
          },
          "closed_at": "2023-08-09T09:12:06Z",
          "created_at": "2023-02-01T19:11:35Z",
          "updated_at": "2023-12-12T14:18:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T14:36:46Z",
      "updated_at": "2023-08-09T14:36:46Z",
      "source": {
        "issue": {
          "id": 1221671479,
          "node_id": "PR_kwDOABII5843Gzwx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25038",
          "number": 25038,
          "state": "closed",
          "state_reason": null,
          "title": "policy: nVersion=3 and Package RBF",
          "body": "**Note: this PR has been superseded by #28948 (v3) and #28984 (package RBF)**\r\n\r\nSee #27463 for overall package relay tracking.\r\n\r\nThis PR contains 2 projects: v3 policy and package RBF. Mailing list posts: [package RBF 1](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019464.html) and [V3 + package RBF 2](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html). It stems from a long discussion about RBF pinning, across a [mailing list thread](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html) and [gist](https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff).\r\n\r\nV3 Policy: A set of policy rules applied to transactions with their `nVersion` field set to 3. Namely, it allows users to opt in to more restrictive descendant limits for shared transactions. If adopted by many nodes in the network, V3 mitigates various RBF pinning attacks. See doc/policy/version3_transactions.md for the exact rules and rationale, and [these review club notes](bitcoincore.reviews/25038) for more background and discussion.\r\n\r\nPackage RBF: In addition to allowing a child to pay for its parents within the package, also allow the child to pay for replacing the parent's conflicts. For example, this allows LN users to replace commitment transactions existing in the mempool, simply by broadcasting their respective commitment transactions with a high-fee child. The commitment transactions can be signed with 0 fees, which means no overpaying.\r\n\r\nFAQ: is v3 still helpful even with cluster mempool (#27677) ?\r\n\r\n- Rule 3 pinning: This is addressed with v3 but not really with cluster mempool (descendant allowance is still too permissive).\r\n- Package RBF and ACP pinning: This PR allows for package RBF with v3 packages. V3 has an effective \"cluster limit\" of 2 which makes it very cheap to calculate the mining score of a v3 transaction. With cluster mempool, which also makes it easier to calculate mining score, we could have package RBF for non-v3 transactions.\r\n- Allowing 0fee transactions: This PR allows v3 transactions to be below minimum relay feerate, provided they are CPFP'd. This is because the simplified topology allows us to avoid situations like the ones described in #26933. With cluster mempool, we can allow this for non-v3 transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25038",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25038.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25038.patch"
          },
          "closed_at": "2023-12-11T15:18:12Z",
          "created_at": "2022-04-30T00:24:31Z",
          "updated_at": "2023-12-11T15:18:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T03:15:31Z",
      "updated_at": "2023-10-06T03:15:31Z",
      "source": {
        "issue": {
          "id": 1928485631,
          "node_id": "I_kwDOABII585y8lr_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28599",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28599/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28599/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28599/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28599",
          "number": 28599,
          "state": "closed",
          "state_reason": "completed",
          "title": "Gathering Priorities for 27.0",
          "body": "Please nominate projects that could become priorities for the next ~6 months (until the 27.0 release). We (frequent contributors) will vote on which projects will be priorities next week in a separate issue.\r\n\r\nProject priorities are those which the frequent contributors to this project have voted on to have more focused review on for the next ~6 months. This issue is to list what projects are ongoing that can be voted on. Voting will occur in a separate issue that will be opened next week.\r\n\r\nNominations will close at the start of the IRC meeting on October 12th at 14:00 UTC. The issue for voting will be opened at that time as well.\r\n\r\nNominations and voting is limited to those who are part of the bitcoin github organization. Comments in this issue from those outside of the organization will be ignored, and may be deleted. If you are not part of the organization and believe that you should be, please send me an email or message me on IRC.\r\n\r\nInitial list from recent CoreDev:\r\n\r\n* Multiprocess #10102 \r\n* Silent payments #28536\r\n* Package Relay #27463\r\n* Legacy wallet (BDB) removal #20160\r\n* Erlay #21515\r\n* Cmake #28607\r\n* Kernel #27587\r\n* Logging Migration #25203\r\n* Stratum V2 #27854\r\n* Cluster mempool #27677\r\n\r\nAssumeUTXO and BIP 324 were on this list originally, but they seem to be done now?",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 6,
          "closed_at": "2023-10-12T13:59:10Z",
          "created_at": "2023-10-05T14:49:25Z",
          "updated_at": "2023-10-20T10:00:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T13:58:36Z",
      "updated_at": "2023-10-12T13:58:36Z",
      "source": {
        "issue": {
          "id": 1940066390,
          "node_id": "I_kwDOABII585zoxBW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28642",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28642/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28642/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28642/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28642",
          "number": 28642,
          "state": "closed",
          "state_reason": "completed",
          "title": "Voting on Priority Projects for 27.0",
          "body": "Please leave your votes for project priorities for the next ~6 months (until the 27.0 feature freeze).\r\n\r\nProject priorities are those which the frequent contributors to this project have voted on to have more focused review on until the next feature freeze (or until they are completed). They will become permanent topics in our weekly IRC meetings so that we can get updates on the progress of each project and determine the next step to move them forward.\r\n\r\nVoting will close at the start of the IRC meeting on October 19th at 14:00 UTC. To vote, please leave a comment containing the three projects from the list below that you would like to be the priority projects. The priority projects will be the three with the most votes.\r\n\r\nVoting is limited to those who are part of the bitcoin github organization. Comments in this issue from those outside of the organization will be ignored, and may be deleted. If you are not part of the organization and believe that you should be, please send me an email or message me on IRC.\r\n\r\nThe projects to vote on are:\r\n* Multiprocess #10102 \r\n* Silent payments #28536\r\n* Package Relay #27463\r\n* Legacy wallet (BDB) removal #20160\r\n* Erlay #28646\r\n* Cmake #28607\r\n* ~~Kernel #27587~~ (removed by request of the author)\r\n* ~~Logging Migration #25203~~ (removed by request of the author)\r\n* Stratum V2 #27854\r\n* ~~cluster mempool #27677~~ (removed by request of the author)",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 35,
          "closed_at": "2023-10-19T14:00:15Z",
          "created_at": "2023-10-12T13:58:35Z",
          "updated_at": "2023-11-25T02:33:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:39Z",
      "updated_at": "2023-10-18T18:59:39Z",
      "source": {
        "issue": {
          "id": 1950437953,
          "node_id": "PR_kwDOABII585dLamZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
          "number": 28676,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] Cluster mempool implementation",
          "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch"
          },
          "created_at": "2023-10-18T18:59:37Z",
          "updated_at": "2023-12-18T17:38:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T09:22:37Z",
      "updated_at": "2023-11-23T09:22:37Z",
      "source": {
        "issue": {
          "id": 1843337671,
          "node_id": "PR_kwDODgwEWM5XiqLF",
          "url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1072",
          "repository_url": "https://api.github.com/repos/bitcoindevkit/bdk",
          "labels_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1072/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1072/comments",
          "events_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1072/events",
          "html_url": "https://github.com/bitcoindevkit/bdk/pull/1072",
          "number": 1072,
          "state": "closed",
          "state_reason": null,
          "title": "Introduce new `bdk_coin_select` implementation",
          "body": "### Description\r\n\r\nThis replaces #924 (which in turn, ports over https://github.com/LLFourn/bdk_core_staging/pull/46).\r\n\r\nAs stated by @LLFourn in https://github.com/bitcoindevkit/bdk/pull/924#issuecomment-1600066366, we will complete the following in this PR:\r\n\r\n- [x] Add minimize fee metric (it's a better default that waste see https://github.com/wizardsardine/liana/pull/560#discussion_r1236237579) \r\n- [x] Allow easy weighted combination of different metrics (see same link above)\r\n- [x] Document everything including nice README.md exmaples\r\n- [x] Make DWIM branch and bound helper function (https://github.com/wizardsardine/liana/pull/560#discussion_r1236232805)\r\n- [x] Make `DrainWeight` (https://github.com/wizardsardine/liana/pull/560#discussion_r1236246084)\r\n- [x] Add `CoinSelector::fund_outputs` (see https://github.com/wizardsardine/liana/pull/560#discussion_r1236251001) -- another point is that in general we need to know the number of outputs to get the varint for the outputs correct which I think we are cheating on atm.\r\n- [x] Test cases against real world transactions to see if coin selections have precisely the real world feerate that was expected. (EDIT: I've just done a few of these against the feerate shown mempool.space).\r\n- [x] Rewrite examples to use this crate.\r\n- [x] Remove all `TODO` in the new crate and make issues for further work.\r\n\r\n### Notes to the reviewers\r\n\r\n~\r\n\r\n### Changelog notice\r\n\r\nIntroduce new `bdk_coin_select` module\r\n\r\n### Checklists\r\n\r\n#### All Submissions:\r\n\r\n* [x] I've signed all my commits\r\n* [x] I followed the [contribution guidelines](https://github.com/bitcoindevkit/bdk/blob/master/CONTRIBUTING.md)\r\n* [x] I ran `cargo fmt` and `cargo clippy` before committing\r\n\r\n#### New Features:\r\n\r\n* [x] I've added tests for the new feature\r\n* [x] I've added docs for the new feature\r\n",
          "user": {
            "login": "evanlinjin",
            "id": 14065705,
            "node_id": "MDQ6VXNlcjE0MDY1NzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14065705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanlinjin",
            "html_url": "https://github.com/evanlinjin",
            "followers_url": "https://api.github.com/users/evanlinjin/followers",
            "following_url": "https://api.github.com/users/evanlinjin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/evanlinjin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/evanlinjin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/evanlinjin/subscriptions",
            "organizations_url": "https://api.github.com/users/evanlinjin/orgs",
            "repos_url": "https://api.github.com/users/evanlinjin/repos",
            "events_url": "https://api.github.com/users/evanlinjin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/evanlinjin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignee": {
            "login": "evanlinjin",
            "id": 14065705,
            "node_id": "MDQ6VXNlcjE0MDY1NzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14065705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanlinjin",
            "html_url": "https://github.com/evanlinjin",
            "followers_url": "https://api.github.com/users/evanlinjin/followers",
            "following_url": "https://api.github.com/users/evanlinjin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/evanlinjin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/evanlinjin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/evanlinjin/subscriptions",
            "organizations_url": "https://api.github.com/users/evanlinjin/orgs",
            "repos_url": "https://api.github.com/users/evanlinjin/repos",
            "events_url": "https://api.github.com/users/evanlinjin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/evanlinjin/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "evanlinjin",
              "id": 14065705,
              "node_id": "MDQ6VXNlcjE0MDY1NzA1",
              "avatar_url": "https://avatars.githubusercontent.com/u/14065705?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/evanlinjin",
              "html_url": "https://github.com/evanlinjin",
              "followers_url": "https://api.github.com/users/evanlinjin/followers",
              "following_url": "https://api.github.com/users/evanlinjin/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/evanlinjin/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/evanlinjin/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/evanlinjin/subscriptions",
              "organizations_url": "https://api.github.com/users/evanlinjin/orgs",
              "repos_url": "https://api.github.com/users/evanlinjin/repos",
              "events_url": "https://api.github.com/users/evanlinjin/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/evanlinjin/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoindevkit/bdk/pulls/1072",
            "html_url": "https://github.com/bitcoindevkit/bdk/pull/1072",
            "diff_url": "https://github.com/bitcoindevkit/bdk/pull/1072.diff",
            "patch_url": "https://github.com/bitcoindevkit/bdk/pull/1072.patch"
          },
          "closed_at": "2023-12-11T14:21:38Z",
          "created_at": "2023-08-09T14:12:05Z",
          "updated_at": "2024-01-06T18:31:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:17:12Z",
      "updated_at": "2023-11-27T15:17:12Z",
      "source": {
        "issue": {
          "id": 2012508541,
          "node_id": "PR_kwDOABII585gc3y_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
          "number": 28948,
          "state": "closed",
          "state_reason": null,
          "title": "v3 transaction policy for anti-pinning",
          "body": "See #27463 for overall package relay tracking.\r\n\r\nDelving Bitcoin discussion thread: https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340\r\nDelving Bitcoin discussion for LN usage: https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418\r\n\r\nRationale:\r\n- There are various pinning problems with RBF and our general ancestor/descendant limits. These policies help mitigate many pinning attacks and make package RBF feasible (see #28984 which implements package RBF on top of this). I would focus the most here on Rule 3 pinning. [1][2]\r\n- Switching to a cluster-based mempool (see #27677 and #28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n\r\nV3 policy is for \"Priority Transactions.\" [3][4] It allows users to opt in to more restrictive topological limits for shared transactions, in exchange for the more robust fee-bumping abilities that offers. Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2.\r\n\r\nImmediate benefits:\r\n\r\n- You can presign a transaction with 0 fees (not just 1sat/vB!) and add a fee-bump later.\r\n- Rule 3 pinning is reduced by a significant amount, since the attacker can only attach a maximum of 1000vB to your shared transaction.\r\n \r\nThis also enables some other cool things (again see #27463 for overall roadmap):\r\n- Ephemeral Anchors\r\n- Package RBF for these 1-parent-1-child packages. That means e.g. a commitment tx + child can replace another commitment tx using the child's fees.\r\n- We can transition to a \"single anchor\" universe without worrying about package limit pinning. So current users of CPFP carve out would have something else to use.\r\n- We can switch to a cluster-based mempool [5] (#27677 #28676), which removes CPFP carve out [6].\r\n\r\n[1]: Original mailing list post and discussion about RBF pinning problems https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html\r\n[2]: A FAQ is \"we need this for cluster mempool, but is this still necessary afterwards?\" There are some pinning issues that are fixed here and not fully fixed in cluster mempool, so we will still want this or something similar afterward.\r\n[3]: Mailing list post for v3 https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html\r\n[4]: Original PR #25038 also contains a lot of the discussion\r\n[5]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/7\r\n[6]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 81,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28948.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28948.patch"
          },
          "closed_at": "2024-02-10T04:38:12Z",
          "created_at": "2023-11-27T15:17:11Z",
          "updated_at": "2024-02-12T15:21:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:25:30Z",
      "updated_at": "2023-11-29T16:25:30Z",
      "source": {
        "issue": {
          "id": 2016966837,
          "node_id": "PR_kwDOABII585gsIyD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
          "number": 28970,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] p2p: opportunistically accept 1-parent-1-child packages",
          "body": "Enable 1-parent-1-child package relay :rocket: (just using the existing protocol messages).\r\n\r\nSee https://github.com/bitcoin/bitcoin/issues/27463 for overall package relay tracking.\r\n\r\nRationale:\r\n- Package relay is nice [1]. Relaying 1-parent-1-child CPFP when mempool min feerate is high would be a subset of the use cases, but a pretty significant improvement over what we have today.\r\n- Switching to a cluster-based mempool (see\r\nhttps://github.com/bitcoin/bitcoin/issues/27677 and https://github.com/bitcoin/bitcoin/pull/28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n- The majority of this code is useful for building e.g. #27742.\r\n\r\nThis means 1p1c packages propagate in the \"happy case\" where nobody is deliberately withholding packages.\r\n\r\nTo make this more robust, we need receiver-side logic to retry orphan resolution with multiple peers. Also, since we rely on the orphanage to remember the child while waiting for the parent, peers may cause us to drop packages by sending lots of orphans. To make this robust, we need to make efforts to protect some amount of orphans from eviction.\r\n\r\n[1]: see this writeup and its links https://github.com/bitcoin/bips/blob/02ec218c7857ef60914e9a3d383b68caf987f70b/bip-0331.mediawiki#propagate-high-feerate-transactions",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28970.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28970.patch"
          },
          "created_at": "2023-11-29T16:25:29Z",
          "updated_at": "2024-02-09T18:06:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T16:15:27Z",
      "updated_at": "2024-01-25T16:15:27Z",
      "source": {
        "issue": {
          "id": 2100725835,
          "node_id": "I_kwDOABII5859NohL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29319",
          "number": 29319,
          "state": "open",
          "state_reason": null,
          "title": "Cluster mempool, CPFP carveout, and V3 transaction policy",
          "body": "Opening an issue for high-level discussion, as the PR that implements this has gotten difficult to follow.\r\n\r\n### Cluster mempool\r\n\r\nWork is underway to [redesign the mempool](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/1) with different topology constraints on the transaction graph than exist today.  I originally described this proposal in a github issue (#27677), and have shared a draft implementation (#28676).  In brief, with a new mempool design we could simultaneously: fix bugs with mempool eviction and the incentive compatibility of RBF replacements; achieve improved performance; eliminate the ancestor/descendant limits (with the introduction of a likely more relaxed \"cluster\" limit); and likely be in a position to better implement complex behaviors like package validation and package rbf.\r\n\r\n### CPFP carveout is not compatible with cluster mempool\r\n\r\nAs I explain [here](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12), I believe the CPFP carveout rule (introduced in #15681) is not compatible with the new design. Since some users may be relying on this behavior, we should come up with a workaround to avoid breaking existing applications.\r\n\r\n### V3 transaction policy\r\n\r\nDescribed in #28948, the v3 transaction policy is a proposal to introduce topology restrictions on unconfirmed transactions with `nVersion=3` (which are currently non-standard for relay, and would be made standard under the proposal).  Specifically, v3 transactions would be:\r\n- opted-in to RBF replacement policies (whatever those may be, as they evolve in our project)\r\n- permitted to only be part of mempool clusters that are at most of size 2 (meaning 1 parent/1 child)\r\n- required to have any unconfirmed parents or children also be marked v3 (and therefore subject to these rules)\r\n- bounded in size to at most 1000 vbytes, if the child of an unconfirmed (and therefore v3) parent\r\n\r\nBy offering a policy rule that can enforce a much tighter topology restriction that the current ancestor/descendant limits, we hope to achieve a few things:\r\n\r\n#### Replacing CPFP carveout (with a new sibling-replacement policy)\r\n\r\nWe can provide a way to achieve the goals of the CPFP carveout rule even if the existing carevout rule were to be dropped. As explained in [this post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html), the use-case contemplated by the CPFP carveout rule was one where a single transaction might have two spendable outputs, each spendable by a different party, and that either party should be able to spend their output without hitting global topology limits, provided that their spending transaction was bounded in size and had no other unconfirmed parents. If the v3 policy rule were to be applied to the LN commitment transactions described in that post, then neither of the two outputs that are spendable could be used to hit the limits that carveout is designed to bypass. \r\n\r\nSo if we couple the v3 policy with an RBF rule that would allow one spend of a v3 transaction to replace an existing lower-feerate spend of that same parent -- something we call *sibling eviction* and has a draft implementation in #29306 -- then I believe we will have enacted a set of policies that replicate the CPFP carveout use case. \r\n\r\n#### Provide a general way for fee bumping to work better\r\n\r\nEven apart from the needs of layer 2 protocols, the new v3 policy serves as a general way to bypass the issue of RBF being expensive when a child transaction is created that has a large fee (and is typically large in size, allowing for it to be low feerate).  This has been the source of user complaints since our RBF policies were first deployed, and by bounding the size of child transactions we effectively can limit the amount of additional fee a user would need to pay due to the presence of such children.  \r\n\r\nNote, of course, that this property is also what makes the sibling-eviction-policy described above workable.\r\n\r\n### Proposed roadmap\r\n\r\nTo unblock the cluster mempool project, I think we need the following:\r\n1. Deployment of the V3 policy rules (current proposal is #28948)\r\n2. Deployment of V3 sibling eviction rbf rules (current proposal is #29306)\r\n\r\nThen, projects that use CPFP carveout would need to be able to adopt the new policy rules.  After the last LN spec discussion, I understand that migrating their commitment transactions to use a new format (even just a change in version number) might take time to coordinate, and that in the meantime we should simply use some other unique markers to identify those commitment transactions, and implicitly imbue such transactions with the v3 policy rules.  However, doing so would eliminate the ability to batch-CPFP several unconfirmed commitment transactions at once (although this isn't reliable anyway today, since the carveout protections don't apply to this case, but perhaps this sometimes works fine and is more efficient).\r\n\r\nIt's not clear to me if that final step -- of imbuing transactions with v3 policy, rather than requiring explicit opt-in -- is needed before we move further forward with cluster mempool, or even if doing so would be acceptable to the broader community, but I think we could entertain that idea as a way to assist the LN project with migration and to decouple progress in this project from upgrade timelines in that one.\r\n\r\n### Feedback\r\n\r\nWhile we're still working out implementation details in the v3 and v3-sibling-eviction PRs, it would be great to get concept ACKs on this roadmap from any users of the current CPFP carveout policy.  In particular, please provide feedback on:\r\n1. whether there are use cases of CPFP carveout that are not covered by the V3 proposal as I described above, and \r\n2. whether the \"imbued v3\" behavior described above should be treated as a blocker for CPFP carveout removal as well, or if it's a bad idea due to (eg) breaking the ability to batch-CPFP (or any other reason)",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 24,
          "created_at": "2024-01-25T16:15:26Z",
          "updated_at": "2024-02-08T23:35:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "comment_deleted",
      "id": 11647616807,
      "node_id": "CDE_lADOABII585mEbpjzwAAAAK2QIcn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11647616807",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T21:13:54Z"
    },
    {
      "event": "referenced",
      "id": 11763923248,
      "node_id": "REFE_lADOABII585mEbpjzwAAAAK9Lzkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11763923248",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "created_at": "2024-02-10T04:38:11Z"
    }
  ]
}