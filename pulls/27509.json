{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
    "id": 1323107430,
    "node_id": "PR_kwDOABII585O3QRm",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2541f09439099ec3e73f7c5a12f809f190e6af1d",
    "number": 27509,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Relay own transactions only via short-lived Tor or I2P connections",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender ---- TX ------------> tx-recipient\r\ntx-sender ---- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      }
    ],
    "created_at": "2023-04-21T13:39:19Z",
    "updated_at": "2023-08-01T06:00:15Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "009043ef3b467a41ee748a2c9d856c0b32087aad",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:relay_tx_to_priv_nets",
      "ref": "relay_tx_to_priv_nets",
      "sha": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 213941,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T13:02:05Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "44b05bf3fef2468783dcebf651654fdd30717e7e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35471,
        "stargazers_count": 70594,
        "watchers_count": 70594,
        "size": 236161,
        "default_branch": "master",
        "open_issues_count": 676,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T22:28:50Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-01T03:23:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 960,
    "deletions": 159,
    "changed_files": 24,
    "commits": 17,
    "review_comments": 84,
    "comments": 42
  },
  "events": [
    {
      "event": "commented",
      "id": 1517851104,
      "node_id": "IC_kwDOABII585aeJHg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517851104",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:39:22Z",
      "updated_at": "2023-08-01T05:59:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1555409244) |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517861239), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517878136), [MaxHillebrand](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517885182), [mzumsande](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518004494), [ajtowns](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1523087063), [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525684935), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1526013801), [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525672113), [0xB10C](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1528893509) |\n| Approach NACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659618783) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28189](https://github.com/bitcoin/bitcoin/pull/28189) (p2p: diversity network outbounds follow-ups by amitiuttarwar)\n* [#28170](https://github.com/bitcoin/bitcoin/pull/28170) (p2p: adaptive connections services flags by furszy)\n* [#28107](https://github.com/bitcoin/bitcoin/pull/28107) (util: Type-safe transaction identifiers by dergoegge)\n* [#28043](https://github.com/bitcoin/bitcoin/pull/28043) (fuzz: Test headers pre-sync through p2p interface by dergoegge)\n* [#27675](https://github.com/bitcoin/bitcoin/pull/27675) (p2p: Drop m_recently_announced_invs bloom filter by ajtowns)\n* [#27539](https://github.com/bitcoin/bitcoin/pull/27539) (init: Fixes for file descriptor accounting by Empact)\n* [#27452](https://github.com/bitcoin/bitcoin/pull/27452) (test: cover addrv2 anchors by adding TorV3 to CAddress in messages.py by pinheadmz)\n* [#27407](https://github.com/bitcoin/bitcoin/pull/27407) (net, refactor: Privatise CNode send queue by dergoegge)\n* [#27213](https://github.com/bitcoin/bitcoin/pull/27213) (p2p: Diversify automatic outbound connections with respect to networks by amitiuttarwar)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting outgoing connections by brunoerg)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#26621](https://github.com/bitcoin/bitcoin/pull/26621) (refactor: Continue moving application data from CNode to Peer by dergoegge)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25284](https://github.com/bitcoin/bitcoin/pull/25284) (net: Use serialization parameters for CAddress serialization by MarcoFalke)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517851104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9067859055,
      "node_id": "LE_lADOABII585kDIGizwAAAAIcfIxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9067859055",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:42:22Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9067897462,
      "node_id": "CTDE_lADOABII585kDIGizwAAAAIcfSJ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9067897462",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:46:31Z"
    },
    {
      "event": "commented",
      "id": 1517861239,
      "node_id": "IC_kwDOABII585aeLl3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517861239",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:47:34Z",
      "updated_at": "2023-04-21T13:50:19Z",
      "author_association": "MEMBER",
      "body": "Concept ACK - cool!\r\n\r\nNot sure about \"only\" relaying to Tor and I2P but seems useful as an option.\r\n\r\n> after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/4432 comes to mind",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517861239",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517878136,
      "node_id": "IC_kwDOABII585aePt4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517878136",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:58:31Z",
      "updated_at": "2023-04-21T13:58:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517878136",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517885182,
      "node_id": "IC_kwDOABII585aeRb-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517885182",
      "actor": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:03:14Z",
      "updated_at": "2023-04-21T14:03:14Z",
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517885182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517890871,
      "node_id": "IC_kwDOABII585aeS03",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517890871",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:06:13Z",
      "updated_at": "2023-04-21T14:06:13Z",
      "author_association": "MEMBER",
      "body": "Looking at the current implementation, I am not sure how useful this is going to be, if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message, similar to how the tor browser replaces headers with constants?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517890871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517896418,
      "node_id": "IC_kwDOABII585aeULi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517896418",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:44Z",
      "updated_at": "2023-04-21T14:10:44Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Good idea! Perhaps it's worth mimicking `bitcoin-submittx` (https://github.com/laanwj/bitcoin-submittx/blob/master/bitcoin-submittx#L28) ?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9068115303,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIcgHVn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068115303",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:45Z"
    },
    {
      "event": "subscribed",
      "id": 9068115318,
      "node_id": "SE_lADOABII585kDIGizwAAAAIcgHV2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068115318",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:45Z"
    },
    {
      "event": "commented",
      "id": 1517904089,
      "node_id": "IC_kwDOABII585aeWDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517904089",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:16:40Z",
      "updated_at": "2023-04-21T14:16:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Looking at the current implementation, I am not sure how useful this is going to be, if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message, similar to how the tor browser replaces headers with constants?\r\n\r\nOr it could randomize it, from the list of different version strings.",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517904089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517911046,
      "node_id": "IC_kwDOABII585aeXwG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517911046",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:21:46Z",
      "updated_at": "2023-04-21T14:22:03Z",
      "author_association": "MEMBER",
      "body": "One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nPerhaps it is worth combining this with https://github.com/bitcoin/bitcoin/pull/27213 and instead of one-shot connections we broadcast only to existing selected connections on these privacy networks. Our own transactions would then still benefit from being broadcast along side other transactions.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517911046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1518004494,
      "node_id": "IC_kwDOABII585aeukO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518004494",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T15:31:01Z",
      "updated_at": "2023-04-21T15:47:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. Not sure if this should be the default or an optional mode (in some cases, a faster and more reliable transmission may be more important than privacy).\r\n\r\nIt might also be helpful to combine this with some heuristics that the tx percolated through the network: \r\nFor example, require that 2 of your regular full outbound connections  (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518004494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9068923969,
      "node_id": "LE_lADOABII585kDIGizwAAAAIcjMxB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068923969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T15:41:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1518536516,
      "node_id": "IC_kwDOABII585agwdE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518536516",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T06:51:34Z",
      "updated_at": "2023-04-22T06:51:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> potentially uniquely identifying UA comment, or other fingerprints in the version message\r\n\r\nadded to the TODO in the OP\r\n\r\n> One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nYes. I was thinking its probably ok to broadcast to a few peers, not just one. And if they blackhole it, then the code will retry. We can retry more aggressively if it keeps being blackholed. I think it is ok to assume that there are some honest nodes in our addrman.\r\n\r\n> Perhaps it is worth combining this with https://github.com/bitcoin/bitcoin/pull/27213 and instead of one-shot connections we broadcast only to existing selected connections on these privacy networks.\r\n\r\nThere are two aspects of this:\r\n1. Linking a bitcoin transaction to IP address/geolocation. Broadcasting to long-lived Tor/I2P connections solves this (modulo other issues like linking Tor nodes with IP addresses).\r\n2. Linking one bitcoin transaction with another bitcoin transaction that otherwise are unrelated. To solve/mitigate this we need to send each transaction over its individual connection and that connection to not be linkable to other connections.\r\n\r\n> Not sure if this should be the default or an optional mode\r\n\r\nRight, also assuming there will be bugs/unexpected things - maybe have an option to enable/disable this. Hardest would be to introduce it without an option to disable it. Softest approach would be: 1. introduce under an option with default off, 2. in next version flip the default to on (if it seems to be working well)\r\n\r\n> It might also be helpful to combine this with some heuristics that the tx percolated through the network:\r\nFor example, require that 2 of your regular full outbound connections (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n\r\nI actually changed the behavior to do something like that in 512077bb8805eacb671eabcf9d62463a2a6e6a39 `net_processing: relay local transactions via the SENSITIVE_RELAY mechanism` in this PR: see where `RemoveUnbroadcastTx()` was called before / is called now. Maybe that deserves a separate commit. Before we would be ok as long as we pushed the tx to the peer. Now we wait until we receive an `INV` about that tx from somebody. There is some room for improvement - added in the TODO in the OP.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518536516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1518666764,
      "node_id": "IC_kwDOABII585ahQQM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518666764",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T13:59:56Z",
      "updated_at": "2023-04-22T14:17:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think that in the suggested approach we might reveal information by _not_ inv'ing our own tx to others.\r\nIf a spy is connected to each node, we might send the tx to them first currently (master), but with the PR, if we are now the only node that never inv's the tx to them at all (provided that all other nodes do that eventually with the flooding mechanism) that would equally identify us as the source.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518666764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "unsubscribed",
      "id": 9074477675,
      "node_id": "UE_lADOABII585kDIGizwAAAAIc4Ypr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074477675",
      "actor": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T08:32:14Z"
    },
    {
      "event": "commented",
      "id": 1519011804,
      "node_id": "IC_kwDOABII585aikfc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1519011804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:26Z",
      "updated_at": "2023-04-23T09:34:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@mzumsande, right, ideally, after the initial broadcast via the short-lived connection, the node should behave as if it does not know the tx:\r\n* before it gets `INV` for that tx, exclude it from `GETDATA` and `MEMPOOL` replies\r\n* if it gets `INV` for that tx, request the entire tx via `GETDATA`\r\n* broadcast to others",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1519011804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9074571268,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIc4vgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074571268",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:27Z"
    },
    {
      "event": "subscribed",
      "id": 9074571271,
      "node_id": "SE_lADOABII585kDIGizwAAAAIc4vgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074571271",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:27Z"
    },
    {
      "event": "subscribed",
      "id": 9091775346,
      "node_id": "SE_lADOABII585kDIGizwAAAAId6Xty",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9091775346",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T12:24:19Z"
    },
    {
      "event": "commented",
      "id": 1523087063,
      "node_id": "IC_kwDOABII585ayHbX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523087063",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T09:26:15Z",
      "updated_at": "2023-04-26T09:26:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\nMight be good to have some way of being able to configure where to connect to for sensitive relay, defaulting to tor/i2p, but so that you could perhaps enable specific ipv4/ipv6 addresses as well, particularly for testing purposes.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1523087063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525672113,
      "node_id": "IC_kwDOABII585a7-ix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525672113",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:11:04Z",
      "updated_at": "2023-04-28T18:16:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK \r\n\r\na high level question: the privacy benefit comes from the guarantees of using the altnets - the lifecycle of the connection is expected to reveal that the tx is an initial broadcast. if a spy is able to reliably fingerprint a node between networks, this mechanism could potentially degrade privacy. could it be worthwhile to mitigate this by occasionally broadcast non-wallet txs via the same short-lived connections, or broadcast a couple additional txs over the same connection? obv some big tradeoffs, just want to consider the possibility. even if we are able to ensure no leaks _now_, it is difficult to guarantee this over time of developing the project. \r",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525672113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525684935,
      "node_id": "IC_kwDOABII585a8BrH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525684935",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:19:43Z",
      "updated_at": "2023-04-27T13:19:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK ",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525684935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525701626,
      "node_id": "IC_kwDOABII585a8Fv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525701626",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:31:01Z",
      "updated_at": "2023-04-27T13:31:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Disagree with:\n\nopened regardless of max connections limits\n\nThe connection should be established after another tor/i2p connection is dropped - this way the connection appears to be just another connection - nothing special about it.",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525701626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525715201,
      "node_id": "IC_kwDOABII585a8JEB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525715201",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:39:40Z",
      "updated_at": "2023-04-27T13:39:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "It may also be useful to randomize the duration of the connection? \n\nAdditionally - padding the connection with dummy txs during its lifecycle may help obfuscate the real payload? ",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525715201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1526013801,
      "node_id": "IC_kwDOABII585a9R9p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1526013801",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T16:40:34Z",
      "updated_at": "2023-04-27T16:40:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1526013801",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1527780479,
      "node_id": "IC_kwDOABII585bEBR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527780479",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-28T16:06:09Z",
      "updated_at": "2023-04-28T16:06:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nI agree. My main concern is about how to ensure the transaction has not been censored. It seems easy for an attacker to identify someone opened a connection just to relay its own transaction.\r\n\r\n> Now we wait until we receive an INV about that tx from somebody\r\n\r\nJust to clarify: We would open the short-lived connection to relay our own transaction and close it right after and then, we wait until we receive an INV about that tx from somebody, if not, we would try to do it (open a new short-lived conn...) all over again?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1527780479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1528893509,
      "node_id": "IC_kwDOABII585bIRBF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1528893509",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-29T23:15:29Z",
      "updated_at": "2023-04-29T23:15:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK!",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1528893509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1534767675,
      "node_id": "IC_kwDOABII585berI7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1534767675",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-04T13:18:19Z",
      "updated_at": "2023-05-04T13:18:19Z",
      "author_association": "MEMBER",
      "body": "> We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection).\r\n\r\nIdeally, if outbound has clearnet connections, we would resume normal operation IFF one of those connections INV's it. This reduces risk of sybil influencing the node.\r\n\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1534767675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1415616055,
      "node_id": "PRR_kwDOABII585UYJY3",
      "url": null,
      "actor": null,
      "commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1415616055",
      "submitted_at": "2023-05-06T01:35:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1545683197,
      "node_id": "IC_kwDOABII585cIUD9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1545683197",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T12:41:37Z",
      "updated_at": "2023-05-12T12:41:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks all for the feedback!\r\n\r\n> Just to clarify: We would open the short-lived connection to relay our own transaction and close it right after and then, we wait until we receive an INV about that tx from somebody, if not, we would try to do it (open a new short-lived conn...) all over again?\r\n\r\nYes. But we may as well send to a few peers at the same time, then wait. And, I am not sure, maybe if it does not work for a long time, then fall back to the existent mechanism?\r\n\r\nThe worst that can happen is if our addrman is filled with malicious Tor peers that blackhole such initial announcements. But even if 90% of them are blackholes, then after a dozen attempts we should eventually send to a honest node which will propagate it to the network. Attempts are cheap and don't reveal any of the identity of the sender.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1545683197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9399609376,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIwQqgg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9399609376",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T07:44:46Z"
    },
    {
      "event": "commented",
      "id": 1571690382,
      "node_id": "IC_kwDOABII585drheO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1571690382",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:32:59Z",
      "updated_at": "2023-06-01T09:32:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "`>>` This is ready for review and testing `<<`\r\n\r\n> ... if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message ...\r\n\r\n@MarcoFalke, I went with a [completely static `VERSION` message](https://github.com/vasild/bitcoin/blob/b73810f80917dd882d6161f6892f10f8c46a8193/src/net_processing.cpp#L1439-L1446)\r\n\r\n> ... Perhaps it's worth mimicking `bitcoin-submittx`\r\n\r\n@sipa, [done](https://github.com/vasild/bitcoin/blob/b73810f80917dd882d6161f6892f10f8c46a8193/src/net_processing.cpp#L1444)\r\n\r\n> Or it could randomize it, from the list of different version strings.\r\n\r\n@kristapsk, could be, but I did not do that (yet). I think a constant suffices and is the simplest thing to do.\r\n\r\n> Not sure if this should be the default or an optional mode\r\n\r\n@mzumsande, I made it optional, guarded by a new option `-sensitiverelayowntx` which is \"off\" by default. If all goes well, we can consider flipping the default to \"on\" after one release.\r\n\r\n> It might also be helpful to combine this with some heuristics that the tx percolated through the network: For example, require that 2 of your regular full outbound connections (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n\r\nThat makes sense and is a room for improvement, let me summarize:\r\n\r\n* In `master` we consider the transaction percolated through the network after we push it to a peer (no wait for `INV` from somebody else).\r\n* In this PR, currently, we want for `INV` from somebody, ask for the full transaction with `GETDATA` and after we receive it, then consider it done.\r\n\r\nI am trying to strike a balance between simplicity (too simple and maybe it will break) and robustness (requires more complexity). Now, at the cost of more complexity we can require more:\r\n* an `INV` from more than one peer.\r\n* an `INV` from IPv4, IPv6 or CJDNS peer.\r\n* an `INV` from an outbound peer.\r\n\r\nWe have to start behaving normally after we get the first `INV`, which means to relay to all peers and include the transaction in `GETDATA` and `MEMPOOL` replies. Thus to achieve any of the above, it would be necessary to split the list of \"unbroadcast\" transactions in two:\r\n1. (now) transactions that we have to send via short-lived sensitive relay connections and we hide from `GETDATA` and `MEMPOOL` and ask for the full transaction once we get `INV`\r\n2. (new list) transactions that we have to send via short-lived sensitive relay connections, but we have already received them via at least one `INV`, so include them in `GETDATA` and `MEMPOOL`\r\n\r\n> If a spy is connected to each node, we might send the tx to them first currently (master), but with the PR, if we are now the only node that never inv's the tx to them at all (provided that all other nodes do that eventually with the flooding mechanism) that would equally identify us as the source.\r\n\r\n@mzumsande, I believe that is fixed now - once we get an `INV`, we will flood it to everybody and start behaving normally.\r\n\r\n> Might be good to have some way of being able to configure where to connect to for sensitive relay, defaulting to tor/i2p, but so that you could perhaps enable specific ipv4/ipv6 addresses as well, particularly for testing purposes.\r\n\r\n@ajtowns, sensitive relay via IPv4 seems like a way to shoot yourself in the foot. I extended the testing framework a bit to have a proper functional test for this.\r\n\r\n> ... if a spy is able to reliably fingerprint a node between networks, this mechanism could potentially degrade privacy ...\r\n\r\n@amitiuttarwar, no because the spy will not be able to relate the sensitive relay connection to another connection with the transaction originator on the same network.\r\n\r\n> The connection should be established after another tor/i2p connection is dropped - this way the connection appears to be just another connection - nothing special about it.\r\n> It may also be useful to randomize the duration of the connection?\r\n> Additionally - padding the connection with dummy txs during its lifecycle may help obfuscate the real payload?\r\n\r\n@RandyMcMillan, I am not sure why another connection should be dropped. I think adding more transactions in the broadcast is going to bring little value because they will be transactions that have already propageted through the network. A spy would be able to identify which one is the unbroadcast transaction. The point here is that even that the spy knows this is initial broadcast, they can't identify the sender and the worst they can do is blackhole the transaction.\r\n\r\n> > One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\n> I agree. My main concern is about how to ensure the transaction has not been censored. It seems easy for an attacker to identify someone opened a connection just to relay its own transaction.\r\n\r\n@brunoerg, Yes, that should be ok.\r\n\r\n> Ideally, if outbound has clearnet connections, we would resume normal operation IFF one of those connections INV's it. This reduces risk of sybil influencing the node.\r\n\r\n@instagibbs, Yes, see a few lines above, we would need two lists of unbroadcast transactions.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1571690382",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9400791739,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791739",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791754,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLLK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791754",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791770,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLLa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791770",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791787,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLLr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791787",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791826,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLMS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791826",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791847,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLMn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791847",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791891,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLNT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791891",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791904,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791904",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791928,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLN4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791928",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400791944,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLOI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791944",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400791966,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLOe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791966",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400791978,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791978",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400791999,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLO_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791999",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792010,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLPK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792010",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400792031,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLPf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792031",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792044,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLPs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792044",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400792068,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLQE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792068",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792081,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLQR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792081",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:02Z"
    },
    {
      "event": "unlabeled",
      "id": 9400915070,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAIwVpR-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400915070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:45:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1455044242,
      "node_id": "PRR_kwDOABII585WujaS",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455044242",
      "submitted_at": "2023-06-01T09:47:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "ready_for_review",
      "id": 9400966000,
      "node_id": "RFRE_lADOABII585kDIGizwAAAAIwV1tw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400966000",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:49:53Z"
    },
    {
      "event": "reviewed",
      "id": 1455611371,
      "node_id": "PRR_kwDOABII585Wwt3r",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455611371",
      "submitted_at": "2023-06-01T14:24:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1455700161,
      "node_id": "PRR_kwDOABII585WxDjB",
      "url": null,
      "actor": null,
      "commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455700161",
      "submitted_at": "2023-06-01T15:01:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1456079399,
      "node_id": "PRR_kwDOABII585WygIn",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1456079399",
      "submitted_at": "2023-06-01T18:35:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1456206463,
      "node_id": "PRR_kwDOABII585Wy_J_",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1456206463",
      "submitted_at": "2023-06-01T19:53:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9412027941,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIxACYl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9412027941",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T09:08:49Z"
    },
    {
      "event": "commented",
      "id": 1573408760,
      "node_id": "IC_kwDOABII585dyE_4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1573408760",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T09:09:00Z",
      "updated_at": "2023-06-02T09:09:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "`b6fd6b525d...92fb45b5ef`: rebase and address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1573408760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9412688804,
      "node_id": "LE_lADOABII585kDIGizwAAAAIxCjuk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9412688804",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T10:22:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1458209334,
      "node_id": "PRR_kwDOABII585W6oI2",
      "url": null,
      "actor": null,
      "commit_id": "92fb45b5ef8560bc7a37223b096e625fa9f284d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK\r\n\r\nReviewed all code - really great job with this! Very cool idea. I will continue to track this PR and look forward to testing it out more and trying to break the functional tests ;-) \r\n\r\nI have a few questions below about implementation",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1458209334",
      "submitted_at": "2023-06-02T19:05:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1574302283,
      "node_id": "IC_kwDOABII585d1fJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574302283",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T20:53:13Z",
      "updated_at": "2023-06-02T20:53:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Correct me please if I'm missing anything. Considering:\r\n```\r\n- Once we get an INV from somebody, request the transaction with GETDATA, as if we didn't have it before.\r\n\r\n- After we receive the full transaction as a TX message, in reply to our GETDATA request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n```\r\nand\r\n```\r\nWe could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection)\r\n```\r\nIn case my node doesn't accept inbound connections and supports clearnet + tor, however, my addrman has majority ipv4/6 addresses, seems like there is a chance of not having any connection with a Tor peer, so it would make harder to know that my transaction has been propagated? Seems like #27213 could boost this feature?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1574302283",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9427613496,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIx7fc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9427613496",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:40:27Z"
    },
    {
      "event": "commented",
      "id": 1576033040,
      "node_id": "IC_kwDOABII585d8FsQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576033040",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:43:13Z",
      "updated_at": "2023-06-05T04:45:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "`92fb45b5ef...c9acf32606`: make the python linter happy and avoid a race in the test - `wait_for_connect()` could time out as if a connection never arrived even if it did. This happens if the peer is connects  and disconnects before `wait_for_connect()` is called.\r\n\r\n`c9acf32606...2eae1f8f13`: make the python linter happy (even more)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576033040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9427632599,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIx7kHX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9427632599",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:44:39Z"
    },
    {
      "event": "unlabeled",
      "id": 9428613639,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAIx_ToH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9428613639",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T06:53:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1576826080,
      "node_id": "IC_kwDOABII585d_HTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576826080",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:38:27Z",
      "updated_at": "2023-06-05T13:38:27Z",
      "author_association": "MEMBER",
      "body": "would like to see an updated OP that details what changes have been made, including precisely how often these connections are being made",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576826080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1576875849,
      "node_id": "IC_kwDOABII585d_TdJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576875849",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z",
      "updated_at": "2023-06-05T14:06:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> In case my node doesn't accept inbound connections and supports clearnet + tor, however, my addrman has majority ipv4/6 addresses, seems like there is a chance of not having any connection with a Tor peer, so it would make harder to know that my transaction has been propagated?\r\n\r\n@brunoerg, Why? I couldn't follow. But anyway - as of now this PR does not wait for more than one peer to give back the transaction to us.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576875849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9433980057,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyTxyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433980057",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z"
    },
    {
      "event": "subscribed",
      "id": 9433980095,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyTxy_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433980095",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z"
    },
    {
      "event": "commented",
      "id": 1576942166,
      "node_id": "IC_kwDOABII585d_jpW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576942166",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:46:36Z",
      "updated_at": "2023-06-05T14:46:58Z",
      "author_association": "MEMBER",
      "body": "General question about this: what will be the impact on tor/i2p nodes? (Like, resources-wise for those operators) are there even enough hidden services nodes with inbound slots to support this? In a world where all TXs are broadcast to the network through \"exit nodes\" are there any other possible drawbacks ?",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576942166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1577096803,
      "node_id": "IC_kwDOABII585eAJZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577096803",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z",
      "updated_at": "2023-06-05T16:17:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@instagibbs added some more info to the OP, but feel free to reach on `#bitcoin-core-dev` to clarify things. Once a local transaction is is received, 5 such connections will be made right away. If we still consider the transaction unbroadcast after 10-15 mins, then it will be retried (5 new connections). These 10-15 mins are how `master` does things now but I think if sensitive relay is used this can be made more aggressive and/or increase the number of peers we broadcast to. E.g. after 3 minutes broadcast to 10 peers.\r\n\r\n> General question about this: what will be the impact on tor/i2p nodes? (Like, resources-wise for those operators) are there even enough hidden services nodes with inbound slots to support this?\r\n\r\n@pinheadmz, good question. Traffic-wise - the selected recipients will receive the transaction via a short-lived connection, but even now they do receive the transaction in one way or another. The overhead is the extra handshake of the new connection. Some quick tests show, from the point of view of the tx sender: sent 180 bytes (excluding the transaction itself), received 239 bytes.\r\n\r\nInbound slots-wise: Some [back of the envelope calculation](https://en.wikipedia.org/wiki/Back-of-the-envelope_calculation):\r\n* The historical maximum for the Bitcoin network of incoming transactions has been about 10 new transactions per second, typically that is 3-4 tx/sec. Lets say `3..10` tx/sec.\r\n* Each new tx causes 5 new connections to be opened, so for one second `15..50` new connections will be opened in total in that second (`3*5..10*5`).\r\n* Lets say one short-lived connection takes `2..10` seconds. That is a moving window of `2..10` seconds.\r\n* In the next `2..10` seconds they will not be closed and so for `2..10` seconds `30..500` new connections will be opened (`2*15..10*50`).\r\n* The constant load of those `30..500` extra connections will be spread evenly amongst ~10k listening Tor or I2P nodes. So each listening Tor or I2P node will have to handle `0.003..0.05` more incoming connections.\r\n\r\n>  In a world where all TXs are broadcast to the network through \"exit nodes\" are there any other possible drawbacks ?\r\n\r\nBy \"exit nodes\" you mean the new sensitive relay mechanism and not Tor-to-IPv4 exit nodes, right? If the Tor or I2P network stops working then the Bitcoin nodes that are connected to it and have the sensitive relay enabled will not be able to broadcast their transactions. Maybe we should eventually fall back to the old relay mechanism after some time has passed in unsuccessful sensitive relay attempts.\r\n\r\nBut notice - as the author of this, I have a blind spot for its drawbacks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577096803",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9435719732,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyaag0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719732",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "subscribed",
      "id": 9435719747,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyaahD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719747",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "mentioned",
      "id": 9435719769,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyaahZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719769",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "subscribed",
      "id": 9435719788,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyaahs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719788",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "commented",
      "id": 1577106769,
      "node_id": "IC_kwDOABII585eAL1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577106769",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:24:36Z",
      "updated_at": "2023-06-05T16:24:36Z",
      "author_association": "MEMBER",
      "body": ">  I think if sensitive relay is used this can be made more aggressive and/or increase the number of peers we broadcast to. E.g. after 3 minutes broadcast to 10 peers.\r\n\r\nI think for first cut matching current behavior is probably best. If Tor is being sybiled, I don't think hammering things even harder is going to fix much. Time-sensitive users should probably just avoid using this feature altogether, at least until there is some sort of fallback mechanism introduced.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577106769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1577177916,
      "node_id": "IC_kwDOABII585eAdM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577177916",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:15:46Z",
      "updated_at": "2023-06-05T17:15:46Z",
      "author_association": "MEMBER",
      "body": "> Tor-to-IPv4 exit nodes,\r\n\r\nI was more asking about this, not as much from a vulnerability standpoint but more like, the bottleneck created by all TXs going through a specific subset of network nodes first. I think your envelope math is reassuring though - I didn't realize there were so many Tor nodes already",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577177916",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1463428381,
      "node_id": "PRR_kwDOABII585XOiUd",
      "url": null,
      "actor": null,
      "commit_id": "2eae1f8f130a7f003726c332d82b1280c0a06f15",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reviewed just the first few commits so far",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1463428381",
      "submitted_at": "2023-06-05T21:58:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1578149945,
      "node_id": "IC_kwDOABII585eEKg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1578149945",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-06T08:12:43Z",
      "updated_at": "2023-06-06T08:12:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Tor-to-IPv4 exit nodes,\r\n> \r\n> I was more asking about this, not as much from a vulnerability standpoint but more like, the bottleneck created by all TXs going through a specific subset of network nodes first. I think your envelope math is reassuring though - I didn't realize there were so many Tor nodes already\r\n\r\nWell, ok, we don't know how many of those Tor or I2P nodes are also connected to clearnet. For this secondary propagation (after sensitive relay has fired the transaction) however it does not matter if sensitive relay was used initially or not. The transaction will go to/from all the networks anyway due to the flooding mechanism like it happens currently.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1578149945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9473548662,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI0quF2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9473548662",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T14:47:29Z"
    },
    {
      "event": "commented",
      "id": 1582729266,
      "node_id": "IC_kwDOABII585eVogy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582729266",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T14:47:32Z",
      "updated_at": "2023-06-08T14:47:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "`2eae1f8f13...ff88e08363`: address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1582729266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9474332724,
      "node_id": "LE_lADOABII585kDIGizwAAAAI0ttg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9474332724",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T15:53:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9482773701,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI1N6TF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9482773701",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T10:08:42Z"
    },
    {
      "event": "commented",
      "id": 1584327078,
      "node_id": "IC_kwDOABII585ebumm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1584327078",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T10:10:23Z",
      "updated_at": "2023-06-09T10:10:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "`ff88e08363...5fd41b9fbf`: limit the maximum number of sensitive relay connections that can be opened (discussion: https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218597944)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1584327078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9487190772,
      "node_id": "LE_lADOABII585kDIGizwAAAAI1ewr0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9487190772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T18:33:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9648909504,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI_HqzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9648909504",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T08:36:54Z"
    },
    {
      "event": "commented",
      "id": 1609055465,
      "node_id": "IC_kwDOABII585f6Dzp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1609055465",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T08:42:04Z",
      "updated_at": "2023-06-27T08:42:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "`5fd41b9fbf...bde055d28f`:\r\n* rebase due to conflicts\r\n* adjust the added test to expect that some non-sensitive relay connection may be opened before sensitive tx relay is complete; this is because the code was changed to be less aggressive and may open other connections even if sensitive relay ones are needed\r\n* extract a move-only change in `ThreadOpenConnections()` to a separate commit to make it easier to review (new commit: ec6f4ac210 `net: move peers counting before grant acquisition in ThreadOpenConnections()`)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1609055465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "unlabeled",
      "id": 9649580637,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAI_KOpd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9649580637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T09:34:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9660954444,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAI_1ndM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9660954444",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T07:15:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1535806985,
      "node_id": "PRR_kwDOABII585bio4J",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK bde055d28f5d41d9e923f770d130010e72441e91\r\n\r\nRead through each commit and checked build at each commit. Left a few questions / comments below. I am going to spend more time examining the test coverage and playing with the feature on signet in the next few days.\r\n\r\nReally excellent work! Commit layout makes this branch easy and legible to review. It's a great idea and I am also very excited about an actual working socks5 proxy in the test suite ;-)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1535806985",
      "submitted_at": "2023-07-18T20:36:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1548267148,
      "node_id": "PRR_kwDOABII585cSK6M",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1548267148",
      "submitted_at": "2023-07-26T17:44:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1549783541,
      "node_id": "PRR_kwDOABII585cX9H1",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1549783541",
      "submitted_at": "2023-07-27T13:04:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1653599387,
      "node_id": "IC_kwDOABII585ij-yb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1653599387",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T13:10:47Z",
      "updated_at": "2023-07-27T13:10:47Z",
      "author_association": "MEMBER",
      "body": "Not sure how effective it is to put the transaction into the mempool. I know that your implementation treats the positive case (reply to an `inv` as if the tx wasn't there, or withhold the tx in reply to a `getdata`). However, a failure to reply to an otherwise valid `inv` can still be used to query the mempool. Or similarly, a failure to (also) withhold related transactions in an otherwise valid `getdata` can be used to query the mempool. (For example, if the transaction was a CPFP and the parent can't be in your mempool due to the minimum fee-rate, but your node happily replies).\r\n\r\nI don't think there is a general solution to this, other than to never add the transaction to the mempool.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1653599387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1657040602,
      "node_id": "IC_kwDOABII585ixG7a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657040602",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T04:37:07Z",
      "updated_at": "2023-07-30T04:37:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "`bde055d28f...96ea776776`: address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1657040602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9956117225,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJRbkrp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956117225",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T04:37:41Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhOTUyY2U0NTlmYTU2YmY2OGY1NjBlZjAyNjVhOWVkNzkwOGU2NzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a952ce459fa56bf68f560ef0265a9ed7908e676",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a952ce459fa56bf68f560ef0265a9ed7908e676",
      "tree": {
        "sha": "08970c1596425124adb9da62dbcf383acfb0a2e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08970c1596425124adb9da62dbcf383acfb0a2e1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 08970c1596425124adb9da62dbcf383acfb0a2e1\nparent 4c57e53a61e6ae65ee87a25b1355530224b5ae9e\nauthor Vasil Dimov <vd@FreeBSD.org> 1684395553 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690692258 +0200\n\nlogging: introduce a new category for sensitive relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF6qMACgkQVN8G9ktV\ny7/0/x/+K0yyNQp8GfKD9lMDhClFYUxsnqtdvP7gs9D1gWkCRWUeyLE8i/Pn4alI\ndvdNcdy3g1s6OltaS8T59Zwgi2mEQ4dl8hajvl4659Hyd3Z7IDeb9rMpHGylqoHY\niv1M4X/zvi4qErF1Ubkge7uBtlWCi/dlxIYgms2130nzgEWKzyBkLx4DeMgAT/dv\nwmUUm471nccYANVq4V2emP5fZ5wkFUeiWoOTFewExKm+fq68vzvVpwcjPVeABBse\nHNlLkVZpcHVZ/QyujHUxWFV+0s1xX9p08XbGImmokgjJF3g13vORxGLxnX9HIx3e\ntc4pV9GRekSPLn1lQBm62N0yh8SyuoRcQ2sRUfpvgDdejtGkVGFiB9QcTNYFO/pO\nAahwbZan1GlWNlUdeb8CeVMG3gtiWXjAnkO2jsHYy9eotVcwLt0kegJjnNUwax3p\nkfGNtoIuzrW4zysuxDA5JPYS/LNftsQ7l4I2sVKrVuULGbhdoAx2mLFwOtr43VQB\nDSnA69dnmxgtrUjifnIIHmxhb0nnclsol/GfT2pD7Tw+vDslSloFOzFq3WK+WFHd\nP/VCrQ1CZ+AXxkLGFnCMScf38rFUKcohHH/t8PPSRW6w5mto8dJcb8SX+k3dqmq5\nEUn/Hy8uEHm6ghxGR1sjFjHhqaf/gcwbjyqF+1WYi2WzfcEGZtLQwQRX7NOBH2le\n8QTpNUoKYstoLZ/S+XzH6kgyXul5XMYfK4mzJXuHOIzOZdg1Ab4+Kqo1a5FvpIOi\nyal9te034/adqqFmuWTplWAujaWYH1XnwKDqqHx8Du60HkBl1iED70s6IU6v54hv\n5vCc+hp3WgJh5SuqIkr53Wi54n5YuEp9y1rYartH39K6GzoJnO1wPOaAXTxVt//m\n5JNTQ9t5wU0DyoqVxanEN6Y6hUHVeEeAEVyQeYCXPPy1DVnil5COOVomlgupiNQ6\nFavJp8hjGKkIoz1CwhA8h+kkgh8kqISXEaPbUS1zv+aUF009MbaXDnQAH7nFfVDm\nKNWX0tjEDwwl0jFL1RaGOHHaExsnv9j2u82iEQ9YLMgPkCyWxYQewKeSX+v8f+zU\n132mLAeKrTtNBWfvk7USTTUjRqUJfexxvETNDvMMgSrUBczi1tK4hbk4yYam1dOJ\n+M34EZ6+oLYlTWVuD2a5TyGNQn5GQ5SIQjA1Ch8bi/yQj4MZvLiwP1+MkpEz3p6d\nbDFChtnm22ai9Ewx9kUlk+feF2CymqOvIJK/K2SPAE5KMO7Tk1NTCsIv3k7gh75V\nUFcg92IIITb7i/coUdSjCyMlRJShoZkhIOmmviW958BPtH3kKwoPPYuQv/7bVcJv\nXhTAhNdB9tipvyv50oll4FZASuPmnw==\n=SVds\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c57e53a61e6ae65ee87a25b1355530224b5ae9e",
          "sha": "4c57e53a61e6ae65ee87a25b1355530224b5ae9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c57e53a61e6ae65ee87a25b1355530224b5ae9e"
        }
      ],
      "message": "logging: introduce a new category for sensitive relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T04:44:18Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-18T07:39:13Z"
      },
      "sha": "1a952ce459fa56bf68f560ef0265a9ed7908e676"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEzYTQ5NjI2M2ZmYWIwOTYxN2M4NDVmYTdjMWM3MGJlYzczMWM0ZWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3a496263ffab09617c845fa7c1c70bec731c4ed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3a496263ffab09617c845fa7c1c70bec731c4ed",
      "tree": {
        "sha": "7cd52d214c334e9d5f62ff013059b71886ca362c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cd52d214c334e9d5f62ff013059b71886ca362c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7cd52d214c334e9d5f62ff013059b71886ca362c\nparent 1a952ce459fa56bf68f560ef0265a9ed7908e676\nauthor Vasil Dimov <vd@FreeBSD.org> 1685008381 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690692259 +0200\n\ninit: introduce a new option to enable/disable sensitive tx relay\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF6qMACgkQVN8G9ktV\ny7+64h//WRxoSBp53hcv1EfXWRQdV5T3UR8pbz8fF3XkWs8pWy2EByFOBFFl2EwE\nHE7gSE4DnkXU8HHFaYs3HRoeG2AeS1umNgWADRV6IOaId3X5VXc8W2NOWOIOwdPM\n/wOdMM+ohfq8yHjMYecB+DzXU6uAtGe4Tw33m3pDdsBJNMKG2nisuJ8yigxR9nAE\nSoiP92DpsZTB4AhSuYUGtcjyC9ve/2toDXJpcnTFLbCG0vkmUVQYD2kvvuVxt/us\nb1jHwu4fGwF8kwKhZL/LHCAV5jIAejCqxVGy1ijhtoXUFqa0tLQamRFccNArR0Ec\nHFzqcBHv2cyayg1/SbDSS9Xvlh2r0WF067ztvk+KQ1BW3pfQCMVLQ1gcGaD68hnd\ntdPYQWziZ1F+VA53QCfxXnkSc7p5TPTbwNqKHm/JO9nmuL/nky9AMNug1BitT5k4\nTY/AuNYqQWyi1R6ywglVCzgOd/Kv+gLMCA1z4GQsDBOEvDqepEnn55WZfhPDHigs\nMO4rEaiQ9WKd1LbRBnnwaCHCwBAiXWL0/vtsPqKe9N/jmwle+u9ICUm+gAn+NAMR\nIFQk/V6bRvGJ8fazaB/p8xfZRnYFOR48LfwH6A3AYBaFb/uHT5uXJCmFwx1zqTR0\nA43X/+TfdsEn4E0QIYOj5vvuyE+0MZdnL9F9Am1JRaUfYby9jUWksZjPTrJ8mUSb\nmDl5m0118O/WWHDeI33YQVE8J0fuP39c0KdVMxjVR4ZThXflvJj053hO/E6SK3sQ\nTsFKXP0fQYKEE7J62dnn6QfQqPooC+Re5I21pV2s8FK5pobYjKNaBIhrNqqXm/tL\nwliWeKDtZtBNacg3PWOScpz4+VfdHBA5N6bawGsVqgQdrJ802B6mXyTSrQufzrLp\nXgBbZjKDyhidNUsw+gMk0nGwdcc5ZrADpO/urSX6RDUFtKrhRuYhdV2tSb9wmudk\nlCMKYf1XsmxBlogO75uumKxxFr0+4D4DwLofZjITOMG3Y9FnNZCHa35ExXiZKDW4\n3coWrdhl/y5r4jRBW8XCIZyY7pQBYe3oR/UGAfMIrFz7E0ARzeqoihh7MA7K7MBI\ntAi+TWBPWW5zTtWO23F+bsltvpbXx3xujLtzdBZHqlbvCGFNOJydMmBKGuSgK61I\naNRLZnpSlzmKCwnWd2eU1ScIAi/eiFjAfoTZqxMbiyTUwBSOkvNoJg4yOtqBquxd\nd7kj1/8AZ30FrNW/s5cuphK6hdkfwXATotlUJc4lPuyTAy7Knfnk/JBjY26cHPjw\nl0RGcijtBIPJRjAk2i9qxMJNhyr7GOtJOIma/uQW1FNs3D4ftGo0sLLUHF6Dg9rm\nFxPa+AlvOaVKqQp16o90PkUolmq0nw==\n=w+2I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a952ce459fa56bf68f560ef0265a9ed7908e676",
          "sha": "1a952ce459fa56bf68f560ef0265a9ed7908e676",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a952ce459fa56bf68f560ef0265a9ed7908e676"
        }
      ],
      "message": "init: introduce a new option to enable/disable sensitive tx relay\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T04:44:19Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-25T09:53:01Z"
      },
      "sha": "a3a496263ffab09617c845fa7c1c70bec731c4ed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxODVkMjY1YjYwYjE5NTY0YzNhODExOGMzYTAzYjEyNDRkZDc0NTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8185d265b60b19564c3a8118c3a03b1244dd7459",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8185d265b60b19564c3a8118c3a03b1244dd7459",
      "tree": {
        "sha": "01a12ede58527554688e7922ccdb7b3d6b28b88c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01a12ede58527554688e7922ccdb7b3d6b28b88c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 01a12ede58527554688e7922ccdb7b3d6b28b88c\nparent a3a496263ffab09617c845fa7c1c70bec731c4ed\nauthor Vasil Dimov <vd@FreeBSD.org> 1681734321 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690692259 +0200\n\nnet: introduce a new connection type for relaying our transactions\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF6qQACgkQVN8G9ktV\ny78Z+h/8CxuqJPQt29pPUvGHvgmnut1U+ne+9FJx3rV8NVOjiss4bSq8ou1enoGo\nSTXGNO0RmhmDBMP8S5JS9oIMZQMxhkK8Wy9w5LOxhwwGwD1D1d4otGs3Dk7rrY0e\nainm00XECP224f8pTUbPbVyPL8qcLo0QPGd7J+scHG1EQ2kLGh1eskhqJabXfFDg\nneVA6nbGYUHl/Vl3cbCs1ny3OsD398RVVPtenHcrH78BZE9w2R6es/vHZGkpqn/v\n338g8TBC1NYmUmmo5BDN//OTbSeGAosOD+ZhBkZlKM6d1ti5wYDO2oa3AHBgd3Xp\njI7olUNQQeJ+IAjLHBY66WKTw4ywUhHu6r+bst/Rp/Acw3zRBkYgGJKGMvS2tzMb\n3FozaL/SadU70YQH3GYp5K3xRGdsarnvZDoiel35IHyT+yYeQJX92jv5aQNYbqtk\naa3c1Xe7hSJ2nIyYQKXXJXsNTJpO0ojlusERCWdrC4h0iK5s5Yc286K2HTg1Ex5d\nOgU23VeoHoS/PTBWAV+JcPx+lj32MKzBAaelVVAg8eC5vw53ubPePr95T5EJe0UO\nEu7XWonN9bsr1O3wkuD1+RnCPFBjtavKe+Gnby2HbiiHpYnQWr4i0oHfZ0EBI+6t\nK0CyBnJ0UTNvkV1hUkhLTtWKeHNvKqT4W9FK3WsF2DRm9vTFWeCMDha9xR6eaohL\nk1MDbIAOX2FwzBOb5xaYAwbfZXMwjos81N00Yqpbh+bPMAE/2SF5yiC0IO5nPdos\n21tObeTRgwGtyUsH/Hjl/G5OmSM+6heuIwUhlnYsmzzrN8TchC2MOSpMRxm2qh0g\nJfAlcdez0AjzTSJJi5MIkiV7sjBO85uAWU6OI7CKt9Tx+9I8CVA6Rqxx4sz2Ep17\nBAkJVDhORw1cUw+dQDMb3HaSY+oc6b5x/yvg07g/wCfp8p5qXmcJHokjPNToMaub\nYD16QHCcnD3ZNC3gKlYBo6FcSyO2LDqnRMO5sI0tYA584Nh232SPfidB/Hl/GMVL\ndfmeKjd3a0+ZIJN7XEbOVw95lAI2EXEULIGWFTh1q70SXw8N+g4esSOJOfLPo8s6\nq9ScarbVvgkXBu2BXPFAr9W5wvA5a/DTHlrwDDBZ4poyJAhi9y9Ih0o+C7Dc8M+b\nkxwNSymcnhSC+t1oihT9RXSfnbE+wMZVlgN8Uqy3abW0AnObikKajtb+pm3mqxMT\ni2csGXkA1cUruxCna776ei+qKAOI71iRo5rcpMg5VrbhPto1CQ+fK1uQDHA8NX+L\nT1TITEM3peSMBMsr5SO6QnMFzpk7rFGb4LLPE0rLR0Y3YbrhGOsPXmLeomWP18T0\n38OqHIX0pnRCIjuiazht3k52q2OFuw==\n=DtsG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3a496263ffab09617c845fa7c1c70bec731c4ed",
          "sha": "a3a496263ffab09617c845fa7c1c70bec731c4ed",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3a496263ffab09617c845fa7c1c70bec731c4ed"
        }
      ],
      "message": "net: introduce a new connection type for relaying our transactions\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T04:44:19Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-17T12:25:21Z"
      },
      "sha": "8185d265b60b19564c3a8118c3a03b1244dd7459"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhYzBjMGZiMGQ3ZmVhNmNlOTk5YzIxZmJkNDE2Y2NkN2JkYTk2MjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622",
      "tree": {
        "sha": "7c59a170ee7d285c707efd107fe38b3057c7d60f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c59a170ee7d285c707efd107fe38b3057c7d60f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7c59a170ee7d285c707efd107fe38b3057c7d60f\nparent 8185d265b60b19564c3a8118c3a03b1244dd7459\nauthor Vasil Dimov <vd@FreeBSD.org> 1687797386 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690692260 +0200\n\nnet: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF6qQACgkQVN8G9ktV\ny7/93B/+NmX6GZfgiswFVTwzwd+PFe9rqvMsKvaWK0PNnE8J/MJ/jtLw+rH+wXq5\nPf2OoHWIA73SU6P61y3nHELeAbkJ9HU63lrHAc6pZYu1LvrIsTjTRjuHHL+OteLd\nV2Hfy5KqCsn42ZwJdXeQ0/sxJc5B7xIdqoqFHe4VwSDrSomgrNDde4wkwJrPxKxQ\n7Q7sjwA+rTBDtwfiDiqmvgxdspJzWlqbWNp5UutBBPOA4FuEE6XUlHEgNIyKk+RG\nWDrwAMSnLPXn+7F//p2XayAC/YHw4PbEWKT0ql5g2Dabfe2iAGztdG2S87Vku8oA\nbJ8TlUa8bKlMzyRDPrMPHaddkq1gSz0CCratCA7y8fjZXC5VzlyQGolrbH8bvofV\n+njJhGO8Jbrs1b5n/F0Bh5gn+XAwzovNskZai8krxdNCmiSnXzsRQnOXoK9Ejm0T\nyQfMMKZC7EzodBLqHa+x7bkOqZJPhXG5NtKfiyUqlawCYFSXMEOTi0jZKC7Y1M8M\nIPtqOqsBnR77Uv+SUhXdu3gj+l9s5PookH51GYFRAkanh4LJySrla3U26+JYyvTw\nL7S0aIKnqxjb9b8fTvC9lG5g/KuFxWjwJl3wJDbiLHPA8OWM6pX0jMU5HqBaLVc/\npFL9wsHtQj1/39cBipjpykrBygoaH1WYN6k/UOjad6/zZ1FE4Gmpmfh22wf6uUEe\nAsfatWNsrghEVFV7tqiOx2bcuqKd+K6miX81V6ASS/aJCTYkoR/xkZyGyV4Bulmv\nCXWB8mF+XA1VD+jNAyjaL0ukxeP6i46sLBbV5jJXjuw0B/WXJsTwe1/OhTNa8LOH\nVItzQcu1302PaamkpaZ7lkjiEjeOvbh+u17AcJXp/No8aAJbqsrD4KriIjeIBrEW\nCCovGs6ODBXES5b3zS2VMuqfEIW11CmVFB3kteMLIH5lSeHuS+q0NTRbNuhe03+5\nSnCvvOwIQ0g9OO1SmuwFTHmnZ66ul1xPOyw43kxPZ3OCAoVhSmLJbQzNaoZBlKgC\nyp/vn7lDIExrBk7BPqbV6WNZO8jEY0On6fcCw9KEarDtOAWSbPOo3nKwuAEUJOWy\nhK69jsrW8flt9fTIcotVeiQl5Ucbga4i1qznY+PhETaK2e2jQwNQo8VzuPvF2+jA\nIeJsX0G03TITj+qTfYW9aJIlgoo97Y4MBjcl6u+FxsQ480XSx81N8Mjh9YML3wuV\naYqKB3x2tazgRWtigUOScYvbsu52JjVd/jg63NiuD6AtOMg7542E+4dblbFZ0u5Z\nU9QR57FlFmYDkYwaqQquZhO8COB5sj/m/kG8vqnSd7iVbd2chyLmA8aAxgz0eq1h\nNCgPfHCCpd+NTJ8SETVD8pXcDJc2Hg==\n=eEcO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8185d265b60b19564c3a8118c3a03b1244dd7459",
          "sha": "8185d265b60b19564c3a8118c3a03b1244dd7459",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8185d265b60b19564c3a8118c3a03b1244dd7459"
        }
      ],
      "message": "net: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T04:44:20Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-06-26T16:36:26Z"
      },
      "sha": "1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622"
    },
    {
      "event": "labeled",
      "id": 9956135152,
      "node_id": "LE_lADOABII585kDIGizwAAAAJRbpDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956135152",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:01:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyZmNiNDNiYjU0YjEzZTE0ZGRhMzhiODhkN2FkYWE5ZWU4MDY3YmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62fcb43bb54b13e14dda38b88d7adaa9ee8067bf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/62fcb43bb54b13e14dda38b88d7adaa9ee8067bf",
      "tree": {
        "sha": "599fdba56e758ae0679cba7b352e434461c87740",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/599fdba56e758ae0679cba7b352e434461c87740"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 599fdba56e758ae0679cba7b352e434461c87740\nparent 1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622\nauthor Vasil Dimov <vd@FreeBSD.org> 1681991694 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690693313 +0200\n\nnet: implement opening SENSITIVE_RELAY connections\n\nImplement opening `ConnectionType::SENSITIVE_RELAY` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type. Rather, open N connections once, when asked,\n  and fall back to other types (e.g. `OUTBOUND_FULL_RELAY`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF7sMACgkQVN8G9ktV\ny7+3uR/9G2DChL99j9+SeSfyhtLnnqiBEGQD1E52w0PzCwHfKS34zvKwhC1OOkPb\nUvZdSjtqZ5fwOWJTP6EbYL4/pTzVPvMiLkS+l/SqAOUBWjpqt4jCImd40Aj063HU\nL7E/NwuzvZUhYA4rA4OkVQrZBkoipXaR8aNVRgx+oNipeS8W07qBXCTlzWeZdUGq\nstF7ezzKrW7jb3yLkOCk34jxXBMAAAQcoLYriDMxiG9130fuMpl2kGYYX1QUWMKz\nkfdDGwu6oq2FmO69FvQVDW13lfOYgQYFG6fslpcXFHMdY7iAcCltdrd7KoPIZX/D\nVVpDaLhLyw1rD+lqJv3TO1k+U2nBD5tq+AxSNFusV/1a8cwuVKTfpJYA1akSM2TX\no4XSfHKXM3s1zDSCUArbMeB8ggI735UHlqVK9PvfKA6TWHnFkK4lsdfRgFEBpN+A\nAa3YGi/vhrYH7YqeaOxc0vG1rMvM3TLTtyKvG6AZxWu9SqYxZssys/vnhZigBGSo\no0PIEEq2nbYHCkKd605gVSEKwM0AitrfSA5UPZRHSeGUW/aWn4mV2Wg27UEt1Bbf\n2V0vmvewZgpqHqd45XEcZQQSEyULdIcl/V8RAcugUwYdEyOD0nMWlVcVvbrQhAs7\nOXJ1mP5XWf5dbJ9aPTbLUFSyGKoFBkrwzwUqPMSjBZ0KRT1NtIRPPhQikLI3zlJj\n8qBNuX5v2Dkl6BwoOJP0rXZsIi67Vb6SQu8RkTVvsnpg3kAsLaVOoup6mYpsNu6O\nLAUIJSKJA/iJJIA4Zqz8Wu+be66RpuRlgGmHOnbQX4CU5S8Vt1k4DzOCdp26/6dq\nTQQiqJz03C/ooefTNWhC3OmQh4MrgiQ+HW2wdAm+zCohxH6O0GEWCGaW5zRhRs73\nx7UuYVqd7/xPomGTqVWtRd8p9D988P4GDZXTPNugJn8Dwbnk+TfljFyXnp7lKqfZ\nBXnrWTzAmBE1AECdldlRgpp8/XhpOoIE/F0ZVdXUtev9HWhmePKF4juKJ8bJNzN9\nPc9W1EJuYFEPBBxRGcEEAbvMLKKJ/b1DG6dqXbgPTkasDGe9qyzL5tm58DAn5HKP\nrzdFVduFvwr03KvCBwWjJnnir++M9qzJj28wJiSkMQow58rnvJN/r8D95SCXrKCo\n7JJJEh+k/Wf4CBZX9vdPCLvHEb7oQB3il7XXBm7RV7GDPGXnJCl+kSKaJNjEMkvW\nB9PbNWIwa6Gm0W6Ixji8KOMFKhdRTZQIcWxxlMzY6JzK4DC6nvjh+mn5/QMtmpw/\nSwZqiuOXcWZHw52JCRYySU82vLAk0P61YFqsBdI9hunwOPh1weyxtf33+gv5hunr\nwjJ7NlaW5uC5McydHUYOEQzccKKGmQ==\n=f2g3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622",
          "sha": "1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1ac0c0fb0d7fea6ce999c21fbd416ccd7bda9622"
        }
      ],
      "message": "net: implement opening SENSITIVE_RELAY connections\n\nImplement opening `ConnectionType::SENSITIVE_RELAY` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type. Rather, open N connections once, when asked,\n  and fall back to other types (e.g. `OUTBOUND_FULL_RELAY`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T05:01:53Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-20T11:54:54Z"
      },
      "sha": "62fcb43bb54b13e14dda38b88d7adaa9ee8067bf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdiYTA2YjRiNjQxODc0Y2Y0MDQ1NTE4NzNkOWNmY2Y5ZmJiZjA3NzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ba06b4b641874cf404551873d9cfcf9fbbf0773",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7ba06b4b641874cf404551873d9cfcf9fbbf0773",
      "tree": {
        "sha": "f8f5758b8c09500458078ed153212c877fbdaf37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8f5758b8c09500458078ed153212c877fbdaf37"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f8f5758b8c09500458078ed153212c877fbdaf37\nparent 62fcb43bb54b13e14dda38b88d7adaa9ee8067bf\nauthor Vasil Dimov <vd@FreeBSD.org> 1681811546 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690693323 +0200\n\nnet_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForRelayToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for relaying at a later\ntime. Also, there will be another method which only schedules for relay\nto Tor or I2P peers.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF7swACgkQVN8G9ktV\ny79gVR/9Fyw+3CLJzAlWYz1LRgp3NmCaPAe2D74po56ra3ciIrknxELmTz4LiAPp\nMsezrBGRVdBywCI5+sOM7+AoW9eYQ4Hf0Kv4eJ/YB9m9ud5M8NzpZo6f5GmiE0o1\nviVm+MRNUwUAMB5IRtbiCEe01T66L//O5jJQ4HhlD5SpZbn5+ES/A/YgSEruCkkW\nWpGFkDhHPmBvuL0UTxhbiiFrFT45huKuh/MHz2QAOdkTHxtT3oHgPC7zEbk+JJi8\nqQ+Y0LLXs+0PC2+4tSTJ2FzyhyuoMQjcfTPTClmSIm/QVkOWUw2cUypXP3641ygq\nfWwXqKnta9n8ea/5O/NERJ3xIe5dNFseqjq0QNuDjme2CxMC14fdmXut5M7DFQUn\nbjBBcXC+l8Py9sxLZUK7Yi3x6XyNxxyfUTbzvI+DzYvFoCAdcL1lJFuaUdOjtjqm\nZxGAU4F3431JRCg3KMHfSwBkO98ujrsvroy7jezonj7zrOt1RBtFL7A5EukN5lXI\nGYwkABatmYUDh7psrvHMrqaVptehjDyWwfhqlme3IUpsegeNzxdSgJIiz1GwuJAo\ncWVT5JO9SAFhE0+TSCW+/YgYBzwhQBFt+Uj8MKI94sccejYbuONHB57TxNxsv4P4\n31RG1DZ58igGJtU51LFq3Gt3V6CQo2VARnTzOP2TXgVYkC25wk3+VT+JtDrtQp8s\nKwMfm6TjyCJuo6iRuZO8UPC8bzYzInSRUvKJVw7dPzKZWpIlEq0NGArGDhDaemRf\nZCCfCAh8Mz17IxXydqJddAO6EXzET7VCm4okVTSR7q+UQn26YO398ZrNJPTlYr21\nSMZW5YoQORWBT1ZDP8vJeR/sUkCOaZwJ7mnGuC8k8uMwk3vbB3oapBtz4iy8SvAV\nWMxK2P3sl2jDbebwKdgA/+Bz+WqPt5vtbEFssov5dbH6gCaL6MfN2FtnEukGWxV1\nbHvWLD7Ht4prtWBLcuBWuOJa1VqOQAQ9SySVo467mB8olQsO3hsLdDrpMJFO6+i4\nur/xTbCt44nulR4Udry+eRVmUH5pNtpk2+0KRA69b5MH4ZuxEwkrGTx9ROD7/Bj5\nriIhOUwbLQbevr//Q6I2Q2q5Gz+dlG2/OqGNE1zAff2rXiP0833/+QKsuJWdlt6g\nA8PhBTTHLvqXqz8u+ZsE/j6ZV9D+1KQ6CE6KQOzJearusihDepEjm5+e9R8VJayu\n0D0gFCljDZjV3xeYQv+k8rZzXEuvHZYwHAOOls8hC0jsM0lQqmA4UBhBrzGJi0m+\nIaBgiuBFD8m9jFJa7LPX+VUMJexCaOFS076VnJCJYbrMTqbeIdG/wegWabiJe3SP\nSZ6tSkHEAN/GdWze66ZqzNSjcfuZww==\n=FvWv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62fcb43bb54b13e14dda38b88d7adaa9ee8067bf",
          "sha": "62fcb43bb54b13e14dda38b88d7adaa9ee8067bf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62fcb43bb54b13e14dda38b88d7adaa9ee8067bf"
        }
      ],
      "message": "net_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForRelayToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for relaying at a later\ntime. Also, there will be another method which only schedules for relay\nto Tor or I2P peers.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T05:02:03Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-18T09:52:26Z"
      },
      "sha": "7ba06b4b641874cf404551873d9cfcf9fbbf0773"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI4ZWU1ZDJiNTg0NWU5MjZmMzhkZjRhOTViZjE2MDgzMWEzNWZmMGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8ee5d2b5845e926f38df4a95bf160831a35ff0d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b8ee5d2b5845e926f38df4a95bf160831a35ff0d",
      "tree": {
        "sha": "1bc6268b7cbce6af13fae2d5b2d1a42f3fc4bbaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bc6268b7cbce6af13fae2d5b2d1a42f3fc4bbaa"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1bc6268b7cbce6af13fae2d5b2d1a42f3fc4bbaa\nparent 7ba06b4b641874cf404551873d9cfcf9fbbf0773\nauthor Vasil Dimov <vd@FreeBSD.org> 1684415732 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690693324 +0200\n\nnet_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`PushMessage()` near the end. This will help with handling of\nsensitive relay connections - they do not require any of that.\n\nThis is a non-functional change.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTF7swACgkQVN8G9ktV\ny79Fjx/7BaZUBh4/0p6s1SGWOF4uowGMcDN5E7thRDkD4HKyUz+CdoNw52ZKSLHU\nRWIgCyidT6nELVrqaH8D4vIgAruFsMmnLZq4C0sMzDFSdgaZNxawAc/MKGOyILS5\nwsGUiC96QmU/TBV+eZUMveI4DkHghEtSYb3DmmVIrPakxvGXZwHdr7nwhQMpfCXP\nrAndU8Qk5mPKS9jCh9fRps9Y/8cv1vi2NA05Gy6EyBRMcXM70ZcHZCJfmdv1Q5t0\nV/w4tB7478J9Wag9KCxRHYqzcygGb1a1kLOs4PLNwpyO/SIs2y2MeqgMLtNLRY4w\nqrLnMFXWuZvDU4GqJlytuuYqGQzN1Dk6++5M8gOOo4wB3kAk4zIl/AzuhK1MEwCI\nLOV5JjW0tNH30c/vCi55ynyfHZmC2zlglhx+ZvM+uubJ67K+DnP5FXWHc3rfU6fo\n1TaSDR6rnHjufG+N6SUscuGq3PU6MisyBemhYtCQCjUkL0/pJZHAl8drYRipvpyB\nRibGDIA90XPF0tU72mthcnSTgLI8OygPLr8GfytrsCbJBn0F61y+N4FkmmSG+EQS\n8J4lwxSCbsciV2KiMFy2h0AEjgskhPsSGTl0RwtU47eU6yZVic1t7sDG0ueyGJSa\nMDH9p3Fv1NOcimyfvDM6pEcDXPVtTDwkAqX27CB3su2uJhpF1Dvo1xKHlo5qGUoj\nxnNU1FOqaVwZatxlZCZM96oG7hL9sU/052CpzJ4RHQY9hZgNakWuqt46j3L6Q1i9\njHTqj5R/l/kWDsRlfkoLBvX1pzrOvz6mdGNijwtIfcqZzc5WBhNAkGX8eAge1e0B\n5TU5N1FS/tvwSZEWBtu5V1KGvQrod+DFNigjwQ8AVANJGM33ATc0em3xZKIVJqUv\nen/hecdp1sXjQ8q07Y0qMTZhu9951glVmq0GWpJ+vI674B0bWdZyAE+qBTEY3HD5\nIVJ+BTeS2GgEzasiXuiBtMhNj6NS3NHusnqo2iu48Q1mKS9sKVp60qk6Otab4yWE\n6kIelAfGkpQDxGQuSbQTeLPGE/SJbV456WvxL2KQ/Y3Ox6tKrI1FplxuBTPQhEPi\nynauLS+AJu5PrVfpXx8iOFnaSjmavG0bthAcHcBRABnWk2tuMCguJCDX1fdEgexU\nVkvuOviGUOQDMdpnmiFpYWMNxhJCS45/dAyOzJtNUX3oCB/0+/Ar0TQLfq+m0sZk\n1waZh5ehzallq0yFQdKjCpewb/fPFkFdI9qyO2edhaRVVQeQfupxvE039Fnur/oq\nCUYlh3DXXh+MPyIV2KS1aezWWkDPUBhyF0+l36p9x5z87MQI5k7w1dO8ap4LNJ5K\n2OFJ22xtUkA/zrsopcB9nBRIrMzlXw==\n=yECV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ba06b4b641874cf404551873d9cfcf9fbbf0773",
          "sha": "7ba06b4b641874cf404551873d9cfcf9fbbf0773",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7ba06b4b641874cf404551873d9cfcf9fbbf0773"
        }
      ],
      "message": "net_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`PushMessage()` near the end. This will help with handling of\nsensitive relay connections - they do not require any of that.\n\nThis is a non-functional change.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-30T05:02:04Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-18T13:15:32Z"
      },
      "sha": "b8ee5d2b5845e926f38df4a95bf160831a35ff0d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9956137872,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJRbpuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956137872",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:05:04Z"
    },
    {
      "event": "commented",
      "id": 1657043863,
      "node_id": "IC_kwDOABII585ixHuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657043863",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:05:14Z",
      "updated_at": "2023-07-30T05:05:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "`96ea776776...7a3206dc8e`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1657043863",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0YTNlZWI0NzcwMGZmYmMzNmYzYThmYTQxNWNiMzZhYWVkOTZmMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c",
      "tree": {
        "sha": "65ea3d6b99b2185219745fb8fcba0d04722fab45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65ea3d6b99b2185219745fb8fcba0d04722fab45"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 65ea3d6b99b2185219745fb8fcba0d04722fab45\nparent b8ee5d2b5845e926f38df4a95bf160831a35ff0d\nauthor Vasil Dimov <vd@FreeBSD.org> 1681911630 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808440 +0200\n\nnet_processing: handle ConnectionType::SENSITIVE_RELAY connections\n\nFor connections of type `ConnectionType::SENSITIVE_RELAY`:\n* After receiving VERACK, relay a transaction from the list of locally\n  submitted transactions and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsHoACgkQVN8G9ktV\ny7/QUx/7BB+anLcrmtco0RwpxOf3IFYlLWSGOPiuDj5yromUDyowXwESvKGA/z3T\nqDHx1LK2rXnLF6kowlsVj0C/1zod6oNvJJFExQTwbDTDy15Gwx2etbOIBABFTY3g\nxgFyoONAXhNK7nO9Yau+h9kumqfzWo8ThWMyCNCtJbErheeHqcndQpjWdT1Lq+hl\n+CjHE/VCd0z+1Csv7DEejCXNT/Bn0GjYuL8JIBm8XNPdKTZTA6GbAeLZZ9fm/vS6\nMccMKXTTzD0SDKjqSIZVpOUJtveOPdrmZLk/trhgWVn23hHr6DXcBfoCKjGcxpk1\n+LJ0cFSPwkp+dd2GF35nKwv3B2ZWr3ghXKqFp3Bqp8ru8Zn6tpLJrUmmaANvs7wx\nPT3E+tjKa8iepOY2lV5LyEAAJQaYt4N0XovXF1lfJtz4DxF0bKT4OesJ9b8lNmXD\n+VMA+MeDeLaUttwPxtS3rpWlQMPM32PTym4FUAAuEk1M3c2V5xSa5PCt/OonL9YU\npuanfu7+4HPiCou2NBKTezLjyQ7ihu6xOEu4ZiUiYUGIQUMWksBZqBuFCU1OxPlJ\npBMiqNQZTWJrfRmKWMMCutUZDhU4BvItL1OFrUayVh4lh6Dkvm/xfUVjdAHYfCLJ\nvYYuL8e63Aki8FWSVPqJnXvy7xemuiGR/s900zyI1NMMziVP9/zyvpM6/eWsWfRj\nt7jNcOPeM478Fn+i964XujmGogj5nf0k6z8UnmwV23tjVG5fhC6P0DYhRwgV+mND\nM0+1XGmSSrVr/IeQhdKFmTG7EBRjBuSLvalBk9nlQPyjQyv8aykpqodoOmHjgrda\nC/aliJ6D0JOvhBqbqvNSZsEd8hcGkj681mohOdAGwU9+mHSQOQZc1BIodOcqlhRJ\nhAoRyXQ8ba+nTIxW6aOepPwPCHRTK3NoPbaPsvJnwkRiqt6g8gsNANG704sShyMP\nYzrF/oMRUhMVrk/5Y71ZoZAG9TlsCUlsMAvkbzBxdA6t6cFsewVZxLqSB1E8Sllz\nJW2bQl8qo0QzmeiOD7Pp7/b67YBqJvXU8LgUteZsTy2NT2nKFg7TPOr6HkoNuoj9\ntz20h+jV8b6FVsV0wc5o5JCmL/bhMG1jepTAYGLlLCOLUC2sMXun1zhXwJM/D8RD\nk+Xf4NsQvnryONXp+SOWzuEBbRXmjA+8ub5CSZjDmDv8qaEd97CZZT4D2a94QvcE\nQkZr+u2k+YDY5l2AQLw/KhNJgjQoE/MaRlBAIBLsHOUm1feZv3mtHNeuJYLSoDXt\neWQi+FMC7EMG4Yqf6INT8cwEl/RXKgwnU72FrSPMCL1njXW4luy1YRk9S51XJArs\nUtGtIMeFq+vrr6G8OFsTUxvNrG/oMA==\n=Mm3L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8ee5d2b5845e926f38df4a95bf160831a35ff0d",
          "sha": "b8ee5d2b5845e926f38df4a95bf160831a35ff0d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b8ee5d2b5845e926f38df4a95bf160831a35ff0d"
        }
      ],
      "message": "net_processing: handle ConnectionType::SENSITIVE_RELAY connections\n\nFor connections of type `ConnectionType::SENSITIVE_RELAY`:\n* After receiving VERACK, relay a transaction from the list of locally\n  submitted transactions and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-19T13:40:30Z"
      },
      "sha": "c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE4ZDU0ZTg1MmE5YzRjMGM5NjM3ZjJkYzhhMTY3MzViNTY1YTYzMWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d54e852a9c4c0c9637f2dc8a16735b565a631a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d54e852a9c4c0c9637f2dc8a16735b565a631a",
      "tree": {
        "sha": "e7e5c4188080091c1c77a33f4fda2c63b1bf5a34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7e5c4188080091c1c77a33f4fda2c63b1bf5a34"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e7e5c4188080091c1c77a33f4fda2c63b1bf5a34\nparent c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c\nauthor Vasil Dimov <vd@FreeBSD.org> 1684924340 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808443 +0200\n\nmempool: extend IsUnbroadcastTx() to support wtxid\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsHwACgkQVN8G9ktV\ny78FlCAAptyXHWTGHgch8tvr+GtPcpHTOaFsKBwdUlgYsylU7ff259HiekOcI2P5\nKTWSUvqO5ZGovtf9Uim9H1lmSfhoeyWaUUh0cnRY6B/5ctMnPL7hZxPKuFlTKpHx\n6RKPTDVtdYeXZGNUVRhBoYm0G+io/+Hs2lGXOlyxXY1pWOZEQWMSglpyupktUcO0\nojLUGb+NGoeSJXfEAhkiShtl6WYQ+hsEBCPUlw23/iHWwH82HbfFYx3JH1xO4zPg\nzcJ8GBeRBwc1youlhJZxbpMDh78QFw5mjvcJ83PE/5slhRKH2byxB0sF8NyHnWvX\nLZnqKcyxYmFxl2cdTyJhGokvQ1Z1wpQ1EQ1NVPEgMepypmI85TtEmpzDis7RDG/M\nR/+o9eSGxeX7dHkg/xP2hvxwysnc81EqsZz2LN56RdNZ0g5yFdxkta+tmiqsp0JW\n4sUSBXpKdlC04+01FB4Us5GZvXiJHP7NuHk++pHQvuqXJeQx5eK3aMqVj1AslZ21\nRN6YKL5kj0Tw5DONSPZX1ZFVj7MTLtA7vjah5CpF7IXekS50jadPpIozRa5Leivr\ndZNsEoYWRNnzUM123xwxaYOKYobujhnHtMxpgbQ9eaC/YngXcBhxvqt0hKw4paZi\nn0yqqsz/l7zxqIP2dVIdUgQFqa0e3xjlSa90jZBOnT5aR0hqQaMXVEwzOqvoYwV8\nMVPlX7VozRmutqEbqbMudj26vH5SBXgglwXEhPtIB7iSEaUN8x3zZyHwdm2GcOAo\nDADR02UnkhLFXZTiyJKfl41EGvJUWMt0pmsr0g1SiaMDHV7ll0vBs73I+RflIIn3\ncov28IYkbV0NA/GznrzN+rL/SNDShXioRldg+h2mNRZdBrwKlTya8TNaHm1kCz/o\nSLI8XyD7+i6pKXrJTvmTABguwdj8DLMMakPrT7ATONQj2LYax8/9bbyHfuCUD6ll\nabSofUFxghmcy4LzqeX6tkdNz/53PONXu5ChvI3PmE98DZ3z7K7DOk4ZvWkQsoeQ\nC9Mfqecy+P+GXUZMpV1cvoppl/5+rNDN3Nqvh0I//lXySSGtAuFH1ugOus9373PI\nPKosD+y4anR7vhjjvuBM8mThdphzJLwUyRoyhgLd+DU4VrHPNI8cxglX6IqmWPFq\nA/kK2qqg95YxCR6X+jJ3WL9xjBPJ9YzKgwpyxBxWc0JtWdwZcSZZPdSO2VeFz4GL\n744O2hrjCB7QURSkPyu1VmW+XKiZFRJcR+vQvoEcuMOZOPvMHdF4i3NlxpOHtQld\nPUARAgTGQ58HHjITwJeL38Y8/xCgNMJEi5VFRd1dfSCNUkEa6pQSLci2NEdeiFEk\nlCxjfAzdY4Jr5yN0ECJYiwGV50bQ+A==\n=f8i9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c",
          "sha": "c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a3eeb47700ffbc36f3a8fa415cb36aaed96f0c"
        }
      ],
      "message": "mempool: extend IsUnbroadcastTx() to support wtxid",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T10:32:20Z"
      },
      "sha": "a8d54e852a9c4c0c9637f2dc8a16735b565a631a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlOTY2Y2I5MzE1NzY1N2U2YWIzZDNiYzgwNDc0NzBhNmUxZTA3YjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e966cb93157657e6ab3d3bc8047470a6e1e07b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e966cb93157657e6ab3d3bc8047470a6e1e07b2",
      "tree": {
        "sha": "9f9b8b0ad1ec9506fbffdf60a672acbf37b9d566",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f9b8b0ad1ec9506fbffdf60a672acbf37b9d566"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9f9b8b0ad1ec9506fbffdf60a672acbf37b9d566\nparent a8d54e852a9c4c0c9637f2dc8a16735b565a631a\nauthor Vasil Dimov <vd@FreeBSD.org> 1685366544 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808444 +0200\n\nnet_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsHwACgkQVN8G9ktV\ny78CZiAAmTKL7zxuYiiq6pgAy+J3JCjarKK6GbCYqUqN62eM1rujKoFnebUGg0Ep\niGD+KKQmAOYbkQzIS5fM/jEzMPD9sfCjgQBmsFOx5oIdWmQdcRuW6cfmvaTVsSga\norfT7zOu8G7eXWuezL4uxmhzgn2lmS1TST9+oANAnXycTfWqlWWfYcvB+Le/CQ0R\nVcu0eLtfA0nfP4bu97NWt7AC6THLKNa0ADwYfW2k3ZSa77vk0F7COHfyH4VYYyII\nuY5uR+m8BYAadnkU/YWPVR90PowQIvNbFdg47yGqKB4uREYBR7FIY6N3IqHSY+GM\ni1eVisMBWbLg6ORxcnXh3Po8YkTxmnHmJlND1DmuZeHFc0NEzNCoxe4yI4jZa2FY\nBoilDqxBWBbgjOsTST0hcWM4T2lxu9cLaDUqwJs7JX7u5oLWtnfY/kVtkF50uARV\nfjgTJIWvIfo2SS4JbqQoigOZdxeImoT9Jq0n/WRfdNjd9u7PozWj3S73Imw+P877\numT8a7Z5Sj20aBjO4lyuauX4U/cY/qpvv0pHPATBPFx79pFU6DK4DDBDekCUs33f\nxFrUvPJ+woYXHxCz15zjN4/DEsNbaDg7bgOxPgP83eFDH2qV9p+XlSj+2a+l7Y6M\nUcabRko2odpYTEwMAL6NdNmwu05rEvbiLjkJB/J9AzPRR2WW4UQ5OVpz1wnUePaz\njC8mJharpcFskD/wNoJQwrYpcTHNlggbO6SysR0H4czoTaicSLhLxb4P+iF7ylgI\nOQrcuLeUw8cbjKeH6f3p0MWX5Clm0uQtC9zvYvmybqMP1gyimPX0okTni2Mw0zDq\nXgSoQgGnKtMKXbK1nA3fjHVzuXxT09nWp1qqAEHCK28yXcavlHGyPGToYNxN6HX4\nEQaXt+PFFnPVGVRyiD+qP9J5h/Gwqe5CGIiPCZv07Tk505Zr1LxfwoTiuNOpqln3\n/y5hJL5FU6JTXNfDwVAxyYOrLNvjk38xBK0eql8TAnlM/wvrncT91A2v8AEWzNfm\nJ5gnOawc6cauAPZk0DNKgZ0Zra2AZbaBa5t+DvOU8tuREJwanISgR/AX6YXxr5IS\njck3IC83d6pvJqbERDeHRbOww+GPicr8H5bIkFwuq7AmkeUSu1o5/Rr6KwA51VqF\nqbmSf0kpRqHMw7gJXkAjbX/xiWvfXyUP+oMA5HaWbxPp4fsyr4q7M0fwrQpBKrO9\nkxY9r9Egcws9bDwI4pUkNkLfrg9+u14FP53lImNx5Z03o31esyeo1fejLqk+3146\nb8pLZe4XhCVkrZC5KlRcxzYgNTosabsG+m5nTnmbj/XITUjN3Mew6WI2BfYUA3p2\nIwn8/7tXwtK1/fCS5TXoR0pZGzYGWg==\n=fKip\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d54e852a9c4c0c9637f2dc8a16735b565a631a",
          "sha": "a8d54e852a9c4c0c9637f2dc8a16735b565a631a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d54e852a9c4c0c9637f2dc8a16735b565a631a"
        }
      ],
      "message": "net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-29T13:22:24Z"
      },
      "sha": "5e966cb93157657e6ab3d3bc8047470a6e1e07b2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5NDNjMjE4NDMyYTBiZmUxNGFjZDM2MzU5YmFkNmExMGE4MjE4ZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f943c218432a0bfe14acd36359bad6a10a8218e5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f943c218432a0bfe14acd36359bad6a10a8218e5",
      "tree": {
        "sha": "2dbbdd2513d6871ea5064b07e7cf6e450ff80844",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dbbdd2513d6871ea5064b07e7cf6e450ff80844"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2dbbdd2513d6871ea5064b07e7cf6e450ff80844\nparent 5e966cb93157657e6ab3d3bc8047470a6e1e07b2\nauthor Vasil Dimov <vd@FreeBSD.org> 1681921858 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808445 +0200\n\nnet_processing: relay local transactions via the SENSITIVE_RELAY mechanism\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsH0ACgkQVN8G9ktV\ny79HeSAAmzvC1EO1o2OPCyZp+CwW1Dv7qyDCrKw0eSP+LOm4k+7xYq9sCkMtSd9v\nWwanxqaC1RiyuIeHwhGgWwfxfcplXZmaKPM9WngMb5Jt0ayt/dzOmOqLRGz5XA8b\nZ6Tjvh0E0t45kcm4P3I0UbIp0eEwMhvuDG1wGKH+zTntf9gmMQthB+2PAdHeVKMF\nuKUYI1/fZwbkcWDWar15w6SkdR6uee47+07Uy1hQKnk22YRzQqn6EEc4Glxvm0KQ\npsFo6YTL3DnKC2mAfLVFupODdhyTgOY9t8vnD/gtoktjAQ8I3gwP0/+WG//Ln8x1\nk0MgliOx0K16o2WX+1jFGGFUAmnqqgJXlDUxt4O/x8258XHbVwFVMZdot6AsMSl8\nFv/miw8WEfAzgoqwIHdw7mGJtO/E4DHiOne9WyMMY19aR//62bCL/uz3ndUoQX78\n/FzTNVpaJDLKe8WqY+E8mH31FYXF346ZmVm20SFLnvVCoTlhdg84JQv942JGrWCo\nL8U6nIt3W9lEeje5eQM9IY2HFjSxFAekv6UmNT15soyqmuBdI+ryc1L1q2XZ+90A\nWjW14U6kcvwUE5fUYVHdtjqCEWdUgWKlhgrtvm4h5KqVeCtj/9ZzvJt6L1dOQzXH\nr1Amvxbeo8rITh3KbCAlSw7zrDNQjspjbdx8yoyhUqi5UZ2kb8lUry3UmIcT8Rx6\nWqc+QhbISQ2uFyZXwaM0O6deQYxFuT+nHiMXNpwhCxRyWYXj8TGQjrFe0yTOWATG\nf6JRncp6Xmw49JGzLMJH7H+TU4LiAKlhllyA2HlqwztAinhKw8QJzQaYrIJV+Xjx\n3eXHPvJsew9ndqXqt4353zfE1t/HMFoziHenqENU37VdJ3f157YjTXIox1JOzq1i\nyTd4Xpu5GSikpsMGc352Jw1R+nygrmeZHC4fqy4f2mJqUXaOOtqd22RkQttB3cVk\nRkHgw8Qoqn0BIv2iYluUjEktskyIIsDNt0sMV4s1rVYV8fwxcXitUXFlvzv92S4v\nsKPIw7djZ9mFMrDvPc5hxRbBr22KRbSn1/dWHoR7dl9uFz8pQ5E+opLq8QByVpMW\nuG2S3veOgOKa0DxZ9AlivEtYnssbbEP6DiEcAIX8HeQ7Ow0zq95AV+4IAZqvAHK6\nMAdTMFEVnz6BgO6KkHFY64HrDoN2oO4MGDjt3hi5rID6ENLl6S8gw82s38BEZ1I6\nU6bEHeXk/m5lLOTDBZrKgM5wPffEVIGQ6gF0YXI6bbErm/57U418xoPYHPqpToPe\n370CS/Mo25qzX+XH7zLS1CCQExgUv1K2sQCbLoUEoIT6/zGkmNngdh9rbUWGq4KK\nCvTPz5iSJMZvrlZvBl6kAbLpUNDtUA==\n=u+Vb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e966cb93157657e6ab3d3bc8047470a6e1e07b2",
          "sha": "5e966cb93157657e6ab3d3bc8047470a6e1e07b2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e966cb93157657e6ab3d3bc8047470a6e1e07b2"
        }
      ],
      "message": "net_processing: relay local transactions via the SENSITIVE_RELAY mechanism",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-19T16:30:58Z"
      },
      "sha": "f943c218432a0bfe14acd36359bad6a10a8218e5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4N2UwODg4NjJhZmY0MmMxNTFhMGI5MDY5YWViYzM2OTBlYzIzM2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f87e088862aff42c151a0b9069aebc3690ec233d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f87e088862aff42c151a0b9069aebc3690ec233d",
      "tree": {
        "sha": "9ee71dcdfd03bd3c1763536590349cec739238ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ee71dcdfd03bd3c1763536590349cec739238ca"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9ee71dcdfd03bd3c1763536590349cec739238ca\nparent f943c218432a0bfe14acd36359bad6a10a8218e5\nauthor Vasil Dimov <vd@FreeBSD.org> 1684924434 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808445 +0200\n\nmempool: return whether the tx was removed from RemoveUnbroadcastTx()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsH4ACgkQVN8G9ktV\ny7+euh/+PK6hL7kDgk5BDMDbKWZzBJ9BFcBBydu5wlJI6gbj/uAa9Sggl1yo0L2s\nFE3ZH9QCo2MIFklfl+kUDZuIw3Cgt89e4z+u91uWiwOtag500wwCUXdI+A4SXnCB\n5EeeztJAi8WmpoAR+vXLAjpBwcPqsultdQoiNEixsftvXQljC/fbyE1VzD9BeSZX\ne3sBL2RMRurQ6nQAu3xf1xtahR/8luNdHkdwRpZmPgosqyrFtoqlz69dNb0isdlT\nsGV3+Zy5JoyTW2uJBjyxblCG8WIVh3u+/rlkntGFtyGi4Ag0dWl2KQMIn1jWnQP/\nTkbfVr9T2M2ruYgZRVsYlbfHELdOr7cXzw3bL+O0cWWo7Ap2mh57AACFUeGUlzht\nFX/TsTa2Ppj6EMQXlsRPivWHhxnChNtU2lhgD9HQG/8wsTu4vyjG5NCTOFxfBN6e\nNYFxX67Kge6m1mPjQlTWyb0mL4WUeaxaSevFGGs1nIBnmyDmUAat/pECLU56U0r0\n1BVzTggbRHVnW39khjeFRBLpFpMXD5TNpSmE7icu3Ek9h0Txahhge60VUFPY/BL/\nOd/4lJeRBJmG5aAjBMPFFZB7xHKwI4gwCA6FNFGPGw78LSxFaUjiy0JpVYF0kVJo\nAkf43olSjESNyioc2SGp7FUJDFQiwCbfTPxUEu5+nEpOIlkaJFuQ9WLV1jekGp57\nQfzMEPQQUfVtMB2dEmlnR6WOh2Bun/Fqu5EkRzx4Ood0HT296br8XG4Cr+RTVCSo\nxt2nH9ZyyVUf1xbWw5qE0GlMXrO3MEkNz1du+GjEkXd4VEt7CJyVH4enJxW4gvad\nWqCHd88Q3djVh9wYxb/9MBwKt7F9h7bS+EHxqyGpbx9y/lskuCvtDh5RiZZyIMwg\nez2vBEqOHJV4M6b2abDa3YevZsDLepXXX1Hv82cdjawtE2hbOuqz7zdXbSvJj0yA\nBFQtGCDKcio4RWS8Ebkbp9+Xb70BlycmCse2/p7UTs0OPy13VtxpI9LSTzxcP2s0\nzIVaej7+jyGH7+pLSWuetDoGOgFEqjXWpgjq2cWKFViXLLM/vKpDsuvzBJDxbZwK\nIg9ZqG+r6pVTHupLHVfxPV2bYcqZtrWONCKUEJviIN0qE7EHdEOS/blwOqD6cSzB\nY+HkfeAC21JAqWGQvvO+aaINvKvgp7V/ItzVHzqJhJpJXWsZ9JzmbUzPJ5L0CEEY\ne+C0cww0yyM+R0TeJ74mxT8p69ZFTY7w9mf49rs8f3DyeRCHvbPUEroHwlWVqpKR\n+PD5LS3SJUYtXFp14V4n1q51VznHf55Eeoq/XOxSz6ZnFoEAv8A0S8gkCdSFOVVs\nv/PGb9qeThCKi/av92LrUxHs4oJ/4g==\n=TA8S\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f943c218432a0bfe14acd36359bad6a10a8218e5",
          "sha": "f943c218432a0bfe14acd36359bad6a10a8218e5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f943c218432a0bfe14acd36359bad6a10a8218e5"
        }
      ],
      "message": "mempool: return whether the tx was removed from RemoveUnbroadcastTx()",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T10:33:54Z"
      },
      "sha": "f87e088862aff42c151a0b9069aebc3690ec233d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwZmVlOWU4MzlkZGRmMGZhNWJjNjRiYzRmMGZjMmUyZGU3ZTVjMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19",
      "tree": {
        "sha": "09b7d9c2f87af675f7b7762353c1dcbbd4d827b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09b7d9c2f87af675f7b7762353c1dcbbd4d827b6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 09b7d9c2f87af675f7b7762353c1dcbbd4d827b6\nparent f87e088862aff42c151a0b9069aebc3690ec233d\nauthor Vasil Dimov <vd@FreeBSD.org> 1684499533 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808446 +0200\n\nnet_processing: improve own-tx-received-by-the-network assumption\n\nThis applies only if sensitive relay is used.\n\nBefore this change, we would consider a local transaction relayed\nsuccessfully to the network right after we push it to a peer (when\n`PushMessage()` returns, we still have not even sent it to the peer\nyet).\n\nInstead wait for somebody to send us `INV` about that transaction,\nthen retrieve it with `GETDATA` (as if we don't have it already) and\nonly after receiving it, consider it relayed. This is a better\nindication that the peer we sent it to has successfully received it,\nnot blackholed it and the transaction has propagated to the network.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsH4ACgkQVN8G9ktV\ny78l/x//XcjqpUVxqxDPZS8bY4Vj/BzF2dDUB608DP9hjm28tlsGMYzHow/mBxSq\nu88JbbCq6AeHsczhjhBNPFT76nKT6lRFgqsuefflfDasL6PQuAroy5M5Qlo2P+5S\np2oH9hTM72n3qnJlVz3VBPImqDOWuyxbNGAU4v3EB3CR71YlF5MZFvMz3dDEjE23\nEMlQaBl1n91wViok/cm31mIK/upLaQz3j+54NNKQYOi8o6JMi/5jKqrHzmNin69K\nDev3dhducx2xL02u15yUuwRBUpxib9woOuKfzYANHG4ARCRkIXi/APKOebcumIZJ\nDsa4Tytj1nzZXf9CfLSUhMxEa5tlQSKSxNXLUQHWR3n/nFHTkDCYhXsD/G85ENgG\nmNj7mk8bjmxqf0QqI0/LUnVtSJp/etwVqc9A1IGB7jB5XzqnPrXfNTgI4x9y8har\n535Pzjl/ULeQYWE624loOrD20uN8NrGnRCA/aA6z9j+HtsSlX5dOZx1za7RI8nUU\n6ob2ZU4qgeIUNWffIHWi52LYb5Oj3P3qPkJ+fwuWQJRXpLn+qY/NW04adA8W/8BU\nBEXhuE+qE1VgmRS2K4sBr/4yXQ/H8hHanKagFSjMbUpQgSAuGkB2vs5TXrrHLrnL\nRegxyM/UiNK0Ugwa4is5DFCZiyidx6f79Nad3IgQTpBI5SDNMLOCJ3Jor+NQiEPP\n7FR8TIPN4/SGaD0SDhvhOQJPnnCI+9x8i5EwtxF1VbtWP7d4eRKdAT4w8yT+SH8W\nmYCSACmNMadj2ZSVI4LAcQOCynmvAOWEZlzd61qh/pKCD1KS30+75Qk/2zFQdYuS\n8ZqbEbF7oMSxosPltyv4PCRjQPDqUI2Oyd37ZpIRv7ZaRZHIg1YymuELq7YIVB56\nCeyUpBC6IMkU0bb7hqOJoMj+wnU406Hwr/sAsPlepUxtuvclCSy8C1CNS3ITAqK/\nYZFewvjwwe77PPINRKHCnHpaxvFKUC8jOwWstc0gT0IcpaQmnRud8WuTSi05WCpM\niLdkyqFqYn2rePRr5jKcI+2ZAaQLQV5wv6YOZArhb+H3vsEOh0Hl1iqymy6gE9ct\n5u1sa36//zvXALS1wHUG0dE1VDs2JBV8U00iplU/3+X3iVfbDKNMdA8KvxJV3yzl\nPeSNIyTo1IAb8MEKsyTJtX50QHijmPJwavN89JO8HhEOP7ENradh32m0xaFnGOKN\nGl192nnxdSZ7gNqOr2e5im/2xcPgXLPaBHeGGsSS0T0GVt7YG+YWrIddxRmXNmOV\nnQDM3XR+OoFzHRKr9K9OwFK1GuvnXrf3qSWos7yuhy0VIhrgv+/gT/82Pi38hct1\nHLRd1PvB3pfw+apdz3nbnvlZl3Zwhw==\n=hqsP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f87e088862aff42c151a0b9069aebc3690ec233d",
          "sha": "f87e088862aff42c151a0b9069aebc3690ec233d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f87e088862aff42c151a0b9069aebc3690ec233d"
        }
      ],
      "message": "net_processing: improve own-tx-received-by-the-network assumption\n\nThis applies only if sensitive relay is used.\n\nBefore this change, we would consider a local transaction relayed\nsuccessfully to the network right after we push it to a peer (when\n`PushMessage()` returns, we still have not even sent it to the peer\nyet).\n\nInstead wait for somebody to send us `INV` about that transaction,\nthen retrieve it with `GETDATA` (as if we don't have it already) and\nonly after receiving it, consider it relayed. This is a better\nindication that the peer we sent it to has successfully received it,\nnot blackholed it and the transaction has propagated to the network.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:46Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-19T12:32:13Z"
      },
      "sha": "90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMmMyMzgxYTEyNGI3Nzg3YjI2ZDQwZmFlNjZlZGQ3YTllYzk1Zjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2c2381a124b7787b26d40fae66edd7a9ec95f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2c2381a124b7787b26d40fae66edd7a9ec95f8",
      "tree": {
        "sha": "b8285682f764767cf6b9e8c509942dbbc02b2f6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8285682f764767cf6b9e8c509942dbbc02b2f6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8285682f764767cf6b9e8c509942dbbc02b2f6c\nparent 90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19\nauthor Vasil Dimov <vd@FreeBSD.org> 1684335182 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808446 +0200\n\ntest: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsH8ACgkQVN8G9ktV\ny79F5iAAgdHf6ukg/KG/xSCiAfCo+ekWL5NNlOiPtC8fmbNpA98+eDePYmzkMm81\nuLgtE1jC1qc5qmN0fopqHPwfh97j8Rh2zDClEPpRX5atVzjTf+2jXEKA/vpVul58\ngmgn6oj8Jw+BlYH3ywtAPXrefAj7oW6846F/m8n1E8UOKrzTSgwAvSw4o0dB6zPc\n2XLowloNavArvF0SxJxaEgGli4pP0XOHpb1XJ6AWIEaPDVCZU2eWx4XkiucD0G7T\ne2P43ZKxqSOmy1UXNOKEW9YhW9RnabRONZKIbxR25OewhGugiY9eLJDyL329yW84\npS3zN18wtbm8xCzukW8ku499lkRSWt23cxQZt/73lhy0Q6CnbkczdBxQQ3rF1/Y9\nxK54u2T4dDdUxV82QyMy6dAEibNAfTvgrsLUstIo/tQqzTwvqvPZ24ZohvH4iT1i\n257LfMcPkW0k7lHouKrGb3atDWce1PoWT9ghdxVyfWlrItdcHwti5qWVZspbQg0P\nXou/mP8NKOSQBs+PPQZN7BXWs3b6RUoYzTCF1mXIiI60jQomzDmkZ0xoRWhlywMG\nTOq42GhFFqaseUwnow6bckkd4ZdIREXHY9MCy9XNeQBVz/jcovSq7oWH9XvaG6wI\nYSugPBSAA6Qn7+CVZNV19w6bi5vUzVYD7HBMEMwVZq8KFMCHRLmaxnWkJzG/vZr6\nCseESVecz/t7B9OK7T3aq989KaJS5PcTXUfkKDLzdg9q29XnczcjLUTImKlryivE\ngQUDKNfpjxLMF7I38EVB71F3XZDsSwRnk3DFeMYO98+l27IfBZ7eY2tErfsXwD1J\nI6ogLKy21hydogWGG9ydjbvw5VkD5wtqilMeRTWIqpEYBnWLCY058h0lvYCClamm\neo9Ma3LovM2i74Vcxzhl5wkV9qBz62lF6zpl2MrZtUTYvY/Nht0FCWAduf70x0Qq\n/oFRViYNk5t4QWZ6Ie5adFQu8ESXQKJKVSJmPubRUmNuMS+i0XcKP5OpHD3Hht3D\np8ivKQZdlfgKt7FfS3gLp6b9WFyl4Xh6FnTZnzNBrApAnFFb378dEdRxxsMUJqx4\nTPj66c2dg8osctQP2UJZcz1VZC24aqKyfwYq8dbD86WTRd4GRWP1YxNVySV2ESCv\njnYrcpTfjs5m974v4gfsXu/Ri5UKnEPxPym7N3bkF2oGDoxqqcuxS2P47ylDhjq2\nyVOyTkliwR4tYIsFFlvFnH84/r6FWFCtyc61AGwFO/wnHaUGT+p29kxEuXJ4tWKI\nzot6TFix1uCuwmaZJT5xReCqw8Llxw96EBJu5zlm/Zrtzfg9fftFUN/kbt0H77yN\nry8OXYNBnE1MiC0Sh5VZfLZJ+aclBQ==\n=LnDU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19",
          "sha": "90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/90fee9e839dddf0fa5bc64bc4f0fc2e2de7e5c19"
        }
      ],
      "message": "test: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:46Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T14:53:02Z"
      },
      "sha": "fa2c2381a124b7787b26d40fae66edd7a9ec95f8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1ZjRkY2IyZmFlOTM2MGVjMDU4MjQyM2U5NjRhZTFjNzA3ZDk1N2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45f4dcb2fae9360ec0582423e964ae1c707d957f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/45f4dcb2fae9360ec0582423e964ae1c707d957f",
      "tree": {
        "sha": "0158efd7fbd2b0c628c1b79c3cdc4559135924b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0158efd7fbd2b0c628c1b79c3cdc4559135924b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0158efd7fbd2b0c628c1b79c3cdc4559135924b1\nparent fa2c2381a124b7787b26d40fae66edd7a9ec95f8\nauthor Vasil Dimov <vd@FreeBSD.org> 1684492282 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808447 +0200\n\ntest: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsH8ACgkQVN8G9ktV\ny7+FKx//cnXirJo7JPVKfD9twH4UNk3v6NTrP+MoSUb6SHtAN1TOb37sWCN1R9U/\nwLZxuBcXMZSlxFj3+WNQgzjNchD6jzTpV5XeNGvtXMKKIwXOXQ44FXLnom7CQ+Jj\nwoNlSBacM2cRjd4wgatbMPAyBJ+I79LUDqAag0Bs3kwrJKksQg+CjOckhdAaMStb\n3N5WXtPu7vo/KllHipAsyyC7YMNWeSQZMskwNt5pUnXDrelbY4pLTcA4p2X6Xv9v\n/QKRcWBMcskK+xY+DY18dU3e8B0WOaVdLKGRjRrdFx7zCchZol+kpbhlgWHsF31c\nUBYTXAVBUnQs1tdxv+/7qEXb5r9eywJCdvCVU9y5YsogTLajJEiNL4YWfnH132qX\n77Vydr1yKt1wlSmhdeUSHEsqXm37lJGrihFsUQoL5Mkh8r189hW5r7NytQ/FhBQx\nD9QMlaBpqX/2dfzMErFTypRQtU0PZIOZ33OAwXLdfo4x/5RpLcBwDWk9bUNvI28I\nOSGb1U87XR4Z3RZuc5lIn5hPUeJLqQXqf1g+55VRtDsDPBRMCeVsww0DzBtt+v0p\nQe3XkyE970xufJHKexM/NV3VVp0uTFEIRuvAUSdLvz/WC2nYvmtKqhm5SL6TlJWK\n9ganbGdHfhpqzAxrMhqijML/t42fdTiCNFy4ep3QT/eM4x4YFiZ+j03ys6F39t8R\ng5cneCexbp61mku4AmPTIN2W6N9WpgutHhVWjtm++9DOCTV86WhPu1MCSyu9CoO4\nT1FZe78Now8OER578OGL5IaEXdItnzgRGq1YOwOdDQe9gDh/30isCo94SO2Ej/93\nn6uaSQ8ghbOvb/RXctT9IGt1jmAxJm+H2ysufZnWNYs1wfnzYDKPj5/q3miO1eW+\ny3GdC6yB0kUE7vwKrxGR1WhFfmMI5+awC2dW+XjnXNzczmd7/Hgbbn3T8K2l18v2\nfmNRohgZ6PGp3N4kQvZWy2lVgl6E3B/WkOoqo6NSHm7dvBvuTT6XppFw+N2pQz3g\nqqEqTG2d8gM0HEjiDCa0eolKfB/FfNqIDVBrcyykbv69G5OTvqS3hXSUeJivBUAQ\nuyBggA1zUDiPuprVp5urDKuSmxLgXqwfxhNzMv2x9QGHfeMG+D4CbQw0Cralz8v7\nMUqnwuUL+CNzc+YnXMh69rCwU6iskcyOJqhR065VEa+m6oZ63/Tuz98J7MxpvWJF\nt3Qo6KbN1MhI8pGh5sbxuersnqc7xii+v0IUqu5bp5ZIqzJJgXxXg7E71g5r70r6\nLZrN445VH9YMvwXnK8pOxKWFUseQZlOT9na+tM8+Ig9F2z04XkMTET0SyX/Uflin\n91bnn+s7qPUPONc13U+IsKcYcK/fXg==\n=IOPr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2c2381a124b7787b26d40fae66edd7a9ec95f8",
          "sha": "fa2c2381a124b7787b26d40fae66edd7a9ec95f8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2c2381a124b7787b26d40fae66edd7a9ec95f8"
        }
      ],
      "message": "test: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:47Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-19T10:31:22Z"
      },
      "sha": "45f4dcb2fae9360ec0582423e964ae1c707d957f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyNDcxYjI0NTlmMmNhNWIxOTRkOGM0YmE3YmMzYjI4NmM4YzNiZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef",
      "tree": {
        "sha": "254b7924163ca1b41a27cdee4f0bd069606a2f88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/254b7924163ca1b41a27cdee4f0bd069606a2f88"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 254b7924163ca1b41a27cdee4f0bd069606a2f88\nparent 45f4dcb2fae9360ec0582423e964ae1c707d957f\nauthor Vasil Dimov <vd@FreeBSD.org> 1684910097 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808447 +0200\n\ntest: support WTX INVs from P2PDataStore and fix a comment\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsIAACgkQVN8G9ktV\ny7+bNh/9Ezla+GxMneM65hRmWqFCHkLhJHM4biCG58nrqGB4G4XeSWR3xvfHGUvG\nf9IF/1nLSVgjsN67u579PASZqVAlI8bGPFFxWTOMoNiOk2AaWvT6vFCqO5apDTFI\nEahrrbzXa4cunxjcgdh97tKNHQgT6lOizXxiEExHDK3YwvjbZzPhxq7ncUZaiFgT\n3Zv/bHpeTNWiguI3wSARIoykozjycUwR5ZNqbD3K81DGX2MnInkVV1nXoOMMe12g\nEL258IN+v3U0zyyJyB7Qf7Q1PosPTZ1R4PE24yJae+kohqq6514kHokL4eMM18RK\nO4GOsDOoNeWUoWjTF5joOBqcQqGVqIlS3livP9DxiemYv9a+bXvtZe4ktOB5ETJ+\nHKivJhnaqTFZ4m9yN3FOoeeaDIZYP4ozmHODvnak3QqDWAsT6ImXBkhzukEjs1zg\nZsafaTeFkapOggjNYrgAuzsB0Q9t7rY4eUIXex7YEswIUe2UfpKhjWzlINTd6Bl5\nYFVvrvUmLb/5qvK8wsAQYKGx+jWc20ijXLUo+2yXNEP3Vr4GExoCo67I2qh9oDZ2\nhZ0UlR5rcHwGJvKZr3zlo2RHoQ0mshT1hoXhzwE8WySfADbKrTDgI0fY/67ItHme\nPznpYP3q4ERGFUyIJhFjNz/Y1AlXZba2vU7Plc4Uv/+DMEM0FUzNroDGSvCByq4Z\nhX1Vzc2eLlxVi6gCeCWBdHFOKgYi5szrDoyM9so62sy/hSZF+ZQd3uhMtqNeoibt\nDg7NVV4zuaqNJ811Tm2nkaiumQqW4j6jf6Bh4fRE49ez/7p6IJ0TPjZHZeUbp70y\nJboY7pBj7YNdIHbaAtTe03bpqOeWLHOiLMiAMHC4uIT9ZVmkmaQ37BvJnIiB+yR2\n4R0uaOe5dvqfhvdZ99Pl/jPFXWVBBlC17ih7DjQZiHHtGGjn0xzuh/47UE/e3B5C\nslw5suyr/C/AjG51xxhGEzf/htQKa5dp/iiGtb/WMYOzuzuKZihTo4TGSBJFFXuz\n2PpYI8aJG0XyZiEUaTrSTgzsjBCzjk8VT6fIciKEKYTaKKM7CPtwALY9oGARjOKa\nxe+6cz1mxuINj/UVTVCbue7MhIea/NcAG3XQbYk27jGcQDLiaUtdWM4A9vREIG+J\n0I6pEhZt/dCvjCGzGpY6oKWrmLO4d5Yh4B8hbl6swo/8Ea1iaaQYaJW5bwihAfuY\nx7TIIMAbckgYjxfev/ppwEexbEnLXeOfCvxFZaVzC2ljRue4tFa2yGB9pzPD8K4z\neEpjz1Vc0cU/IxDp2oM0cblIGLC+qf19/ZbiQwsDH3Is9J0OZb5zfbncM6TLCr9S\nqZMLH8aK/ewGFODAdZoVRZa+Cu2K+w==\n=vfur\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45f4dcb2fae9360ec0582423e964ae1c707d957f",
          "sha": "45f4dcb2fae9360ec0582423e964ae1c707d957f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/45f4dcb2fae9360ec0582423e964ae1c707d957f"
        }
      ],
      "message": "test: support WTX INVs from P2PDataStore and fix a comment",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:47Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T06:34:57Z"
      },
      "sha": "42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1NDFmMDk0MzkwOTllYzNlNzNmN2M1YTEyZjgwOWYxOTBlNmFmMWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "tree": {
        "sha": "d8c4ccee83097b8a7b16851979eb53150fde7a8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8c4ccee83097b8a7b16851979eb53150fde7a8d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d8c4ccee83097b8a7b16851979eb53150fde7a8d\nparent 42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef\nauthor Vasil Dimov <vd@FreeBSD.org> 1684336789 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690808448 +0200\n\ntest: add functional test for local tx relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTHsIEACgkQVN8G9ktV\ny79IjyAAmlwNxfKO6grkkSwpyUDP3WxYAZfLWY0zbDJHTZ4k9I6XPsY8qLu80Voo\nWsgLrbakapMTEABhQ1JzjXlLSqzD1r00oOMCBr9zYAMbaMrSvmVAnYysFpsuZ8hZ\nBreZD+AkGBEtlIv/rzVl0GcbT54zVIIaoSCfnZ9wQqNpY7aacqqEnH1l3V+MQ7fL\nwNykNkxFMXNws1OGqq67ckl99Zmx7HKlFSSXoE2P3C7Q2oy3iMaemNC/IK12XukO\nXVikXNeeO4fpt+xjfmBfOC/30AaYq3wC+oDne6QwP8GoHHVmA1/DwmE2VZnZt41t\nB721MBdTs1jq6YpoXrMsmek8iCgBMaOSxTZSauhS0CgtiG8c8vHoasJAc3rkmBB9\nyDEcSvxXYwfacRrbzufyjL5/6cOEaXlmnk00OsYvSiZP5M9+f55me0H5O0pAHpd1\nvJ+QMCf6kCTcDJG35WW8H5AkrTIJF1qxEpKzz7PaVxd4uxP2ry3D+2pgpVtJVb8u\nM1orahhNBV/aTHIfLE6/r3DzJYZByx7p8Nq18kCT2IZcroSpwR/MIhxhpZUQ6Oqu\nli5VyXHC8aFYcSpEnP6ghned+656+9b0TkwLiM+l1zvsyidwidOXl1AvxPbL8GLY\nSWWUYKHP98jguo7DoJ8X9Y4sO7SQbbrKlima3KXVVIw0KIeZm2dG3ZEW4oDZWOX4\n3vuLXSbBIJju0OrwMs8BcmABVZAqgMvgMxDPTJwIapycM6lNEp2MrRNlqgCTGbbz\noC5KDqhgvHMtpZluIgFu4Z/JYcXlX2ZN/RmgC/CyDJKe4Tm4wGiQP130pYgnpz3H\nNCS+KDIWhZ59QctxC3fPeC+SxKjG6KLjmRXaE+ZjD7OqHdwcgFQAlSncGbh6LziE\nvVWCcQxOKH6+7maSPaRF8fC4nE9USYvazBPP5Z2Y4ak6VnozNcF32VO6x9Ojpbom\nD7MtZBboTZ/1HALF0f2uIKAOVRqWtZx5fJegtVxwoYxAXEGlieLUFl+PQMKiy9S9\nKCXoN6aGBXaUJXeSSRefu9FKwbWJOeKgOPxibbLPVDsn6NbQZU+BTCXMRmjTk2aM\nlvdN0+4EoV+MMfzMsCYXbHaGv36dB8Scq9ynRdxObQ9+UH082D7XFHq3sTb5Ip3q\nqKTRZBPfVI9oppFT4eDZE+cHsKd73NKL1Tufzsunq5IiPohVc6EU1hpHHng67B2b\ndJkiGuhbMTgz3Ldy5SEiDYwftHyu82Gq+DEPf+Qq7wy+PfbWGpreKwy7yudlyNSG\n8P4EVguAOZih4+bwvKHBjcvyJiPAxMaAFBgVeg8Rs6zFDvWE1U6a8XoZdvfa5hYF\nOfDaShX2MbJgdeWsNK0rEfZmpRDdPg==\n=hJ1X\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef",
          "sha": "42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42471b2459f2ca5b194d8c4ba7bc3b286c8c3bef"
        }
      ],
      "message": "test: add functional test for local tx relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-07-31T13:00:48Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T15:19:49Z"
      },
      "sha": "2541f09439099ec3e73f7c5a12f809f190e6af1d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9963662743,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJR4W2X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9963662743",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T13:02:17Z"
    },
    {
      "event": "commented",
      "id": 1658332910,
      "node_id": "IC_kwDOABII585i2Cbu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658332910",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T13:02:49Z",
      "updated_at": "2023-07-31T13:02:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "`7a3206dc8e...2541f09439`: add a comment wrt https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276240357",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1658332910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "unlabeled",
      "id": 9965280841,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAJR-h5J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9965280841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T15:08:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1555409244,
      "node_id": "PRR_kwDOABII585ctalc",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review re-ACK 2541f09439099ec3e73f7c5a12f809f190e6af1d\r\n\r\nconfirmed changes since last ack were rebase and small review comments addressed. Found a typo, and played with the feature on signet (longer report about that to follow)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1555409244",
      "submitted_at": "2023-07-31T18:54:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1659008138,
      "node_id": "IC_kwDOABII585i4nSK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659008138",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T19:30:03Z",
      "updated_at": "2023-07-31T19:44:52Z",
      "author_association": "MEMBER",
      "body": "Ran with this feature on signet and found a few unexpected behaviors:\r\n\r\n1. `-sensitiverelay=1` and `-onlynet=ipv4` should probably throw an init error. In this configuration, sensitive stuff seems to be ignored and new wallet TXs are relayed via ipv4 peers like normal. Is \"only use tor for sensitive relay\" a possible configuration?\r\n\r\n2. Rapidly sending multiple transactions `\"...incremented the number of connections to open from 20 to 25...\"` this number grows rapidly and decreases slowly (especially on signet) I wonder if it should max out at some point or reduce the tx:relay-peer ratio from 5:1 to just 1:1\r\n\r\n3. Restarting the node and reloading the wallet logged messages about pushing the unbroadcast TXs to the mempool, but I do not think any sensitive-relay connections were triggered to deliver those. Eventually I tried sending another new TX and then, even though only 5 sensitive connections were being opened for that one new TX, over time those connections were used for some of the backlog (\"pretending peer requested tx...\"). Until the 5 sensitive connections dropped down to 0. **update: eventually `ReattemptInitialBroadcast` triggered and the backlog increased the count to 100 sensitive connections \r\n\r\n4. Finally, on signet I never got an INV for one of my own txs back. so `getmempoolinfo : unbroadcastcount` only ever increased. I notice that the tests only use python `P2PInterface()`'s for peers and the `observer_outbound` peer and is manually forced to inv our txid... makes me wonder if real bitcoind peers have different enough relay behavior that it doesnt work as well in production. For example, we pretend our sensitive relay peers requested a tx when they didn't. Does bitcoind still relay TXs it didn't getdata for? Also I suppose given that some of my signet TXs weren't going out, there could be an issue with orphans and peers that are missing my parents. I may try writing tests with more network bitcoind nodes, or set it up locally but routed through Tor.\r\n\r\nI'm going to continue playing with all this and see if I can figure anything out. It's definitely cool to see some `srelay` connections pop up in the `-netinfo` dashboard!",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659008138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1659618783,
      "node_id": "IC_kwDOABII585i68Xf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659618783",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T05:59:28Z",
      "updated_at": "2023-08-01T05:59:28Z",
      "author_association": "MEMBER",
      "body": "Approach NACK, (but Concept ACK). Leaving a NACK only to have DrahtBot create an anchor to this comment, to avoid GitHub from hiding it as well.\r\n\r\nI don't think you've seen https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1653599387 and GitHub is already hiding it by default.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659618783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1554774350,
      "node_id": "PRR_kwDOABII585cq_lO",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1554774350",
      "submitted_at": "2023-08-01T06:00:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1186579724",
      "pull_request_review_id": 1415616055,
      "id": 1186579724,
      "node_id": "PRRC_kwDOABII585GucUM",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than doing this, it might make more sense to have simplified relay logic be to send the messages:\r\n\r\n * VERSION\r\n * [after receiving VERSION] VERACK\r\n * [after receiving VERACK] INV\r\n * [after receiving GETDATA] TX\r\n * PING\r\n * [after receiving PONG] disconnect\r\n\r\n?",
      "created_at": "2023-05-06T01:35:40Z",
      "updated_at": "2023-05-06T01:35:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1186579724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1186579724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192301612",
      "pull_request_review_id": 1424412189,
      "id": 1192301612,
      "node_id": "PRRC_kwDOABII585HERQs",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, and maybe also send `wtxidrelay`. Any reason not to send `TX` directly and avoid the `INV`, like below?\r\n\r\n* VERSION\r\n* [after receiving VERSION] WTXIDRELAY VERACK\r\n* [after receiving VERACK] TX\r\n* PING\r\n* [after receiving PONG] disconnect",
      "created_at": "2023-05-12T12:29:56Z",
      "updated_at": "2023-05-12T12:29:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192301612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192301612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192502249",
      "pull_request_review_id": 1424708843,
      "id": 1192502249,
      "node_id": "PRRC_kwDOABII585HFCPp",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Any reason not to send `TX` directly and avoid the `INV`, like below?\r\n\r\nIt has been suggested to stop processing unrequested TXs messages, see #21224. While that didn't make it, the idea is still floating around. If bitcoin core itself started relying on unrequested TX msgs being processed, that would probably kill it once for all. \r\nMaybe that's ok, but we should make sure that there aren't alternative clients that would ignore unrequested TXs.",
      "created_at": "2023-05-12T15:13:16Z",
      "updated_at": "2023-05-12T15:13:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192502249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192502249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192851862",
      "pull_request_review_id": 1425238233,
      "id": 1192851862,
      "node_id": "PRRC_kwDOABII585HGXmW",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, if you send the `INV` first and wait for a request to send the actual tx, you might be a little more confident that the peer you connected to is really relaying txs, not just gathering statistics.\r\n\r\nI was thinking that you could send a fixed `VERSION` string and no feature messages (`WTXIDRELAY`, `SENDADDRV2`, etc), as a way of minimising how identifiable your node is versus other clients doing sensitive-relay. (I don't think you can have a larger anonymity set than that, since \"send a single tx and close the connection\" seems pretty distinct)",
      "created_at": "2023-05-12T22:58:06Z",
      "updated_at": "2023-05-12T22:58:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192851862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192851862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195027764",
      "pull_request_review_id": 1428366641,
      "id": 1195027764,
      "node_id": "PRRC_kwDOABII585HOq00",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't accept transactions while in IBD, so sending an INV first might be an easy way to catch that condition too. Checking that we're on the same tip, and respecting feefilter might also catch those cases, and be worth doing anyway though.",
      "created_at": "2023-05-16T11:34:10Z",
      "updated_at": "2023-05-16T11:34:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1195027764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195027764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212835700",
      "pull_request_review_id": 1454959689,
      "id": 1212835700,
      "node_id": "PRRC_kwDOABII585ISmd0",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> we should make sure that there aren't alternative clients that would ignore unrequested TXs\r\n\r\nThere is a precedent: from https://developer.bitcoin.org/reference/p2p_networking.html#tx\r\n\r\n> [BitcoinJ](http://bitcoinj.github.io/) will send a [“tx” message](https://developer.bitcoin.org/reference/p2p_networking.html#tx) unsolicited for transactions it originates\r\n\r\n",
      "created_at": "2023-06-01T09:05:32Z",
      "updated_at": "2023-06-01T09:05:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212835700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212835700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212837257",
      "pull_request_review_id": 1454962263,
      "id": 1212837257,
      "node_id": "PRRC_kwDOABII585ISm2J",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For now I kept it to send `TX` right away as this is simpler and somebody blackhole-ing the transaction is ok.",
      "created_at": "2023-06-01T09:06:56Z",
      "updated_at": "2023-06-01T09:06:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212837257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212837257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212891740",
      "pull_request_review_id": 1455044242,
      "id": 1212891740,
      "node_id": "PRRC_kwDOABII585IS0Jc",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 531,
      "original_position": 519,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This, together with the other change from commit 0ec7b979e7a9d4c30a97c39c2a64768d7c5662b1 `net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL` alter the behavior even if sensitive relay is not used (e.g. disabled or Tor and I2P not reachable).\r\n\r\nI think it is beneficial in that case too, but is not the purpose of this PR to improve that. Should this be guarded by `if (UseSensitiveRelay())`?",
      "created_at": "2023-06-01T09:47:53Z",
      "updated_at": "2023-06-01T09:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212891740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212891740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5922,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5931,
      "original_line": 5931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213240959",
      "pull_request_review_id": 1455611371,
      "id": 1213240959,
      "node_id": "PRRC_kwDOABII585IUJZ_",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {",
      "path": "src/init.cpp",
      "position": 78,
      "original_position": 12,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In e310a0d285db0b82b0c201a56f92a7bfe4663226, you added these verifications, I think it would be useful if you add coverage for them in b6fd6b525d3ee4d89331dc04d86f854cb1decccd\r\n\r\nSuggestion (did it to test e310a0d285db0b82b0c201a56f92a7bfe4663226):\r\n```diff\r\ndiff --git a/test/functional/p2p_local_tx_relay.py b/test/functional/p2p_local_tx_relay.py\r\nindex 0b115352d..46215110e 100755\r\n--- a/test/functional/p2p_local_tx_relay.py\r\n+++ b/test/functional/p2p_local_tx_relay.py\r\n@@ -140,12 +140,12 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n\r\n     def setup_nodes(self):\r\n         # Start a SOCKS5 proxy server.\r\n-        socks5_server_config = Socks5Configuration()\r\n-        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n-        socks5_server_config.unauth = True\r\n-        socks5_server_config.auth = True\r\n+        self.socks5_server_config = Socks5Configuration()\r\n+        self.socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n+        self.socks5_server_config.unauth = True\r\n+        self.socks5_server_config.auth = True\r\n\r\n-        self.socks5_server = Socks5Server(socks5_server_config)\r\n+        self.socks5_server = Socks5Server(self.socks5_server_config)\r\n         self.socks5_server.start()\r\n\r\n         ports_base = p2p_port(MAX_NODES) + 15000\r\n@@ -171,7 +171,7 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n             [\r\n                 \"-peerbloomfilters\", # needed to test replies to MEMPOOL\r\n                 \"-sensitiverelayowntx\",\r\n-                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\"\r\n+                f\"-proxy={self.socks5_server_config.addr[0]}:{self.socks5_server_config.addr[1]}\"\r\n             ]\r\n         ])\r\n         self.start_nodes()\r\n@@ -243,6 +243,15 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n         self.log.info(\"Waiting for normal broadcast to another observer\")\r\n         observer_outbound.wait_for_inv([inv])\r\n\r\n+        self.log.info(\"Test an invalid usage of -sensitiverelayowntx throw an init error\")\r\n+        self.stop_node(0)\r\n+        args_errors = {\r\n+            \"Sensitive relay of own transactions requested (-sensitiverelayowntx), but none of Tor or I2P networks\r\nis reachable\": [\"-sensitiverelayowntx\"],\r\n+            \"Sensitive relay of own transactions requested (-sensitiverelayowntx), but -connect is also configured.\r\n They are incompatible because the sensitive relay needs to open a new connection to a randomly chosen Tor or I2P pe\r\ner\" : [\"-sensitiverelayowntx\", \"-connect='127.0.0.1'\", f\"-proxy={self.socks5_server_config.addr[0]}:{self.socks5_ser\r\nver_config.addr[1]}\"]\r\n+        }\r\n+        for msg, args in args_errors.items():\r\n+            node0.assert_start_raises_init_error(extra_args=args, expected_msg=f'Error: {msg}')\r\n+\r\n\r\n if __name__ == '__main__':\r\n     P2PLocalTxRelay().main()\r\n```",
      "created_at": "2023-06-01T14:24:34Z",
      "updated_at": "2023-06-01T14:24:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213240959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213240959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1876,
      "original_line": 1876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213295906",
      "pull_request_review_id": 1455700161,
      "id": 1213295906,
      "node_id": "PRRC_kwDOABII585IUW0i",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 31dd230738c43a529c63331eb23135e42d083e8f: At this point (creation of `open_sensitive_relay`), is there any possibility of both tor and i2p to be unreachable?",
      "created_at": "2023-06-01T15:01:04Z",
      "updated_at": "2023-06-01T15:01:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213295906",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213295906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213371595",
      "pull_request_review_id": 1455819215,
      "id": 1213371595,
      "node_id": "PRRC_kwDOABII585IUpTL",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": 1213295906,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good observation. If both Tor and I2P are unreachable then `m_sensitive_relay_connections_to_open` should always be zero. Inside `PeerManagerImpl::ScheduleLocalTxForRelay()` `UseSensitiveRelay()` would return `false` and `m_connman.ScheduleSensitiveRelayConnections()` which increments the counter will never be called.\r\n\r\nNow, that is the logic of some code far away, in another file. I did not want to rely on it because if we enter here and both are unreachable, then it will end up in an infinite loop. An assert that at least one is reachable is the other option, but I am trying to code this \"defensively\", following @sdaftuar's comment from another PR that excessive asserts in the networking code are better avoided.",
      "created_at": "2023-06-01T15:58:11Z",
      "updated_at": "2023-06-01T15:58:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213371595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213371595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213534764",
      "pull_request_review_id": 1456079399,
      "id": 1213534764,
      "node_id": "PRRC_kwDOABII585IVRIs",
      "diff_hunk": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import P2PDataStore, P2PInterface, P2P_SERVICES\n+from test_framework.messages import msg_getdata, msg_inv, msg_mempool, CInv, MSG_WTX\n+from test_framework.socks5 import Socks5Configuration, Socks5Server\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, MAX_NODES, p2p_port\n+from test_framework.wallet import MiniWallet\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+g_p2p_index = None\n+def new_p2p_index():\n+    global g_p2p_index",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": null,
      "original_position": 41,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there is no need of creating a global variable like `g_p2p_index`. We could do something like:\r\n```diff\r\ndiff --git a/test/functional/p2p_local_tx_relay.py b/test/functional/p2p_local_tx_relay.py\r\nindex 0b115352d..9f4c6aaa5 100755\r\n--- a/test/functional/p2p_local_tx_relay.py\r\n+++ b/test/functional/p2p_local_tx_relay.py\r\n@@ -36,12 +36,6 @@ MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\r\n MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\r\n SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\r\n \r\n-g_p2p_index = None\r\n-def new_p2p_index():\r\n-    global g_p2p_index\r\n-    g_p2p_index += 1\r\n-    return g_p2p_index\r\n-\r\n # Fill addrman with these addresses. Must have enough Tor addresses, so that even\r\n # if all 10 default connections are opened to a Tor address (!?) there must be more\r\n # for sensitive relays.\r\n@@ -135,13 +129,16 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.disable_autoconnect = False\r\n         self.num_nodes = 1\r\n-        global g_p2p_index\r\n-        g_p2p_index = self.num_nodes - 1\r\n+        self.g_p2p_index = self.num_nodes - 1\r\n+\r\n+    def new_p2p_index(self):\r\n+        self.g_p2p_index += 1\r\n+        return self.g_p2p_index\r\n \r\n     def setup_nodes(self):\r\n         # Start a SOCKS5 proxy server.\r\n         socks5_server_config = Socks5Configuration()\r\n-        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.new_p2p_index()))\r\n         socks5_server_config.unauth = True\r\n         socks5_server_config.auth = True\r\n```",
      "created_at": "2023-06-01T18:35:03Z",
      "updated_at": "2023-06-01T18:35:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213534764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213534764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213614742",
      "pull_request_review_id": 1456206463,
      "id": 1213614742,
      "node_id": "PRRC_kwDOABII585IVkqW",
      "diff_hunk": "@@ -1747,18 +1767,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat\n+        // * OUTBOUND_FULL_RELAY until we reach full-relay capacity\n+        // * BLOCK_RELAY until we reach block-relay-only peer limit.\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_sensitive_relay) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose it bypass the `maxconnection`, does it? If so, it worths to update the `-maxconnections` mentioning it.",
      "created_at": "2023-06-01T19:53:02Z",
      "updated_at": "2023-06-01T19:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213614742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213614742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214126425",
      "pull_request_review_id": 1456965293,
      "id": 1214126425,
      "node_id": "PRRC_kwDOABII585IXhlZ",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {",
      "path": "src/init.cpp",
      "position": 78,
      "original_position": 12,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213240959,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added this test, but in `feature_config_args.py` because it checks interaction between some config args. That fits better than `p2p_local_tx_relay.py`:\r\n> Test how locally submitted transactions are sent to the network when sensitive relay is used.",
      "created_at": "2023-06-02T09:11:31Z",
      "updated_at": "2023-06-02T09:11:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214126425",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214126425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1876,
      "original_line": 1876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214127166",
      "pull_request_review_id": 1456966396,
      "id": 1214127166,
      "node_id": "PRRC_kwDOABII585IXhw-",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": 1213295906,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment in the code in case somebody else wonders the same.",
      "created_at": "2023-06-02T09:12:16Z",
      "updated_at": "2023-06-02T09:12:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214127166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214127166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214128768",
      "pull_request_review_id": 1456968958,
      "id": 1214128768,
      "node_id": "PRRC_kwDOABII585IXiKA",
      "diff_hunk": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import P2PDataStore, P2PInterface, P2P_SERVICES\n+from test_framework.messages import msg_getdata, msg_inv, msg_mempool, CInv, MSG_WTX\n+from test_framework.socks5 import Socks5Configuration, Socks5Server\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, MAX_NODES, p2p_port\n+from test_framework.wallet import MiniWallet\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+g_p2p_index = None\n+def new_p2p_index():\n+    global g_p2p_index",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": null,
      "original_position": 41,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213534764,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I removed `new_p2p_index()` because it was used in just one place. Earlier it was used also for all listeners behind the SOCKS5 proxy, but I had to stop using `p2p_port()` for that because it exceeded `MAX_NODES` (12).",
      "created_at": "2023-06-02T09:13:56Z",
      "updated_at": "2023-06-02T09:13:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214128768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214128768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214131440",
      "pull_request_review_id": 1456973222,
      "id": 1214131440,
      "node_id": "PRRC_kwDOABII585IXizw",
      "diff_hunk": "@@ -1747,18 +1767,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat\n+        // * OUTBOUND_FULL_RELAY until we reach full-relay capacity\n+        // * BLOCK_RELAY until we reach block-relay-only peer limit.\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_sensitive_relay) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213614742,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. That is a bit hidden/implicit in the creation of the grant, in `master`:\r\n\r\n```cpp\r\nCSemaphoreGrant grant(*semOutbound);\r\n```\r\n\r\nthis would hang if there are too many connections, waiting for a free slot to be available (somebody to disconnect).\r\n\r\nAdded a mention to it in the description of `-maxconnections`.",
      "created_at": "2023-06-02T09:16:41Z",
      "updated_at": "2023-06-02T09:16:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214131440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214131440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214671917",
      "pull_request_review_id": 1458209334,
      "id": 1214671917,
      "node_id": "PRRC_kwDOABII585IZmwt",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why use a funny value here instead of our actual subver? I'm guessing it's for extra anonymity? Could there be any downsides though, like nodes that refuse connections to certain agents?",
      "created_at": "2023-06-02T18:11:10Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214671917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214671917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214675802",
      "pull_request_review_id": 1458209334,
      "id": 1214675802,
      "node_id": "PRRC_kwDOABII585IZnta",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 187,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this extra ping needed for sensitive connections ?",
      "created_at": "2023-06-02T18:16:18Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214675802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214675802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214678210",
      "pull_request_review_id": 1458209334,
      "id": 1214678210,
      "node_id": "PRRC_kwDOABII585IZoTC",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 501,
      "original_position": 217,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why disconnect the sensitive connection on PONG? Could that ever happen before we send our tx messages out?",
      "created_at": "2023-06-02T18:19:29Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214678210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214678210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4945,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4946,
      "original_line": 4946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214684616",
      "pull_request_review_id": 1458209334,
      "id": 1214684616,
      "node_id": "PRRC_kwDOABII585IZp3I",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 531,
      "original_position": 519,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1212891740,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was just about to ask! Wouldn't this only hurt users who don't have sensitive relay available? Maybe `MEMPOOL` requests don't matter so much but wouldn't omitting from `GETDATA` prevent our own TX from being broadcast at all?",
      "created_at": "2023-06-02T18:27:21Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214684616",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214684616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5922,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5931,
      "original_line": 5931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214690639",
      "pull_request_review_id": 1458209334,
      "id": 1214690639,
      "node_id": "PRRC_kwDOABII585IZrVP",
      "diff_hunk": "@@ -136,13 +141,23 @@ def test_msg_mempool(self):\n         filter_peer = P2PBloomFilter()\n \n         self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+\n+        amount = 9 * COIN\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(fee_rate=0)[\"tx\"]\n+        assert_greater_than_or_equal(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)\n+        tx.vout.append(CTxOut(amount, filter_peer.watch_script_pubkey))\n+        tx.rehash()\n+\n+        tx_sender = self.nodes[0].add_p2p_connection(P2PInterface())\n+        tx_sender.send_message(msg_tx(tx))",
      "path": "test/functional/p2p_filter.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "d2cb1585e331641bc7f2ae89de196eb8d663fd84",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just so I understand: this change is required because with the PR we wouldn't send our own TX in response to a `MEMPOOL` message, so you quickly spin up a dummy peer to send the TX to us first. Then we can assert that it was relayed to `fitler_peer` ?",
      "created_at": "2023-06-02T18:35:05Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214690639",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214690639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 153,
      "original_start_line": 153,
      "start_side": "RIGHT",
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214696791",
      "pull_request_review_id": 1458209334,
      "id": 1214696791,
      "node_id": "PRRC_kwDOABII585IZs1X",
      "diff_hunk": "@@ -2078,6 +2078,13 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n \n bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n+    if (UseSensitiveRelay()) {\n+        LOCK(m_mempool.cs);\n+        if (m_mempool.IsUnbroadcastTx(gtxid)) {\n+            return false;\n+        }",
      "path": "src/net_processing.cpp",
      "position": 154,
      "original_position": 8,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: don't we usually do this kind of logic in one line?",
      "created_at": "2023-06-02T18:43:34Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214696791",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214696791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 2083,
      "original_start_line": 2083,
      "start_side": "RIGHT",
      "line": 2085,
      "original_line": 2085,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214698071",
      "pull_request_review_id": 1458209334,
      "id": 1214698071,
      "node_id": "PRRC_kwDOABII585IZtJX",
      "diff_hunk": "@@ -4210,6 +4219,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {\n+            LogPrintLevel( /* Continued */\n+                BCLog::SENSITIVE_RELAY,\n+                BCLog::Level::Info,\n+                \"Received own transaction (txid=%s) from the network from peer=%d%s; \"\n+                \"stopping sensitive broadcast and broadcasting it to everybody as if it is not our transaction\\n\",",
      "path": "src/net_processing.cpp",
      "position": 463,
      "original_position": 34,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Super cool idea! Is there common chance for failure here though? This relies on a chain of peers from the sensitive relay node back to us that haven't seen the tx yet.",
      "created_at": "2023-06-02T18:45:21Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214698071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214698071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4317,
      "original_line": 4317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214738570",
      "pull_request_review_id": 1458360554,
      "id": 1214738570,
      "node_id": "PRRC_kwDOABII585IZ3CK",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 501,
      "original_position": 217,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(I just realized I answered my own question from https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214675802)\r\n\r\nBut still, don't we also send automatic PINGs ? Could that result in premature disconnection?",
      "created_at": "2023-06-02T19:20:47Z",
      "updated_at": "2023-06-02T19:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214738570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214738570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4945,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4946,
      "original_line": 4946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214831451",
      "pull_request_review_id": 1458467993,
      "id": 1214831451,
      "node_id": "PRRC_kwDOABII585IaNtb",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems for extra anonymity, but I have a similar doubt, couldn't I make easier for someone to censor us?",
      "created_at": "2023-06-02T20:55:32Z",
      "updated_at": "2023-06-02T20:55:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214831451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214831451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214832859",
      "pull_request_review_id": 1458469430,
      "id": 1214832859,
      "node_id": "PRRC_kwDOABII585IaODb",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unless we want to sybil the network and fake long-term connections, it's obvious what this connection will be about? Just retry with new peers until someone honest propagates it?",
      "created_at": "2023-06-02T20:57:07Z",
      "updated_at": "2023-06-02T20:57:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214832859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214832859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218012577",
      "pull_request_review_id": 1462433959,
      "id": 1218012577,
      "node_id": "PRRC_kwDOABII585ImWWh",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 531,
      "original_position": 519,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1212891740,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For `GETDATA`, this only applies to transactions which we have not `INV`ed to the peer. Otherwise `INV`ed transactions will be sent via:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f4a8269dfc144cc918570bdb870aa5143a11c1fe/src/net_processing.cpp#L2307",
      "created_at": "2023-06-05T12:35:48Z",
      "updated_at": "2023-06-05T12:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218012577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218012577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5922,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5931,
      "original_line": 5931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218020772",
      "pull_request_review_id": 1462448234,
      "id": 1218020772,
      "node_id": "PRRC_kwDOABII585ImYWk",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TLDR: @instagibbs, right! :)\r\n\r\nFirst, the problem with the user-agent string is that it can be customized which will totally reveal the identity of the sender. Next idea is to use the non-customized user-agent even if `-uacomment=` is configured. But then, why even reveal the version - whether it is 26.0 or 27.0? Right after a new release there will be few nodes that run the just-released version and thus the anonymity set will be small. So this string better be constant - either empty string or whatever other constant. `/pynode:0.0.1/` was suggested here - https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418",
      "created_at": "2023-06-05T12:43:12Z",
      "updated_at": "2023-06-05T12:43:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218020772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218020772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218073603",
      "pull_request_review_id": 1462540270,
      "id": 1218073603,
      "node_id": "PRRC_kwDOABII585ImlQD",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 187,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just one ping will be send. It is needed because without it the receiving bitcoind may ignore the TX message since the sender disconnects immediately after that, see https://github.com/bitcoin/bitcoin/issues/4432. Sending a ping and waiting for pong ensures that the preceding TX message has been processed (unless somebody implements out-of-order messages processing).",
      "created_at": "2023-06-05T13:26:49Z",
      "updated_at": "2023-06-05T13:26:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218073603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218073603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218082238",
      "pull_request_review_id": 1462554319,
      "id": 1218082238,
      "node_id": "PRRC_kwDOABII585ImnW-",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 501,
      "original_position": 217,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why disconnect the sensitive connection on PONG?\r\n\r\nBecause then we assume the TX message that preceded the PING message has been processed.\r\n\r\n> Could that ever happen before we send our tx messages out?\r\n\r\nYes, if the peer sends us unsolicited PONG without us sending PING before that.\r\n\r\n> But still, don't we also send automatic PINGs?\r\n\r\nYes, and for the sensitive relay connections this should be the first PING. The point is to send TX before any PING.",
      "created_at": "2023-06-05T13:32:10Z",
      "updated_at": "2023-06-05T13:32:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218082238",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218082238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4945,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4946,
      "original_line": 4946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218088888",
      "pull_request_review_id": 1462570773,
      "id": 1218088888,
      "node_id": "PRRC_kwDOABII585Imo-4",
      "diff_hunk": "@@ -136,13 +141,23 @@ def test_msg_mempool(self):\n         filter_peer = P2PBloomFilter()\n \n         self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+\n+        amount = 9 * COIN\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(fee_rate=0)[\"tx\"]\n+        assert_greater_than_or_equal(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)\n+        tx.vout.append(CTxOut(amount, filter_peer.watch_script_pubkey))\n+        tx.rehash()\n+\n+        tx_sender = self.nodes[0].add_p2p_connection(P2PInterface())\n+        tx_sender.send_message(msg_tx(tx))",
      "path": "test/functional/p2p_filter.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "d2cb1585e331641bc7f2ae89de196eb8d663fd84",
      "in_reply_to_id": 1214690639,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, exactly. Before this change the test sent the transaction to the node using RPC and so it becomes locally-submitted, sensitive, unbroadcast, our own, etc transaction. With this change to the test it sends the transaction to the node via the P2P interface, so it is treated as normal, foreign, non-sensitive transaction and thus included in the MEMPOOL reply.\r\n\r\nBtw, if changes from c70da509e4224f738fa0229e1f434a854629acf2 `net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL` are restricted only to `if (UseSensitiveRelay()) {` then this tweak to the test will not be necessary.",
      "created_at": "2023-06-05T13:36:59Z",
      "updated_at": "2023-06-05T13:36:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218088888",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218088888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 153,
      "original_start_line": 153,
      "start_side": "RIGHT",
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218179793",
      "pull_request_review_id": 1462721593,
      "id": 1218179793,
      "node_id": "PRRC_kwDOABII585Im_LR",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok understood. In that case, would it make sense to be very explicit about what this connection is about? I mean user agent could essentially be \"I am going to send you one TX and then disconnect\". Additional behavior could even be encoded on the recipient side, maybe to ensure we don't disconnect prematurely ?",
      "created_at": "2023-06-05T14:44:53Z",
      "updated_at": "2023-06-05T14:44:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218179793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218179793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218267977",
      "pull_request_review_id": 1462865826,
      "id": 1218267977,
      "node_id": "PRRC_kwDOABII585InUtJ",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 501,
      "original_position": 217,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yes, if the peer sends us unsolicited PONG without us sending PING before that.\r\n\r\nI don't think the peer can guess the right ping nonce reliably , can it?",
      "created_at": "2023-06-05T15:46:26Z",
      "updated_at": "2023-06-05T15:46:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218267977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218267977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4945,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4946,
      "original_line": 4946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218585985",
      "pull_request_review_id": 1463428381,
      "id": 1218585985,
      "node_id": "PRRC_kwDOABII585IoiWB",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        if (!IsReachable(NET_ONION) && !IsReachable(NET_I2P)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "f73bb4cbc4fc3b89abadc60aec18aa0b774d5791",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There could be a race with the `torcontrol` thread, which may set `NET_ONION` to reachable before this line is encountered or only later.",
      "created_at": "2023-06-05T20:57:42Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218585985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218585985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218588419",
      "pull_request_review_id": 1463428381,
      "id": 1218588419,
      "node_id": "PRRC_kwDOABII585Ioi8D",
      "diff_hunk": "@@ -451,6 +451,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"senstitive-relay\") return \"srelay\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b33fd076327cd8dbeb96e7f80f86f95060c2d5f8",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typo: sensitive-relay (extra \"t\")",
      "created_at": "2023-06-05T20:59:51Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218588419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218588419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218597944",
      "pull_request_review_id": 1463428381,
      "id": 1218597944,
      "node_id": "PRRC_kwDOABII585IolQ4",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this bypasses `-maxconnections`,  could we run into trouble if we don't have sufficient file descriptors (see `RaiseFileDescriptorLimit()` call in init)?",
      "created_at": "2023-06-05T21:12:01Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218597944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218597944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218631408",
      "pull_request_review_id": 1463428381,
      "id": 1218631408,
      "node_id": "PRRC_kwDOABII585Iotbw",
      "diff_hunk": "@@ -1749,18 +1769,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed",
      "path": "src/net.cpp",
      "position": 220,
      "original_position": 55,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm a bit worried about this priority: What would happen if we, for some reason, aren't able to make successful sensitive relay connections (e.g. we think that we can connect to Tor but misconfigured something, or maybe we can connect but don't have any addresses for these networks in our addrman).\r\nWouldn't we try again and again (since this is the first priority and `m_sensitive_relay_connections_to_open` is never reduced) and never attempt to make an outbound connection of another type?",
      "created_at": "2023-06-05T21:51:19Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218631408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218631408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1825,
      "original_line": 1825,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219111950",
      "pull_request_review_id": 1464510532,
      "id": 1219111950,
      "node_id": "PRRC_kwDOABII585IqiwO",
      "diff_hunk": "@@ -2078,6 +2078,13 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n \n bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n+    if (UseSensitiveRelay()) {\n+        LOCK(m_mempool.cs);\n+        if (m_mempool.IsUnbroadcastTx(gtxid)) {\n+            return false;\n+        }",
      "path": "src/net_processing.cpp",
      "position": 154,
      "original_position": 8,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": 1214696791,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The guidelines allow both and I prefer this because: https://github.com/vasild/bitcoin/wiki/if-on-the-same-line",
      "created_at": "2023-06-06T07:51:01Z",
      "updated_at": "2023-06-06T07:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1219111950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219111950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 2083,
      "original_start_line": 2083,
      "start_side": "RIGHT",
      "line": 2085,
      "original_line": 2085,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219127718",
      "pull_request_review_id": 1464531191,
      "id": 1219127718,
      "node_id": "PRRC_kwDOABII585Iqmmm",
      "diff_hunk": "@@ -4210,6 +4219,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {\n+            LogPrintLevel( /* Continued */\n+                BCLog::SENSITIVE_RELAY,\n+                BCLog::Level::Info,\n+                \"Received own transaction (txid=%s) from the network from peer=%d%s; \"\n+                \"stopping sensitive broadcast and broadcasting it to everybody as if it is not our transaction\\n\",",
      "path": "src/net_processing.cpp",
      "position": 463,
      "original_position": 34,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": 1214698071,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This chain of peers is desired / demanded to consider the transaction successfully propagated. Lets say we are connected to 30 peers (some inbound, some outbound). If somebody of them gets the transaction (from somebody else, not from us) he will tell us about it due to the normal flooding mechanism because he will not be aware we have it. If all our 30 peers stay silent about the transaction, it means that they did not get it which is a sign it propagated only to some part of the network or did not propagate at all.\r\n\r\nMy understanding is that normally it takes a few seconds for a transaction to reach _every node_ in the network due to the flooding mechanism.",
      "created_at": "2023-06-06T07:59:51Z",
      "updated_at": "2023-06-06T07:59:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1219127718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219127718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4317,
      "original_line": 4317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223152947",
      "pull_request_review_id": 1470120014,
      "id": 1223152947,
      "node_id": "PRRC_kwDOABII585I59Uz",
      "diff_hunk": "@@ -451,6 +451,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"senstitive-relay\") return \"srelay\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "b33fd076327cd8dbeb96e7f80f86f95060c2d5f8",
      "in_reply_to_id": 1218588419,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-06-08T14:47:53Z",
      "updated_at": "2023-06-08T14:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223152947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223152947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223163824",
      "pull_request_review_id": 1470134560,
      "id": 1223163824,
      "node_id": "PRRC_kwDOABII585I5_-w",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        if (!IsReachable(NET_ONION) && !IsReachable(NET_I2P)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "f73bb4cbc4fc3b89abadc60aec18aa0b774d5791",
      "in_reply_to_id": 1218585985,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, I relaxed the condition a bit to error only if we are sure Tor is unreachable and will remain unreachable. There is still a chance that the tor control thread will not set Tor to reachable, but there is also a chance that Tor is set to reachable here, but the Tor server is down. Later at runtime we do check again the reachable networks and in general the code must work when some or all of those networks go down.",
      "created_at": "2023-06-08T14:53:40Z",
      "updated_at": "2023-06-08T14:53:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223163824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223163824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223171823",
      "pull_request_review_id": 1470147374,
      "id": 1223171823,
      "node_id": "PRRC_kwDOABII585I6B7v",
      "diff_hunk": "@@ -1749,18 +1769,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed",
      "path": "src/net.cpp",
      "position": 220,
      "original_position": 55,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218631408,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! I changed this to not try 2 consecutive sensitive relay connections. That is - after attempting one, give way to others (if any, otherwise sleep 0.5s) and only then try another sensitive relay.",
      "created_at": "2023-06-08T14:58:47Z",
      "updated_at": "2023-06-08T14:58:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223171823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223171823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1825,
      "original_line": 1825,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223178234",
      "pull_request_review_id": 1470156383,
      "id": 1223178234,
      "node_id": "PRRC_kwDOABII585I6Df6",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218597944,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, at least I should raise the fd limit, but by how much? Should we limit the number of sensitive relay connections? I think it makes sense to try as hard as possible even if that means sometimes a temporary error of running out of file descriptors. Or is that not a good idea? I guess in some cases a node operator may submit many transactions at once to their node. What do you think would be the best approach?",
      "created_at": "2023-06-08T15:02:15Z",
      "updated_at": "2023-06-08T15:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223178234",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223178234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1224124709",
      "pull_request_review_id": 1471667915,
      "id": 1224124709,
      "node_id": "PRRC_kwDOABII585I9qkl",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218597944,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I put a cap on the maximum number of sensitive relay connections that can be opened. Breaking through the max open file descriptors looks like a bad idea - it would also hamper access to the filesystem, even if temporarily. I assume somebody may submit thousands of local transactions in no time.",
      "created_at": "2023-06-09T10:13:49Z",
      "updated_at": "2023-06-09T10:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1224124709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1224124709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253796131",
      "pull_request_review_id": 1515567642,
      "id": 1253796131,
      "node_id": "PRRC_kwDOABII585Ku2kj",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 187,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This implementation of that logic doesn't seem ideal to me:\r\n\r\n * sending the TX without doing INV/GETDATA first risks having the TX be ignored as unrequested\r\n\r\n * `PushUnbroadcastTx` doesn't actually send the TX, but `MaybeSendPing` does actually send the PING, so you might get the PONG and closes the connection before the other end has actually received/processed the TX",
      "created_at": "2023-07-06T00:50:11Z",
      "updated_at": "2023-07-06T00:50:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1253796131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253796131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254309734",
      "pull_request_review_id": 1516342252,
      "id": 1254309734,
      "node_id": "PRRC_kwDOABII585Kwz9m",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 501,
      "original_position": 217,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, yes, this is in the \"nonce match\" branch of the logic that handles PONG. So, the answer to \"Could that ever happen before we send our tx messages out?\" is just \"No\".",
      "created_at": "2023-07-06T11:33:00Z",
      "updated_at": "2023-07-06T11:33:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254309734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254309734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4945,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4946,
      "original_line": 4946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254444996",
      "pull_request_review_id": 1516556628,
      "id": 1254444996,
      "node_id": "PRRC_kwDOABII585KxU_E",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 187,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> sending the TX without doing INV/GETDATA first risks having the TX be ignored as unrequested\r\n\r\nI thought about doing `INV` first and waiting for get data but decided to not do that for the following reasons:\r\n\r\n1. Bitcoin Core accepts unsolicited transactions. According to https://developer.bitcoin.org/reference/p2p_networking.html#tx there is already some software that sends unsolicited transactions.\r\n2. It would add complexity to the implementation.\r\n3. After `INV` we would have to wait for some time for `GETDATA`, then in some cases when the wait is too little we risk cutting the connection just before we get `GETDATA`.\r\n4. Last, but this is the most important IMO: it does not matter. There is redundancy: the transaction will be sent to more than one peer and we will retry if we don't hear back from the network about it. It is expected and is ok if some of the peers we send the transaction drops it.\r\n\r\n> `PushUnbroadcastTx` doesn't actually send the TX, but `MaybeSendPing` does actually send the PING, so you might get the PONG and closes the connection before the other end has actually received/processed the TX\r\n\r\nI don't think so. Both `PushUnbroadcastTx()` and `MaybeSendPing()` end up calling `PushMessage()` which enqueues the message in `CNode::vSendMsg`. This is done synchronously so the transaction will go before the ping. Then messages from `CNode::vSendMsg` are processed and sent in the order they were added (FIFO).\r\n",
      "created_at": "2023-07-06T13:29:10Z",
      "updated_at": "2023-07-06T13:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254444996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254444996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254506653",
      "pull_request_review_id": 1516655704,
      "id": 1254506653,
      "node_id": "PRRC_kwDOABII585KxkCd",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 187,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't think so.\r\n\r\nYou're right -- I missed seeing the call to `ProcessGetData` and assumed it wasn't picked up until the next `ProcessMessages`.",
      "created_at": "2023-07-06T14:14:27Z",
      "updated_at": "2023-07-06T14:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254506653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254506653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267244372",
      "pull_request_review_id": 1535806985,
      "id": 1267244372,
      "node_id": "PRRC_kwDOABII585LiJ1U",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);",
      "path": "src/net_processing.cpp",
      "position": 249,
      "original_position": 234,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC this line schedules a replacement sensitive connection because the one we were passed in has the wrong services and so it gets dumped. I think this is the only line in this function that makes it apply strictly to only sensitive relays. So I wonder if that should be asserted at the top? Or could be renamed to `PushUnbroadcastTxToSensistiveRelay()`? At the very least maybe sensitive-only should be explained in the function description on L933 ?",
      "created_at": "2023-07-18T19:50:48Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267244372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267244372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3381,
      "original_line": 3381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267248349",
      "pull_request_review_id": 1535806985,
      "id": 1267248349,
      "node_id": "PRRC_kwDOABII585LiKzd",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wow, is this really the fastest way to get a random element from `std::set` ? funny.",
      "created_at": "2023-07-18T19:55:45Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267248349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267248349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267253028",
      "pull_request_review_id": 1535806985,
      "id": 1267253028,
      "node_id": "PRRC_kwDOABII585LiL8k",
      "diff_hunk": "@@ -3579,6 +3719,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 417,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make any sense here to manually set `peer.m_ping_queued = true` to guarantee (not \"maybe\") sending ping?",
      "created_at": "2023-07-18T20:01:30Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267253028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267253028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267276546",
      "pull_request_review_id": 1535806985,
      "id": 1267276546,
      "node_id": "PRRC_kwDOABII585LiRsC",
      "diff_hunk": "@@ -40,6 +41,16 @@ def __init__(self):\n         self.af = socket.AF_INET # Bind address family\n         self.unauth = False  # Support unauthenticated\n         self.auth = False  # Support authentication\n+        # An array of objects like:\n+        # {\n+        #     \"listen_addr\": \"127.0.0.1\"\n+        #     \"listen_port\": 28276\n+        #     \"node\": python_p2p_node,\n+        #     \"requested_to_addr\": \"the_client_asked_to_connect_to_this_addr.onion\",",
      "path": "test/functional/test_framework/socks5.py",
      "position": 17,
      "original_position": 17,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see `.node` used below and I don't think you really use `.requested_to_addr` anywhere after setting it below? Could this just be an array of `CAddress` or something like that?",
      "created_at": "2023-07-18T20:29:47Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267276546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267276546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 46,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267277048",
      "pull_request_review_id": 1535806985,
      "id": 1267277048,
      "node_id": "PRRC_kwDOABII585LiRz4",
      "diff_hunk": "@@ -116,6 +127,30 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.info('Proxy: %s', cmdin)\n+\n+            if self.serv.conf.destinations_used < len(self.serv.conf.destinations):",
      "path": "test/functional/test_framework/socks5.py",
      "position": null,
      "original_position": 30,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this guy need an `else`? Maybe raise error that a connection request was made after all destinations have been used?",
      "created_at": "2023-07-18T20:30:22Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267277048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267277048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267279962",
      "pull_request_review_id": 1535806985,
      "id": 1267279962,
      "node_id": "PRRC_kwDOABII585LiSha",
      "diff_hunk": "@@ -1003,13 +1003,35 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n+bool CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n     LOCK(cs);\n \n     if (m_unbroadcast_txids.erase(txid))\n     {\n         LogPrint(BCLog::MEMPOOL, \"Removed %i from set of unbroadcast txns%s\\n\", txid.GetHex(), (unchecked ? \" before confirmation that txn was sent out\" : \"\"));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CTxMemPool::IsUnbroadcastTx(const GenTxid& gtxid) const",
      "path": "src/txmempool.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why did you need this to support wtxid? Is that how we are verifying our TX made the round trip out and back (without being malleated)?",
      "created_at": "2023-07-18T20:33:53Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267279962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267279962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1017,
      "original_line": 1017,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275287508",
      "pull_request_review_id": 1548267148,
      "id": 1275287508,
      "node_id": "PRRC_kwDOABII585MA1fU",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added some extra logs to bitcoind and ran the test, these addrs fail `IsRoutable()`. I assume these are CJDNS addresses?",
      "created_at": "2023-07-26T17:33:42Z",
      "updated_at": "2023-07-26T17:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275287508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275287508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275391537",
      "pull_request_review_id": 1548440940,
      "id": 1275391537,
      "node_id": "PRRC_kwDOABII585MBO4x",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, these three are CJDNS.",
      "created_at": "2023-07-26T19:21:19Z",
      "updated_at": "2023-07-26T19:21:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275391537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275391537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275392099",
      "pull_request_review_id": 1548441864,
      "id": 1275392099,
      "node_id": "PRRC_kwDOABII585MBPBj",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "does the test node need a config flag to route?",
      "created_at": "2023-07-26T19:22:01Z",
      "updated_at": "2023-07-26T19:22:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275392099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275392099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276217017",
      "pull_request_review_id": 1549746400,
      "id": 1276217017,
      "node_id": "PRRC_kwDOABII585MEYa5",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);",
      "path": "src/net_processing.cpp",
      "position": 249,
      "original_position": 234,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267244372,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> IIUC this line schedules a replacement sensitive connection because the one we were passed in has the wrong services and so it gets dumped.\r\n\r\nYes.\r\n\r\n> I think this is the only line in this function that makes it apply strictly to only sensitive relays. So I wonder if that should be asserted at the top? Or could be renamed to `PushUnbroadcastTxToSensistiveRelay()`? At the very least maybe sensitive-only should be explained in the function description on L933 ?\r\n\r\nRight. While this function will work if called for non-sensitive-relay peer (it will send the tx to the peer), this is not the intention because it will be bad for privacy and it is only called under `if (pfrom.IsSensitiveRelayConn()) {`.\r\n\r\nRenamed as suggested and added `Assume()`;",
      "created_at": "2023-07-27T12:35:26Z",
      "updated_at": "2023-07-27T12:35:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276217017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276217017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3381,
      "original_line": 3381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276240357",
      "pull_request_review_id": 1549783541,
      "id": 1276240357,
      "node_id": "PRRC_kwDOABII585MEeHl",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if the low level net layer is the right place to inspect high level p2p messages and then decide to drop them. It may be good to enumerate why this is needed (if at all).",
      "created_at": "2023-07-27T12:53:56Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276240357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276240357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276243984",
      "pull_request_review_id": 1549783541,
      "id": 1276243984,
      "node_id": "PRRC_kwDOABII585MEfAQ",
      "diff_hunk": "@@ -2092,6 +2141,26 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     };\n }\n \n+bool PeerManagerImpl::UseSensitiveRelay() const\n+{\n+    return gArgs.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this use the peerman options struct?",
      "created_at": "2023-07-27T12:57:01Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276243984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276243984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276249120",
      "pull_request_review_id": 1549783541,
      "id": 1276249120,
      "node_id": "PRRC_kwDOABII585MEgQg",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267248349,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Any reason to re-implement `std::advance()`?",
      "created_at": "2023-07-27T13:01:19Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276249120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276249120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276302188",
      "pull_request_review_id": 1549884238,
      "id": 1276302188,
      "node_id": "PRRC_kwDOABII585MEtNs",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267248349,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it does not provide a direct access to an arbitrary element. This is `O(unbroadcast_txids.size())` if faster is required we have to change the container (or extend it with supplementary vector). I shortened this a bit to:\r\n\r\n```cpp\r\nconst auto tx_iter = std::next(unbroadcast_txids.begin(), FastRandomContext{}.randrange(unbroadcast_txids.size()));\r\n```\r\n\r\nThis is still linear, but at least a bit short and (I hope) as easy to read.",
      "created_at": "2023-07-27T13:42:51Z",
      "updated_at": "2023-07-27T13:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276302188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276302188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276860339",
      "pull_request_review_id": 1550892103,
      "id": 1276860339,
      "node_id": "PRRC_kwDOABII585MG1ez",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like outright lying in the UA. Why not just send it blank? Or at least some kind of standard for \"I am not telling you\"",
      "created_at": "2023-07-27T22:02:01Z",
      "updated_at": "2023-07-27T22:02:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276860339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276860339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482371",
      "pull_request_review_id": 1553539836,
      "id": 1278482371,
      "node_id": "PRRC_kwDOABII585MNBfD",
      "diff_hunk": "@@ -3579,6 +3719,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 429,
      "original_position": 417,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267253028,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! Better to ensure explicitly than rely on the internals of `MaybeSendPing()`, the clock and the fact this is the first call to `MaybeSendPing()` for this peer.",
      "created_at": "2023-07-30T03:08:18Z",
      "updated_at": "2023-07-30T03:08:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278482371",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3729,
      "original_line": 3729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482946",
      "pull_request_review_id": 1553540345,
      "id": 1278482946,
      "node_id": "PRRC_kwDOABII585MNBoC",
      "diff_hunk": "@@ -40,6 +41,16 @@ def __init__(self):\n         self.af = socket.AF_INET # Bind address family\n         self.unauth = False  # Support unauthenticated\n         self.auth = False  # Support authentication\n+        # An array of objects like:\n+        # {\n+        #     \"listen_addr\": \"127.0.0.1\"\n+        #     \"listen_port\": 28276\n+        #     \"node\": python_p2p_node,\n+        #     \"requested_to_addr\": \"the_client_asked_to_connect_to_this_addr.onion\",",
      "path": "test/functional/test_framework/socks5.py",
      "position": 17,
      "original_position": 17,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267276546,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both `.node` and `.requested_to_addr` members are used by the test - `.node` is used to check/query what messages `bitcoind` has sent to this peer and `.requested_to_addr` is used to check that the connection was made to an `.onion` address (and not e.g. an IPv4 address).",
      "created_at": "2023-07-30T03:19:10Z",
      "updated_at": "2023-07-30T03:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278482946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 46,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278493071",
      "pull_request_review_id": 1553553290,
      "id": 1278493071,
      "node_id": "PRRC_kwDOABII585MNEGP",
      "diff_hunk": "@@ -116,6 +127,30 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.info('Proxy: %s', cmdin)\n+\n+            if self.serv.conf.destinations_used < len(self.serv.conf.destinations):",
      "path": "test/functional/test_framework/socks5.py",
      "position": null,
      "original_position": 30,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267277048,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't do that because my idea was to fall back to the old behavior of just closing the connection after the first `N` connections have been redirected (all destinations have been used). But you are right, I added a warning message now to ease diagnosing test behavior if that happens. Didn't `raise` because there is no error from the point of view of `socks5.py`.",
      "created_at": "2023-07-30T03:37:09Z",
      "updated_at": "2023-07-30T03:37:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278493071",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278493071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278505682",
      "pull_request_review_id": 1553575220,
      "id": 1278505682,
      "node_id": "PRRC_kwDOABII585MNHLS",
      "diff_hunk": "@@ -1003,13 +1003,35 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n+bool CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n     LOCK(cs);\n \n     if (m_unbroadcast_txids.erase(txid))\n     {\n         LogPrint(BCLog::MEMPOOL, \"Removed %i from set of unbroadcast txns%s\\n\", txid.GetHex(), (unchecked ? \" before confirmation that txn was sent out\" : \"\"));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CTxMemPool::IsUnbroadcastTx(const GenTxid& gtxid) const",
      "path": "src/txmempool.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267279962,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just for convenience to be able to check if this is an unbroadcast transaction from `PeerManagerImpl::AlreadyHaveTx()` which has the id as `GenTxid`.\r\n\r\n`CTxMemPool::m_unbroadcast_txids` tracks transactions by `txid` (not `wtxid`). This is relevant: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460495254.",
      "created_at": "2023-07-30T04:08:51Z",
      "updated_at": "2023-07-30T04:08:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278505682",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278505682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1017,
      "original_line": 1017,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506090",
      "pull_request_review_id": 1553575688,
      "id": 1278506090,
      "node_id": "PRRC_kwDOABII585MNHRq",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! I added `-cjdnsreachable`. This changed the test from:\r\n\r\n```\r\nTestFramework (DEBUG): Could not add [fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa] to node0's addrman (collision?)\r\n```\r\n\r\nto\r\n\r\n```\r\nTestFramework (DEBUG): Added [fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa] to node0's addrman\r\n```\r\n\r\nThanks!",
      "created_at": "2023-07-30T04:16:01Z",
      "updated_at": "2023-07-30T04:16:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278506090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506979",
      "pull_request_review_id": 1553576461,
      "id": 1278506979,
      "node_id": "PRRC_kwDOABII585MNHfj",
      "diff_hunk": "@@ -2092,6 +2141,26 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     };\n }\n \n+bool PeerManagerImpl::UseSensitiveRelay() const\n+{\n+    return gArgs.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276243984,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't find an options struct in `PeerManager` or in `PeerManagerImpl`. Did you mean `struct CConnman::Options`? `gArgs` is used in some other places in `PeerManagerImpl` too, so I assumed it is ok.\r\n\r\nEdit: I see the options struct was added recently and caused this not to compile. Rebased and changed this to use `PeerManager::m_opts`.",
      "created_at": "2023-07-30T04:30:55Z",
      "updated_at": "2023-07-30T05:07:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278506979",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278507242",
      "pull_request_review_id": 1553576679,
      "id": 1278507242,
      "node_id": "PRRC_kwDOABII585MNHjq",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess an alternative would be to have a new method `PeerManagerImpl::PushMessage()` which does this check and then calls `CConnman::PushMessage()`. And replace all calls to `m_connman.PushMessage()` (there are 53 of them) with `PushMessage()`. Would that be desirable?",
      "created_at": "2023-07-30T04:35:14Z",
      "updated_at": "2023-07-30T04:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278507242",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278507242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278521260",
      "pull_request_review_id": 1553591840,
      "id": 1278521260,
      "node_id": "PRRC_kwDOABII585MNK-s",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be good to enumerate why this is needed (if at all).",
      "created_at": "2023-07-30T07:05:16Z",
      "updated_at": "2023-07-30T07:05:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278521260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278521260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279249579",
      "pull_request_review_id": 1554700574,
      "id": 1279249579,
      "node_id": "PRRC_kwDOABII585MP8yr",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 97,
      "original_position": 46,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_(beware, https://bikeshed.com/)_\r\n\r\nI think any constant is ok and `bitcoin-submittx`'s string (`/pynode:0.0.1/`) was already suggested by @sipa here https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418. That suggestion has 6 positive reactions. It is about increasing the anonymity set, in case different versions or different softwares use this technique.\r\n\r\n> some kind of standard for \"I am not telling you\"\r\n\r\nI don't think there is, but we can standardize `/pynode:0.0.1/` as \"I am not telling you\"? ;-)\r\n\r\nShould I change this to an empty string? If this comment collects more :+1: + :heart: than https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418 then I will change it.",
      "created_at": "2023-07-31T12:49:38Z",
      "updated_at": "2023-07-31T12:49:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279249579",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279249579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1441,
      "original_line": 1441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279277093",
      "pull_request_review_id": 1554746026,
      "id": 1279277093,
      "node_id": "PRRC_kwDOABII585MQDgl",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is good to have all unneeded messages dropped from a central place (where all messages go through) even if it seems that the code will not send such messages now - this way it is proof wrt future changes. The code that decides which message to send is scattered all over the place and is difficult to follow.\r\n\r\nI added this comment\r\n\r\n```cpp\r\n// Ensure sensitive relay connections only send VERSION, VERACK, TX or PING. Others are not needed and may degrade privacy.\r\n```\r\n\r\n",
      "created_at": "2023-07-31T13:14:02Z",
      "updated_at": "2023-07-31T13:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279277093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279277093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279295208",
      "pull_request_review_id": 1554774350,
      "id": 1279295208,
      "node_id": "PRRC_kwDOABII585MQH7o",
      "diff_hunk": "@@ -2851,6 +2951,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure sensitive relay connections only send VERSION, VERACK, TX or PING. Others are not needed and may degrade privacy.",
      "path": "src/net.cpp",
      "position": 316,
      "original_position": 316,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        // Ensure sensitive relay connections only send the above message types. Others are not needed and may degrade privacy.\r\n```\r\n\r\n(nit), to avoid having to touch this line again in the future, if something changes.",
      "created_at": "2023-07-31T13:26:42Z",
      "updated_at": "2023-08-01T06:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279295208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279295208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2960,
      "original_line": 2960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279655081",
      "pull_request_review_id": 1555409244,
      "id": 1279655081,
      "node_id": "PRRC_kwDOABII585MRfyp",
      "diff_hunk": "@@ -3576,6 +3716,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTxToSensistiveRelay(pfrom, *peer, interruptMsgProc);\n+\n+            peer->m_ping_queued = true; // Ensure a ping will be send: mimick a request via RPC.",
      "path": "src/net_processing.cpp",
      "position": 428,
      "original_position": 428,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/send/sent",
      "created_at": "2023-07-31T17:24:06Z",
      "updated_at": "2023-07-31T18:54:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279655081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279655081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3728,
      "original_line": 3728,
      "side": "RIGHT"
    }
  ]
}