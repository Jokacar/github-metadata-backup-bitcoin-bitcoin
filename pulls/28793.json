{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793",
    "id": 1587220176,
    "node_id": "PR_kwDOABII585emw7Q",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28793",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28793.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28793.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fde0193e687ad50a01a191e14fb6c052b3534bc1",
    "number": 28793,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "contrib: Add asmap-tool",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds `asmap.py` and `asmap-tool.py` from sipa's `nextgen` branch: https://github.com/sipa/asmap/tree/nextgen \r\n\r\nThe motivation is that we should maintain the tooling for de- and encoding asmap files within the bitcoin core repository because it is not possible to use an asmap file that is not encoded.\r\n\r\nWe already had an earlier version of `asmap.py` within the seeds contrib tools. The newer version only had a small amount of changes and is still compatible, so the old version is removed from contrib/seeds and the new version is made available to `makeseeds.py`.",
    "labels": [
      {
        "id": 231994551,
        "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
        "name": "Scripts and tools",
        "color": "ffffee",
        "default": false
      }
    ],
    "created_at": "2023-11-04T22:21:32Z",
    "updated_at": "2023-11-09T01:19:59Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4918eb79bccbbbbce4c2b7360892af85572fbd8d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:2023-11-asmap-tool-nextgen",
      "ref": "2023-11-asmap-tool-nextgen",
      "sha": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 230600,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-06T20:12:41Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2022-02-24T18:41:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4cebad4833804189bade4fa694b413ce47872ce7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35930,
        "stargazers_count": 72066,
        "watchers_count": 72066,
        "size": 244604,
        "default_branch": "master",
        "open_issues_count": 631,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-09T01:50:47Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-11-09T01:11:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 168,
    "deletions": 1,
    "changed_files": 4,
    "commits": 1,
    "review_comments": 7,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 1793568494,
      "node_id": "IC_kwDOABII585q567u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793568494",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T22:21:35Z",
      "updated_at": "2023-11-08T16:29:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28793).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [luke-jr](https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1802243288) |\n| Concept ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1796514184) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1793568494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793"
    },
    {
      "event": "labeled",
      "id": 10863740309,
      "node_id": "LE_lADOABII58513sPHzwAAAAKHh4WV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10863740309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T22:21:37Z",
      "label": {
        "name": "Scripts and tools",
        "color": "ffffee"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T22:35:03Z",
      "updated_at": "2023-11-04T22:35:03Z",
      "source": {
        "issue": {
          "id": 1977537054,
          "node_id": "I_kwDOABII58513tIe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28794",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28794/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28794/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28794/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28794",
          "number": 28794,
          "state": "open",
          "state_reason": null,
          "title": "Embedded ASMap data Tracking Issue",
          "body": "This issue will be updated continuously to reflect the process of embedding ASMap data in Bitcoin Core, so asmap can be used without procuring an asmap file first. Having the asmap data available embedded is a requirement for potentially using it by default in the future. \r\n\r\n**PRs Ready for review:**\r\n- https://github.com/bitcoin/bitcoin/pull/27581\r\n- https://github.com/bitcoin/bitcoin/pull/28793\r\n\r\n**Looking for conceptual review:**\r\n- https://github.com/bitcoin/bitcoin/pull/28792\r\n\r\n**TODOs**\r\n\r\nImplement means of embedding an ASMap file within a bitcoin core releases\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28792\r\nOR\r\n- [ ] [WIP] Embedding asmap file during release build phase\r\n\r\nEncoding tools available within Bitcoin Core\r\n- [ ] (optional) https://github.com/bitcoin/bitcoin/pull/28793\r\n\r\nAnalysis/logging of file performance\r\n- [ ] (optional) https://github.com/bitcoin/bitcoin/pull/27581\r\n\r\n**Misc related topics**\r\n\r\nRelated topics like sourcing of input data, communication etc. that are outside of the scope of this repo will go here soon",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "created_at": "2023-11-04T22:35:03Z",
          "updated_at": "2023-11-08T16:14:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10863773976,
      "node_id": "HRFPE_lADOABII58513sPHzwAAAAKHiAkY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10863773976",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T22:50:35Z"
    },
    {
      "event": "labeled",
      "id": 10863774981,
      "node_id": "LE_lADOABII58513sPHzwAAAAKHiA0F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10863774981",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T22:51:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10863833138,
      "node_id": "UNLE_lADOABII58513sPHzwAAAAKHiPAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10863833138",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T23:31:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1713892958,
      "node_id": "PRR_kwDOABII585mJ-5e",
      "url": null,
      "actor": null,
      "commit_id": "14ff89353f6fbaa879903f63c03d76003f1f80de",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#pullrequestreview-1713892958",
      "submitted_at": "2023-11-05T00:42:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkZTAxOTNlNjg3YWQ1MGEwMWExOTFlMTRmYjZjMDUyYjM1MzRiYzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "tree": {
        "sha": "855c126513ded1a8a9f8bc84113683431783b5a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/855c126513ded1a8a9f8bc84113683431783b5a8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 855c126513ded1a8a9f8bc84113683431783b5a8\nparent feae4e04389b89e18a411596c4f2cdc18663a1ef\nauthor Fabian Jahr <fjahr@protonmail.com> 1698865518 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1699301552 +0100\n\ncontrib: Add asmap-tool\n\nCo-authored-by: Pieter Wuille <pieter@wuille.net>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmVJSLAVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN2UQP/RRZ2VTzM2SGcoGfcgM8m50hur6t\n/aEj6thPAlMsPtRI/YExyX39aH2mbYyTgK9SBVGIvUhflXt4KoFVFOapbt2uiJOq\nPrSFjAc4ixilnLiooGHyRpCwLtzhsPzrcV1CTKYf3Hs7GZlqGXHAC5Y/neVhKFGi\nspFQesn+vB+jS7SC4KQU4d/z0j7A2ydiioK1YJWKrHJIhKqIyco9soZZbx31lCPw\nPuulrQzNFFRaLTO1aD11BEmUjYBSX0Eal5wvYFGAntOkKihfLlWUbroOdz5qcY+C\nrsnFrWnbgVVxeVGjG4GLhPaNyIwu5HztHlNuVcB+txtTbeDE+S18I0uqk+o25tqA\n6vgv0o3ZQ7967PsjnrUxki8ldImaqOFX4kKpl1OUnx3E86H2zbit9QHwV2R12NVm\neuMlPQ69quUszCMdh5ShMJ+cHVaZ1cCu0wlltxH8uwxxRPyeLBKi2pBPIAmV/d0z\nqbqLcOstJiDd2nIdPp1YuBMFdrLiJuQ7z4TQMjOUvAqRLkrueTEJCbriAuoOLcoS\nkN801zS07wxeP2SalkUJbK/XF8a4CXreNv0yEvpmIDbW4bY0BthBRt3OX8Pd1HqK\n3wZrI7mq7yBs1M2uVx+ddnaEaEScv6Ymfrz9XQSOwzcI3xCO3TN5LfmeYwOqV87f\n+oFQJTodwG+iewMf\n=xLFt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/feae4e04389b89e18a411596c4f2cdc18663a1ef",
          "sha": "feae4e04389b89e18a411596c4f2cdc18663a1ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/feae4e04389b89e18a411596c4f2cdc18663a1ef"
        }
      ],
      "message": "contrib: Add asmap-tool\n\nCo-authored-by: Pieter Wuille <pieter@wuille.net>",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2023-11-06T20:12:32Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2023-11-01T19:05:18Z"
      },
      "sha": "fde0193e687ad50a01a191e14fb6c052b3534bc1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10878066777,
      "node_id": "HRFPE_lADOABII58513sPHzwAAAAKIYiBZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10878066777",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-06T20:12:46Z"
    },
    {
      "event": "commented",
      "id": 1796514184,
      "node_id": "IC_kwDOABII585rFKGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1796514184",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-06T21:23:50Z",
      "updated_at": "2023-11-06T21:23:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1796514184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793"
    },
    {
      "event": "reviewed",
      "id": 1716269691,
      "node_id": "PRR_kwDOABII585mTDJ7",
      "url": null,
      "actor": null,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#pullrequestreview-1716269691",
      "submitted_at": "2023-11-06T21:25:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
    },
    {
      "event": "reviewed",
      "id": 1716275437,
      "node_id": "PRR_kwDOABII585mTEjt",
      "url": null,
      "actor": null,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#pullrequestreview-1716275437",
      "submitted_at": "2023-11-06T21:29:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
    },
    {
      "event": "reviewed",
      "id": 1716283000,
      "node_id": "PRR_kwDOABII585mTGZ4",
      "url": null,
      "actor": null,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#pullrequestreview-1716283000",
      "submitted_at": "2023-11-06T21:35:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
    },
    {
      "event": "reviewed",
      "id": 1718839619,
      "node_id": "PRR_kwDOABII585mc2lD",
      "url": null,
      "actor": null,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#pullrequestreview-1718839619",
      "submitted_at": "2023-11-07T21:46:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
    },
    {
      "event": "commented",
      "id": 1802243288,
      "node_id": "IC_kwDOABII585rbAzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1802243288",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T16:28:57Z",
      "updated_at": "2023-11-08T16:28:57Z",
      "author_association": "MEMBER",
      "body": "Concept NACK\r\n\r\n>The motivation is that we should maintain the tooling for de- and encoding asmap files within the bitcoin core repository because it is not possible to use an asmap file that is not encoded.\r\n\r\nThat's not a reason. Ideally, the current repo should be split into several itself - but we have technical hurdles to get to that point. No reason to add more here \"just because\"",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1802243288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793"
    },
    {
      "event": "commented",
      "id": 1803013981,
      "node_id": "IC_kwDOABII585rd89d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1803013981",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-09T01:19:59Z",
      "updated_at": "2023-11-09T01:19:59Z",
      "author_association": "MEMBER",
      "body": "I'm fine with adding another contrib script here. But we could also make a new repo under bitcoin-core. Perhaps the choice depends on whether this tool is mainly useful for users, developers or maintainers ([bitcoin-core/bitcoin-maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools))?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#issuecomment-1803013981",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28793"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382486877",
      "pull_request_review_id": 1713892958,
      "id": 1382486877,
      "node_id": "PRRC_kwDOABII585SZxNd",
      "diff_hunk": "@@ -0,0 +1,154 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):\n+    try:\n+        contents = input_file.read()\n+    except OSError as err:\n+        sys.exit(\"Input file '%s' cannot be read: %s.\" % (input_file.name, err.strerror))\n+    try:\n+        bin_asmap = asmap.ASMap.from_binary(contents)\n+    except ValueError:\n+        bin_asmap = None\n+    txt_error = None\n+    entries = None\n+    try:\n+        txt_contents = str(contents, encoding=\"utf-8\")\n+    except UnicodeError:\n+        txt_error = \"invalid UTF-8\"\n+        txt_contents = None\n+    if txt_contents is not None:\n+        entries = []\n+        for line in txt_contents.split(\"\\n\"):\n+            idx = line.find('#')\n+            if idx >= 0:\n+                line = line[:idx]\n+            line = line.lstrip(' ').rstrip(' \\t\\r\\n')\n+            if len(line) == 0:\n+                continue\n+            fields = line.split(' ')\n+            if len(fields) != 2:\n+                txt_error = \"unparseable line '%s'\" % line\n+                entries = None\n+                break\n+            prefix, asn = fields\n+            if len(asn) <= 2 or asn[:2] != \"AS\" or any(c < '0' or c > '9' for c in asn[2:]):\n+                txt_error = \"invalid ASN '%s'\" % asn\n+                entries = None\n+                break\n+            try:\n+                net = ipaddress.ip_network(prefix)\n+            except ValueError:\n+                txt_error = \"invalid network '%s'\" % prefix\n+                entries = None\n+                break\n+            entries.append((asmap.net_to_prefix(net), int(asn[2:])))\n+    if entries is not None and bin_asmap is not None and len(contents) > 0:\n+        sys.exit(\"Input file '%s' is ambiguous.\" % input_file.name)\n+    if entries is not None:\n+        if state is None:\n+            state = asmap.ASMap()\n+        state.update_multi(entries)\n+        return state\n+    if bin_asmap is not None:\n+        if state is None:\n+            return bin_asmap\n+        sys.exit(\"Input file '%s' is binary, and cannot be applied as a patch.\" % input_file.name)\n+    sys.exit(\"Input file '%s' is neither a valid binary asmap file nor valid text input (%s).\" % (input_file.name, txt_error))\n+\n+\n+def save_binary(output_file, state, fill):\n+    contents = state.to_binary(fill=fill)\n+    try:\n+        output_file.write(contents)\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def save_text(output_file, state, fill, overlapping):\n+    for prefix, asn in state.to_entries(fill=fill, overlapping=overlapping):\n+        net = asmap.prefix_to_net(prefix)\n+        try:\n+            print(\"%s AS%i\" % (net, asn), file=output_file)\n+        except OSError as err:\n+            sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+    try:\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def main():\n+    parser = argparse.ArgumentParser(description=\"Tool for performing various operations on textual and binary asmap files.\")\n+    subparsers = parser.add_subparsers(title=\"valid subcommands\", dest=\"subcommand\")\n+\n+    parser_encode = subparsers.add_parser(\"encode\", help=\"convert asmap data to binary format\")\n+    parser_encode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce size\")\n+    parser_encode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_encode.add_argument('outfile', nargs='?', type=argparse.FileType('wb'), default=sys.stdout.buffer,\n+                               help=\"output binary asmap file; default is stdout\")\n+\n+    parser_decode = subparsers.add_parser(\"decode\", help=\"convert asmap data to text format\")\n+    parser_decode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce length\")\n+    parser_decode.add_argument('-n', '--nonoverlapping', dest=\"overlapping\", default=True, action=\"store_false\",\n+                               help=\"output strictly non-overallping network ranges (increases output size)\")\n+    parser_decode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_decode.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout,\n+                               help=\"output text file; default is stdout\")\n+\n+    parser_diff = subparsers.add_parser(\"diff\", help=\"compute the difference between two asmap files\")\n+    parser_diff.add_argument('-i', '--ignore-unassigned', dest=\"ignore_unassigned\", default=False, action=\"store_true\",\n+                             help=\"ignore unassigned ranges in the first input (useful when second input is filled)\")\n+    parser_diff.add_argument('-u', '--unified', dest=\"unified\", default=False, action=\"store_true\",",
      "path": "contrib/asmap/asmap-tool.py",
      "position": null,
      "original_position": 113,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "14ff89353f6fbaa879903f63c03d76003f1f80de",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was never implemented, it should probably be dropped.",
      "created_at": "2023-11-05T00:42:46Z",
      "updated_at": "2023-11-05T00:42:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1382486877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382486877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383924519",
      "pull_request_review_id": 1716162584,
      "id": 1383924519,
      "node_id": "PRRC_kwDOABII585SfQMn",
      "diff_hunk": "@@ -0,0 +1,154 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):\n+    try:\n+        contents = input_file.read()\n+    except OSError as err:\n+        sys.exit(\"Input file '%s' cannot be read: %s.\" % (input_file.name, err.strerror))\n+    try:\n+        bin_asmap = asmap.ASMap.from_binary(contents)\n+    except ValueError:\n+        bin_asmap = None\n+    txt_error = None\n+    entries = None\n+    try:\n+        txt_contents = str(contents, encoding=\"utf-8\")\n+    except UnicodeError:\n+        txt_error = \"invalid UTF-8\"\n+        txt_contents = None\n+    if txt_contents is not None:\n+        entries = []\n+        for line in txt_contents.split(\"\\n\"):\n+            idx = line.find('#')\n+            if idx >= 0:\n+                line = line[:idx]\n+            line = line.lstrip(' ').rstrip(' \\t\\r\\n')\n+            if len(line) == 0:\n+                continue\n+            fields = line.split(' ')\n+            if len(fields) != 2:\n+                txt_error = \"unparseable line '%s'\" % line\n+                entries = None\n+                break\n+            prefix, asn = fields\n+            if len(asn) <= 2 or asn[:2] != \"AS\" or any(c < '0' or c > '9' for c in asn[2:]):\n+                txt_error = \"invalid ASN '%s'\" % asn\n+                entries = None\n+                break\n+            try:\n+                net = ipaddress.ip_network(prefix)\n+            except ValueError:\n+                txt_error = \"invalid network '%s'\" % prefix\n+                entries = None\n+                break\n+            entries.append((asmap.net_to_prefix(net), int(asn[2:])))\n+    if entries is not None and bin_asmap is not None and len(contents) > 0:\n+        sys.exit(\"Input file '%s' is ambiguous.\" % input_file.name)\n+    if entries is not None:\n+        if state is None:\n+            state = asmap.ASMap()\n+        state.update_multi(entries)\n+        return state\n+    if bin_asmap is not None:\n+        if state is None:\n+            return bin_asmap\n+        sys.exit(\"Input file '%s' is binary, and cannot be applied as a patch.\" % input_file.name)\n+    sys.exit(\"Input file '%s' is neither a valid binary asmap file nor valid text input (%s).\" % (input_file.name, txt_error))\n+\n+\n+def save_binary(output_file, state, fill):\n+    contents = state.to_binary(fill=fill)\n+    try:\n+        output_file.write(contents)\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def save_text(output_file, state, fill, overlapping):\n+    for prefix, asn in state.to_entries(fill=fill, overlapping=overlapping):\n+        net = asmap.prefix_to_net(prefix)\n+        try:\n+            print(\"%s AS%i\" % (net, asn), file=output_file)\n+        except OSError as err:\n+            sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+    try:\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def main():\n+    parser = argparse.ArgumentParser(description=\"Tool for performing various operations on textual and binary asmap files.\")\n+    subparsers = parser.add_subparsers(title=\"valid subcommands\", dest=\"subcommand\")\n+\n+    parser_encode = subparsers.add_parser(\"encode\", help=\"convert asmap data to binary format\")\n+    parser_encode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce size\")\n+    parser_encode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_encode.add_argument('outfile', nargs='?', type=argparse.FileType('wb'), default=sys.stdout.buffer,\n+                               help=\"output binary asmap file; default is stdout\")\n+\n+    parser_decode = subparsers.add_parser(\"decode\", help=\"convert asmap data to text format\")\n+    parser_decode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce length\")\n+    parser_decode.add_argument('-n', '--nonoverlapping', dest=\"overlapping\", default=True, action=\"store_false\",\n+                               help=\"output strictly non-overallping network ranges (increases output size)\")\n+    parser_decode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_decode.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout,\n+                               help=\"output text file; default is stdout\")\n+\n+    parser_diff = subparsers.add_parser(\"diff\", help=\"compute the difference between two asmap files\")\n+    parser_diff.add_argument('-i', '--ignore-unassigned', dest=\"ignore_unassigned\", default=False, action=\"store_true\",\n+                             help=\"ignore unassigned ranges in the first input (useful when second input is filled)\")\n+    parser_diff.add_argument('-u', '--unified', dest=\"unified\", default=False, action=\"store_true\",",
      "path": "contrib/asmap/asmap-tool.py",
      "position": null,
      "original_position": 113,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "14ff89353f6fbaa879903f63c03d76003f1f80de",
      "in_reply_to_id": 1382486877,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2023-11-06T20:13:13Z",
      "updated_at": "2023-11-06T20:13:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1383924519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383924519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384011959",
      "pull_request_review_id": 1716269691,
      "id": 1384011959,
      "node_id": "PRRC_kwDOABII585Sfli3",
      "diff_hunk": "@@ -0,0 +1,152 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):\n+    try:\n+        contents = input_file.read()\n+    except OSError as err:\n+        sys.exit(\"Input file '%s' cannot be read: %s.\" % (input_file.name, err.strerror))",
      "path": "contrib/asmap/asmap-tool.py",
      "position": 16,
      "original_position": 16,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fde0193e687ad50a01a191e14fb6c052b3534bc1: perhaps using f-strings in all similar cases?",
      "created_at": "2023-11-06T21:25:36Z",
      "updated_at": "2023-11-06T21:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1384011959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384011959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384016700",
      "pull_request_review_id": 1716275437,
      "id": 1384016700,
      "node_id": "PRRC_kwDOABII585Sfms8",
      "diff_hunk": "@@ -0,0 +1,152 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):\n+    try:\n+        contents = input_file.read()\n+    except OSError as err:\n+        sys.exit(\"Input file '%s' cannot be read: %s.\" % (input_file.name, err.strerror))\n+    try:\n+        bin_asmap = asmap.ASMap.from_binary(contents)\n+    except ValueError:\n+        bin_asmap = None\n+    txt_error = None\n+    entries = None\n+    try:\n+        txt_contents = str(contents, encoding=\"utf-8\")\n+    except UnicodeError:\n+        txt_error = \"invalid UTF-8\"\n+        txt_contents = None\n+    if txt_contents is not None:\n+        entries = []\n+        for line in txt_contents.split(\"\\n\"):\n+            idx = line.find('#')\n+            if idx >= 0:\n+                line = line[:idx]\n+            line = line.lstrip(' ').rstrip(' \\t\\r\\n')\n+            if len(line) == 0:\n+                continue\n+            fields = line.split(' ')\n+            if len(fields) != 2:\n+                txt_error = \"unparseable line '%s'\" % line\n+                entries = None\n+                break\n+            prefix, asn = fields\n+            if len(asn) <= 2 or asn[:2] != \"AS\" or any(c < '0' or c > '9' for c in asn[2:]):\n+                txt_error = \"invalid ASN '%s'\" % asn\n+                entries = None\n+                break\n+            try:\n+                net = ipaddress.ip_network(prefix)\n+            except ValueError:\n+                txt_error = \"invalid network '%s'\" % prefix\n+                entries = None\n+                break\n+            entries.append((asmap.net_to_prefix(net), int(asn[2:])))\n+    if entries is not None and bin_asmap is not None and len(contents) > 0:\n+        sys.exit(\"Input file '%s' is ambiguous.\" % input_file.name)\n+    if entries is not None:\n+        if state is None:\n+            state = asmap.ASMap()\n+        state.update_multi(entries)\n+        return state\n+    if bin_asmap is not None:\n+        if state is None:\n+            return bin_asmap\n+        sys.exit(\"Input file '%s' is binary, and cannot be applied as a patch.\" % input_file.name)\n+    sys.exit(\"Input file '%s' is neither a valid binary asmap file nor valid text input (%s).\" % (input_file.name, txt_error))\n+\n+\n+def save_binary(output_file, state, fill):\n+    contents = state.to_binary(fill=fill)\n+    try:\n+        output_file.write(contents)\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def save_text(output_file, state, fill, overlapping):\n+    for prefix, asn in state.to_entries(fill=fill, overlapping=overlapping):\n+        net = asmap.prefix_to_net(prefix)\n+        try:\n+            print(\"%s AS%i\" % (net, asn), file=output_file)\n+        except OSError as err:\n+            sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+    try:\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def main():\n+    parser = argparse.ArgumentParser(description=\"Tool for performing various operations on textual and binary asmap files.\")\n+    subparsers = parser.add_subparsers(title=\"valid subcommands\", dest=\"subcommand\")\n+\n+    parser_encode = subparsers.add_parser(\"encode\", help=\"convert asmap data to binary format\")\n+    parser_encode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce size\")\n+    parser_encode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_encode.add_argument('outfile', nargs='?', type=argparse.FileType('wb'), default=sys.stdout.buffer,\n+                               help=\"output binary asmap file; default is stdout\")\n+\n+    parser_decode = subparsers.add_parser(\"decode\", help=\"convert asmap data to text format\")\n+    parser_decode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce length\")\n+    parser_decode.add_argument('-n', '--nonoverlapping', dest=\"overlapping\", default=True, action=\"store_false\",\n+                               help=\"output strictly non-overallping network ranges (increases output size)\")\n+    parser_decode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_decode.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout,\n+                               help=\"output text file; default is stdout\")\n+\n+    parser_diff = subparsers.add_parser(\"diff\", help=\"compute the difference between two asmap files\")\n+    parser_diff.add_argument('-i', '--ignore-unassigned', dest=\"ignore_unassigned\", default=False, action=\"store_true\",\n+                             help=\"ignore unassigned ranges in the first input (useful when second input is filled)\")\n+    parser_diff.add_argument('infile1', type=argparse.FileType('rb'),\n+                             help=\"first file to compare (text or binary)\")\n+    parser_diff.add_argument('infile2', type=argparse.FileType('rb'),\n+                             help=\"second file to compare (text or binary)\")\n+\n+    args = parser.parse_args()\n+    if args.subcommand is None:\n+        parser.print_help()\n+    elif args.subcommand == \"encode\":\n+        state = load_file(args.infile)\n+        save_binary(args.outfile, state, fill=args.fill)\n+    elif args.subcommand == \"decode\":\n+        state = load_file(args.infile)\n+        save_text(args.outfile, state, fill=args.fill, overlapping=args.overlapping)\n+    elif args.subcommand == \"diff\":\n+        state1 = load_file(args.infile1)\n+        state2 = load_file(args.infile2)\n+        ipv4_changed = 0\n+        ipv6_changed = 0\n+        for prefix, old_asn, new_asn in state1.diff(state2):\n+            if args.ignore_unassigned and old_asn == 0:\n+                continue\n+            net = asmap.prefix_to_net(prefix)\n+            if isinstance(net, ipaddress.IPv4Network):\n+                ipv4_changed += 1 << (32 - net.prefixlen)\n+            elif isinstance(net, ipaddress.IPv6Network):\n+                ipv6_changed += 1 << (128 - net.prefixlen)\n+            if new_asn == 0:\n+                print(\"# %s was AS%i\" % (net, old_asn))\n+            elif old_asn == 0:\n+                print(\"%s AS%i # was unassigned\" % (net, new_asn))\n+            else:\n+                print(\"%s AS%i # was AS%i\" % (net, new_asn, old_asn))\n+        print(\"# %i (2^%f) IPv4 addresses changed; %i (2^%f) IPv6 addresses changed\" % (ipv4_changed, math.log2(ipv4_changed), ipv6_changed, math.log2(ipv6_changed)))",
      "path": "contrib/asmap/asmap-tool.py",
      "position": 146,
      "original_position": 146,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "from https://github.com/sipa/asmap/pull/9/\r\n\r\n```suggestion\r\n        print(\r\n            \"# %i%s IPv4 addresses changed; %i%s IPv6 addresses changed\"\r\n            % (\r\n                ipv4_changed,\r\n                \"\" if ipv4_changed == 0 else \" (2^%.2f)\" % math.log2(ipv4_changed),\r\n                ipv6_changed,\r\n                \"\" if ipv6_changed == 0 else \" (2^%.2f)\" % math.log2(ipv6_changed),\r\n            )\r\n        )\r\n```",
      "created_at": "2023-11-06T21:29:47Z",
      "updated_at": "2023-11-06T21:29:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1384016700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384016700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384023104",
      "pull_request_review_id": 1716283000,
      "id": 1384023104,
      "node_id": "PRRC_kwDOABII585SfoRA",
      "diff_hunk": "@@ -0,0 +1,152 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):",
      "path": "contrib/asmap/asmap-tool.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fde0193e687ad50a01a191e14fb6c052b3534bc1: Is there any case of `state` not being `None` for any `load_file` usage?",
      "created_at": "2023-11-06T21:35:27Z",
      "updated_at": "2023-11-06T21:35:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1384023104",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384023104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385624420",
      "pull_request_review_id": 1718839156,
      "id": 1385624420,
      "node_id": "PRRC_kwDOABII585SlvNk",
      "diff_hunk": "@@ -0,0 +1,152 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):",
      "path": "contrib/asmap/asmap-tool.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "in_reply_to_id": 1384023104,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not right now; we could drop that for now. I think the idea was supporting loading an asmap, and then also loading a patch file on top of it (which could be created by diffing).",
      "created_at": "2023-11-07T21:46:23Z",
      "updated_at": "2023-11-07T21:46:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1385624420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385624420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385624685",
      "pull_request_review_id": 1718839619,
      "id": 1385624685,
      "node_id": "PRRC_kwDOABII585SlvRt",
      "diff_hunk": "@@ -0,0 +1,152 @@\n+# Copyright (c) 2022 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import sys\n+import ipaddress\n+import math\n+\n+import asmap\n+\n+def load_file(input_file, state=None):\n+    try:\n+        contents = input_file.read()\n+    except OSError as err:\n+        sys.exit(\"Input file '%s' cannot be read: %s.\" % (input_file.name, err.strerror))\n+    try:\n+        bin_asmap = asmap.ASMap.from_binary(contents)\n+    except ValueError:\n+        bin_asmap = None\n+    txt_error = None\n+    entries = None\n+    try:\n+        txt_contents = str(contents, encoding=\"utf-8\")\n+    except UnicodeError:\n+        txt_error = \"invalid UTF-8\"\n+        txt_contents = None\n+    if txt_contents is not None:\n+        entries = []\n+        for line in txt_contents.split(\"\\n\"):\n+            idx = line.find('#')\n+            if idx >= 0:\n+                line = line[:idx]\n+            line = line.lstrip(' ').rstrip(' \\t\\r\\n')\n+            if len(line) == 0:\n+                continue\n+            fields = line.split(' ')\n+            if len(fields) != 2:\n+                txt_error = \"unparseable line '%s'\" % line\n+                entries = None\n+                break\n+            prefix, asn = fields\n+            if len(asn) <= 2 or asn[:2] != \"AS\" or any(c < '0' or c > '9' for c in asn[2:]):\n+                txt_error = \"invalid ASN '%s'\" % asn\n+                entries = None\n+                break\n+            try:\n+                net = ipaddress.ip_network(prefix)\n+            except ValueError:\n+                txt_error = \"invalid network '%s'\" % prefix\n+                entries = None\n+                break\n+            entries.append((asmap.net_to_prefix(net), int(asn[2:])))\n+    if entries is not None and bin_asmap is not None and len(contents) > 0:\n+        sys.exit(\"Input file '%s' is ambiguous.\" % input_file.name)\n+    if entries is not None:\n+        if state is None:\n+            state = asmap.ASMap()\n+        state.update_multi(entries)\n+        return state\n+    if bin_asmap is not None:\n+        if state is None:\n+            return bin_asmap\n+        sys.exit(\"Input file '%s' is binary, and cannot be applied as a patch.\" % input_file.name)\n+    sys.exit(\"Input file '%s' is neither a valid binary asmap file nor valid text input (%s).\" % (input_file.name, txt_error))\n+\n+\n+def save_binary(output_file, state, fill):\n+    contents = state.to_binary(fill=fill)\n+    try:\n+        output_file.write(contents)\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def save_text(output_file, state, fill, overlapping):\n+    for prefix, asn in state.to_entries(fill=fill, overlapping=overlapping):\n+        net = asmap.prefix_to_net(prefix)\n+        try:\n+            print(\"%s AS%i\" % (net, asn), file=output_file)\n+        except OSError as err:\n+            sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+    try:\n+        output_file.close()\n+    except OSError as err:\n+        sys.exit(\"Output file '%s' cannot be written to: %s.\" % (output_file.name, err.strerror))\n+\n+def main():\n+    parser = argparse.ArgumentParser(description=\"Tool for performing various operations on textual and binary asmap files.\")\n+    subparsers = parser.add_subparsers(title=\"valid subcommands\", dest=\"subcommand\")\n+\n+    parser_encode = subparsers.add_parser(\"encode\", help=\"convert asmap data to binary format\")\n+    parser_encode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce size\")\n+    parser_encode.add_argument('infile', nargs='?', type=argparse.FileType('rb'), default=sys.stdin.buffer,\n+                               help=\"input asmap file (text or binary); default is stdin\")\n+    parser_encode.add_argument('outfile', nargs='?', type=argparse.FileType('wb'), default=sys.stdout.buffer,\n+                               help=\"output binary asmap file; default is stdout\")\n+\n+    parser_decode = subparsers.add_parser(\"decode\", help=\"convert asmap data to text format\")\n+    parser_decode.add_argument('-f', '--fill', dest=\"fill\", default=False, action=\"store_true\",\n+                               help=\"permit reassigning undefined network ranges arbitrarily to reduce length\")\n+    parser_decode.add_argument('-n', '--nonoverlapping', dest=\"overlapping\", default=True, action=\"store_false\",\n+                               help=\"output strictly non-overallping network ranges (increases output size)\")",
      "path": "contrib/asmap/asmap-tool.py",
      "position": 104,
      "original_position": 104,
      "commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "original_commit_id": "fde0193e687ad50a01a191e14fb6c052b3534bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: typo \"overallping\" (I love criticizing my own code...)",
      "created_at": "2023-11-07T21:46:43Z",
      "updated_at": "2023-11-07T21:46:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28793#discussion_r1385624685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385624685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    }
  ]
}