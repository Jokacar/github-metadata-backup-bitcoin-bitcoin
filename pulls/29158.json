{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158",
    "id": 1660385595,
    "node_id": "PR_kwDOABII585i93k7",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29158",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29158.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29158.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29158",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29158/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ea36af80beeeee0b9de793e52887ba3e164b803c",
    "number": 29158,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "PoC: fuzz chainstate and block managers",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We don't have a fuzzing harness for our main consensus engine [0]. This PR introduces two new targets which respectively fuzz the `BlockManager` and `ChainstateManager` (process headers, blocks, reorgs and assert some invariants in doing so).\r\n\r\nThere is two main obstacles to achieving this: PoW and io. The blocks and chainstate databases can be stored in memory but blocks still need a valid proof of work and to be stored on disk. Niklas solved the first issue in #28043 by simply introducing a global which makes it possible to mock the PoW check (his commit is cherry-picked here). After considering other approaches, i also used globals to mock disk io.\r\n\r\nI'm interested with this PR in getting feedback on the concept and the approach, but also in suggestions of more invariants to be asserting in the `chainstate` fuzz target.\r\n\r\nRegarding other approaches i tried the most potentially promising was to leverage `ld`'s `--wrap` option to mock the syscalls without having to modify non-test code. But i didn't try too hard to make it work: better to have a demo of what can be achieved first with a more trivial way of mocking filesystem calls. If there is interest in these fuzz targets, i can give this approach another look.\r\n\r\nRegarding efficiency, the chainstate fuzz target is quite slow at the moment but i've at least 2x its performance by rebasing on #28960 and making `CheckBlockIndex` callable externally even if `!ShouldCheckBlockIndex()`. Suggestions for performance improvements welcome too.\r\n\r\n---\r\n\r\n[0] Well there is `utxo_total_supply` but it's very specialized toward exercising a specific past bug.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-12-30T10:05:20Z",
    "updated_at": "2024-01-03T10:35:58Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "8944b8ad618763a0b3c3500460c5d14db8ddcecc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:2309_fuzz_chainstate",
      "ref": "2309_fuzz_chainstate",
      "sha": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 228336,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-03T07:39:59Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-11-07T12:50:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4b1196a9855dcd188a24f393aa2fa21e2d61f061",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36363,
        "stargazers_count": 73027,
        "watchers_count": 73027,
        "size": 246961,
        "default_branch": "master",
        "open_issues_count": 685,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-03T09:32:25Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-01-03T10:13:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 800,
    "deletions": 7,
    "changed_files": 10,
    "commits": 6,
    "review_comments": 3,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1N2VmZjExODMzNDVlYzM0MGFhNTYwZDAwY2MwZjlkZDllOTMzZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/457eff1183345ec340aa560d00cc0f9dd9e933ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/457eff1183345ec340aa560d00cc0f9dd9e933ea",
      "tree": {
        "sha": "258c08586cc01890d08a36343824b7241cfb928c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/258c08586cc01890d08a36343824b7241cfb928c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 258c08586cc01890d08a36343824b7241cfb928c\nparent c840dea27edfcfc67beb756ca6eda27b319f93d5\nauthor dergoegge <n.goeggi@gmail.com> 1688725335 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1702907255 +0100\n\nAllow mocking CheckProofOfWork\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWATXcACgkQ4T/BRc0/\nQwT+ggv+Oea5PfQ8FcRDTz87pEQqx1hA8QEygpPISfK5o90lqVg1AcNyQ16N4Mjk\nF7OhDafHS0vrbik+sL0n75LBCpPZA7Xw+EZCvVc6Ibz4hY/9Iu/AID9Id96n5Y21\nL/ldUh+/zWKxjNwRIFrZzlf1jz53t62RvtG1vrs2PVuB3JcDZjce9r6zvDhcf9Jz\nzkYWn7Wa5SQZrlBKwgRzerzANA/FpSxx1gSYw7rHmKoZM8w3S5u/GERE93XqsZ/n\ncKkIY/eVNYjBESetnPv3mgreiXjGdQqwBhCcOF9/8uiRi/s9R+xUzrm4tql5X4Ml\nt2uMbBHIlsjrV6DDlj3ld7K27GXThoI23ycp0IihoFPhVH8KVHczcTsSCeQ1sCHI\nbuaQKs6k9i0+nix6SrYqodaAOk5Y58ewo4OhTlcbfkeIH6Uatgzv5Sc4WMRcTdTm\n9v7hWZncwb1IL86rvUSGYumg2slT5SiAdhkEQ8xQJhGmHEjG7hw6Ty3nwnIF7CcG\nrsZIuiqM\n=FQv8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c840dea27edfcfc67beb756ca6eda27b319f93d5",
          "sha": "c840dea27edfcfc67beb756ca6eda27b319f93d5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c840dea27edfcfc67beb756ca6eda27b319f93d5"
        }
      ],
      "message": "Allow mocking CheckProofOfWork",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-18T13:47:35Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-07T10:22:15Z"
      },
      "sha": "457eff1183345ec340aa560d00cc0f9dd9e933ea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJkYjA4NWUzMmQ5NDliN2M4MjIzMTI2OWE0MTY1YTNlNjJjM2RkOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdb085e32d949b7c82231269a4165a3e62c3dd96",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bdb085e32d949b7c82231269a4165a3e62c3dd96",
      "tree": {
        "sha": "dc0fde2679c1d02114cbf509c4cbb31ecc088c8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc0fde2679c1d02114cbf509c4cbb31ecc088c8d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dc0fde2679c1d02114cbf509c4cbb31ecc088c8d\nparent 457eff1183345ec340aa560d00cc0f9dd9e933ea\nauthor Antoine Poinsot <darosior@protonmail.com> 1703353324 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1703846204 +0100\n\n[PoC] fs: make some filesystem utilities mockable\n\nThe ones used indirectly by the chainstate-related fuzz targets introduced in later commits.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWOoTwACgkQ4T/BRc0/\nQwR6XgwApMJPbxffUwSgiJ85b7Hl5RqwpD2Wsn3oULHOjXkE0/96BgACykO1OZdP\n/l1hNqMlPxOfQl1ose4WrsDmKES5ArLG3eliUj8lyKjtW+TR37ubK8joNQcBqe13\nA11Nr9plhlgWkKbeBOPPTfi5fzaxVSc41WMG3IuBcMQ7s64mWCzz4T+TFHZVYEJt\nGgFGQWDME96iAifFvPuyBBQ7KjpgRczBnlspysrti/t/BMV5gNgDMC+uCQda0l5G\nnFwWiTPbABp6GXL7fj7b8BuhoDd4Q5v82Aa34NlNxB3jRO7o9kwlZrZQYXXXLnlq\n2rgM/PvMP6fyxTZHAGMz9X6fXHsDvxoV3W24U2j3MNTIsJ5U/6/soBwGgQgEUkJC\nkDyD2kVnhFaeU7wB7Z0U6lTGvZWIyUsAlUmXONGc465s7pju3nP0yobS/wQT2pc5\n5udWDjV6owgku/CM81omKcPi3OGgLO2tx77oQJum7fU3ZzLzFS97besCKsOdISMp\nnWRdRv1D\n=yMs7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/457eff1183345ec340aa560d00cc0f9dd9e933ea",
          "sha": "457eff1183345ec340aa560d00cc0f9dd9e933ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/457eff1183345ec340aa560d00cc0f9dd9e933ea"
        }
      ],
      "message": "[PoC] fs: make some filesystem utilities mockable\n\nThe ones used indirectly by the chainstate-related fuzz targets introduced in later commits.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-29T10:36:44Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-23T17:42:04Z"
      },
      "sha": "bdb085e32d949b7c82231269a4165a3e62c3dd96"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU5NzRhZjcxYjRmNjBmNjc3YTZmNjQ0NTBkZWQzYTJiNTczNDlkOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5974af71b4f60f677a6f64450ded3a2b57349d95",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5974af71b4f60f677a6f64450ded3a2b57349d95",
      "tree": {
        "sha": "fed813fca33b02c33b14e882b20549b67e008489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fed813fca33b02c33b14e882b20549b67e008489"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fed813fca33b02c33b14e882b20549b67e008489\nparent bdb085e32d949b7c82231269a4165a3e62c3dd96\nauthor Antoine Poinsot <darosior@protonmail.com> 1703353762 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1703846244 +0100\n\n[PoC] fs: make std re[name,move] mockable\n\nNot in fsbridge because it would be a much larger diff: would have to\noverwrite all fs::rename and fs::remove to fsbridge::re[name,move].\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWOoWQACgkQ4T/BRc0/\nQwS2jAv/XAsgniTePIRvnUzTtsBcj1XN/Uu8h0KDLwvLYx+DAIYjgaFznwsbrmbB\nt7g3ZU7Fm2OgTfE1TFhGgHnEJXKPLGCCkiftOSI0pTHAZ12wGwgEO2QrKMzKm8CL\nK+4y5JXe/BuZMPG2H32Z2/IEH9c/Y0Wi90vYBt7XHHvYR0zH2nceIKe8oBEsjlK9\nbvghw6TI5Gwhplw8FWCACC82zdzVjoSaycM0SyoWj9Q5T1DojqKHiNPmKfjszs56\nPZNtyXcl7U7+LZnEsmvQ5Yobw+z+Q83bIDQAJkTjARK/P1oyvqb/35w0l901r49z\ngznTtr+kUe5Az/T2qx2maTXUOj505aUuT2LvXUmetfS8+w2aKWd+22VtdsoVLYgq\nZdEjgJY+boTe/SI71X8zxIb16rz2xhspqYUynIEEmC1w++SK+5LF8Q1zKiYpvePy\nwkf12t/9WGbA3yGphbrFPY4ev+d/rudhencJlhMN5gkFwaO/zd6Xxc1PEk+Npp5l\nKcFWjLuT\n=0tds\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdb085e32d949b7c82231269a4165a3e62c3dd96",
          "sha": "bdb085e32d949b7c82231269a4165a3e62c3dd96",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bdb085e32d949b7c82231269a4165a3e62c3dd96"
        }
      ],
      "message": "[PoC] fs: make std re[name,move] mockable\n\nNot in fsbridge because it would be a much larger diff: would have to\noverwrite all fs::rename and fs::remove to fsbridge::re[name,move].",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-29T10:37:24Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-23T17:49:22Z"
      },
      "sha": "5974af71b4f60f677a6f64450ded3a2b57349d95"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0ZTA3ZWY2Y2E2MzQ2OTc0NWVhNmU1MTljMTk5YWY2MThkM2Q4NWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4e07ef6ca63469745ea6e519c199af618d3d85d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e07ef6ca63469745ea6e519c199af618d3d85d",
      "tree": {
        "sha": "e110b12f37d722595f9a69f3ad54f08a817571ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e110b12f37d722595f9a69f3ad54f08a817571ef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e110b12f37d722595f9a69f3ad54f08a817571ef\nparent 5974af71b4f60f677a6f64450ded3a2b57349d95\nauthor Antoine Poinsot <darosior@protonmail.com> 1694877706 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1703846246 +0100\n\nfs_helpers: make more filesystem utilities mockable.\n\nFrom `man fmemopen`:\n> There  is  no  file  descriptor  associated with the file stream\nreturned by this function (i.e., fileno(3) will return an error if\ncalled on the returned stream).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWOoWYACgkQ4T/BRc0/\nQwT04Qv/dwj2BY/9tF9JBXsdXgHWggIPH9yEiEYMz8DLsplyUH1oK9P6DRmDobkQ\nlW8m+c1oLi1b6A89ATigzgwHYBo/8Deqe7dsi5gB9aoXSu6uAMdbshs6kkWj2wFZ\nDAkeGBggKaDw30//P+tgxOcAQfPb3+fDe/uz9lMQgtL+yEK7KS6rok5LSw67vGHX\n3mdjR/Ix0B/d/gJBd9XQT4F7WyxhXSDuf/4y+vF/BweZkWlJ5XnXQtwMNQgsT7Zx\nwxZY9I1nBxLj4qNrXLSPdjtpET31P3Ud13+hAvGjRC3WHivD5nYxeYeX5hyXWxHZ\n9wGX+u14GK0pQiYiEz4wtqxZ24lITKOb3Yi5sIzcf3a1VtUf1rZAY5vQfmMmqT/0\n4oCfgS6J+FgQaECY/VQ+A0b5JALgqFJuiPHoTkXROyg9S7ITcOeRNjQ3rATQFmaG\nqK056ExhSRfZP8/hjCzIj/xRFLQDPbq4BqKZxMUBXVHfXMk2G1/YsD8JhQEIFTgd\nhYBh3vxN\n=rt7o\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5974af71b4f60f677a6f64450ded3a2b57349d95",
          "sha": "5974af71b4f60f677a6f64450ded3a2b57349d95",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5974af71b4f60f677a6f64450ded3a2b57349d95"
        }
      ],
      "message": "fs_helpers: make more filesystem utilities mockable.\n\nFrom `man fmemopen`:\n> There  is  no  file  descriptor  associated with the file stream\nreturned by this function (i.e., fileno(3) will return an error if\ncalled on the returned stream).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-29T10:37:26Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-09-16T15:21:46Z"
      },
      "sha": "f4e07ef6ca63469745ea6e519c199af618d3d85d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4NTVkN2M1NDcwNTJmY2JhYjgxZjJjOGYzZjg5YzRjZDk0Yjc0ZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8855d7c547052fcbab81f2c8f3f89c4cd94b74e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8855d7c547052fcbab81f2c8f3f89c4cd94b74e9",
      "tree": {
        "sha": "a72271c7724ede083b1a319cf761141671f3f5e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a72271c7724ede083b1a319cf761141671f3f5e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a72271c7724ede083b1a319cf761141671f3f5e5\nparent f4e07ef6ca63469745ea6e519c199af618d3d85d\nauthor Antoine Poinsot <darosior@protonmail.com> 1699886435 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1703854682 +0100\n\nfuzz: add a target for the BlockManager\n\nExercise (most of) the public interface of the BlockManager and assert\nsome invariants. Notably, try to mimick block arrival whether its header\nwas announced first or not.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWOwloACgkQ4T/BRc0/\nQwRlPAv+LW0ukBmX/MhPLLeXhMiC4t/LoYkKyqFUD6KHOdJ5IwwDfMmq1W1fbUIn\nqEtIcBNDbFynclSmYXvfECmq50524OgtZMQ3xE+XbviwtADSoXTLjmd4asCaQFXa\nyvd8o8VVi62nDN+5iypv4h6oWQ0FPQzxvm+dvka7fNrhc8INQidURODnR+01NrDc\nFCMYRfwtGDi2jZWSct53YL3scs2CTzW9FilboiqMddvlFr/TwheY6zBrqfFBAzms\nF3CYvtlDkppioMecrO9LCI7vj3ReJXz8bOmvaKFAr2Wx5xZeu65dXT+tKB1mHEZx\nenNPocKwYsOe1SLQ4grq2Fe5X+crtTsvBeidhr+bD5WdwkRX9M5H85QoK47PSD/o\n4XxeZw+AnaXNHKXRNmKlzltv/TH8XcDaBgRpFSnJimT/O6La8KQ96iy+LrscjOcC\nvdLAbO5wZioCoatXOboiosz95b6vcg6ETwbm9loDYVq5/tpMTpK6vpzpBQI6w6y7\n87uhsdXs\n=RhyZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4e07ef6ca63469745ea6e519c199af618d3d85d",
          "sha": "f4e07ef6ca63469745ea6e519c199af618d3d85d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e07ef6ca63469745ea6e519c199af618d3d85d"
        }
      ],
      "message": "fuzz: add a target for the BlockManager\n\nExercise (most of) the public interface of the BlockManager and assert\nsome invariants. Notably, try to mimick block arrival whether its header\nwas announced first or not.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-29T12:58:02Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-11-13T14:40:35Z"
      },
      "sha": "8855d7c547052fcbab81f2c8f3f89c4cd94b74e9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhMzZhZjgwYmVlZWVlMGI5ZGU3OTNlNTI4ODdiYTNlMTY0YjgwM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea36af80beeeee0b9de793e52887ba3e164b803c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea36af80beeeee0b9de793e52887ba3e164b803c",
      "tree": {
        "sha": "8338bd46d7767292eb702bbf5a8f0c044163ffa8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8338bd46d7767292eb702bbf5a8f0c044163ffa8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8338bd46d7767292eb702bbf5a8f0c044163ffa8\nparent 8855d7c547052fcbab81f2c8f3f89c4cd94b74e9\nauthor Antoine Poinsot <darosior@protonmail.com> 1694866386 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1703855996 +0100\n\nfuzz: add a target for the ChainstateManager\n\nExercise header and block processing, asserting some invariants. Also\nthe reorg logic.\n\nThere is some low hanging fruits to optimize this targets. Namely\ncalling CheckBlockIndex() externally in a CallOneOf callback instead\nof internally after every operation, and making it possible to not use a\nthread for the notification interface (done by opened PR 28960).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmWOx4MACgkQ4T/BRc0/\nQwSMZwwAt/CkkAs/4KOjfOmzr5/IOdjRwI2i4knoRcR4noNpGwVKQCcUHtlJgQv4\nHHd4dgAzyqscS5O2TUIrnMrOwbqgqFCGY/tbtjfYZBpZozom2bfzlHuDW/gj/xkH\nkFwarQoog7L99Oywx+eh1wUkoDE3nddbgC7XqNZX2M56QtfOWpkI8MB1BOnIf/OT\niClIdmpsFLRkBw18ah9wXybJvlOc/4H4HauZM+d7nzj5aGQ0+hzsPM4l1sxmKPrB\n9mHt8Dx/Y1pmaaRipCjAaS+dTE7gvWeG66bfi6TG39HAieHhkMJy07z0D3IzFF0o\n65iuGQyUvodkIForRt9MAbVzRcJVB03hdNmDnudpc00K5cG24NJnR6QwSdHz1Ic0\nJgh1tJdu0pUBtVqhrcAqwAHUUX/p/PxCeueJqi3NVFaoZ8Mu9+wqnVdej9gLxOjK\n3k3mvsm+RzxqaoqmupPhmiD8sbeoN97vKi1Uv4+NCjoXV31yIprBzWJmccrqdvOK\n5Jc9Kt1N\n=BAkM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8855d7c547052fcbab81f2c8f3f89c4cd94b74e9",
          "sha": "8855d7c547052fcbab81f2c8f3f89c4cd94b74e9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8855d7c547052fcbab81f2c8f3f89c4cd94b74e9"
        }
      ],
      "message": "fuzz: add a target for the ChainstateManager\n\nExercise header and block processing, asserting some invariants. Also\nthe reorg logic.\n\nThere is some low hanging fruits to optimize this targets. Namely\ncalling CheckBlockIndex() externally in a CallOneOf callback instead\nof internally after every operation, and making it possible to not use a\nthread for the notification interface (done by opened PR 28960).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-12-29T13:19:56Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-09-16T12:13:06Z"
      },
      "sha": "ea36af80beeeee0b9de793e52887ba3e164b803c"
    },
    {
      "event": "commented",
      "id": 1872496827,
      "node_id": "IC_kwDOABII585vnAi7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1872496827",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-30T10:05:22Z",
      "updated_at": "2023-12-30T10:05:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29158).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#issuecomment-1872496827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29158"
    },
    {
      "event": "labeled",
      "id": 11359797222,
      "node_id": "LE_lADOABII5856080BzwAAAAKlGL_m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11359797222",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-30T10:53:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1800561385,
      "node_id": "PRR_kwDOABII585rUmLp",
      "url": null,
      "actor": null,
      "commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#pullrequestreview-1800561385",
      "submitted_at": "2024-01-02T15:03:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158"
    },
    {
      "event": "commented",
      "id": 1874196101,
      "node_id": "IC_kwDOABII585vtfaF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1874196101",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-02T15:46:43Z",
      "updated_at": "2024-01-02T15:46:43Z",
      "author_association": "MEMBER",
      "body": "Cool, this is a great thing to investigate. I'll be giving the approach a look this week.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#issuecomment-1874196101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29158"
    },
    {
      "event": "commented",
      "id": 1874318288,
      "node_id": "IC_kwDOABII585vt9PQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1874318288",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-02T17:22:14Z",
      "updated_at": "2024-01-02T17:22:14Z",
      "author_association": "MEMBER",
      "body": "Thanks for working on this!\r\n\r\nOne alternative that I have considered before (for chainstate fuzzing) is to abstract and further modularize `BlockManager`, which would allow us to have an `InMemoryBlockManager` for tests (especially useful for fuzzing but also nice in unit tests).\r\n\r\nThis would require a bunch of work:\r\n* Breaking up the friendship between `BlockManager`, `Chainstate` &  `ChainstateManager`\r\n* Abstracting `BlockManager`'s interface away from being file based\r\n* Hiding access to `BlockManager`'s internal fields\r\n* Probably more...\r\n\r\nThis approach would avoid filesystem syscalls entirely, as well as the large block file allocations.\r\n\r\n---\r\n\r\nThe coinbase maturity also seems relevant because you can't spend any coins in the test until you've mined 100 blocks. Mining 100 blocks every fuzz iteration ends up being pretty slow. Maybe we can use assumeutxo to avoid that? (or snapshot fuzzing)",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#issuecomment-1874318288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29158"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439533284",
      "pull_request_review_id": 1800561385,
      "id": 1439533284,
      "node_id": "PRRC_kwDOABII585VzYjk",
      "diff_hunk": "@@ -0,0 +1,651 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <node/miner.h>\n+#include <pow.h>\n+#include <scheduler.h>\n+#include <undo.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <txdb.h>\n+#include <util/fs_helpers.h>\n+#include <util/thread.h>\n+\n+\n+namespace {\n+\n+const BasicTestingSetup* g_setup;\n+\n+class KernelNotifications : public kernel::Notifications\n+{\n+public:\n+    kernel::InterruptResult blockTip(SynchronizationState, CBlockIndex&) override { return {}; }\n+    void headerTip(SynchronizationState, int64_t height, int64_t timestamp, bool presync) override {}\n+    void progress(const bilingual_str& title, int progress_percent, bool resume_possible) override {}\n+    void warning(const bilingual_str& warning) override {}\n+    void flushError(const std::string& debug_message) override\n+    {\n+        assert(false);\n+    }\n+    void fatalError(const std::string& debug_message, const bilingual_str& user_message) override\n+    {\n+        assert(false);\n+    }\n+};\n+\n+auto g_notifications{KernelNotifications()};\n+\n+//! See net_processing.\n+static const int MAX_HEADERS_RESULTS{2000};\n+\n+// We use a mapping from file path to buffer as a boutique in-memory file system. Note it's\n+// fine because we only ever use unique pathnames for block files, but it may cause issues if\n+// this assumption doesn't hold anymore. (\"/a/b/blk0000.dat\" and \"/a/b/c/../blk0000.dat\" point\n+// to two different buffers.)\n+// The use of a global does not prevent determinism (since the buffer from one run simply gets\n+// overwritten in the next) but avoids a 128MB allocation per run. FIXME: is that really true?\n+std::unordered_map<fs::path, std::vector<unsigned char>, std::hash<std::filesystem::path>> g_files;\n+\n+//! The initial block chain used to test the chainstate.\n+std::vector<std::shared_ptr<CBlock>> g_initial_blockchain;\n+\n+void mock_filesystem_calls()\n+{\n+    fs::g_mock_create_dirs = [](const fs::path&) { return true; };\n+    g_mock_check_disk_space = [](const fs::path&, uint64_t) { return true; };\n+    fsbridge::g_mock_fopen = [&](const fs::path& file_path, const char* mode) {\n+        // Get the file from the map. If it's not there insert it unless it's a file we aren't interested in.\n+        const auto [data, size]{[&]{\n+            const auto it = g_files.find(file_path);\n+            if (it != g_files.end()) return std::make_pair(it->second.data(), it->second.size());\n+            const auto file_name{PathToString(file_path.filename())};\n+            // We shouldn't need to store anything else than the blk and rev files.\n+            if (file_name.find(\"blk\") == std::string::npos && file_name.find(\"rev\") == std::string::npos) {\n+                std::make_pair(nullptr, 0);\n+            }\n+            // NOTE: we do a single large alloc of the max possible file size, as there is no sane way to\n+            // create shorter files but re-allocate when needed.\n+            std::vector<unsigned char> buf(node::MAX_BLOCKFILE_SIZE);\n+            const auto [it2, _]{g_files.insert({file_path, std::move(buf)})};\n+            return std::make_pair(it2->second.data(), it2->second.size());\n+        }()};\n+        if (!data) return (FILE*)nullptr;\n+        return fmemopen(data, size, mode);",
      "path": "src/test/fuzz/chainstate.cpp",
      "position": 85,
      "original_position": 85,
      "commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "original_commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Have you checked if using `fmemopen` is better/faster than using a ram disk?",
      "created_at": "2024-01-02T15:03:27Z",
      "updated_at": "2024-01-02T15:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#discussion_r1439533284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439533284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439796296",
      "pull_request_review_id": 1800974871,
      "id": 1439796296,
      "node_id": "PRRC_kwDOABII585V0YxI",
      "diff_hunk": "@@ -0,0 +1,651 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <node/miner.h>\n+#include <pow.h>\n+#include <scheduler.h>\n+#include <undo.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <txdb.h>\n+#include <util/fs_helpers.h>\n+#include <util/thread.h>\n+\n+\n+namespace {\n+\n+const BasicTestingSetup* g_setup;\n+\n+class KernelNotifications : public kernel::Notifications\n+{\n+public:\n+    kernel::InterruptResult blockTip(SynchronizationState, CBlockIndex&) override { return {}; }\n+    void headerTip(SynchronizationState, int64_t height, int64_t timestamp, bool presync) override {}\n+    void progress(const bilingual_str& title, int progress_percent, bool resume_possible) override {}\n+    void warning(const bilingual_str& warning) override {}\n+    void flushError(const std::string& debug_message) override\n+    {\n+        assert(false);\n+    }\n+    void fatalError(const std::string& debug_message, const bilingual_str& user_message) override\n+    {\n+        assert(false);\n+    }\n+};\n+\n+auto g_notifications{KernelNotifications()};\n+\n+//! See net_processing.\n+static const int MAX_HEADERS_RESULTS{2000};\n+\n+// We use a mapping from file path to buffer as a boutique in-memory file system. Note it's\n+// fine because we only ever use unique pathnames for block files, but it may cause issues if\n+// this assumption doesn't hold anymore. (\"/a/b/blk0000.dat\" and \"/a/b/c/../blk0000.dat\" point\n+// to two different buffers.)\n+// The use of a global does not prevent determinism (since the buffer from one run simply gets\n+// overwritten in the next) but avoids a 128MB allocation per run. FIXME: is that really true?\n+std::unordered_map<fs::path, std::vector<unsigned char>, std::hash<std::filesystem::path>> g_files;\n+\n+//! The initial block chain used to test the chainstate.\n+std::vector<std::shared_ptr<CBlock>> g_initial_blockchain;\n+\n+void mock_filesystem_calls()\n+{\n+    fs::g_mock_create_dirs = [](const fs::path&) { return true; };\n+    g_mock_check_disk_space = [](const fs::path&, uint64_t) { return true; };\n+    fsbridge::g_mock_fopen = [&](const fs::path& file_path, const char* mode) {\n+        // Get the file from the map. If it's not there insert it unless it's a file we aren't interested in.\n+        const auto [data, size]{[&]{\n+            const auto it = g_files.find(file_path);\n+            if (it != g_files.end()) return std::make_pair(it->second.data(), it->second.size());\n+            const auto file_name{PathToString(file_path.filename())};\n+            // We shouldn't need to store anything else than the blk and rev files.\n+            if (file_name.find(\"blk\") == std::string::npos && file_name.find(\"rev\") == std::string::npos) {\n+                std::make_pair(nullptr, 0);\n+            }\n+            // NOTE: we do a single large alloc of the max possible file size, as there is no sane way to\n+            // create shorter files but re-allocate when needed.\n+            std::vector<unsigned char> buf(node::MAX_BLOCKFILE_SIZE);\n+            const auto [it2, _]{g_files.insert({file_path, std::move(buf)})};\n+            return std::make_pair(it2->second.data(), it2->second.size());\n+        }()};\n+        if (!data) return (FILE*)nullptr;\n+        return fmemopen(data, size, mode);",
      "path": "src/test/fuzz/chainstate.cpp",
      "position": 85,
      "original_position": 85,
      "commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "original_commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "in_reply_to_id": 1439533284,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I haven't. Can we use a ramdisk at oss-fuzz?",
      "created_at": "2024-01-02T20:33:30Z",
      "updated_at": "2024-01-02T20:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#discussion_r1439796296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439796296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440301216",
      "pull_request_review_id": 1801749930,
      "id": 1440301216,
      "node_id": "PRRC_kwDOABII585V2UCg",
      "diff_hunk": "@@ -0,0 +1,651 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <node/miner.h>\n+#include <pow.h>\n+#include <scheduler.h>\n+#include <undo.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <txdb.h>\n+#include <util/fs_helpers.h>\n+#include <util/thread.h>\n+\n+\n+namespace {\n+\n+const BasicTestingSetup* g_setup;\n+\n+class KernelNotifications : public kernel::Notifications\n+{\n+public:\n+    kernel::InterruptResult blockTip(SynchronizationState, CBlockIndex&) override { return {}; }\n+    void headerTip(SynchronizationState, int64_t height, int64_t timestamp, bool presync) override {}\n+    void progress(const bilingual_str& title, int progress_percent, bool resume_possible) override {}\n+    void warning(const bilingual_str& warning) override {}\n+    void flushError(const std::string& debug_message) override\n+    {\n+        assert(false);\n+    }\n+    void fatalError(const std::string& debug_message, const bilingual_str& user_message) override\n+    {\n+        assert(false);\n+    }\n+};\n+\n+auto g_notifications{KernelNotifications()};\n+\n+//! See net_processing.\n+static const int MAX_HEADERS_RESULTS{2000};\n+\n+// We use a mapping from file path to buffer as a boutique in-memory file system. Note it's\n+// fine because we only ever use unique pathnames for block files, but it may cause issues if\n+// this assumption doesn't hold anymore. (\"/a/b/blk0000.dat\" and \"/a/b/c/../blk0000.dat\" point\n+// to two different buffers.)\n+// The use of a global does not prevent determinism (since the buffer from one run simply gets\n+// overwritten in the next) but avoids a 128MB allocation per run. FIXME: is that really true?\n+std::unordered_map<fs::path, std::vector<unsigned char>, std::hash<std::filesystem::path>> g_files;\n+\n+//! The initial block chain used to test the chainstate.\n+std::vector<std::shared_ptr<CBlock>> g_initial_blockchain;\n+\n+void mock_filesystem_calls()\n+{\n+    fs::g_mock_create_dirs = [](const fs::path&) { return true; };\n+    g_mock_check_disk_space = [](const fs::path&, uint64_t) { return true; };\n+    fsbridge::g_mock_fopen = [&](const fs::path& file_path, const char* mode) {\n+        // Get the file from the map. If it's not there insert it unless it's a file we aren't interested in.\n+        const auto [data, size]{[&]{\n+            const auto it = g_files.find(file_path);\n+            if (it != g_files.end()) return std::make_pair(it->second.data(), it->second.size());\n+            const auto file_name{PathToString(file_path.filename())};\n+            // We shouldn't need to store anything else than the blk and rev files.\n+            if (file_name.find(\"blk\") == std::string::npos && file_name.find(\"rev\") == std::string::npos) {\n+                std::make_pair(nullptr, 0);\n+            }\n+            // NOTE: we do a single large alloc of the max possible file size, as there is no sane way to\n+            // create shorter files but re-allocate when needed.\n+            std::vector<unsigned char> buf(node::MAX_BLOCKFILE_SIZE);\n+            const auto [it2, _]{g_files.insert({file_path, std::move(buf)})};\n+            return std::make_pair(it2->second.data(), it2->second.size());\n+        }()};\n+        if (!data) return (FILE*)nullptr;\n+        return fmemopen(data, size, mode);",
      "path": "src/test/fuzz/chainstate.cpp",
      "position": 85,
      "original_position": 85,
      "commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "original_commit_id": "ea36af80beeeee0b9de793e52887ba3e164b803c",
      "in_reply_to_id": 1439533284,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Afaict oss-fuzz already uses a ram disk for its environments: https://github.com/google/clusterfuzz/blob/c461a961d8fb2afe47fb4af5eee3d1434a324a40/docker/base/setup_clusterfuzz.sh#L38 (i.e. `/tmp` is mounted in ram).",
      "created_at": "2024-01-03T10:35:58Z",
      "updated_at": "2024-01-03T10:35:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29158#discussion_r1440301216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440301216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    }
  ]
}