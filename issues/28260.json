{
  "type": "issue",
  "issue": {
    "id": 1847325833,
    "node_id": "I_kwDOABII585uG_SJ",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/28260",
    "number": 28260,
    "state": "open",
    "state_reason": null,
    "title": "getJsonToken assumes underlying string is null-terminated but requires end pointer",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nWhen a function requires a `const char *end`, one might assume that the string doesn't need to be null terminated. `getJsonToken` requires this parameter:\r\n```\r\nenum jtokentype getJsonToken(std::string& tokenVal, unsigned int& consumed,\r\n                            const char *raw, const char *end)\r\n```\r\n\r\nHowever, the function does assume that the underlying memory block is null-terminated as is visible here:\r\n```\r\n        if (!strncmp(raw, \"null\", 4)) {\r\n            //...\r\n        } else if (!strncmp(raw, \"true\", 4)) {\r\n            //...\r\n        } else if (!strncmp(raw, \"false\", 5)) {\r\n            //...\r\n```\r\nand here:\r\n```\r\nif ((*firstDigit == '0') && json_isdigit(firstDigit[1]))\r\n```\r\nand possibly others.\r\n\r\nIf the string isn't null terminated, then we run risk of reading uninitialized memory, which could lead to a crash.\r\n\r\nIn practice this currently does not seem to lead to any issues, as all usages that I could find used underlying null-terminated blocks. It is however an uncomfortable pitfall for future development.\n\n### Expected behaviour\n\nThe function should either make sure to never access anything beyond or at the end pointer, or should document this requirement properly.\n\n### Steps to reproduce\n\n```\r\nchar innocentChar = 'n';\r\ngetJsonToken(/*...*/, &innocentChar, (&innocentChar) + 1);\r\n```\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nOther\n\n### What version of Bitcoin Core are you using?\n\nmaster@3654d84\n\n### Operating system and version\n\nCommon code issue, os irrelevant\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "Brotcrunsher",
      "id": 19430475,
      "node_id": "MDQ6VXNlcjE5NDMwNDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19430475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Brotcrunsher",
      "html_url": "https://github.com/Brotcrunsher",
      "followers_url": "https://api.github.com/users/Brotcrunsher/followers",
      "following_url": "https://api.github.com/users/Brotcrunsher/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Brotcrunsher/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Brotcrunsher/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Brotcrunsher/subscriptions",
      "organizations_url": "https://api.github.com/users/Brotcrunsher/orgs",
      "repos_url": "https://api.github.com/users/Brotcrunsher/repos",
      "events_url": "https://api.github.com/users/Brotcrunsher/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Brotcrunsher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 10,
    "created_at": "2023-08-11T19:32:45Z",
    "updated_at": "2024-02-26T07:36:01Z"
  },
  "events": [
    {
      "event": "renamed",
      "id": 10073196890,
      "node_id": "RTE_lADOABII585uG_SJzwAAAAJYaMla",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10073196890",
      "actor": {
        "login": "Brotcrunsher",
        "id": 19430475,
        "node_id": "MDQ6VXNlcjE5NDMwNDc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/19430475?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Brotcrunsher",
        "html_url": "https://github.com/Brotcrunsher",
        "followers_url": "https://api.github.com/users/Brotcrunsher/followers",
        "following_url": "https://api.github.com/users/Brotcrunsher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Brotcrunsher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Brotcrunsher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Brotcrunsher/subscriptions",
        "organizations_url": "https://api.github.com/users/Brotcrunsher/orgs",
        "repos_url": "https://api.github.com/users/Brotcrunsher/repos",
        "events_url": "https://api.github.com/users/Brotcrunsher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Brotcrunsher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T19:33:30Z",
      "rename": {
        "from": "getJsonToken assumes underlying string is null terminated",
        "to": "getJsonToken assumes underlying string is null-terminated but requires end pointer"
      }
    },
    {
      "event": "labeled",
      "id": 11589963721,
      "node_id": "LE_lADOABII585uG_SJzwAAAAKy0M_J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11589963721",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T21:45:37Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 1922687448,
      "node_id": "IC_kwDOABII585ymeHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922687448",
      "actor": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T02:38:44Z",
      "updated_at": "2024-02-02T02:38:44Z",
      "author_association": "NONE",
      "body": "I'm working on it.  Plan is to harden the function to not read at end and after. I have some initial small draft changes, and want to add testing. Maybe, we can even highlight the issue via additional fuzz+msan tests.\r\n\r\n",
      "user": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1922687448",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1926850992,
      "node_id": "IC_kwDOABII585y2Wmw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926850992",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T12:09:34Z",
      "updated_at": "2024-02-05T12:09:34Z",
      "author_association": "MEMBER",
      "body": "I guess this can be fixed by using std::string_view::starts_with",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1926850992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1933300387,
      "node_id": "IC_kwDOABII585zO9Kj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1933300387",
      "actor": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T03:18:17Z",
      "updated_at": "2024-02-08T03:31:38Z",
      "author_association": "NONE",
      "body": "The bug here isn't actually that bad: \r\n\r\n- It uses strncmp(..., 4) and strncmp(..., 5) respectively: so, in worst case it will read 3 or 5 bytes after end.\r\n- Similar for the number parsing.\r\n\r\nIn any case, I have a change that fixes both  (adding guards for reading past end, and making the code pretty / easy to read again). I have unit tests for the keywords (true, false, null) but want to add some for the numbers.\r\n\r\nHaven't made any progress on MSAN. But if we would poison data around begin and end, we could write some exhaustive tests for small inputs. If we restrict to (printable characters, or these mentioned in the code), we could then be pretty certain the new code is correct. \r\n\r\nTouching code is always a risk, so I am trying to minimize it.\r\n\r\nFWIW, my code so far: https://github.com/bitcoin/bitcoin/commit/b77afc50b14ea1af61ea3b32e75d2aa974b07844\r\n\r\n",
      "user": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1933300387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1933591792,
      "node_id": "IC_kwDOABII585zQETw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1933591792",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T08:37:19Z",
      "updated_at": "2024-02-08T08:37:19Z",
      "author_association": "MEMBER",
      "body": "> Haven't made any progress on MSAN.\r\n\r\nYou can copy the bytes into a vector first and call `shrink_to_fit`, which should be enough to tell msan where the data really ends?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1933591792",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1934115970,
      "node_id": "IC_kwDOABII585zSESC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934115970",
      "actor": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T13:22:15Z",
      "updated_at": "2024-02-08T13:22:15Z",
      "author_association": "NONE",
      "body": "I still need to look into how MSAN is integrated into the current unit test suite. Questions like: how can I run the unit tests I added under MSAN? Are all unit tests run under MSAN with a certain make target ... the basics. I am very new to this repository here :)",
      "user": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1934115970",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1934121806,
      "node_id": "IC_kwDOABII585zSFtO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934121806",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T13:25:44Z",
      "updated_at": "2024-02-08T13:25:44Z",
      "author_association": "MEMBER",
      "body": "It is probably not worth it to try to setup msan, as it requires building llvm from scratch.\r\n\r\nIt is easier to just use valgrind. For example: `valgrind ./src/test/test_bitcoin -t vector_tests`",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1934121806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1935289038,
      "node_id": "IC_kwDOABII585zWirO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935289038",
      "actor": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T03:40:55Z",
      "updated_at": "2024-02-09T03:41:21Z",
      "author_association": "NONE",
      "body": "Yeah, I ran some valgrind tests before and after my changes and it clearly showed the \"uninitialized\" accesses when we copy the data first into a tight vector as you suggested.\r\n\r\nI added more test coverage and think this should be enough for this issue.\r\n\r\nWhat do you think about  [the changes](https://github.com/bitcoin/bitcoin/compare/master...daniel-btc-nym:bitcoin:master)?\r\n\r\nIf they look OK, I can merge them into a single commit  --  (I suppose by forking again?)  --  and then making a pull-request?",
      "user": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1935289038",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1935535162,
      "node_id": "IC_kwDOABII585zXew6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935535162",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T08:45:53Z",
      "updated_at": "2024-02-09T08:45:53Z",
      "author_association": "MEMBER",
      "body": "I like bugfixes the most, when they are touching only a single line of code. But if more changes are required, then that is fine, too.\r\n\r\nI checked that this is only a theoretical issue in Bitcoin Core, and can not be hit in production code, but it may still be good to fix it.\r\n\r\nIt may be good to update the fuzz target to catch the issue here: `src/test/fuzz/parse_univalue.cpp`",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1935535162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1950254374,
      "node_id": "IC_kwDOABII5850PoUm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1950254374",
      "actor": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-17T16:50:32Z",
      "updated_at": "2024-02-17T17:06:37Z",
      "author_association": "NONE",
      "body": "> I like bugfixes the most, when they are touching only a single line of code. But if more changes are required, then that is fine, too.\r\n\r\nMy changes have a few orthogonal, but related fixes and test additions. We could make different pull-requests for them. Let me know what you prefer.\r\n\r\nFor example:\r\n1. Check strncmp will not go out of bound. This is lines 99-115 in univalue_read.cpp ; unit tests that call `no_reading_beyond_end_test` \r\n1. Change parsing of numbers, where there were two places that might read past the end. This is lines 126-143 in univalue_read.cpp ; unit test that call: `parsing_numbers_beyond_end_test`.\r\n1. Added `exhaustive_short_string_test` unit test, which was previously causing errors when run in valgrind; now runs cleanly.\r\n1. Added a couple more unit tests such as parsing the empty buffer.\r\n1. Fixed: `fail18.json` which is a test where the nesting is too deep.\r\n1. Added `pass5.json` which is a test where the nesting is just shallow enough to pass.\r\n\r\n> It may be good to update the fuzz target to catch the issue here: `src/test/fuzz/parse_univalue.cpp`\r\n\r\nI added it in, and ran the fuzzer using HONGGFUZZ. Since this isn't a \"runaway\" overflow, we don't get any crashes. When running the entire fuzzer under valgrind, we seem to get all sorts of (seemingly unrelated) problems.\r\n\r\nI thus added a mini-exhaustive test that runs quickly and cleanly under valgrind now, but didn't before.\r\n\r\nA few more questions:\r\n\r\n- Are we adhering to any line lengths conventions?\r\n- Are we adhering to conventions for variable names and function names?\r\n- Do we have an auto-formatter that takes care of basic formatting such as where open-braces go, how many spaces to indent, and maybe even the line length?\r\n- My changes *do* change the semantics for some corner-cases where we were reading past the end of the buffer before: For example, previously:  `char buf[] = \"true\"; getJsonToken(tokenVal, consumed, buf, buf + 1);` would parse as `JTOK_KW_TRUE`  and now returns `JTOK_ERR`. There are also the opposite: previously, `char buf[] = \"01\"; getJsonToken(tokenVal, consumed, buf, buf + 1);` would error since we do not allow leading 0s, but now, this would parse as \"0\".\r\n- Do we have some place where we could dump outputs from valgrind that I could link to in the commit messages or pull-request explanation? I would like to show before / after? Or basically, anywhere that creates durable data that can easily be linked to?\r\n- What do you suggest my next steps would be?  I am fairly happy with the [code](https://github.com/bitcoin/bitcoin/compare/master...daniel-btc-nym:bitcoin:master).\r\n",
      "user": {
        "login": "daniel-btc-nym",
        "id": 158417236,
        "node_id": "U_kgDOCXFBVA",
        "avatar_url": "https://avatars.githubusercontent.com/u/158417236?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daniel-btc-nym",
        "html_url": "https://github.com/daniel-btc-nym",
        "followers_url": "https://api.github.com/users/daniel-btc-nym/followers",
        "following_url": "https://api.github.com/users/daniel-btc-nym/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/daniel-btc-nym/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/daniel-btc-nym/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/daniel-btc-nym/subscriptions",
        "organizations_url": "https://api.github.com/users/daniel-btc-nym/orgs",
        "repos_url": "https://api.github.com/users/daniel-btc-nym/repos",
        "events_url": "https://api.github.com/users/daniel-btc-nym/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/daniel-btc-nym/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1950254374",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    },
    {
      "event": "commented",
      "id": 1952037763,
      "node_id": "IC_kwDOABII5850WbuD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952037763",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T09:30:21Z",
      "updated_at": "2024-02-19T09:30:21Z",
      "author_association": "MEMBER",
      "body": "> My changes have a few orthogonal, but related fixes and test additions. We could make different pull-requests for them. Let me know what you prefer.\r\n\r\nAccording to the dev notes, they should be different commits. Ideally bugfixes and features in a different PR. See https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#committing-patches (The doc, and it's links to the dev notes and productivity notes should explain all your questions)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/28260#issuecomment-1952037763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28260"
    }
  ]
}