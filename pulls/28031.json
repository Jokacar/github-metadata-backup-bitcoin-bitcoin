{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031",
    "id": 1421325832,
    "node_id": "PR_kwDOABII585Ut7YI",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28031.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28031.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
    "number": 28031,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Package Relay 1/3: Introduce TxPackageTracker as Orphan Resolution Module",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Milestone 1 of package relay p2p changes. See #27463 for full project tracking.\r\n\r\nPlease see #27742 for how this PR fits into the big picture. I strongly suggest that reviewers look at that PR first to decide if they are comfortable with the overall approach.\r\n\r\nThis PR is mainly refactors, with a few behavior changes and improvements:\r\n- Introduces `TxPackageTracker`, which starts out as a wrapper for the `TxOrphanage`. This will be the main \"package relay\" module as well.\r\n- Adds a new log category, `TXPACKAGES`. Logging in the orphanage is changed from `MEMPOOL` to `TXPACKAGES`.\r\n- Adds support for tracking when multiple peers provided the same tx in the orphanage.\r\n- Makes `TxPackageTracker` responsible for tracking the orphans we need to resolve and deciding how/when to resolve them.\r\n    - In this PR, \"orphan resolution\" means requesting missing parents by `getdata(MSG_TX | MSG_WITNESS_FLAG, missing_txid)`.\r\n    - In a future PR, we'll add another resolution method, requesting ancestor wtxids using `getdata(MSG_ANCPKGINFO, orphan_wtxid)`.\r\n- Adds all announcers of an orphan as potential resolution candidates. This tracker is a `TxRequestTracker` which helps us schedule requests. We preferentially request from outbounds by delaying requests to inbounds, limit the total in-flight tx requests (including non-orphan-related tx requests) to each peer, etc.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-07-05T15:30:40Z",
    "updated_at": "2023-07-31T19:40:53Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "dd813980ac53dc112e1719f1fd2049df4d1c6bdc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "glozow:orphan-resolution-module",
      "ref": "orphan-resolution-module",
      "sha": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 9,
        "watchers_count": 9,
        "size": 227415,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T10:43:09Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2023-07-18T03:26:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bc4f6b13feb29146b7e10e86f93dc7f6fb6937f2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35470,
        "stargazers_count": 70591,
        "watchers_count": 70591,
        "size": 236086,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T18:29:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-07-31T19:24:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 898,
    "deletions": 82,
    "changed_files": 15,
    "commits": 16,
    "review_comments": 61,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ3OWZiZDhhMDIxNTBlNTJlNjZiZjU0MzhlNWU2OWQ5MmQ2YmUyZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/479fbd8a02150e52e66bf5438e5e69d92d6be2d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/479fbd8a02150e52e66bf5438e5e69d92d6be2d0",
      "tree": {
        "sha": "d98712f6f0e3539a28330bbd494c47265e133377",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d98712f6f0e3539a28330bbd494c47265e133377"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f08d914a678f7ceb81e7584efe92d3840f3b9c95",
          "sha": "f08d914a678f7ceb81e7584efe92d3840f3b9c95",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f08d914a678f7ceb81e7584efe92d3840f3b9c95"
        }
      ],
      "message": "[refactor] add TxPackageTracker\n\nThis module is responsible for managing everything related to\ntransaction packages, including orphan transactions and package relay.\nIt will be responsible for managing usage of the TxOrphanage and\ninstructing PeerManager:\n- what tx or package-related messages to send to which peer\n- whether a tx or package-related message is allowed or useful\n- what transactions are available to try accepting to mempool",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T16:05:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-05-01T17:41:53Z"
      },
      "sha": "479fbd8a02150e52e66bf5438e5e69d92d6be2d0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1ZWNhZmIyZjM1ZWEyODk0MzU4MTgzNjQ0YTVlY2E2YmQxNTAxMDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25ecafb2f35ea2894358183644a5eca6bd150107",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/25ecafb2f35ea2894358183644a5eca6bd150107",
      "tree": {
        "sha": "8a82ca15d94b75396786042265ca94a8a67c1432",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a82ca15d94b75396786042265ca94a8a67c1432"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/479fbd8a02150e52e66bf5438e5e69d92d6be2d0",
          "sha": "479fbd8a02150e52e66bf5438e5e69d92d6be2d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/479fbd8a02150e52e66bf5438e5e69d92d6be2d0"
        }
      ],
      "message": "[refactor] wrap TxOrphanage inside TxPackageTracker\n\nThis commit is basically move-only. Reviewers can observe that the\nfunctions and comments are copied from txorphanage.h. Comments are\nremoved for the methods that will be removed.\n\nFuture commits will re-delegate those orphanage interactions from\nPeerManager to TxPackageTracker.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T17:11:35Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-10-06T11:02:29Z"
      },
      "sha": "25ecafb2f35ea2894358183644a5eca6bd150107"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkMjI1NjE3OTQ0M2YzMTJkYzVhMjg2MzRmMzM1MzllNjhkODI4MmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d2256179443f312dc5a28634f33539e68d8282e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2256179443f312dc5a28634f33539e68d8282e",
      "tree": {
        "sha": "c186561b2a6393d181996517ce5b738f0b3a32d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c186561b2a6393d181996517ce5b738f0b3a32d0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25ecafb2f35ea2894358183644a5eca6bd150107",
          "sha": "25ecafb2f35ea2894358183644a5eca6bd150107",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25ecafb2f35ea2894358183644a5eca6bd150107"
        }
      ],
      "message": "[log] add category TXPACKAGES for orphanage and package relay",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T17:12:57Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-03-06T16:46:18Z"
      },
      "sha": "1d2256179443f312dc5a28634f33539e68d8282e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0MzI3M2Q5NmU4OTZhZGY1NTMxZWQ5NjE4NTZhYTBlYjcwY2JlNTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/543273d96e896adf5531ed961856aa0eb70cbe57",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/543273d96e896adf5531ed961856aa0eb70cbe57",
      "tree": {
        "sha": "9570f9ac8e245e7535996ec782a4d5632a2dc55f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9570f9ac8e245e7535996ec782a4d5632a2dc55f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d2256179443f312dc5a28634f33539e68d8282e",
          "sha": "1d2256179443f312dc5a28634f33539e68d8282e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2256179443f312dc5a28634f33539e68d8282e"
        }
      ],
      "message": "[log] log ProcessOrphanTx() events by wtxid\n\nWtxids are more helpful for logs since they disambiguate between\ntransactions with the same txid but different witnesses.\nTxPackageTracker logging is by wtxid. This makes it easier to track what\nhappens to an orphan tx through logs.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T17:12:57Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T16:16:35Z"
      },
      "sha": "543273d96e896adf5531ed961856aa0eb70cbe57"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjYmI2MzE3NTM5OGQ5YjhhZmU3NTVkMmFkYjI0ZWRiZDJiNDkxM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cbb63175398d9b8afe755d2adb24edbd2b4913b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4cbb63175398d9b8afe755d2adb24edbd2b4913b",
      "tree": {
        "sha": "cf4247b26f2708a62bfea95e31e045fd7952b3c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf4247b26f2708a62bfea95e31e045fd7952b3c8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/543273d96e896adf5531ed961856aa0eb70cbe57",
          "sha": "543273d96e896adf5531ed961856aa0eb70cbe57",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/543273d96e896adf5531ed961856aa0eb70cbe57"
        }
      ],
      "message": "[txorphange] EraseTx and GetTx by wtxid instead of txid\n\nWtxids are better because they disambiguate between transactions with\nthe same txid but different witnesses. The TxPackageTracker will work\nwith wtxids for package relay-related tasks, and it is easier to trace a\ntransaction's wtxid through logs.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T12:48:25Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-01-24T13:14:31Z"
      },
      "sha": "4cbb63175398d9b8afe755d2adb24edbd2b4913b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2YzY0N2IzM2Q4ZjNiYTM3NDAzMmM0OWUwMDY0NDlhNjlmYzYxMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6c647b33d8f3ba374032c49e006449a69fc611c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c647b33d8f3ba374032c49e006449a69fc611c",
      "tree": {
        "sha": "0afe3c263a0ce7ad57113cd3a7ecf3e12e3227d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0afe3c263a0ce7ad57113cd3a7ecf3e12e3227d9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cbb63175398d9b8afe755d2adb24edbd2b4913b",
          "sha": "4cbb63175398d9b8afe755d2adb24edbd2b4913b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4cbb63175398d9b8afe755d2adb24edbd2b4913b"
        }
      ],
      "message": "[txorphanage] return erased wtxids from EraseForBlock\n\nThis information is already known; returning it is essentially free. A\nlater commit uses these wtxids to remove conflicted transactions from\nthe orphan resolution tracker.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T12:48:26Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-02-20T09:59:14Z"
      },
      "sha": "f6c647b33d8f3ba374032c49e006449a69fc611c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5ZDlkMzI2ZDUxOTNiYjlhNDEwYTg4ODFlYWJjOTNkZTVkZDYyNjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29d9d326d5193bb9a410a8881eabc93de5dd6266",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29d9d326d5193bb9a410a8881eabc93de5dd6266",
      "tree": {
        "sha": "1d4cdb737ec0ca3ef6cff5f20e2fa6ba531bbf1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d4cdb737ec0ca3ef6cff5f20e2fa6ba531bbf1c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6c647b33d8f3ba374032c49e006449a69fc611c",
          "sha": "f6c647b33d8f3ba374032c49e006449a69fc611c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c647b33d8f3ba374032c49e006449a69fc611c"
        }
      ],
      "message": "[txorphanage] track size of stored orphans, total and by peer\n\nNo effect for now, just additional tracking. Enables:\n- load balance orphan resolution, limit per-peer orphanage usage\n- limit the total size of orphans instead of just the count",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T14:37:35Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-03-31T09:58:09Z"
      },
      "sha": "29d9d326d5193bb9a410a8881eabc93de5dd6266"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjZDhiZThhNGM5ZWE2Y2Q5YjdlM2JmNTVhYjQyM2Q4ZmM2ZThhYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6",
      "tree": {
        "sha": "25a347365e318981c2ecf7cf209a179514fa7e14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25a347365e318981c2ecf7cf209a179514fa7e14"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29d9d326d5193bb9a410a8881eabc93de5dd6266",
          "sha": "29d9d326d5193bb9a410a8881eabc93de5dd6266",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29d9d326d5193bb9a410a8881eabc93de5dd6266"
        }
      ],
      "message": "[txorphanage] handle AddTx(nullptr)",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T14:47:10Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T14:17:02Z"
      },
      "sha": "6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3NGQ4NjQ0MTlkZDk4YmU2ZTMyZGVjM2VlMTFmNTA4MmIwNjBiMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/974d864419dd98be6e32dec3ee11f5082b060b1b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/974d864419dd98be6e32dec3ee11f5082b060b1b",
      "tree": {
        "sha": "366ec034d8cdc57269aedeeb06149e479a9498f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/366ec034d8cdc57269aedeeb06149e479a9498f2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6",
          "sha": "6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6"
        }
      ],
      "message": "[refactor] make TxPackageTracker responsible for EraseTx and AddChildrenToWorkset",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T14:57:23Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T17:04:58Z"
      },
      "sha": "974d864419dd98be6e32dec3ee11f5082b060b1b"
    },
    {
      "event": "labeled",
      "id": 9733303483,
      "node_id": "LE_lADOABII585qrkcZzwAAAAJEJmy7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9733303483",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:30:41Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 1622002877,
      "node_id": "IC_kwDOABII585grcy9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622002877",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:30:44Z",
      "updated_at": "2023-07-22T06:46:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28107](https://github.com/bitcoin/bitcoin/pull/28107) (util: Type-safe transaction identifiers by dergoegge)\n* [#28043](https://github.com/bitcoin/bitcoin/pull/28043) (fuzz: Test headers pre-sync through p2p interface by dergoegge)\n* [#27837](https://github.com/bitcoin/bitcoin/pull/27837) (net: introduce block tracker to retry to download blocks after failure by furszy)\n* [#27509](https://github.com/bitcoin/bitcoin/pull/27509) (Relay own transactions only via short-lived Tor or I2P connections by vasild)\n* [#27499](https://github.com/bitcoin/bitcoin/pull/27499) (net processing, refactor: Decouple PeerManager from gArgs by dergoegge)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#issuecomment-1622002877",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1YWI0NWU1OTViYmNlZGJkNjAyYjYzODViODNlOWZmZDk4M2YyMTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "tree": {
        "sha": "9763a8e1d3332e2b122d377fbe307b584c137b30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9763a8e1d3332e2b122d377fbe307b584c137b30"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/974d864419dd98be6e32dec3ee11f5082b060b1b",
          "sha": "974d864419dd98be6e32dec3ee11f5082b060b1b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/974d864419dd98be6e32dec3ee11f5082b060b1b"
        }
      ],
      "message": "[p2p/refactor] make TxPackageTracker responsible for orphan resolution\n\nORPHAN_ANCESTOR_GETDATA_INTERVAL was chosen as 60sec to mirror\nGETDATA_TX_INTERVAL.\n\nMinimal behavior change in this commit. Instead of immediately\nrequesting parents in ProcessMessage(), the orphan is added to the\norphan request tracker, and parent requests are sent afteward in\nSendMessages(). In the future, more delay will be added so it's possible\nfor the orphan to be resolved (accepted to mempool, confirmed, or\nrejected) by the time parent requests are sent. So we only request\nthe parents if we don't AlreadyHaveTx(orphan).  This means we need to be\nable to exclude the orphanage when querying AlreadyHaveTx().\n\nAdding/deleting is now strictly handled by TxPackageTracker, and should\nnot be exposed to the public. So delete AddOrphanageTx().",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-01-24T13:12:56Z"
      },
      "sha": "b5ab45e595bbcedbd602b6385b83e9ffd983f216"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlMGFiYjVlMDRhZTQ3NjQ3YWQwNGU1NzJjY2QzYzU2YzZjYjM2NzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e0abb5e04ae47647ad04e572ccd3c56c6cb3670",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e0abb5e04ae47647ad04e572ccd3c56c6cb3670",
      "tree": {
        "sha": "dcd41175e67f6beb4984330e86f64d0dfd4bdd96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcd41175e67f6beb4984330e86f64d0dfd4bdd96"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ab45e595bbcedbd602b6385b83e9ffd983f216",
          "sha": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ab45e595bbcedbd602b6385b83e9ffd983f216"
        }
      ],
      "message": "[refactor] make TxPackageTracker responsible for limiting orphanage memory usage",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-04T15:49:34Z"
      },
      "sha": "4e0abb5e04ae47647ad04e572ccd3c56c6cb3670"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwOWU2M2FlMGEyYWM5N2VhNDk5YzgwMGFiY2ZlNTdlMzI5MTJmNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/509e63ae0a2ac97ea499c800abcfe57e32912f44",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/509e63ae0a2ac97ea499c800abcfe57e32912f44",
      "tree": {
        "sha": "32703b70b56163a7cdfbd59e0111fd586cc99d7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32703b70b56163a7cdfbd59e0111fd586cc99d7a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e0abb5e04ae47647ad04e572ccd3c56c6cb3670",
          "sha": "4e0abb5e04ae47647ad04e572ccd3c56c6cb3670",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e0abb5e04ae47647ad04e572ccd3c56c6cb3670"
        }
      ],
      "message": "[txrequest] GetCandidatePeers and ResetRequestTimeout",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-03-20T10:37:23Z"
      },
      "sha": "509e63ae0a2ac97ea499c800abcfe57e32912f44"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5MmIwMTdmNjgxOGMxZGUzMjg2ZTVkYmMzNWFmMzg2MGZkZjc1NDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d92b017f6818c1de3286e5dbc35af3860fdf7547",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d92b017f6818c1de3286e5dbc35af3860fdf7547",
      "tree": {
        "sha": "0b5321ddfd29cb29d51e689f0549af8ccd850b25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b5321ddfd29cb29d51e689f0549af8ccd850b25"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/509e63ae0a2ac97ea499c800abcfe57e32912f44",
          "sha": "509e63ae0a2ac97ea499c800abcfe57e32912f44",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/509e63ae0a2ac97ea499c800abcfe57e32912f44"
        }
      ],
      "message": "[txorphanage] support multiple announcers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-04-18T15:02:58Z"
      },
      "sha": "d92b017f6818c1de3286e5dbc35af3860fdf7547"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0MzAzM2NmYjhhOGRkYzg1NTczNzVlY2M2M2ZkNDExYjMxZDM2MTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b43033cfb8a8ddc8557375ecc63fd411b31d3618",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b43033cfb8a8ddc8557375ecc63fd411b31d3618",
      "tree": {
        "sha": "68376f14c5924c8d4b6835398f05371fcf5f2f89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68376f14c5924c8d4b6835398f05371fcf5f2f89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d92b017f6818c1de3286e5dbc35af3860fdf7547",
          "sha": "d92b017f6818c1de3286e5dbc35af3860fdf7547",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d92b017f6818c1de3286e5dbc35af3860fdf7547"
        }
      ],
      "message": "[unit test] orphanage: multiple announcers, eviction",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-04-18T18:12:35Z"
      },
      "sha": "b43033cfb8a8ddc8557375ecc63fd411b31d3618"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkOTQ1ZmVhZjYwMjVhOWY4NGZjMWFhM2YwODc0MjIyNDY3OTNjYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d945feaf6025a9f84fc1aa3f087422246793cba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d945feaf6025a9f84fc1aa3f087422246793cba",
      "tree": {
        "sha": "dabfb4d4f0a12ffb8777165fee4ea11f1fb8b9eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dabfb4d4f0a12ffb8777165fee4ea11f1fb8b9eb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b43033cfb8a8ddc8557375ecc63fd411b31d3618",
          "sha": "b43033cfb8a8ddc8557375ecc63fd411b31d3618",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b43033cfb8a8ddc8557375ecc63fd411b31d3618"
        }
      ],
      "message": "[p2p] use all orphan announcers as potential parent sources\n\nMakes orphan handling more robust. We will also use the orphan\nresolution tracker for requesting ancpkginfo. The timeout in\np2p_segwit.py has been increased to account for the fact that parents\nare no longer immediately requested.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:32Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-10-06T13:24:26Z"
      },
      "sha": "0d945feaf6025a9f84fc1aa3f087422246793cba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExNjM3OGVmYzFjOWMxZmUwZDI2Y2I0MmUyYmRiYjU3NzA4MTVjMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "tree": {
        "sha": "0ead1417a78c0c1da559c6bb4b0e5cb9fcb08286",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ead1417a78c0c1da559c6bb4b0e5cb9fcb08286"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0ead1417a78c0c1da559c6bb4b0e5cb9fcb08286\nparent 0d945feaf6025a9f84fc1aa3f087422246793cba\nauthor glozow <gloriajzhao@gmail.com> 1681915218 +0100\ncommitter glozow <gloriajzhao@gmail.com> 1688571816 +0100\n\n[functional test] orphan handling with multiple announcers\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8Z9f8rBYnsNBIgBFugP02+DGP7QFAmSlj6gACgkQugP02+DG\nP7RaWhAAtBC+nDkaPAYcldg6pm9SAFnAR5WObP9XMIvKfgzCLvbaiHL41TE267sA\n8kYFvgrLkf+t9FsAIeDkuYX1VSTgXYgMIco89/lH4da/oVMbfZzNuOS4sIkIkbaU\njtbbThIeUdlEXM5P2a/48WHjexAlzKOjuvAXPipREVM1cGXuJHgvFKCt5I98+Xhz\njumEmXgUyVEsCu0xhAD012LSh/crVAyuhlXPFsQh5WN6dYAcKAzxXWm1+7t6Xjp+\n5N0Gc0eCGepfcXxnnapwveaZZ9VSgA26YxkEeTYnaUlsKur9WobYLPHNAlXvyhwS\nETWHtuYBQOYi0DUYTm3tOtHz9fjL7AKE114rU6LlqWUjzikY6A9j9uPULQSgSe52\nPgqTB76EyCMk0BKLHF+EDFtjiPzyfhCQO6ZNz6rKSWCsLUHxFWbjdBmMcA4YzvK7\nPU6Tx4deuNDqZ/8kMb290sfvdOOCDAD2baEwJQswvaklBnFpS6s3NrqlSR8K4FGE\nwBF98dVDI0KHiv4hPeUQn9wN4dZ1LrSs4Da/Yk2urKRqMyUxD5j3P/5dZhKbm5AK\ndzWIhfBG3sQbmjoQdnrZ4HN5SM30KcVjkRgBrSUiFqj8bpXQALNSnWjxGlsAdRws\nOb3iWfcEXQG0dKyc57mpcp2es/VGalpQAylPZgkFlLLvT2W75Og=\n=BlBg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d945feaf6025a9f84fc1aa3f087422246793cba",
          "sha": "0d945feaf6025a9f84fc1aa3f087422246793cba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d945feaf6025a9f84fc1aa3f087422246793cba"
        }
      ],
      "message": "[functional test] orphan handling with multiple announcers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-07-05T15:43:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-04-19T14:40:18Z"
      },
      "sha": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9733476036,
      "node_id": "HRFPE_lADOABII585qrkcZzwAAAAJEKQ7E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9733476036",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:44:10Z"
    },
    {
      "event": "labeled",
      "id": 9733477078,
      "node_id": "LE_lADOABII585qrkcZzwAAAAJEKRLW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9733477078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:44:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1623876865,
      "node_id": "IC_kwDOABII585gymUB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1623876865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T15:25:40Z",
      "updated_at": "2023-07-06T15:25:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Looks like the CI fails:\r\n\r\n```\r\n�[0m�[0;31mp2p_orphan_handling.py                                 | ✖ Failed  | 2407 s",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#issuecomment-1623876865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031"
    },
    {
      "event": "commented",
      "id": 1623886758,
      "node_id": "IC_kwDOABII585gyoum",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1623886758",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T15:32:37Z",
      "updated_at": "2023-07-06T15:32:37Z",
      "author_association": "MEMBER",
      "body": "Investigating, thanks @DrahtBot",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#issuecomment-1623886758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031"
    },
    {
      "event": "mentioned",
      "id": 9745286816,
      "node_id": "MEE_lADOABII585qrkcZzwAAAAJE3Uag",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9745286816",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T15:32:37Z"
    },
    {
      "event": "subscribed",
      "id": 9745286838,
      "node_id": "SE_lADOABII585qrkcZzwAAAAJE3Ua2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9745286838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T15:32:37Z"
    },
    {
      "event": "reviewed",
      "id": 1515046495,
      "node_id": "PRR_kwDOABII585aTcZf",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "some initial comments through https://github.com/bitcoin/bitcoin/pull/28031/commits/116378efc1c9c1fe0d26cb42e2bdbb5770815c35\r\n\r\nLog changes suggested are helpful for tracing what's happening in the orphanage on my node I'm testing.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1515046495",
      "submitted_at": "2023-07-06T16:39:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1526722308,
      "node_id": "PRR_kwDOABII585a_-8E",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1526722308",
      "submitted_at": "2023-07-12T16:36:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1527052773,
      "node_id": "PRR_kwDOABII585bBPnl",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "some more comments, not finished yet though.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1527052773",
      "submitted_at": "2023-07-12T22:26:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1527321195,
      "node_id": "PRR_kwDOABII585bCRJr",
      "url": null,
      "actor": null,
      "commit_id": "4cbb63175398d9b8afe755d2adb24edbd2b4913b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1527321195",
      "submitted_at": "2023-07-12T22:31:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1531022386,
      "node_id": "PRR_kwDOABII585bQYwy",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Some thoughts about logging:\r\n\r\nAfter testing this on mainnet for a bit, I think it would be nice to be able to follow the fate of each individual orphan in `BCLog::TXPACKAGES`:\r\nWe currently have a tx-level based log entry for addition (“stored orphan...\"), but nothing for removal, so having additional log entries in `MempoolAcceptedTx()` for succesful resolution and `MempoolRejectedTx()` for failure would be nice, maybe also a tx-level message for removal due to expiration and overflow.\r\n\r\nIf this became too spammy, we could use different severities, but I think it shouldn't be too bad except if you just started with an empty mempool?\r\n\r\nAlso, could we log wtxids whenever possible? There is currently a bit of a mix.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1531022386",
      "submitted_at": "2023-07-14T20:47:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1533720796,
      "node_id": "PRR_kwDOABII585barjc",
      "url": null,
      "actor": null,
      "commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1533720796",
      "submitted_at": "2023-07-17T21:23:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1527114151,
      "node_id": "PRR_kwDOABII585bBemn",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1527114151",
      "submitted_at": "2023-07-20T15:18:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1540338442,
      "node_id": "PRR_kwDOABII585bz7MK",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1540338442",
      "submitted_at": "2023-07-21T02:21:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "reviewed",
      "id": 1541149446,
      "node_id": "PRR_kwDOABII585b3BMG",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1541149446",
      "submitted_at": "2023-07-21T13:22:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    },
    {
      "event": "labeled",
      "id": 9910182429,
      "node_id": "LE_lADOABII585qrkcZzwAAAAJOsWId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910182429",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T10:54:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1649608050,
      "node_id": "IC_kwDOABII585iUwVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649608050",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T10:54:15Z",
      "updated_at": "2023-07-25T10:54:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#issuecomment-1649608050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031"
    },
    {
      "event": "reviewed",
      "id": 1555503183,
      "node_id": "PRR_kwDOABII585ctxhP",
      "url": null,
      "actor": null,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#pullrequestreview-1555503183",
      "submitted_at": "2023-07-31T19:40:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253443521",
      "pull_request_review_id": 1515046495,
      "id": 1253443521,
      "node_id": "PRRC_kwDOABII585KtgfB",
      "diff_hunk": "@@ -2960,9 +2960,10 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n         const MempoolAcceptResult result = m_chainman.ProcessTransaction(porphanTx);\n         const TxValidationState& state = result.m_state;\n         const uint256& orphanHash = porphanTx->GetHash();\n+        const uint256 orphan_wtxid = porphanTx->GetWitnessHash();\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n+            LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphan_wtxid.ToString());",
      "path": "src/net_processing.cpp",
      "position": 177,
      "original_position": 8,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "543273d96e896adf5531ed961856aa0eb70cbe57",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "make these be TXPACKAGES? then you get the entire \"story\" with a single log type (which helped me diagnose the `Timeout` issue)",
      "created_at": "2023-07-05T17:50:11Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253443521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253443521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3020,
      "original_line": 2966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253454308",
      "pull_request_review_id": 1515046495,
      "id": 1253454308,
      "node_id": "PRRC_kwDOABII585KtjHk",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_orphan_request_tracker` :pray: ",
      "created_at": "2023-07-05T18:02:04Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253454308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253454308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253457139",
      "pull_request_review_id": 1515046495,
      "id": 1253457139,
      "node_id": "PRRC_kwDOABII585Ktjzz",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());",
      "path": "src/node/txpackagetracker.cpp",
      "position": 75,
      "original_position": 75,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "seems wrong/very noisy without this? e.g., this line https://github.com/bitcoin/bitcoin/pull/28031/files#diff-ece439372a3e31da3141ed8fda99b37381e32cdab17ca26fffd5dfd916c300c8R124 will fire constantly\r\n\r\n```suggestion\r\n        m_orphanage.EraseTx(ptx->GetWitnessHash());\r\n        orphan_request_tracker.ForgetTxHash(ptx->GetWitnessHash());\r\n```",
      "created_at": "2023-07-05T18:05:10Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253457139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253457139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253459892",
      "pull_request_review_id": 1515046495,
      "id": 1253459892,
      "node_id": "PRRC_kwDOABII585Ktke0",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",",
      "path": "src/node/txpackagetracker.cpp",
      "position": 124,
      "original_position": 124,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any principle on prefixing and postfixing `\\n` to everything in these logs?",
      "created_at": "2023-07-05T18:08:20Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253459892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253459892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253461532",
      "pull_request_review_id": 1515046495,
      "id": 1253461532,
      "node_id": "PRRC_kwDOABII585Ktk4c",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",\n+                entry.second.GetHash().ToString(), entry.first);\n+        }\n+        std::vector<GenTxid> results;\n+        for (const auto& gtxid : tracker_requestable) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nResolving orphan %s, requesting by txids of parents from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\n+            const auto ptx = m_orphanage.GetTx(gtxid.GetHash());\n+            if (!ptx) {\n+                // We can't request ancpkginfo and we have no way of knowing what the missing\n+                // parents are (it could also be that the orphan has already been resolved).\n+                // Give up.\n+                orphan_request_tracker.ForgetTxHash(gtxid.GetHash());\n+                LogPrint(BCLog::TXPACKAGES, \"\\nForgetting orphan %s from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 136,
      "original_position": 136,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                LogPrint(BCLog::TXPACKAGES, \"\\nForgetting orphan request %s from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\r\n```",
      "created_at": "2023-07-05T18:10:14Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253461532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253461532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 136,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253479136",
      "pull_request_review_id": 1515046495,
      "id": 1253479136,
      "node_id": "PRRC_kwDOABII585KtpLg",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 80,
      "original_position": 80,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "trying to fetch after failure seems wrong\r\n\r\n```suggestion\r\n        m_orphanage.EraseTx(wtxid);\r\n        orphan_request_tracker.ForgetTxHash(wtxid);\r\n```",
      "created_at": "2023-07-05T18:26:54Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253479136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253479136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 80,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253619584",
      "pull_request_review_id": 1515046495,
      "id": 1253619584,
      "node_id": "PRRC_kwDOABII585KuLeA",
      "diff_hunk": "@@ -15,6 +14,16 @@ static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n \n+void TxOrphanage::SubtractOrphanBytes(unsigned int size, NodeId peer)\n+{\n+    AssertLockHeld(m_mutex);\n+    Assume(m_peer_bytes_used.count(peer) > 0);\n+    Assume(m_peer_bytes_used.at(peer) >= size);",
      "path": "src/txorphanage.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "29d9d326d5193bb9a410a8881eabc93de5dd6266",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since we're using `size_t` for these fields, do we want to continue on with UB for release builds or do an assert?",
      "created_at": "2023-07-05T20:37:09Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253619584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253619584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253623061",
      "pull_request_review_id": 1515046495,
      "id": 1253623061,
      "node_id": "PRRC_kwDOABII585KuMUV",
      "diff_hunk": "@@ -28,6 +28,10 @@ void TxOrphanage::SubtractOrphanBytes(unsigned int size, NodeId peer)\n bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n {\n     LOCK(m_mutex);\n+    if (tx == nullptr) {",
      "path": "src/txorphanage.cpp",
      "position": 26,
      "original_position": 4,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "6cd8be8a4c9ea6cd9b7e3bf55ab423d8fc6e8ac6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> [txorphanage] handle AddTx(nullptr)\r\n\r\nCould we motivate this change in the commit message?",
      "created_at": "2023-07-05T20:41:12Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253623061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253623061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253633358",
      "pull_request_review_id": 1515046495,
      "id": 1253633358,
      "node_id": "PRRC_kwDOABII585KuO1O",
      "diff_hunk": "@@ -5926,6 +5923,22 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             }\n         }\n \n+        auto requestable_orphans = m_txpackagetracker->GetOrphanRequests(pto->GetId(), current_time);",
      "path": "src/net_processing.cpp",
      "position": 306,
      "original_position": 105,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`requestable_orphans` is more like `requestable_parents`?",
      "created_at": "2023-07-05T20:51:38Z",
      "updated_at": "2023-07-06T16:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253633358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253633358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5961,
      "original_line": 5926,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253643847",
      "pull_request_review_id": 1515046495,
      "id": 1253643847,
      "node_id": "PRRC_kwDOABII585KuRZH",
      "diff_hunk": "@@ -5926,6 +5923,22 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             }\n         }\n \n+        auto requestable_orphans = m_txpackagetracker->GetOrphanRequests(pto->GetId(), current_time);\n+        for (const auto& gtxid : requestable_orphans) {\n+            if (AlreadyHaveTx(gtxid, /*include_orphanage=*/false)) {",
      "path": "src/net_processing.cpp",
      "position": 308,
      "original_position": 107,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggested comment, something like:\r\n\r\n\"We do not presume the parent will still be in the orphanage by the time a response is received, so we exclude the orphanage from the check when deciding what to request.\"\r\n\r\nIf that's wrong, then it needs better explanation than what exists in the commit message :) ",
      "created_at": "2023-07-05T21:00:59Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1253643847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253643847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5963,
      "original_line": 5928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254470451",
      "pull_request_review_id": 1515046495,
      "id": 1254470451,
      "node_id": "PRRC_kwDOABII585KxbMz",
      "diff_hunk": "@@ -4,41 +4,157 @@\n \n #include <node/txpackagetracker.h>\n \n+#include <common/bloom.h>\n+#include <logging.h>\n #include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n \n namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n class TxPackageTracker::Impl {\n     /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n     TxOrphanage m_orphanage;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n public:\n     Impl() = default;\n \n     // Orphanage Wrapper Functions\n-    bool OrphanageAddTx(const CTransactionRef& tx, NodeId peer) { return m_orphanage.AddTx(tx, peer); }\n     bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n     CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n-    void DisconnectedPeer(NodeId peer) {\n-        m_orphanage.EraseForPeer(peer);\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 59,
      "original_position": 54,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why not just `ForgetTxHash` here? Why gate it on not being in the block?\r\n\r\nI'm presuming following commits will reveal the answer...",
      "created_at": "2023-07-06T13:48:54Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254470451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254470451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 59,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254492129",
      "pull_request_review_id": 1515046495,
      "id": 1254492129,
      "node_id": "PRRC_kwDOABII585Kxgfh",
      "diff_hunk": "@@ -59,6 +58,30 @@ class TxPackageTracker {\n      * still want to try to resolve. Remove its entries from the orphanage and other data\n      * structures. */\n     void MempoolRejectedTx(const uint256& wtxid);\n+\n+    /** Add a new orphan or an announcement for a known orphan. This should be called for every\n+     * peer that announces the orphan.  The orphan request tracker will decide when to request what\n+     * from which peer - use GetOrphanRequests().\n+     * @param[in]   tx      CTransactionRef if this is a new orphan, or nullptr if an announcement\n+     *                      for a known orphan.\n+     * @param[in]   reqtime Some time in the future when the orphan resolution information should be\n+     *                      requested. This may be further extended internally.\n+     */\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime);\n+\n+    /** Number of packages we are working on with this peer. Includes any entries in the orphan\n+     * tracker and in-flight requests. */\n+    size_t Count(NodeId nodeid) const;",
      "path": "src/node/txpackagetracker.h",
      "position": 75,
      "original_position": 34,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in other words, it includes anything they've told us about, even if we haven't acted on it in any way?",
      "created_at": "2023-07-06T14:03:29Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254492129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254492129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254587582",
      "pull_request_review_id": 1515046495,
      "id": 1254587582,
      "node_id": "PRRC_kwDOABII585Kx3y-",
      "diff_hunk": "@@ -98,6 +124,9 @@ class TxOrphanage {\n      *  transactions using their witness ids. */\n     std::map<uint256, OrphanMap::iterator> m_wtxid_to_orphan_it GUARDED_BY(m_mutex);\n \n+    /** Map from nodeid to the amount of orphans provided by this peer, in bytes. */",
      "path": "src/txorphanage.h",
      "position": 85,
      "original_position": 85,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be good to note that this will \"multi-count\" a single known orphan, counting the bytes for each node. Was wondering early in the PR why the update for this field and `m_total_orphan_bytes` wasn't atomic",
      "created_at": "2023-07-06T15:15:44Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254587582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254587582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254613476",
      "pull_request_review_id": 1515046495,
      "id": 1254613476,
      "node_id": "PRRC_kwDOABII585Kx-Hk",
      "diff_hunk": "@@ -181,9 +195,15 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n         const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(tx.GetHash(), i));\n         if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n             for (const auto& elem : it_by_prev->second) {\n+                Assume(elem->second.announcers.size() >= 1);",
      "path": "src/txorphanage.cpp",
      "position": 161,
      "original_position": 59,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "d92b017f6818c1de3286e5dbc35af3860fdf7547",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you allow this to be `empty` one line below with a break; just belt and suspenders?",
      "created_at": "2023-07-06T15:37:02Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254613476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254613476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254615531",
      "pull_request_review_id": 1515046495,
      "id": 1254615531,
      "node_id": "PRRC_kwDOABII585Kx-nr",
      "diff_hunk": "@@ -181,9 +195,15 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n         const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(tx.GetHash(), i));\n         if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n             for (const auto& elem : it_by_prev->second) {\n+                Assume(elem->second.announcers.size() >= 1);\n+                if (elem->second.announcers.empty()) break;\n+                // Pick a random peer from announcers set.\n+                FastRandomContext rng;",
      "path": "src/txorphanage.cpp",
      "position": 164,
      "original_position": 62,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "d92b017f6818c1de3286e5dbc35af3860fdf7547",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "initialize outside of loop?",
      "created_at": "2023-07-06T15:38:41Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254615531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254615531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254629352",
      "pull_request_review_id": 1515046495,
      "id": 1254629352,
      "node_id": "PRRC_kwDOABII585KyB_o",
      "diff_hunk": "@@ -159,5 +179,58 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), expected_count);\n     BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n }\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    size_t expected_total_count{0};\n+    size_t expected_total_size{0};\n+    size_t expected_node0_size{0};\n+    size_t expected_node1_size{0};\n+    TxOrphanageTest orphanage;\n+    // Check that accounting for bytes per peer is accurate.\n+    {\n+        auto ptx{MakeLargeOrphan()};\n+        const auto tx_size = ptx->GetTotalSize();\n+        orphanage.AddTx(ptx, node0);\n+        expected_total_size += tx_size;\n+        expected_total_count += 1;\n+        expected_node0_size += tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // Adding again should do nothing.\n+        orphanage.AddTx(ptx, node0);\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // Adding existing tx for another peer should change that peer's bytes, but not total bytes.\n+        orphanage.AddTx(ptx, node1);\n+        expected_node1_size += tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // if EraseForPeer is called for an orphan with multiple announcers, the orphanage should only\n+        // decrement the number of bytes for that peer.",
      "path": "src/test/orphanage_tests.cpp",
      "position": 131,
      "original_position": 66,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b43033cfb8a8ddc8557375ecc63fd411b31d3618",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "also check that `EraseTxNoLock` wasn't called, i.e. `m_orphans` still has the orphan tx",
      "created_at": "2023-07-06T15:50:33Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254629352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254629352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254629680",
      "pull_request_review_id": 1515046495,
      "id": 1254629680,
      "node_id": "PRRC_kwDOABII585KyCEw",
      "diff_hunk": "@@ -159,5 +179,58 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), expected_count);\n     BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n }\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    size_t expected_total_count{0};\n+    size_t expected_total_size{0};\n+    size_t expected_node0_size{0};\n+    size_t expected_node1_size{0};\n+    TxOrphanageTest orphanage;\n+    // Check that accounting for bytes per peer is accurate.\n+    {\n+        auto ptx{MakeLargeOrphan()};\n+        const auto tx_size = ptx->GetTotalSize();\n+        orphanage.AddTx(ptx, node0);\n+        expected_total_size += tx_size;\n+        expected_total_count += 1;\n+        expected_node0_size += tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // Adding again should do nothing.\n+        orphanage.AddTx(ptx, node0);\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // Adding existing tx for another peer should change that peer's bytes, but not total bytes.\n+        orphanage.AddTx(ptx, node1);\n+        expected_node1_size += tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // if EraseForPeer is called for an orphan with multiple announcers, the orphanage should only\n+        // decrement the number of bytes for that peer.\n+        orphanage.EraseForPeer(node0);\n+        expected_node0_size -= tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);\n+        // EraseForPeer should delete the orphan if it's the only announcer left.\n+        orphanage.EraseForPeer(node1);\n+        expected_total_count -= 1;\n+        expected_total_size -= tx_size;\n+        expected_node1_size -= tx_size;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+        BOOST_CHECK_EQUAL(orphanage.TotalOrphanBytes(), expected_total_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node0), expected_node0_size);\n+        BOOST_CHECK_EQUAL(orphanage.BytesFromPeer(node1), expected_node1_size);",
      "path": "src/test/orphanage_tests.cpp",
      "position": 146,
      "original_position": 81,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b43033cfb8a8ddc8557375ecc63fd411b31d3618",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "check that the orphan tx is now missing from `m_orphans`?",
      "created_at": "2023-07-06T15:50:52Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254629680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254629680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254679291",
      "pull_request_review_id": 1515046495,
      "id": 1254679291,
      "node_id": "PRRC_kwDOABII585KyOL7",
      "diff_hunk": "@@ -2058,7 +2058,7 @@ def received_wtxidrelay():\n         test_transaction_acceptance(self.nodes[0], self.wtx_node, tx2, with_witness=True, accepted=False)\n \n         # Expect a request for parent (tx) by txid despite use of WTX peer\n-        self.wtx_node.wait_for_getdata([tx.sha256], 60)",
      "path": "test/functional/p2p_segwit.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "0d945feaf6025a9f84fc1aa3f087422246793cba",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can we programatically justify this magic :)",
      "created_at": "2023-07-06T16:36:50Z",
      "updated_at": "2023-07-06T16:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1254679291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254679291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2061,
      "original_line": 2061,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261403669",
      "pull_request_review_id": 1526722308,
      "id": 1261403669,
      "node_id": "PRRC_kwDOABII585LL34V",
      "diff_hunk": "@@ -15,14 +14,35 @@ static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n \n+void TxOrphanage::SubtractOrphanBytes(unsigned int size, NodeId peer)\n+{\n+    AssertLockHeld(m_mutex);\n+    Assume(m_peer_bytes_used.count(peer) > 0);\n+    Assume(m_peer_bytes_used.at(peer) >= size);\n+    m_peer_bytes_used.at(peer) -= size;\n+    if (m_peer_bytes_used.at(peer) == 0) {\n+        m_peer_bytes_used.erase(peer);\n+    }\n+}\n \n bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n {\n     LOCK(m_mutex);\n+    if (tx == nullptr) {\n+        Assume(false);\n+        return false;\n+    }",
      "path": "src/txorphanage.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be cleaner to write:\r\n```suggestion\r\n    if (!Assume(tx)) {\r\n        return false;\r\n    }\r\n```",
      "created_at": "2023-07-12T16:04:16Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261403669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261403669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 31,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261405442",
      "pull_request_review_id": 1526722308,
      "id": 1261405442,
      "node_id": "PRRC_kwDOABII585LL4UC",
      "diff_hunk": "@@ -1434,6 +1441,49 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::AddOrphanAnnouncer(NodeId nodeid, const uint256& orphan_wtxid, const CTransactionRef& tx, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(::cs_main); // For m_txrequest\n+    const bool connected = m_connman.ForNode(nodeid, [](CNode* node) { return node->fSuccessfullyConnected && !node->fDisconnect; });\n+    if (!connected) return;",
      "path": "src/net_processing.cpp",
      "position": 67,
      "original_position": 67,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can be dropped in favor of just checking that the CNodeState exists",
      "created_at": "2023-07-12T16:05:21Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261405442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261405442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 1447,
      "original_start_line": 1447,
      "start_side": "RIGHT",
      "line": 1448,
      "original_line": 1448,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261410424",
      "pull_request_review_id": 1526722308,
      "id": 1261410424,
      "node_id": "PRRC_kwDOABII585LL5h4",
      "diff_hunk": "@@ -1434,6 +1441,49 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::AddOrphanAnnouncer(NodeId nodeid, const uint256& orphan_wtxid, const CTransactionRef& tx, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(::cs_main); // For m_txrequest\n+    const bool connected = m_connman.ForNode(nodeid, [](CNode* node) { return node->fSuccessfullyConnected && !node->fDisconnect; });\n+    if (!connected) return;\n+    if (m_txpackagetracker->Count(nodeid) + m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) {",
      "path": "src/net_processing.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(I've mentioned this offline as well)\r\n\r\nThe locking assumptions around this check are weird because `m_txpackagetracker` has its own internal mutex where as `m_txrequest` is guarded by `cs_main`. There is nothing stopping `m_txpackagetracker->Count()` form returning something different right after this check. ",
      "created_at": "2023-07-12T16:09:06Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261410424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261410424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1449,
      "original_line": 1449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261412063",
      "pull_request_review_id": 1526722308,
      "id": 1261412063,
      "node_id": "PRRC_kwDOABII585LL57f",
      "diff_hunk": "@@ -1434,6 +1441,49 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::AddOrphanAnnouncer(NodeId nodeid, const uint256& orphan_wtxid, const CTransactionRef& tx, std::chrono::microseconds current_time)",
      "path": "src/net_processing.cpp",
      "position": 63,
      "original_position": 63,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nvoid PeerManagerImpl::AddOrphanAnnouncer(NodeId nodeid, const CTransactionRef& tx, std::chrono::microseconds current_time)\r\n```",
      "created_at": "2023-07-12T16:10:09Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261412063",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261412063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1444,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261414179",
      "pull_request_review_id": 1526722308,
      "id": 1261414179,
      "node_id": "PRRC_kwDOABII585LL6cj",
      "diff_hunk": "@@ -15,14 +14,35 @@ static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n \n+void TxOrphanage::SubtractOrphanBytes(unsigned int size, NodeId peer)",
      "path": "src/txorphanage.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Imo, it would be nicer to do the orphanage changes separately, including amended functional/unit/fuzz tests.",
      "created_at": "2023-07-12T16:11:36Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261414179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261414179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261416426",
      "pull_request_review_id": 1526722308,
      "id": 1261416426,
      "node_id": "PRRC_kwDOABII585LL6_q",
      "diff_hunk": "@@ -15,14 +14,35 @@ static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n \n+void TxOrphanage::SubtractOrphanBytes(unsigned int size, NodeId peer)\n+{\n+    AssertLockHeld(m_mutex);\n+    Assume(m_peer_bytes_used.count(peer) > 0);\n+    Assume(m_peer_bytes_used.at(peer) >= size);",
      "path": "src/txorphanage.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not a big fan of using `Assume` like this because we can't test these conditions but they **can** happen in production (if the caller is doing something wrong).\r\n\r\nI'd suggest just returning if these assumptions don't hold.",
      "created_at": "2023-07-12T16:13:34Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261416426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261416426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 20,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261419537",
      "pull_request_review_id": 1526722308,
      "id": 1261419537,
      "node_id": "PRRC_kwDOABII585LL7wR",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TXPACKAGETRACKER_H\n+#define BITCOIN_NODE_TXPACKAGETRACKER_H\n+\n+#include <net.h>\n+\n+#include <cstdint>\n+#include <map>\n+#include <vector>\n+\n+class CBlock;\n+class TxOrphanage;\n+namespace node {\n+static constexpr bool DEFAULT_ENABLE_PACKAGE_RELAY{false};\n+\n+class TxPackageTracker {",
      "path": "src/node/txpackagetracker.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be nice to add unit and fuzz tests for this",
      "created_at": "2023-07-12T16:16:20Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261419537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261419537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261419680",
      "pull_request_review_id": 1526722308,
      "id": 1261419680,
      "node_id": "PRRC_kwDOABII585LL7yg",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TXPACKAGETRACKER_H\n+#define BITCOIN_NODE_TXPACKAGETRACKER_H\n+\n+#include <net.h>\n+\n+#include <cstdint>\n+#include <map>\n+#include <vector>\n+\n+class CBlock;\n+class TxOrphanage;\n+namespace node {\n+static constexpr bool DEFAULT_ENABLE_PACKAGE_RELAY{false};\n+\n+class TxPackageTracker {\n+    class Impl;\n+    const std::unique_ptr<Impl> m_impl;\n+public:\n+    struct Options {\n+        unsigned int m_max_orphanage_count;\n+    };\n+\n+    explicit TxPackageTracker(const Options& options);\n+    ~TxPackageTracker();\n+\n+    // Orphanage wrapper functions\n+    /** Check if we already have an orphan transaction (by txid or wtxid) */\n+    bool OrphanageHaveTx(const GenTxid& gtxid);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns nullptr if there are no transactions to work on.\n+     *  Otherwise returns the transaction reference, and removes\n+     *  it from the work set.\n+     */\n+    CTransactionRef GetTxToReconsider(NodeId peer);\n+\n+    /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n+    void DisconnectedPeer(NodeId peer);\n+\n+    /** Erase all orphans included in or invalidated by a new block */\n+    void BlockConnected(const CBlock& block);\n+\n+    /** Does this peer have any orphans to validate? */\n+    bool HaveTxToReconsider(NodeId peer);\n+\n+    /** Return how many entries exist in the orphange */\n+    size_t OrphanageSize();\n+\n+    /** Should be called when a transaction is accepted to the mempool. If it was an orphan we were\n+     * trying to resolve, remove its entries from the orphanage and other data structures. If it is\n+     * the ancestor of an orphan, add the orphan to its associated peer's workset. */\n+    void MempoolAcceptedTx(const CTransactionRef& ptx);",
      "path": "src/node/txpackagetracker.h",
      "position": 56,
      "original_position": 56,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    void MempoolAcceptedTx(const CTransactionRef& tx);\r\n```",
      "created_at": "2023-07-12T16:16:29Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261419680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261419680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261436145",
      "pull_request_review_id": 1526722308,
      "id": 1261436145,
      "node_id": "PRRC_kwDOABII585LL_zx",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",\n+                entry.second.GetHash().ToString(), entry.first);\n+        }\n+        std::vector<GenTxid> results;\n+        for (const auto& gtxid : tracker_requestable) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nResolving orphan %s, requesting by txids of parents from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\n+            const auto ptx = m_orphanage.GetTx(gtxid.GetHash());\n+            if (!ptx) {\n+                // We can't request ancpkginfo and we have no way of knowing what the missing\n+                // parents are (it could also be that the orphan has already been resolved).\n+                // Give up.\n+                orphan_request_tracker.ForgetTxHash(gtxid.GetHash());\n+                LogPrint(BCLog::TXPACKAGES, \"\\nForgetting orphan %s from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\n+                continue;\n+            }\n+            // Add the orphan's parents. Net processing will filter out what we already have.\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(ptx->vin.size());\n+            for (const auto& txin : ptx->vin) {\n+                // We start with all parents, and then remove duplicates below.\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "path": "src/node/txpackagetracker.cpp",
      "position": 149,
      "original_position": 149,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            // Add the orphan's parents. Net processing will filter out what we already have.\r\n            // Deduplicate parent txids, so that we don't have to loop over\r\n            // the same parent txid more than once down below.\r\n            std::set<uint256> unique_parents;\r\n            auto to_prevout = [](const CTxIn& in) { return in.prevout.hash; };\r\n            std::transform(ptx->vin.begin(), ptx->vin.end(), std::inserter(unique_parents, unique_parents.begin()), to_prevout);\r\n```",
      "created_at": "2023-07-12T16:31:16Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261436145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261436145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 139,
      "original_start_line": 139,
      "start_side": "RIGHT",
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261440012",
      "pull_request_review_id": 1526722308,
      "id": 1261440012,
      "node_id": "PRRC_kwDOABII585LMAwM",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",\n+                entry.second.GetHash().ToString(), entry.first);\n+        }\n+        std::vector<GenTxid> results;\n+        for (const auto& gtxid : tracker_requestable) {",
      "path": "src/node/txpackagetracker.cpp",
      "position": 128,
      "original_position": 128,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would you mind adding some spacing around logical blocks in your code? I find a lot of the new code hard to read with a lack of spacing\r\n\r\ne.g.:\r\n```suggestion\r\n    {\r\n        AssertLockNotHeld(m_mutex);\r\n        LOCK(m_mutex);\r\n\r\n        std::vector<std::pair<NodeId, GenTxid>> expired;\r\n        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\r\n        for (const auto& entry : expired) {\r\n            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",\r\n                entry.second.GetHash().ToString(), entry.first);\r\n        }\r\n\r\n        std::vector<GenTxid> results;\r\n        for (const auto& gtxid : tracker_requestable) {\r\n```",
      "created_at": "2023-07-12T16:35:01Z",
      "updated_at": "2023-07-12T16:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261440012",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261440012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 118,
      "original_start_line": 118,
      "start_side": "RIGHT",
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261605505",
      "pull_request_review_id": 1527052773,
      "id": 1261605505,
      "node_id": "PRRC_kwDOABII585LMpKB",
      "diff_hunk": "@@ -0,0 +1,270 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+\"\"\"\n+\n+import random\n+import time\n+\n+from test_framework.messages import (\n+    CInv,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    MSG_TX,\n+    MSG_WITNESS_FLAG,\n+    MSG_WITNESS_TX,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_tx,\n+)\n+from test_framework.p2p import (\n+    NONPREF_PEER_TX_DELAY,\n+    ORPHAN_ANCESTOR_GETDATA_INTERVAL,\n+    OVERLOADED_PEER_TX_DELAY,\n+    p2p_lock,\n+    P2PTxInvStore,\n+    TXID_RELAY_DELAY,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+# Time to fastforward (using setmocktime) before waiting for the node to send getdata(tx) in response\n+# to an inv(tx), in seconds. This delay includes all possible delays + 1, so it should only be used\n+# when the value of the delay is not interesting. If we want to test that the node waits x seconds\n+# for one peer and y seconds for another, use specific values instead.\n+TXREQUEST_TIME_SKIP = NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY + OVERLOADED_PEER_TX_DELAY + 1\n+\n+# Time to fastfoward (using setmocktime) in between subtests to ensure they do not interfere with\n+# one another, in seconds. Equal to 12 hours, which is enough to expire anything that may exist\n+# (though nothing should since state should be cleared) in p2p data structures.\n+LONG_TIME_SKIP = 12 * 60 * 60\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            # Clear mempool\n+            self.generate(self.nodes[0], 1)\n+            self.nodes[0].disconnect_p2ps()\n+            self.mocktime += LONG_TIME_SKIP\n+            self.nodes[0].setmocktime(self.mocktime)\n+    return wrapper\n+\n+class PeerTxRelayer(P2PTxInvStore):\n+    def __init__(self):\n+        super().__init__()\n+        self._tx_received = []\n+        self._getdata_received = []\n+\n+    @property\n+    def tx_received(self):\n+        with p2p_lock:\n+            return self._tx_received\n+\n+    @property\n+    def getdata_received(self):\n+        with p2p_lock:\n+            return self._getdata_received\n+\n+    def on_tx(self, message):\n+        self._tx_received.append(message)\n+\n+    def on_getdata(self, message):\n+        self._getdata_received.append(message)\n+\n+    def wait_for_getdata_txids(self, txids):\n+        def test_function():\n+            last_getdata = self.last_message.get('getdata')\n+            if not last_getdata:\n+                return False\n+            return all([item.type == MSG_WITNESS_TX and item.hash in txids for item in last_getdata.inv])\n+        self.wait_until(test_function, timeout=10)\n+\n+    def assert_message_ignored(self, message):\n+        \"\"\"Check that the node does not respond to this message with any of\n+        getdata, inv, tx.\n+        \"\"\"\n+        prev_lastmessage = self.last_message\n+        self.send_and_ping(message)\n+        after_lastmessage = self.last_message\n+        for msgtype in [\"getdata\", \"inv\", \"tx\"]:\n+            if msgtype not in prev_lastmessage:\n+                assert msgtype not in after_lastmessage\n+            else:\n+                assert_equal(prev_lastmessage[msgtype], after_lastmessage[msgtype])\n+\n+    def assert_never_requested(self, txhash):\n+        \"\"\"Check that the node has never sent us a getdata for this hash (int type)\"\"\"\n+        for getdata in self.getdata_received:\n+            for request in getdata.inv:\n+                assert request.hash != txhash\n+\n+class OrphanHandlingTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [[]]\n+        self.mocktime = int(time.time())\n+\n+    def create_package(self):\n+        \"\"\"Create package with 1 parent and 1 child, normal fees (no cpfp).\n+        \"\"\"\n+        parent = self.wallet.create_self_transfer()\n+        child = self.wallet.create_self_transfer(utxo_to_spend=parent['new_utxo'])\n+        orphan_wtxid = child[\"tx\"].getwtxid()\n+        orphan_tx = child[\"tx\"]\n+        parent_tx = parent[\"tx\"]\n+        return orphan_wtxid, orphan_tx, parent_tx\n+\n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def fastforward(self, seconds):\n+        \"\"\"Convenience helper function to fast-forward, so we don't need to keep track of the\n+        starting time when we call setmocktime.\"\"\"\n+        self.mocktime += seconds\n+        self.nodes[0].setmocktime(self.mocktime)\n+\n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_package()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.fastforward(TXREQUEST_TIME_SKIP)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 160,
      "original_position": 160,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There should be a `setmocktime` call with the initial time somewhere before the first `fastforward`, otherwise this can fail intermittently.",
      "created_at": "2023-07-12T18:56:05Z",
      "updated_at": "2023-07-12T22:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261605505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261605505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 160,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261645151",
      "pull_request_review_id": 1527052773,
      "id": 1261645151,
      "node_id": "PRRC_kwDOABII585LMy1f",
      "diff_hunk": "@@ -2960,9 +2960,10 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n         const MempoolAcceptResult result = m_chainman.ProcessTransaction(porphanTx);\n         const TxValidationState& state = result.m_state;\n         const uint256& orphanHash = porphanTx->GetHash();\n+        const uint256 orphan_wtxid = porphanTx->GetWitnessHash();",
      "path": "src/net_processing.cpp",
      "position": 173,
      "original_position": 4,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "543273d96e896adf5531ed961856aa0eb70cbe57",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 543273d96e896adf5531ed961856aa0eb70cbe57:\r\nnit:  `uint256&` like in the line above?",
      "created_at": "2023-07-12T19:35:16Z",
      "updated_at": "2023-07-12T22:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261645151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261645151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3017,
      "original_line": 2963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261648754",
      "pull_request_review_id": 1527114151,
      "id": 1261648754,
      "node_id": "PRRC_kwDOABII585LMzty",
      "diff_hunk": "@@ -5926,6 +5958,22 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             }\n         }\n \n+        auto requestable_orphans = m_txpackagetracker->GetOrphanRequests(pto->GetId(), current_time);\n+        for (const auto& gtxid : requestable_orphans) {\n+            if (AlreadyHaveTx(gtxid, /*include_orphanage=*/false)) {\n+                // We don't know that the transaction was rejected by mempool. But if the\n+                // transaction was added to mempool, we would have already called\n+                // MempoolAcceptedTx().\n+                m_txpackagetracker->MempoolRejectedTx(gtxid.GetHash());",
      "path": "src/net_processing.cpp",
      "position": 312,
      "original_position": 312,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmmm, this is a `txid`, not a `wtxid`, which is essentially a no-op unless it's a non-segwit tx. What cases do we expect this `MempoolRejectedTx` is even needed? I added logging and will see if this case ever actually would be needed.",
      "created_at": "2023-07-12T19:39:24Z",
      "updated_at": "2023-07-20T15:48:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261648754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261648754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5967,
      "original_line": 5967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261779747",
      "pull_request_review_id": 1527052773,
      "id": 1261779747,
      "node_id": "PRRC_kwDOABII585LNTsj",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",",
      "path": "src/node/txpackagetracker.cpp",
      "position": 124,
      "original_position": 124,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": 1253459892,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think there should ever be a `\\n` prefix, why would we want to separate the meta information (timestamp, threadname etc.) from the actual log entry?",
      "created_at": "2023-07-12T22:20:41Z",
      "updated_at": "2023-07-12T22:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261779747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261779747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261786477",
      "pull_request_review_id": 1527321195,
      "id": 1261786477,
      "node_id": "PRRC_kwDOABII585LNVVt",
      "diff_hunk": "@@ -2966,7 +2966,7 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n             LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphan_wtxid.ToString());\n             RelayTransaction(orphanHash, porphanTx->GetWitnessHash());\n             m_txpackagetracker->AddChildrenToWorkSet(*porphanTx);\n-            m_txpackagetracker->EraseOrphanTx(orphanHash);\n+            m_txpackagetracker->EraseOrphanTx(porphanTx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "4cbb63175398d9b8afe755d2adb24edbd2b4913b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could use `orphan_wtxid` introduced in the previous commit, here and in various other places.",
      "created_at": "2023-07-12T22:31:57Z",
      "updated_at": "2023-07-12T22:31:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261786477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261786477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2969,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262316909",
      "pull_request_review_id": 1528060917,
      "id": 1262316909,
      "node_id": "PRRC_kwDOABII585LPW1t",
      "diff_hunk": "@@ -1434,6 +1441,49 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::AddOrphanAnnouncer(NodeId nodeid, const uint256& orphan_wtxid, const CTransactionRef& tx, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(::cs_main); // For m_txrequest\n+    const bool connected = m_connman.ForNode(nodeid, [](CNode* node) { return node->fSuccessfullyConnected && !node->fDisconnect; });\n+    if (!connected) return;\n+    if (m_txpackagetracker->Count(nodeid) + m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) {",
      "path": "src/net_processing.cpp",
      "position": 68,
      "original_position": 68,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": 1261410424,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah good point.\r\n\r\nIt seems that, given the need to synchronize between `TxRequestTracker` and the package tracking stuff, we should have them both guarded by 1 lock. Looking at https://github.com/bitcoin/bitcoin/pull/26151#pullrequestreview-1116661944 it seems like we could have a `m_txrequest GUARDED_BY(tx_download_mutex)`, `m_txpackagetracker GUARDED_BY(tx_download_mutex)`, and lock it from these peerman functions?\r\n\r\nAlternatively, I wonder if it makes sense to take it a step further and put this all in a `TxDownloadManager` module that wraps orphanage, txrequest, and package tracking.",
      "created_at": "2023-07-13T09:50:48Z",
      "updated_at": "2023-07-13T09:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1262316909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262316909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1449,
      "original_line": 1449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265917707",
      "pull_request_review_id": 1533720796,
      "id": 1265917707,
      "node_id": "PRRC_kwDOABII585LdF8L",
      "diff_hunk": "@@ -4,41 +4,157 @@\n \n #include <node/txpackagetracker.h>\n \n+#include <common/bloom.h>\n+#include <logging.h>\n #include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n \n namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n class TxPackageTracker::Impl {\n     /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n     TxOrphanage m_orphanage;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n public:\n     Impl() = default;\n \n     // Orphanage Wrapper Functions\n-    bool OrphanageAddTx(const CTransactionRef& tx, NodeId peer) { return m_orphanage.AddTx(tx, peer); }\n     bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n     CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n-    void DisconnectedPeer(NodeId peer) {\n-        m_orphanage.EraseForPeer(peer);\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n     }\n-    void BlockConnected(const CBlock& block) { m_orphanage.EraseForBlock(block); }\n     void LimitOrphans(unsigned int max_orphans) { m_orphanage.LimitOrphans(max_orphans); }\n     bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n     size_t OrphanageSize() { return m_orphanage.Size(); }\n-    void MempoolAcceptedTx(const CTransactionRef& ptx)\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n     {\n+        LOCK(m_mutex);\n         m_orphanage.AddChildrenToWorkSet(*ptx);\n         m_orphanage.EraseTx(ptx->GetWitnessHash());\n     }\n-    void MempoolRejectedTx(const uint256& wtxid)\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n     {\n+        LOCK(m_mutex);\n         m_orphanage.EraseTx(wtxid);\n     }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 91,
      "original_position": 90,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n(moved over from [27742](https://github.com/bitcoin/bitcoin/pull/27742#discussion_r1265739284)):\r\nThe approach to add a wtxid disguised as a txid to distinguish between legacy orphan processing and package relay seems a bit like a hack to me.\r\nI'm not strictly against it, but I guess I don't completely understand yet why it's necessary - the information whether a peer supports package relay does not change, so why can't we just always use `GenTxid::Wtxid(wtxid)` and check again in `GetOrphanRequests()` and elsewhere whether we do package relay with the peer instead of checking whether it's a txid / wtxid?",
      "created_at": "2023-07-17T21:23:30Z",
      "updated_at": "2023-07-17T21:23:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1265917707",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265917707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266760855",
      "pull_request_review_id": 1535017514,
      "id": 1266760855,
      "node_id": "PRRC_kwDOABII585LgTyX",
      "diff_hunk": "@@ -4,41 +4,157 @@\n \n #include <node/txpackagetracker.h>\n \n+#include <common/bloom.h>\n+#include <logging.h>\n #include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n \n namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n class TxPackageTracker::Impl {\n     /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n     TxOrphanage m_orphanage;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n public:\n     Impl() = default;\n \n     // Orphanage Wrapper Functions\n-    bool OrphanageAddTx(const CTransactionRef& tx, NodeId peer) { return m_orphanage.AddTx(tx, peer); }\n     bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n     CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n-    void DisconnectedPeer(NodeId peer) {\n-        m_orphanage.EraseForPeer(peer);\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n     }\n-    void BlockConnected(const CBlock& block) { m_orphanage.EraseForBlock(block); }\n     void LimitOrphans(unsigned int max_orphans) { m_orphanage.LimitOrphans(max_orphans); }\n     bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n     size_t OrphanageSize() { return m_orphanage.Size(); }\n-    void MempoolAcceptedTx(const CTransactionRef& ptx)\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n     {\n+        LOCK(m_mutex);\n         m_orphanage.AddChildrenToWorkSet(*ptx);\n         m_orphanage.EraseTx(ptx->GetWitnessHash());\n     }\n-    void MempoolRejectedTx(const uint256& wtxid)\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n     {\n+        LOCK(m_mutex);\n         m_orphanage.EraseTx(wtxid);\n     }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 91,
      "original_position": 90,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": 1265917707,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah good point, it's not necessary, we could just use `GenTxid::Wtxid` for all of them. :+1: ",
      "created_at": "2023-07-18T13:16:53Z",
      "updated_at": "2023-07-18T13:16:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1266760855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266760855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269622220",
      "pull_request_review_id": 1539533894,
      "id": 1269622220,
      "node_id": "PRRC_kwDOABII585LrOXM",
      "diff_hunk": "@@ -5926,6 +5958,22 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             }\n         }\n \n+        auto requestable_orphans = m_txpackagetracker->GetOrphanRequests(pto->GetId(), current_time);\n+        for (const auto& gtxid : requestable_orphans) {\n+            if (AlreadyHaveTx(gtxid, /*include_orphanage=*/false)) {\n+                // We don't know that the transaction was rejected by mempool. But if the\n+                // transaction was added to mempool, we would have already called\n+                // MempoolAcceptedTx().\n+                m_txpackagetracker->MempoolRejectedTx(gtxid.GetHash());",
      "path": "src/net_processing.cpp",
      "position": 312,
      "original_position": 312,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": 1261648754,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "also, adding wtxid logging at `MEMPOOLREJ` log is done would be <3 ",
      "created_at": "2023-07-20T15:18:59Z",
      "updated_at": "2023-07-20T15:18:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1269622220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269622220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5967,
      "original_line": 5967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270139854",
      "pull_request_review_id": 1540338442,
      "id": 1270139854,
      "node_id": "PRRC_kwDOABII585LtMvO",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TXPACKAGETRACKER_H\n+#define BITCOIN_NODE_TXPACKAGETRACKER_H\n+\n+#include <net.h>\n+\n+#include <cstdint>\n+#include <map>\n+#include <vector>\n+\n+class CBlock;\n+class TxOrphanage;\n+namespace node {\n+static constexpr bool DEFAULT_ENABLE_PACKAGE_RELAY{false};\n+\n+class TxPackageTracker {\n+    class Impl;\n+    const std::unique_ptr<Impl> m_impl;\n+public:\n+    struct Options {\n+        unsigned int m_max_orphanage_count;",
      "path": "src/node/txpackagetracker.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A comment can be added to precise this is the global not per-peer limit, at least on how it is used by `LimitOrphans()` (`DEFAULT_MAX_ORPHAN_TRANSACTIONS`).",
      "created_at": "2023-07-21T01:16:51Z",
      "updated_at": "2023-07-21T02:21:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1270139854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270139854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270671380",
      "pull_request_review_id": 1541149446,
      "id": 1270671380,
      "node_id": "PRRC_kwDOABII585LvOgU",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/txpackagetracker.h>\n+\n+#include <common/bloom.h>\n+#include <logging.h>\n+#include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n+\n+namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};\n+\n+class TxPackageTracker::Impl {\n+    /** Manages unvalidated tx data (orphan transactions for which we are downloading ancestors). */\n+    TxOrphanage m_orphanage;\n+\n+    /** Maximum number of transactions in the orphanage, used when calling LimitOrphans(). */\n+    const size_t m_max_orphanage_count;\n+\n+    mutable Mutex m_mutex;\n+\n+    /** Tracks orphans for which we need to request ancestor information. All hashes stored are\n+     * wtxids, i.e., the wtxid of the orphan. However, the Announcement::m_is_wtxid field is used to\n+     * indicate whether we would request the ancestor information by wtxid (via package relay) or by\n+     * txid (via prevouts of the missing inputs). */\n+    TxRequestTracker orphan_request_tracker GUARDED_BY(m_mutex);\n+\n+public:\n+    Impl(const Options& options) :\n+        m_max_orphanage_count{options.m_max_orphanage_count}\n+    {}\n+\n+    // Orphanage Wrapper Functions\n+    bool OrphanageHaveTx(const GenTxid& gtxid) { return m_orphanage.HaveTx(gtxid); }\n+    CTransactionRef GetTxToReconsider(NodeId peer) { return m_orphanage.GetTxToReconsider(peer); }\n+    void DisconnectedPeer(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        orphan_request_tracker.DisconnectedPeer(nodeid);\n+        m_orphanage.EraseForPeer(nodeid);\n+    }\n+    void BlockConnected(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        const auto wtxids_erased{m_orphanage.EraseForBlock(block)};\n+        std::set<uint256> block_wtxids;\n+        std::set<uint256> conflicted_wtxids;\n+        for (const CTransactionRef& ptx : block.vtx) {\n+            block_wtxids.insert(ptx->GetWitnessHash());\n+        }\n+        for (const auto& wtxid : wtxids_erased) {\n+            if (block_wtxids.count(wtxid) == 0) {\n+                conflicted_wtxids.insert(wtxid);\n+            }\n+        }\n+        for (const auto& wtxid : block_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+        for (const auto& wtxid : conflicted_wtxids) {\n+            orphan_request_tracker.ForgetTxHash(wtxid);\n+        }\n+    }\n+    bool HaveTxToReconsider(NodeId peer) { return m_orphanage.HaveTxToReconsider(peer); }\n+    size_t OrphanageSize() { return m_orphanage.Size(); }\n+    void MempoolAcceptedTx(const CTransactionRef& ptx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.AddChildrenToWorkSet(*ptx);\n+        m_orphanage.EraseTx(ptx->GetWitnessHash());\n+    }\n+    void MempoolRejectedTx(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_orphanage.EraseTx(wtxid);\n+    }\n+    void AddOrphanTx(NodeId nodeid, const uint256& wtxid, const CTransactionRef& tx, bool is_preferred, std::chrono::microseconds reqtime)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        // Skip if we weren't provided the tx and can't find the wtxid in the orphanage.\n+        if (tx == nullptr && !m_orphanage.HaveTx(GenTxid::Wtxid(wtxid))) return;\n+\n+        // Even though this stores the orphan wtxid, GenTxid::Txid instead of Wtxid because we will be requesting the parents via txid.\n+        orphan_request_tracker.ReceivedInv(nodeid, GenTxid::Txid(wtxid), is_preferred, reqtime);\n+\n+        if (tx != nullptr) {\n+            m_orphanage.AddTx(tx, nodeid);\n+        } else {\n+            m_orphanage.AddTx(m_orphanage.GetTx(wtxid), nodeid);\n+        }\n+        // DoS prevention: do not allow m_orphanage to grow unbounded (see CVE-2012-3789)\n+        m_orphanage.LimitOrphans(m_max_orphanage_count);\n+    }\n+    size_t CountInFlight(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.CountInFlight(nodeid)};\n+        return count;\n+    }\n+    size_t Count(NodeId nodeid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        auto count{orphan_request_tracker.Count(nodeid)};\n+        return count;\n+    }\n+\n+    std::vector<GenTxid> GetOrphanRequests(NodeId nodeid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        AssertLockNotHeld(m_mutex);\n+        LOCK(m_mutex);\n+        std::vector<std::pair<NodeId, GenTxid>> expired;\n+        auto tracker_requestable = orphan_request_tracker.GetRequestable(nodeid, current_time, &expired);\n+        for (const auto& entry : expired) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nTimeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"ancpkginfo\" : \"orphan parent\",\n+                entry.second.GetHash().ToString(), entry.first);\n+        }\n+        std::vector<GenTxid> results;\n+        for (const auto& gtxid : tracker_requestable) {\n+            LogPrint(BCLog::TXPACKAGES, \"\\nResolving orphan %s, requesting by txids of parents from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\n+            const auto ptx = m_orphanage.GetTx(gtxid.GetHash());\n+            if (!ptx) {\n+                // We can't request ancpkginfo and we have no way of knowing what the missing\n+                // parents are (it could also be that the orphan has already been resolved).\n+                // Give up.\n+                orphan_request_tracker.ForgetTxHash(gtxid.GetHash());\n+                LogPrint(BCLog::TXPACKAGES, \"\\nForgetting orphan %s from peer=%d\\n\", gtxid.GetHash().ToString(), nodeid);\n+                continue;\n+            }\n+            // Add the orphan's parents. Net processing will filter out what we already have.\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(ptx->vin.size());\n+            for (const auto& txin : ptx->vin) {\n+                // We start with all parents, and then remove duplicates below.\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\n+            for (const auto& txid : unique_parents) {\n+                results.emplace_back(GenTxid::Txid(txid));\n+            }\n+            // Mark the orphan as requested\n+            orphan_request_tracker.RequestedTx(nodeid, gtxid.GetHash(), current_time + ORPHAN_ANCESTOR_GETDATA_INTERVAL);\n+        }\n+        if (!results.empty()) LogPrint(BCLog::TXPACKAGES, \"\\nRequesting %u items from peer=%d\\n\", results.size(), nodeid);",
      "path": "src/node/txpackagetracker.cpp",
      "position": 156,
      "original_position": 156,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This logging should be handled by the caller, since the caller sometimes isn't actually requesting the items!",
      "created_at": "2023-07-21T13:22:30Z",
      "updated_at": "2023-07-21T13:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1270671380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270671380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279714521",
      "pull_request_review_id": 1555503183,
      "id": 1279714521,
      "node_id": "PRRC_kwDOABII585MRuTZ",
      "diff_hunk": "@@ -2960,9 +2960,10 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n         const MempoolAcceptResult result = m_chainman.ProcessTransaction(porphanTx);\n         const TxValidationState& state = result.m_state;\n         const uint256& orphanHash = porphanTx->GetHash();\n+        const uint256 orphan_wtxid = porphanTx->GetWitnessHash();\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n+            LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphan_wtxid.ToString());",
      "path": "src/net_processing.cpp",
      "position": 177,
      "original_position": 8,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "543273d96e896adf5531ed961856aa0eb70cbe57",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 543273d96e896adf5531ed961856aa0eb70cbe57 \"[log] log ProcessOrphanTx() events by wtxid\"\r\n\r\nPerhaps log both txid and wtxid?",
      "created_at": "2023-07-31T18:22:41Z",
      "updated_at": "2023-07-31T19:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1279714521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279714521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3020,
      "original_line": 2966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279730123",
      "pull_request_review_id": 1555503183,
      "id": 1279730123,
      "node_id": "PRRC_kwDOABII585MRyHL",
      "diff_hunk": "@@ -61,7 +62,31 @@ class TxOrphanage {\n         return m_orphans.size();\n     }\n \n+    /** Return total memory usage of the transactions stored. Does not include overhead of\n+     * m_orphans, m_peer_work_set, etc. */\n+    size_t TotalOrphanBytes() const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        return m_total_orphan_bytes;\n+    }\n+    size_t BytesFromPeer(NodeId peer) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        auto peer_bytes_it = m_peer_bytes_used.find(peer);\n+        return peer_bytes_it == m_peer_bytes_used.end() ? 0 : peer_bytes_it->second;\n+    }\n+\n+    /** Remove a peer from an orphan's announcers list, erasing the orphan if this is the only peer\n+     * who announced it. If the orphan doesn't exist or does not list this peer as an announcer, do nothing. */\n+    void EraseOrphanOfPeer(const uint256& wtxid, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "29d9d326d5193bb9a410a8881eabc93de5dd6266",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 29d9d326d5193bb9a410a8881eabc93de5dd6266 \"[txorphanage] track size of stored orphans, total and by peer\"\r\n\r\nThis function is unimplemented.",
      "created_at": "2023-07-31T18:39:46Z",
      "updated_at": "2023-07-31T19:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1279730123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279730123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279743325",
      "pull_request_review_id": 1555503183,
      "id": 1279743325,
      "node_id": "PRRC_kwDOABII585MR1Vd",
      "diff_hunk": "@@ -4286,6 +4285,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 if (RecursiveDynamicUsage(*ptx) < 100000) {\n                     AddToCompactExtraTransactions(ptx);\n                 }\n+                m_txpackagetracker->MempoolRejectedTx(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 289,
      "original_position": 32,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "974d864419dd98be6e32dec3ee11f5082b060b1b",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 974d864419dd98be6e32dec3ee11f5082b060b1b \"[refactor] make TxPackageTracker responsible for EraseTx and AddChildrenToWorkset\"\r\n\r\nThis line seems a bit unrelated to this commit as there is no pre-existing `EraseTx`.",
      "created_at": "2023-07-31T18:53:43Z",
      "updated_at": "2023-07-31T19:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1279743325",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279743325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4320,
      "original_line": 4288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279747416",
      "pull_request_review_id": 1555503183,
      "id": 1279747416,
      "node_id": "PRRC_kwDOABII585MR2VY",
      "diff_hunk": "@@ -4,41 +4,157 @@\n \n #include <node/txpackagetracker.h>\n \n+#include <common/bloom.h>\n+#include <logging.h>\n #include <txorphanage.h>\n+#include <txrequest.h>\n+#include <util/hasher.h>\n \n namespace node {\n+    /** How long to wait before requesting orphan ancpkginfo/parents from an additional peer. */\n+    static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};",
      "path": "src/node/txpackagetracker.cpp",
      "position": 15,
      "original_position": 12,
      "commit_id": "116378efc1c9c1fe0d26cb42e2bdbb5770815c35",
      "original_commit_id": "b5ab45e595bbcedbd602b6385b83e9ffd983f216",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In b5ab45e595bbcedbd602b6385b83e9ffd983f216 \"[p2p/refactor] make TxPackageTracker responsible for orphan resolution\"\r\n\r\nnit: indentation",
      "created_at": "2023-07-31T18:58:14Z",
      "updated_at": "2023-07-31T19:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1279747416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279747416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "RIGHT",
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    }
  ]
}