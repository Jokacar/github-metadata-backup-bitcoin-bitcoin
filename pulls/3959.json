{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959",
    "id": 13951159,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM5NTExNTk=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3959",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/3959.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/3959.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/171ca7745e77c9f78f26556457fe64e5b2004a75",
    "number": 3959,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "estimatefee / estimatepriority RPC methods",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "New RPC methods: return an estimate of the fee (or priority) a transaction needs to be likely to confirm in a given number of blocks.\n\nFee-per-kilobyte estimates for 1..10 confirmations from this code:\n\n```\ngavin$ for i in {1..10}; do ./bitcoind estimatefee $i; done\n0.00044643\n0.00044248\n0.00044053\n0.00029499\n0.00020492\n0.00014970\n0.00012981\n0.00012190\n0.00011769\n0.00011217\n```\n\nMike Hearn created the first version of this method for estimating fees.\nIt works as follows:\n\nFor transactions that took 1 to N (I picked N=25) blocks to confirm, keep N buckets with at most 100 entries in each recording the fees-per-kilobyte paid by those transactions.\n\n(separate buckets are kept for transactions that confirmed because they are high-priority)\n\nThe buckets are filled as blocks are found, and are saved/restored as part of the mempool.dat file.\n\nA few variations on Mike's initial scheme:\n\nTo estimate the fee needed for a transaction to confirm in X buckets, all of the samples in all of the buckets are used and a median of all of the data is used to make the estimate. For example, imagine\n25 buckets each containing the full 100 entries. Those 2,500 samples are sorted, and the estimate of the fee needed to confirm in the very next block is the 50'th-highest-fee-entry in that sorted list; the estimate of the fee needed to confirm in the next two blocks is the 150'th-highest-fee-entry, etc.\n\nThat algorithm has the nice property that estimates of how much fee you need to pay to get confirmed in block N will always be greater than or equal to the estimate for block N+1. It would clearly be wrong\nto say \"pay 11 uBTC and you'll get confirmed in 3 blocks, but pay 12 uBTC and it will take LONGER\".\n\nA single block will not contribute more than 10 entries to any one bucket, so a single miner and a large block cannot overwhelm the estimates.\n",
    "labels": [],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/14",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/14",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/14/labels",
      "id": 505738,
      "node_id": "MDk6TWlsZXN0b25lNTA1NzM4",
      "number": 14,
      "state": "closed",
      "title": "0.10.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 134,
      "created_at": "2013-12-05T10:34:42Z",
      "updated_at": "2015-12-03T11:08:31Z",
      "closed_at": "2015-12-03T11:08:31Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2014-03-25T13:18:47Z",
    "updated_at": "2021-09-08T10:32:56Z",
    "closed_at": "2014-06-06T16:51:10Z",
    "mergeable_state": "unknown",
    "merged_at": "2014-06-06T16:51:10Z",
    "merge_commit_sha": "4caae11c24123d0d24f11443781f79e78b7db551",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "gavinandresen:smartfee_blocks",
      "ref": "smartfee_blocks",
      "sha": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 774842,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NzQ4NDI=",
        "name": "bitcoin-git",
        "full_name": "gavinandresen/bitcoin-git",
        "owner": {
          "login": "gavinandresen",
          "id": 331997,
          "node_id": "MDQ6VXNlcjMzMTk5Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gavinandresen",
          "html_url": "https://github.com/gavinandresen",
          "followers_url": "https://api.github.com/users/gavinandresen/followers",
          "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
          "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
          "repos_url": "https://api.github.com/users/gavinandresen/repos",
          "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/gavinandresen/bitcoin-git",
        "description": "Feature branches that aren't yet, or never will be, ready for mainline bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/gavinandresen/bitcoin-git",
        "archive_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contributors",
        "deployments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/deployments",
        "downloads_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/downloads",
        "events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/events",
        "forks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/forks",
        "git_commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/tags%7B/sha%7D",
        "git_url": "git://github.com/gavinandresen/bitcoin-git.git",
        "issue_comment_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/languages",
        "merges_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/merges",
        "milestones_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/releases%7B/id%7D",
        "ssh_url": "git@github.com:gavinandresen/bitcoin-git.git",
        "stargazers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/stargazers",
        "statuses_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscribers",
        "subscription_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscription",
        "tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/tags",
        "teams_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/teams",
        "trees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/gavinandresen/bitcoin-git.git",
        "hooks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/hooks",
        "svn_url": "https://github.com/gavinandresen/bitcoin-git",
        "homepage": "https://github.com/bitcoin",
        "language": "C++",
        "forks_count": 24,
        "stargazers_count": 117,
        "watchers_count": 117,
        "size": 66221,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-07-15T09:13:07Z",
        "created_at": "2010-07-14T15:41:31Z",
        "updated_at": "2023-07-28T06:56:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "345cb52e8ba878ca3e2590d5792b733ec11a1f0d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35474,
        "stargazers_count": 70605,
        "watchers_count": 70605,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 667,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T12:42:51Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T13:04:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 909,
    "deletions": 158,
    "changed_files": 26,
    "commits": 3,
    "review_comments": 13,
    "comments": 14
  },
  "events": [
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2Nzg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2ODI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2ODU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2ODg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2OTA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2OTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2OTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ2OTg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 39120314,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIwMzE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39120314",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-03-31T18:00:39Z",
      "updated_at": "2014-03-31T18:00:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master, and tweaked to address Mike's comments (thanks for the review!).\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-39120314",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 39208091,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjA4MDkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39208091",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-04-01T13:58:27Z",
      "updated_at": "2014-04-03T15:34:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pull-tester errors were with the regression test:\n\npull-tester is running python 2.6  (fixed by using subprocess.check_call instead of python2.7 subprocess.check_output).\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-39208091",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "milestoned",
      "id": 118167663,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDExODE2NzY2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/118167663",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-06T09:53:15Z",
      "milestone": {
        "title": "0.10.0"
      }
    },
    {
      "event": "commented",
      "id": 42456554,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU2NTU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42456554",
      "actor": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-07T17:23:54Z",
      "updated_at": "2014-05-07T17:23:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "What's the status of this work? Does it need more review or testing or what?\n",
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-42456554",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 42457936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU3OTM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42457936",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-07T17:34:56Z",
      "updated_at": "2014-05-07T17:34:56Z",
      "author_association": "MEMBER",
      "body": "It's queued to be merged for 0.10, so after the 0.9.2 branch split-off.\nBut more review and testing is always welcome.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-42457936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ3MDA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 44032969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDMyOTY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44032969",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-23T16:33:50Z",
      "updated_at": "2014-05-23T16:33:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nit-picked : replace GetFee(1000) with inline GetFeePerK() method.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44032969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-23T17:14:12Z",
      "updated_at": "2014-05-23T17:14:12Z",
      "source": {
        "issue": {
          "id": 31810174,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5MjUwNDA=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4067/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4067/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4067/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/4067",
          "number": 4067,
          "state": "closed",
          "state_reason": null,
          "title": "Encapsulate coin balances within a new CMoney type.",
          "body": "Provides code parity between bitcoin and side chains which use a different type for representing and performing arithmetic on coin balances, e.g. Freicoin's use of the GMP library's arbitrary-precision rational number type for increased divisibility and interest calculations. This greatly reduces the friction in sharing code and submitting code upstream. Also organizes related functionality such as FormatMoney and ParseMoney into a single class framework.\n",
          "user": {
            "login": "maaku",
            "id": 69154,
            "node_id": "MDQ6VXNlcjY5MTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maaku",
            "html_url": "https://github.com/maaku",
            "followers_url": "https://api.github.com/users/maaku/followers",
            "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
            "organizations_url": "https://api.github.com/users/maaku/orgs",
            "repos_url": "https://api.github.com/users/maaku/repos",
            "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maaku/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/4067",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/4067.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/4067.patch"
          },
          "closed_at": "2014-08-19T09:15:16Z",
          "created_at": "2014-04-18T16:54:21Z",
          "updated_at": "2021-09-08T10:33:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-29T16:28:05Z",
      "updated_at": "2014-05-29T16:28:05Z",
      "source": {
        "issue": {
          "id": 34569740,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0ODk0MTI=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4250",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4250/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4250/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4250/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/4250",
          "number": 4250,
          "state": "closed",
          "state_reason": null,
          "title": "Smart fees for wallet CreateTransaction",
          "body": "The wallet now uses the mempool fee estimator with a new\ncommand-line option: -txconfirmtarget (default: 1) instead\nof using hard-coded fees or priorities.\n\nA new bitcoind that hasn't seen enough transactions to estimate\nwill fall back to the old hard-coded minimum priority or\ntransaction fee.\n\n-paytxfee option overrides -txconfirmtarget.\n\nRelaying and mining code isn't changed.\n\nFor Qt, the coin control dialog now uses priority estimates to\nlabel transaction priority (instead of hard-coded constants);\nunspent outputs were consistently labeled with a much higher\npriority than is justified by the free transactions actually\nbeing accepted into blocks.\n\nI did not implement any GUI for setting -txconfirmtarget; I would\nsuggest getting rid of the \"Pay transaction fee\" GUI and replace\nit with either \"target number of confirmations\" or maybe\na \"faster confirmation <--> lower fee\" slider or select box.\n\nBuilt on #3959 ; only the last commit is new.\n",
          "user": {
            "login": "gavinandresen",
            "id": 331997,
            "node_id": "MDQ6VXNlcjMzMTk5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gavinandresen",
            "html_url": "https://github.com/gavinandresen",
            "followers_url": "https://api.github.com/users/gavinandresen/followers",
            "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
            "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
            "repos_url": "https://api.github.com/users/gavinandresen/repos",
            "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4250",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/4250",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/4250.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/4250.patch"
          },
          "closed_at": "2014-07-03T19:51:14Z",
          "created_at": "2014-05-29T16:28:05Z",
          "updated_at": "2021-09-08T10:35:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 44553040,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTUzMDQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44553040",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-29T16:35:45Z",
      "updated_at": "2014-05-29T16:35:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master.\n\nI'm very happy with how quickly this generates good estimates; after just three or four blocks it has a good idea of what priority or fee is needed to get into the next couple of blocks.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44553040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 44558034,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU4MDM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44558034",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-29T17:18:38Z",
      "updated_at": "2014-05-29T17:18:38Z",
      "author_association": "MEMBER",
      "body": "Save/restore of the mempool seems quite dangerous in making some unconfirmed transactions potentially live forever in the network...\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44558034",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 44558446,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU4NDQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44558446",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-29T17:22:02Z",
      "updated_at": "2014-05-29T17:22:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nod -- you only want to save/restore once we have transactions expiring from the mempool (janitor etc.) after X blocks.\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44558446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 44621083,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjIxMDgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44621083",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-30T07:06:26Z",
      "updated_at": "2014-05-30T07:06:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Yup. Even with expiration it makes many DoS attacks and similar vulnerabilities much more effective. For instance OOM crashes are hard to exploit right now because the txs are hard to propagate; not true with save restore. \n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44621083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "mentioned",
      "id": 126312338,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTI2MzEyMzM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/126312338",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-30T07:06:26Z"
    },
    {
      "event": "subscribed",
      "id": 126312339,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyNjMxMjMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/126312339",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-30T07:06:26Z"
    },
    {
      "event": "commented",
      "id": 44622117,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjIyMTE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44622117",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-30T07:23:21Z",
      "updated_at": "2014-05-30T07:23:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "In general, lacking other tools, clearing the mempool [implicitly] at startup is a valuable tool.\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44622117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "commented",
      "id": 44649634,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ5NjM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44649634",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-05-30T13:22:57Z",
      "updated_at": "2014-05-30T13:22:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Consensus is saving/restoring memory pool is dangerous, so I've removed that functionality.\n\nFee estimates ARE saved/restored, to datadir fee_estimates.dat file.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-44649634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmNiMjFkMTdhYjgwOTdiNmE0MjVkMzdlNDhjOTU1ZmJiMGU5ZjBj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c",
      "tree": {
        "sha": "297b740beca0274be8a85d8c355acecafecbbc3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/297b740beca0274be8a85d8c355acecafecbbc3e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/345cb52e8ba878ca3e2590d5792b733ec11a1f0d",
          "sha": "345cb52e8ba878ca3e2590d5792b733ec11a1f0d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/345cb52e8ba878ca3e2590d5792b733ec11a1f0d"
        }
      ],
      "message": "Type-safe CFeeRate class\n\nUse CFeeRate instead of an int64_t for quantities that are\nfee-per-size.\n\nHelps prevent unit-conversion mismatches between the wallet,\nrelaying, and mining code.",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-06-06T14:34:18Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-04-10T18:14:18Z"
      },
      "sha": "c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTkzZmI4MmE2ZmU0NDNlNTQzNGYyYzJhZjNiMjUyNDA5YzE5YjI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0193fb82a6fe443e5434f2c2af3b252409c19b25",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0193fb82a6fe443e5434f2c2af3b252409c19b25",
      "tree": {
        "sha": "64332beb4bc948b9dc4a021bd9358abebd7c9aba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64332beb4bc948b9dc4a021bd9358abebd7c9aba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c",
          "sha": "c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6cb21d17ab8097b6a425d37e48c955fbb0e9f0c"
        }
      ],
      "message": "Allow multiple regression tests to run at once\n\nChoose ports at startup based on PID, so multiple regression tests\ncan run on the same system at the same time.",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-06-06T14:34:18Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-03-14T16:19:52Z"
      },
      "sha": "0193fb82a6fe443e5434f2c2af3b252409c19b25"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzFjYTc3NDVlNzdjOWY3OGYyNjU1NjQ1N2ZlNjRlNWIyMDA0YTc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/171ca7745e77c9f78f26556457fe64e5b2004a75",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/171ca7745e77c9f78f26556457fe64e5b2004a75",
      "tree": {
        "sha": "0a25f1f328ca66177c79afcf4422ea99d221f981",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a25f1f328ca66177c79afcf4422ea99d221f981"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0193fb82a6fe443e5434f2c2af3b252409c19b25",
          "sha": "0193fb82a6fe443e5434f2c2af3b252409c19b25",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0193fb82a6fe443e5434f2c2af3b252409c19b25"
        }
      ],
      "message": "estimatefee / estimatepriority RPC methods\n\nNew RPC methods: return an estimate of the fee (or priority) a\ntransaction needs to be likely to confirm in a given number of\nblocks.\n\nMike Hearn created the first version of this method for estimating fees.\nIt works as follows:\n\nFor transactions that took 1 to N (I picked N=25) blocks to confirm,\nkeep N buckets with at most 100 entries in each recording the\nfees-per-kilobyte paid by those transactions.\n\n(separate buckets are kept for transactions that confirmed because\nthey are high-priority)\n\nThe buckets are filled as blocks are found, and are saved/restored\nin a new fee_estiamtes.dat file in the data directory.\n\nA few variations on Mike's initial scheme:\n\nTo estimate the fee needed for a transaction to confirm in X buckets,\nall of the samples in all of the buckets are used and a median of\nall of the data is used to make the estimate. For example, imagine\n25 buckets each containing the full 100 entries. Those 2,500 samples\nare sorted, and the estimate of the fee needed to confirm in the very\nnext block is the 50'th-highest-fee-entry in that sorted list; the\nestimate of the fee needed to confirm in the next two blocks is the\n150'th-highest-fee-entry, etc.\n\nThat algorithm has the nice property that estimates of how much fee\nyou need to pay to get confirmed in block N will always be greater\nthan or equal to the estimate for block N+1. It would clearly be wrong\nto say \"pay 11 uBTC and you'll get confirmed in 3 blocks, but pay\n12 uBTC and it will take LONGER\".\n\nA single block will not contribute more than 10 entries to any one\nbucket, so a single miner and a large block cannot overwhelm\nthe estimates.",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-06-06T14:44:57Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-03-17T12:19:54Z"
      },
      "sha": "171ca7745e77c9f78f26556457fe64e5b2004a75"
    },
    {
      "event": "commented",
      "id": 45346289,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzQ2Mjg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45346289",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-06T15:00:23Z",
      "updated_at": "2014-06-06T15:00:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK.  Speaking conservatively, appears to be low impact as implemented at first glance.\n\nThe largest impact is to existing operations is the hook that is executed when a block appears, necessitating the removal of TXs from the mempool.  At a quick glance, it was difficult to discern the big-O() of this operation, but at least it is all in CPU/RAM, and only executed once per incoming new block.\n\nOne nit (perhaps for post merge):  I don't like the mempool itself doing the reading.  Would prefer a helper function outside the mempool class that perform the necessary I/O.  Our normal pattern is a pure implement-serialize chain until actual file I/O is needed.  This seems to mix metaphors a bit more than usual.\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-45346289",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTIxNjQ3MDI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 45358992,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzU4OTky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45358992",
      "actor": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-06T16:50:51Z",
      "updated_at": "2014-06-06T16:50:51Z",
      "author_association": "NONE",
      "body": "Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/171ca7745e77c9f78f26556457fe64e5b2004a75 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n4. The test suite fails on either Linux i386 or Win32\n5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n\nIf you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "user": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-45358992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "merged",
      "id": 128879488,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTI4ODc5NDg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/128879488",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/171ca7745e77c9f78f26556457fe64e5b2004a75",
      "created_at": "2014-06-06T16:51:10Z"
    },
    {
      "event": "closed",
      "id": 128879489,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTI4ODc5NDg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/128879489",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-06T16:51:10Z"
    },
    {
      "event": "referenced",
      "id": 128879503,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyODg3OTUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/128879503",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "95d68c48d7ae45cb2a7303152816e9391cfbd0c9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95d68c48d7ae45cb2a7303152816e9391cfbd0c9",
      "created_at": "2014-06-06T16:51:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "cozz",
        "id": 2814559,
        "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cozz",
        "html_url": "https://github.com/cozz",
        "followers_url": "https://api.github.com/users/cozz/followers",
        "following_url": "https://api.github.com/users/cozz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cozz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cozz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
        "organizations_url": "https://api.github.com/users/cozz/orgs",
        "repos_url": "https://api.github.com/users/cozz/repos",
        "events_url": "https://api.github.com/users/cozz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cozz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-08T19:37:16Z",
      "updated_at": "2014-06-08T19:37:16Z",
      "source": {
        "issue": {
          "id": 35244846,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NjU5MzQ=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4308",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4308/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4308/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4308/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/4308",
          "number": 4308,
          "state": "closed",
          "state_reason": null,
          "title": "Fix CreateTransaction in the voluntary fee case",
          "body": "A low priority tx of 226 bytes now pays 2260 satoshis in fee because of #3959.\nBut if you set the voluntary fee to 10000 satoshis per kilobyte, CreateTransaction adds 10000 satoshis as fee instead of 2260.\n\nAt the end of the loop we check both, nMinFee and nPayFee, so start the loop always with zero fee.\n",
          "user": {
            "login": "cozz",
            "id": 2814559,
            "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cozz",
            "html_url": "https://github.com/cozz",
            "followers_url": "https://api.github.com/users/cozz/followers",
            "following_url": "https://api.github.com/users/cozz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/cozz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/cozz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
            "organizations_url": "https://api.github.com/users/cozz/orgs",
            "repos_url": "https://api.github.com/users/cozz/repos",
            "events_url": "https://api.github.com/users/cozz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/cozz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4308",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/4308",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/4308.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/4308.patch"
          },
          "closed_at": "2014-06-16T18:41:40Z",
          "created_at": "2014-06-08T19:37:16Z",
          "updated_at": "2021-09-08T10:48:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "cozz",
        "id": 2814559,
        "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cozz",
        "html_url": "https://github.com/cozz",
        "followers_url": "https://api.github.com/users/cozz/followers",
        "following_url": "https://api.github.com/users/cozz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cozz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cozz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
        "organizations_url": "https://api.github.com/users/cozz/orgs",
        "repos_url": "https://api.github.com/users/cozz/repos",
        "events_url": "https://api.github.com/users/cozz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cozz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-06-10T00:29:18Z",
      "updated_at": "2014-06-10T00:29:18Z",
      "source": {
        "issue": {
          "id": 35339098,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5MTY1ODA=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4314",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4314/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4314/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4314/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/4314",
          "number": 4314,
          "state": "closed",
          "state_reason": null,
          "title": "[Qt] Coin control cleanup because of non-rounding fees",
          "body": "#3959 introduced that fees are not rounded anymore up to 1000 bytes.\n\nThis results in that coin control guesses the fee wrong very often.\nSo I would like to make the change:\n- add \"~\" in front of fee, afterfee and change; show a tooltip \"Can vary +/- %1 satoshi(s) per input.\"\n",
          "user": {
            "login": "cozz",
            "id": 2814559,
            "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cozz",
            "html_url": "https://github.com/cozz",
            "followers_url": "https://api.github.com/users/cozz/followers",
            "following_url": "https://api.github.com/users/cozz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/cozz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/cozz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
            "organizations_url": "https://api.github.com/users/cozz/orgs",
            "repos_url": "https://api.github.com/users/cozz/repos",
            "events_url": "https://api.github.com/users/cozz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/cozz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4314",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/4314",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/4314.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/4314.patch"
          },
          "closed_at": "2014-06-23T10:08:00Z",
          "created_at": "2014-06-10T00:29:18Z",
          "updated_at": "2021-09-08T10:51:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "christophebiocca",
        "id": 566354,
        "node_id": "MDQ6VXNlcjU2NjM1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/566354?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christophebiocca",
        "html_url": "https://github.com/christophebiocca",
        "followers_url": "https://api.github.com/users/christophebiocca/followers",
        "following_url": "https://api.github.com/users/christophebiocca/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/christophebiocca/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/christophebiocca/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/christophebiocca/subscriptions",
        "organizations_url": "https://api.github.com/users/christophebiocca/orgs",
        "repos_url": "https://api.github.com/users/christophebiocca/repos",
        "events_url": "https://api.github.com/users/christophebiocca/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/christophebiocca/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-08-26T23:23:21Z",
      "updated_at": "2014-08-26T23:23:21Z",
      "source": {
        "issue": {
          "id": 33009626,
          "node_id": "MDU6SXNzdWUzMzAwOTYyNg==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4146",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4146/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4146/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4146/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/4146",
          "number": 4146,
          "state": "closed",
          "state_reason": "completed",
          "title": "Durable transaction fee model",
          "body": "Considering the fact that Bitcoin market prices are now mature enough to be streaming on a Bloomberg terminal doesn't it make sense to create a cash market price driven fee model so this never has to be revisited in the future?\n\nEmpowering each node with this insight would also assist future directions for the GUI where people invariably will want to send/receive/report in fiat terms. If the fiat price is already used by all nodes to facilitate transaction fee handling, an additional getfiatpx call could be added to the RPC interface.\n",
          "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "closed_at": "2014-08-28T03:46:03Z",
          "created_at": "2014-05-07T18:06:20Z",
          "updated_at": "2021-09-08T12:33:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 63845974,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzODQ1OTc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63845974",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-11-20T17:28:36Z",
      "updated_at": "2014-11-20T17:28:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "If mempool saving ever comes back as a proposal we should keep in mind that doing so presents a pretty strong watermarking attack. (... not that we don't have many other watermarking attacks.)\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#issuecomment-63845974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3959"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "rnicoll",
        "id": 3513077,
        "node_id": "MDQ6VXNlcjM1MTMwNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rnicoll",
        "html_url": "https://github.com/rnicoll",
        "followers_url": "https://api.github.com/users/rnicoll/followers",
        "following_url": "https://api.github.com/users/rnicoll/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rnicoll/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rnicoll/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
        "organizations_url": "https://api.github.com/users/rnicoll/orgs",
        "repos_url": "https://api.github.com/users/rnicoll/repos",
        "events_url": "https://api.github.com/users/rnicoll/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rnicoll/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-02-01T12:33:43Z",
      "updated_at": "2015-02-01T12:33:43Z",
      "source": {
        "issue": {
          "id": 56162150,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MzA0ODI=",
          "url": "https://api.github.com/repos/dogecoin/dogecoin/issues/833",
          "repository_url": "https://api.github.com/repos/dogecoin/dogecoin",
          "labels_url": "https://api.github.com/repos/dogecoin/dogecoin/issues/833/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dogecoin/dogecoin/issues/833/comments",
          "events_url": "https://api.github.com/repos/dogecoin/dogecoin/issues/833/events",
          "html_url": "https://github.com/dogecoin/dogecoin/pull/833",
          "number": 833,
          "state": "closed",
          "state_reason": null,
          "title": "estimatefee / estimatepriority RPC methods",
          "body": "Opening for discussion, DO NOT MERGE.\n\nThis is a rework of bitcoin/bitcoin#3959 for Dogecoin. The CFeeRate class changes introduce differences in how transaction fees are calculated, and I've intentionally let the unit tests for transaction fees break here. I'm looking for opinions on whether we should retain transaction fees as-is in Dogecoin (min 1 DOGE, no fine grain fees), or adopt the finer-grained TX fees that this patch introduces to Bitcoin Core.\n\nPersonally I favour staying as-is, but wanted to have others chip in. I'll then update the unit tests to match, make code changes as required, and finish testing.\n",
          "user": {
            "login": "rnicoll",
            "id": 3513077,
            "node_id": "MDQ6VXNlcjM1MTMwNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rnicoll",
            "html_url": "https://github.com/rnicoll",
            "followers_url": "https://api.github.com/users/rnicoll/followers",
            "following_url": "https://api.github.com/users/rnicoll/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rnicoll/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rnicoll/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
            "organizations_url": "https://api.github.com/users/rnicoll/orgs",
            "repos_url": "https://api.github.com/users/rnicoll/repos",
            "events_url": "https://api.github.com/users/rnicoll/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rnicoll/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignee": {
            "login": "langerhans",
            "id": 5160000,
            "node_id": "MDQ6VXNlcjUxNjAwMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5160000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/langerhans",
            "html_url": "https://github.com/langerhans",
            "followers_url": "https://api.github.com/users/langerhans/followers",
            "following_url": "https://api.github.com/users/langerhans/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/langerhans/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/langerhans/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/langerhans/subscriptions",
            "organizations_url": "https://api.github.com/users/langerhans/orgs",
            "repos_url": "https://api.github.com/users/langerhans/repos",
            "events_url": "https://api.github.com/users/langerhans/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/langerhans/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "langerhans",
              "id": 5160000,
              "node_id": "MDQ6VXNlcjUxNjAwMDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/5160000?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/langerhans",
              "html_url": "https://github.com/langerhans",
              "followers_url": "https://api.github.com/users/langerhans/followers",
              "following_url": "https://api.github.com/users/langerhans/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/langerhans/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/langerhans/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/langerhans/subscriptions",
              "organizations_url": "https://api.github.com/users/langerhans/orgs",
              "repos_url": "https://api.github.com/users/langerhans/repos",
              "events_url": "https://api.github.com/users/langerhans/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/langerhans/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/dogecoin/dogecoin/milestones/4",
            "html_url": "https://github.com/dogecoin/dogecoin/milestone/4",
            "labels_url": "https://api.github.com/repos/dogecoin/dogecoin/milestones/4/labels",
            "id": 763824,
            "node_id": "MDk6TWlsZXN0b25lNzYzODI0",
            "number": 4,
            "state": "closed",
            "title": "1.9",
            "description": "",
            "creator": {
              "login": "langerhans",
              "id": 5160000,
              "node_id": "MDQ6VXNlcjUxNjAwMDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/5160000?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/langerhans",
              "html_url": "https://github.com/langerhans",
              "followers_url": "https://api.github.com/users/langerhans/followers",
              "following_url": "https://api.github.com/users/langerhans/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/langerhans/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/langerhans/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/langerhans/subscriptions",
              "organizations_url": "https://api.github.com/users/langerhans/orgs",
              "repos_url": "https://api.github.com/users/langerhans/repos",
              "events_url": "https://api.github.com/users/langerhans/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/langerhans/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 359,
            "created_at": "2014-08-24T15:21:45Z",
            "updated_at": "2015-09-05T12:16:33Z",
            "closed_at": "2015-09-05T12:16:33Z"
          },
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/dogecoin/dogecoin/pulls/833",
            "html_url": "https://github.com/dogecoin/dogecoin/pull/833",
            "diff_url": "https://github.com/dogecoin/dogecoin/pull/833.diff",
            "patch_url": "https://github.com/dogecoin/dogecoin/pull/833.patch"
          },
          "closed_at": "2015-02-07T16:58:02Z",
          "created_at": "2015-02-01T12:33:43Z",
          "updated_at": "2015-02-10T21:11:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-11T08:25:07Z",
      "updated_at": "2016-03-11T08:25:07Z",
      "source": {
        "issue": {
          "id": 138012958,
          "node_id": "MDU6SXNzdWUxMzgwMTI5NTg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/7633",
          "number": 7633,
          "state": "closed",
          "state_reason": "completed",
          "title": "paytxfee behavior changed without warning",
          "body": "(updated with new information)\nCalculation of the transaction fee when \"paytxfee\" is set has changed, without announcement or documentation.\n\nPer @sipa :\n`In earlier versions however the size of a transaction was rounded up to a\nmultiple of 1000, as that is how the mining code used to sort transaction\nyears ago. In 0.12, it was finally changed to the accurate formula that\nworks at an accuracy per byte. If the paytxfee value was always exactly\nwhat you saw as resulting fee, that must mean all your transactions were 1\nkB in size.`\n\nIn bitcoin.conf, I had\n\n`paytxfee=0.0001`\n\nIn 0.11, that meant that BTC 0.0001 would be added to every outbound tx as a fee.\n\nin 0.12, it means every tx will have added to it a fee of BTC 0.0001 **per kilobyte**\n\n**This is not documented in the release notes.** As a result of this, I've got 3 days worth of spend transactions caught in unconfirmed limbo, having gone out with fees like 0.00002260 instead of 0.0001.\n",
          "user": {
            "login": "mikegogulski",
            "id": 118625,
            "node_id": "MDQ6VXNlcjExODYyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikegogulski",
            "html_url": "https://github.com/mikegogulski",
            "followers_url": "https://api.github.com/users/mikegogulski/followers",
            "following_url": "https://api.github.com/users/mikegogulski/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mikegogulski/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mikegogulski/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
            "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
            "repos_url": "https://api.github.com/users/mikegogulski/repos",
            "events_url": "https://api.github.com/users/mikegogulski/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 40,
          "closed_at": "2019-03-21T20:23:54Z",
          "created_at": "2016-03-02T22:32:31Z",
          "updated_at": "2021-12-16T14:51:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DanielKrawisz",
        "id": 4990891,
        "node_id": "MDQ6VXNlcjQ5OTA4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4990891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanielKrawisz",
        "html_url": "https://github.com/DanielKrawisz",
        "followers_url": "https://api.github.com/users/DanielKrawisz/followers",
        "following_url": "https://api.github.com/users/DanielKrawisz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DanielKrawisz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DanielKrawisz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DanielKrawisz/subscriptions",
        "organizations_url": "https://api.github.com/users/DanielKrawisz/orgs",
        "repos_url": "https://api.github.com/users/DanielKrawisz/repos",
        "events_url": "https://api.github.com/users/DanielKrawisz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DanielKrawisz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-13T06:55:16Z",
      "updated_at": "2016-08-13T06:55:16Z",
      "source": {
        "issue": {
          "id": 170996743,
          "node_id": "MDExOlB1bGxSZXF1ZXN0ODEyMDkxOTM=",
          "url": "https://api.github.com/repos/btcsuite/btcd/issues/735",
          "repository_url": "https://api.github.com/repos/btcsuite/btcd",
          "labels_url": "https://api.github.com/repos/btcsuite/btcd/issues/735/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/btcsuite/btcd/issues/735/comments",
          "events_url": "https://api.github.com/repos/btcsuite/btcd/issues/735/events",
          "html_url": "https://github.com/btcsuite/btcd/pull/735",
          "number": 735,
          "state": "closed",
          "state_reason": null,
          "title": "rpc method estimatefee",
          "body": "This pr implements estimatefee similar to the way it works in Bitcoin Core, as described [here](https://github.com/bitcoin/bitcoin/pull/3959). estimatefee allows for one parameter, NumBlocks. It attempts to provide an estimated fee / kb rate (in Bitcoins) for a transaction to be confirmed before at least NumBlocks (inclusive) have been mined. \r\n\r\nEvery time a transaction is added to the mempool, it is registered with the fee estimator. Every time a new block is received, it is also registered with the fee estimator. The fee estimator keeps 25 bins containing information on transactions for which 1 to 25 blocks have been mined before being put in a block. Each bin contains information on up to 100 transactions. \r\n\r\nLet m be a bijective map from all sots in all bins to the set if indices from 1 to N, where N is the number of transactions in all bins. m maps the first slot in the first bin to 1, the second to 2, and so on, all the way through all the bins. The value returned by estimatefee is the fee / kb value of the transactions whose index in a sorted list of all transactions (with the highest value first) is the same as m[s], where s is the middle slot in bin NumBlocks. estimatefee therefore is a monotonically decreasing function of NumBlocks. \r\n\r\nIt is also possible to rollback the effect of a limited number of blocks in case of orphans. Default number of rollbacks allowed is 2. \r\n\r\nSince it is very easy to store 25 values, all results for all values of NumBlocks are cached when estimatefee is first called. Each time a new block is registered or rolled back, the cache is deleted. \r\n\r\n~~In core, the set of observed transactions is saved between sessions in a file that also contains mempool transactions. btcd doesn't seem to have a similar file, so fee estimation starts over if the program restarts.~~\r\n\r\nThe server saves the state of the FeeEstimator on shutdown into the database and tries to restore it upon initialization. If it cannot, then it creates a new FeeEstimator. \r\n\r\n~~A corresponding pr to btcrpcclient has been made [here](https://github.com/btcsuite/btcrpcclient/pull/87).~~\r\n",
          "user": {
            "login": "DanielKrawisz",
            "id": 4990891,
            "node_id": "MDQ6VXNlcjQ5OTA4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4990891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DanielKrawisz",
            "html_url": "https://github.com/DanielKrawisz",
            "followers_url": "https://api.github.com/users/DanielKrawisz/followers",
            "following_url": "https://api.github.com/users/DanielKrawisz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/DanielKrawisz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/DanielKrawisz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/DanielKrawisz/subscriptions",
            "organizations_url": "https://api.github.com/users/DanielKrawisz/orgs",
            "repos_url": "https://api.github.com/users/DanielKrawisz/repos",
            "events_url": "https://api.github.com/users/DanielKrawisz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/DanielKrawisz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/btcsuite/btcd/milestones/1",
            "html_url": "https://github.com/btcsuite/btcd/milestone/1",
            "labels_url": "https://api.github.com/repos/btcsuite/btcd/milestones/1/labels",
            "id": 2087437,
            "node_id": "MDk6TWlsZXN0b25lMjA4NzQzNw==",
            "number": 1,
            "state": "closed",
            "title": "0.13.0",
            "description": "Release 0.1.3.0",
            "creator": {
              "login": "dajohi",
              "id": 3308193,
              "node_id": "MDQ6VXNlcjMzMDgxOTM=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3308193?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/dajohi",
              "html_url": "https://github.com/dajohi",
              "followers_url": "https://api.github.com/users/dajohi/followers",
              "following_url": "https://api.github.com/users/dajohi/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/dajohi/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/dajohi/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/dajohi/subscriptions",
              "organizations_url": "https://api.github.com/users/dajohi/orgs",
              "repos_url": "https://api.github.com/users/dajohi/repos",
              "events_url": "https://api.github.com/users/dajohi/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/dajohi/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 147,
            "created_at": "2016-10-23T17:50:30Z",
            "updated_at": "2020-08-27T19:24:25Z",
            "closed_at": "2020-08-27T19:24:25Z"
          },
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/btcsuite/btcd/pulls/735",
            "html_url": "https://github.com/btcsuite/btcd/pull/735",
            "diff_url": "https://github.com/btcsuite/btcd/pull/735.diff",
            "patch_url": "https://github.com/btcsuite/btcd/pull/735.patch"
          },
          "closed_at": "2018-05-23T23:49:43Z",
          "created_at": "2016-08-13T06:55:16Z",
          "updated_at": "2018-05-23T23:49:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 5271403806,
      "node_id": "LOE_lADOABII584By6A-zwAAAAE6Mz0e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271403806",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:32:56Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032046",
      "pull_request_review_id": null,
      "id": 11032046,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyMDQ2",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1\n+\n+def gather_inputs(from_node, amount_needed):",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 30,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A lot of this stuff looks like it should be in a utility library (the main function too), otherwise it's getting copy/pasted everywhere.\n",
      "created_at": "2014-03-27T16:49:05Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032046",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032085",
      "pull_request_review_id": null,
      "id": 11032085,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyMDg1",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1\n+\n+def gather_inputs(from_node, amount_needed):\n+    utxo = from_node.listunspent(1)\n+    random.shuffle(utxo)\n+    inputs = []\n+    total_in = Decimal(\"0.00000000\")\n+    while total_in < amount_needed and len(utxo) > 0:\n+        t = utxo.pop()\n+        total_in += t[\"amount\"]\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"], \"address\" : t[\"address\"] } )\n+    if total_in < amount_needed:\n+        raise RuntimeError(\"Insufficient funds: need %d, have %d\"%(amount+fee*2, total_in))\n+    return (total_in, inputs)\n+\n+def make_change(from_node, amount_in, amount_out, fee):\n+    outputs = {}\n+    amount = amount_out+fee\n+    change = amount_in - amount\n+    if change > amount*2:\n+        # Create an extra change output to break up big inputs",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 48,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this actually needed for the tests? It seems a bit odd to have it here.\n",
      "created_at": "2014-03-27T16:49:44Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032174",
      "pull_request_review_id": null,
      "id": 11032174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyMTc0",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 28,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The error case is never checked by the caller. Better to throw, I think.\n",
      "created_at": "2014-03-27T16:51:12Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032254",
      "pull_request_review_id": null,
      "id": 11032254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyMjU0",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1\n+\n+def gather_inputs(from_node, amount_needed):\n+    utxo = from_node.listunspent(1)\n+    random.shuffle(utxo)\n+    inputs = []\n+    total_in = Decimal(\"0.00000000\")\n+    while total_in < amount_needed and len(utxo) > 0:\n+        t = utxo.pop()\n+        total_in += t[\"amount\"]\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"], \"address\" : t[\"address\"] } )\n+    if total_in < amount_needed:\n+        raise RuntimeError(\"Insufficient funds: need %d, have %d\"%(amount+fee*2, total_in))\n+    return (total_in, inputs)\n+\n+def make_change(from_node, amount_in, amount_out, fee):\n+    outputs = {}\n+    amount = amount_out+fee\n+    change = amount_in - amount\n+    if change > amount*2:\n+        # Create an extra change output to break up big inputs\n+        outputs[from_node.getnewaddress()] = float(change/2)\n+        change = change/2\n+    if change > 0:\n+        outputs[from_node.getnewaddress()] = float(change)\n+    return outputs\n+\n+def send_zeropri_transaction(from_node, to_node, amount, fee):\n+    \"\"\"\n+    Create&broadcast a zero-priority transaction, returns fee-per-kilobyte\n+    Ensures transaction is zero-priority by first creating a send-to-self,\n+    then using it's output\n+    \"\"\"\n+\n+    # Create a send-to-self with confirmed inputs:\n+    self_address = from_node.getnewaddress()\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee*2)\n+    outputs = make_change(from_node, total_in, amount+fee, fee)\n+    outputs[self_address] = float(amount+fee)\n+\n+    self_rawtx = from_node.createrawtransaction(inputs, outputs)\n+    self_signresult = from_node.signrawtransaction(self_rawtx)\n+    self_txid = from_node.sendrawtransaction(self_signresult[\"hex\"], True)\n+\n+    vout = find_output(from_node, self_txid, amount+fee)\n+    # Now immediately spend the output to create a 1-input, 1-output \n+    # zero-priority transaction:\n+    inputs = [ { \"txid\" : self_txid, \"vout\" : vout } ]\n+    outputs = { to_node.getnewaddress() : float(amount) }\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    tx_kbytes = (len(signresult[\"hex\"])/2)/1000.0\n+    return float(fee) / tx_kbytes\n+\n+def random_zeropri_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+    fee_per_kb = send_zeropri_transaction(from_node, to_node, amount, fee)\n+    return fee_per_kb\n+\n+def random_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee)\n+    outputs = make_change(from_node, total_in, amount, fee)\n+    outputs[to_node.getnewaddress()] = float(amount)\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    tx_kbytes = (len(signresult[\"hex\"])/2)/1000.0\n+    return float(fee) / tx_kbytes\n+\n+def run_test(nodes, test_dir):\n+    nodes.append(start_node(0, test_dir, \n+                            [\"-debug=mempool\", \"-debug=estimatefee\"]))\n+    # Node1 mines small-but-not-tiny blocks, and allows free transactions.\n+    # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,\n+    # so blockmaxsize of 2,000 is really just 1,000 bytes (room enough for\n+    # 6 or 7 transactions)\n+    nodes.append(start_node(1, test_dir, \n+                            [\"-blockprioritysize=1500\", \"-blockmaxsize=2000\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]))\n+    connect_nodes(nodes[1], 0)\n+\n+    # Node2 is a stingy miner, that\n+    # produces very small blocks (room for only 3 or so transactions)\n+    node2args = [ \"-blockprioritysize=0\", \"-blockmaxsize=1500\" ]",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 122,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But no debug flags here?\n",
      "created_at": "2014-03-27T16:52:39Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032406",
      "pull_request_review_id": null,
      "id": 11032406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyNDA2",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1\n+\n+def gather_inputs(from_node, amount_needed):\n+    utxo = from_node.listunspent(1)\n+    random.shuffle(utxo)\n+    inputs = []\n+    total_in = Decimal(\"0.00000000\")\n+    while total_in < amount_needed and len(utxo) > 0:\n+        t = utxo.pop()\n+        total_in += t[\"amount\"]\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"], \"address\" : t[\"address\"] } )\n+    if total_in < amount_needed:\n+        raise RuntimeError(\"Insufficient funds: need %d, have %d\"%(amount+fee*2, total_in))\n+    return (total_in, inputs)\n+\n+def make_change(from_node, amount_in, amount_out, fee):\n+    outputs = {}\n+    amount = amount_out+fee\n+    change = amount_in - amount\n+    if change > amount*2:\n+        # Create an extra change output to break up big inputs\n+        outputs[from_node.getnewaddress()] = float(change/2)\n+        change = change/2\n+    if change > 0:\n+        outputs[from_node.getnewaddress()] = float(change)\n+    return outputs\n+\n+def send_zeropri_transaction(from_node, to_node, amount, fee):\n+    \"\"\"\n+    Create&broadcast a zero-priority transaction, returns fee-per-kilobyte\n+    Ensures transaction is zero-priority by first creating a send-to-self,\n+    then using it's output\n+    \"\"\"\n+\n+    # Create a send-to-self with confirmed inputs:\n+    self_address = from_node.getnewaddress()\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee*2)\n+    outputs = make_change(from_node, total_in, amount+fee, fee)\n+    outputs[self_address] = float(amount+fee)\n+\n+    self_rawtx = from_node.createrawtransaction(inputs, outputs)\n+    self_signresult = from_node.signrawtransaction(self_rawtx)\n+    self_txid = from_node.sendrawtransaction(self_signresult[\"hex\"], True)\n+\n+    vout = find_output(from_node, self_txid, amount+fee)\n+    # Now immediately spend the output to create a 1-input, 1-output \n+    # zero-priority transaction:\n+    inputs = [ { \"txid\" : self_txid, \"vout\" : vout } ]\n+    outputs = { to_node.getnewaddress() : float(amount) }\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    tx_kbytes = (len(signresult[\"hex\"])/2)/1000.0\n+    return float(fee) / tx_kbytes\n+\n+def random_zeropri_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+    fee_per_kb = send_zeropri_transaction(from_node, to_node, amount, fee)\n+    return fee_per_kb\n+\n+def random_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee)\n+    outputs = make_change(from_node, total_in, amount, fee)\n+    outputs[to_node.getnewaddress()] = float(amount)\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    tx_kbytes = (len(signresult[\"hex\"])/2)/1000.0\n+    return float(fee) / tx_kbytes\n+\n+def run_test(nodes, test_dir):\n+    nodes.append(start_node(0, test_dir, \n+                            [\"-debug=mempool\", \"-debug=estimatefee\"]))\n+    # Node1 mines small-but-not-tiny blocks, and allows free transactions.\n+    # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,\n+    # so blockmaxsize of 2,000 is really just 1,000 bytes (room enough for\n+    # 6 or 7 transactions)\n+    nodes.append(start_node(1, test_dir, \n+                            [\"-blockprioritysize=1500\", \"-blockmaxsize=2000\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]))\n+    connect_nodes(nodes[1], 0)\n+\n+    # Node2 is a stingy miner, that\n+    # produces very small blocks (room for only 3 or so transactions)\n+    node2args = [ \"-blockprioritysize=0\", \"-blockmaxsize=1500\" ]\n+    nodes.append(start_node(2, test_dir, node2args))\n+    connect_nodes(nodes[2], 0)\n+\n+    sync_blocks(nodes)\n+\n+    # Prime the memory pool with pairs of transactions\n+    # (high-priority, random fee and zero-priority, random fee)\n+    min_fee = Decimal(\"0.001\")\n+    fees_per_kb = [];\n+    for i in range(12):\n+        fees_per_kb.append(random_zeropri_transaction(nodes, Decimal(\"1.1\"),\n+                                                      min_fee, min_fee, 20))\n+\n+    # Mine blocks until the memory pool clears:\n+    count_start = nodes[2].getblockcount()\n+    while len(nodes[2].getrawmempool()) > 0:\n+        nodes[2].setgenerate(True, 1)\n+        sync_blocks(nodes)        \n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,12) ]\n+    print(\"Fee estimates, super-stingy miner: \"+str([str(e) for e in all_estimates]))\n+\n+    # Estimates should be within the bounds of what transactions fees actually were:\n+    delta = 1.0e-6 # account for rounding error\n+    for e in filter(lambda x: x >= 0, all_estimates):\n+        if float(e)+delta < min(fees_per_kb) or float(e)-delta > max(fees_per_kb):\n+            raise AssertionError(\"Estimated fee (%f) out of range (%f,%f)\"%(float(e), min_fee_kb, max_fee_kb))\n+\n+    # Generate transactions while mining 30 more blocks\n+    for i in range(30):\n+        for j in range(random.randrange(6-4,6+4)):\n+            fees_per_kb.append(random_transaction(nodes, Decimal(\"1.1\"),\n+                                                  Decimal(\"0.0\"), min_fee, 20))\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,12) ]\n+    print(\"Fee estimates, more generous miner: \"+str([ str(e) for e in all_estimates]))",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 160,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Don't understand this bit about more generous miner: mining behaviour didn't change in the step between the test being repeated?\n",
      "created_at": "2014-03-27T16:55:14Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032445",
      "pull_request_review_id": null,
      "id": 11032445,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyNDQ1",
      "diff_hunk": "@@ -906,6 +907,22 @@ bool AppInit2(boost::thread_group& threadGroup)\n         return false;\n     }\n \n+    // It is OK if mempool.Read() fails; starting out with an empty memory pool is not\n+    // a problem, it gets filled quickly.\n+    list<CTxMemPoolEntry> mempoolEntries;\n+    if (mempool.Read(mempoolEntries) && !empty(mempoolEntries))\n+    {\n+        CValidationState valState;\n+        bool fMissingInputs;\n+        BOOST_FOREACH(CTxMemPoolEntry& mempoolEntry, mempoolEntries)\n+        {\n+            AcceptToMemoryPool(mempool, valState, mempoolEntry.GetTx(), false,\n+                               &fMissingInputs, false);\n+        }\n+        LogPrintf(\"Accepted %lu mempool transactions\\n\", mempool.size());\n+    }",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No log that loading failed?\n",
      "created_at": "2014-03-27T16:55:54Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032445",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032722",
      "pull_request_review_id": null,
      "id": 11032722,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyNzIy",
      "diff_hunk": "@@ -35,12 +39,280 @@\n     return dResult;\n }\n \n+//\n+// Keep track of fee/priority for transactions confirmed within N blocks\n+//\n+class CBlockAverage\n+{\n+private:\n+    boost::circular_buffer<double> feePerKilobyteSamples;\n+    boost::circular_buffer<double> prioritySamples;\n+\n+    std::vector<double> buf2vec(boost::circular_buffer<double> buf) const\n+    {\n+        std::vector<double> vec(buf.begin(), buf.end());\n+        return vec;\n+    }\n+\n+public:\n+    CBlockAverage() : feePerKilobyteSamples(100), prioritySamples(100) { }\n+\n+    void RecordFee(double feePerKilobyte) {\n+        feePerKilobyteSamples.push_back(feePerKilobyte);\n+    }\n+\n+    void RecordPriority(double priority) {\n+        prioritySamples.push_back(priority);\n+    }\n+\n+    size_t FeeSamples() const { return feePerKilobyteSamples.size(); }\n+    size_t FeeSamples(std::vector<double>& insertInto) const\n+    {\n+        BOOST_FOREACH(double d, feePerKilobyteSamples)\n+            insertInto.push_back(d);\n+        return feePerKilobyteSamples.size();\n+    }\n+    size_t PrioritySamples() const { return prioritySamples.size(); }\n+    size_t PrioritySamples(std::vector<double>& insertInto) const\n+    {\n+        BOOST_FOREACH(double d, prioritySamples)\n+            insertInto.push_back(d);\n+        return prioritySamples.size();\n+    }\n+\n+    void Write(CAutoFile& fileout) const\n+    {\n+        std::vector<double> vec = buf2vec(feePerKilobyteSamples);\n+        fileout << vec;\n+        vec = buf2vec(prioritySamples);\n+        fileout << vec;\n+    }\n+\n+    void Read(CAutoFile& filein) {\n+        std::vector<double> vec;\n+        filein >> vec;\n+        feePerKilobyteSamples.insert(feePerKilobyteSamples.end(), vec.begin(), vec.end());\n+        vec.clear();\n+        filein >> vec;\n+        prioritySamples.insert(prioritySamples.end(), vec.begin(), vec.end());\n+        if (feePerKilobyteSamples.size() + prioritySamples.size() > 0)\n+            LogPrint(\"estimatefee\", \"Read %d fee samples and %d priority samples\\n\",\n+                     feePerKilobyteSamples.size(), prioritySamples.size());\n+    }\n+};\n+\n+class CMinerPolicyEstimator\n+{\n+private:\n+    // Records observed averages transactions that confirmed within one block, two blocks,\n+    // three blocks etc.\n+    std::vector<CBlockAverage> history;\n+    std::vector<double> sortedFeeSamples;\n+    std::vector<double> sortedPrioritySamples;\n+\n+    int nBestSeenHeight;\n+\n+    // nBlocksAgo is 0 based, i.e. transactions that confirmed in the highest seen block are\n+    // nBlocksAgo == 0, transactions in the block before that are nBlocksAgo == 1 etc.\n+    void seenTxConfirm(double dFeePerKilobyte, double dPriority, int nBlocksAgo)\n+    {\n+        // Last entry records \"everything else\".\n+        int nBlocksTruncated = min(nBlocksAgo, (int) history.size() - 1);\n+        assert(nBlocksTruncated >= 0);\n+\n+        // We need to guess why the transaction was included in a block-- either\n+        // because it is high-priority or because it has sufficient fees.\n+        bool sufficientFee = (dFeePerKilobyte >= (CTransaction::nMinRelayTxFee/1.0e8));\n+        bool sufficientPriority = AllowFree(dPriority);\n+        const char* assignedTo = \"unassigned\";\n+        if (sufficientFee && !sufficientPriority)\n+        {\n+            history[nBlocksTruncated].RecordFee(dFeePerKilobyte);\n+            assignedTo = \"fee\";\n+        }\n+        else if (sufficientPriority && !sufficientFee)\n+        {\n+            history[nBlocksTruncated].RecordPriority(dPriority);\n+            assignedTo = \"priority\";\n+        }\n+        else\n+        {\n+            // Neither or both fee and priority sufficient to get confirmed:\n+            // don't know why they got confirmed.\n+        }\n+        LogPrint(\"estimatefee\", \"Seen TX confirm: %s : %g fee per kilobyte/%g priority, took %d blocks\\n\",\n+                 assignedTo, dFeePerKilobyte, dPriority, nBlocksAgo);\n+    }\n+\n+public:\n+    CMinerPolicyEstimator(int nEntries) : nBestSeenHeight(0)\n+    {\n+        history.resize(nEntries);\n+    }\n+\n+    void seenBlock(const std::vector<CTxMemPoolEntry>& entries, int nBlockHeight)\n+    {\n+        if (nBlockHeight <= nBestSeenHeight)\n+        {\n+            // Ignore side chains and re-orgs; assuming they are random\n+            // they don't affect the estimate.\n+            // And if an attacker can re-org the chain at will, then\n+            // you've got much bigger problems than \"attacker can influence\n+            // transaction fees.\"\n+            return;\n+        }\n+        nBestSeenHeight = nBlockHeight;\n+\n+        // Fill up the history buckets based on how long transactions took\n+        // to confirm.\n+        std::vector<std::vector<const CTxMemPoolEntry*> > entriesByConfirmations;\n+        entriesByConfirmations.resize(history.size());\n+        BOOST_FOREACH(const CTxMemPoolEntry& entry, entries)\n+        {\n+            // How many blocks did it take for miners to include this transaction?\n+            int delta = nBlockHeight - entry.GetHeight();\n+            if (delta <= 0)\n+            {\n+                // Re-org made us lose height, this should only happen if we happen\n+                // to re-org on a difficulty transition point: very rare!\n+                continue;\n+            }\n+            if ((delta-1) >= history.size())\n+                delta = history.size(); // Last bucket is catch-all\n+            entriesByConfirmations[delta-1].push_back(&entry);\n+        }\n+        for (size_t i = 0; i < entriesByConfirmations.size(); i++)\n+        {\n+            std::vector<const CTxMemPoolEntry*> &e = entriesByConfirmations.at(i);\n+            // Insert at most 10 random entries per bucket, otherwise a single block\n+            // can dominate an estimate:\n+            if (e.size() > 10) {\n+                std::random_shuffle(e.begin(), e.end());\n+                e.resize(10);\n+            }\n+            BOOST_FOREACH(const CTxMemPoolEntry* entry, e)\n+            {\n+                // Fees are stored and reported as BTC-per-kb:\n+                double dFee = entry->GetFee() / 1.0e8; // convert satoshis to BTC\n+                double dKb = entry->GetTxSize()/1.0e3; // bytes to kilobytes\n+                double dFeePerKb = dFee/dKb;\n+                double dPriority = entry->GetPriority(entry->GetHeight()); // Want priority when it went IN\n+                seenTxConfirm(dFeePerKb, dPriority, i);\n+            }\n+        }\n+        for (size_t i = 0; i < history.size(); i++) {\n+            if (history[i].FeeSamples() + history[i].PrioritySamples() > 0)\n+// TODO: REMOVE ME",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 180,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "// TODO: save me :)\n",
      "created_at": "2014-03-27T17:00:59Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032962",
      "pull_request_review_id": null,
      "id": 11032962,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyOTYy",
      "diff_hunk": "@@ -35,12 +39,280 @@\n     return dResult;\n }\n \n+//\n+// Keep track of fee/priority for transactions confirmed within N blocks\n+//\n+class CBlockAverage\n+{\n+private:\n+    boost::circular_buffer<double> feePerKilobyteSamples;\n+    boost::circular_buffer<double> prioritySamples;\n+\n+    std::vector<double> buf2vec(boost::circular_buffer<double> buf) const\n+    {\n+        std::vector<double> vec(buf.begin(), buf.end());\n+        return vec;\n+    }\n+\n+public:\n+    CBlockAverage() : feePerKilobyteSamples(100), prioritySamples(100) { }\n+\n+    void RecordFee(double feePerKilobyte) {\n+        feePerKilobyteSamples.push_back(feePerKilobyte);\n+    }\n+\n+    void RecordPriority(double priority) {\n+        prioritySamples.push_back(priority);\n+    }\n+\n+    size_t FeeSamples() const { return feePerKilobyteSamples.size(); }\n+    size_t FeeSamples(std::vector<double>& insertInto) const\n+    {\n+        BOOST_FOREACH(double d, feePerKilobyteSamples)\n+            insertInto.push_back(d);\n+        return feePerKilobyteSamples.size();\n+    }\n+    size_t PrioritySamples() const { return prioritySamples.size(); }\n+    size_t PrioritySamples(std::vector<double>& insertInto) const\n+    {\n+        BOOST_FOREACH(double d, prioritySamples)\n+            insertInto.push_back(d);\n+        return prioritySamples.size();\n+    }\n+\n+    void Write(CAutoFile& fileout) const\n+    {\n+        std::vector<double> vec = buf2vec(feePerKilobyteSamples);\n+        fileout << vec;\n+        vec = buf2vec(prioritySamples);\n+        fileout << vec;\n+    }\n+\n+    void Read(CAutoFile& filein) {\n+        std::vector<double> vec;\n+        filein >> vec;\n+        feePerKilobyteSamples.insert(feePerKilobyteSamples.end(), vec.begin(), vec.end());\n+        vec.clear();\n+        filein >> vec;\n+        prioritySamples.insert(prioritySamples.end(), vec.begin(), vec.end());\n+        if (feePerKilobyteSamples.size() + prioritySamples.size() > 0)\n+            LogPrint(\"estimatefee\", \"Read %d fee samples and %d priority samples\\n\",\n+                     feePerKilobyteSamples.size(), prioritySamples.size());\n+    }\n+};\n+\n+class CMinerPolicyEstimator\n+{\n+private:\n+    // Records observed averages transactions that confirmed within one block, two blocks,\n+    // three blocks etc.\n+    std::vector<CBlockAverage> history;\n+    std::vector<double> sortedFeeSamples;\n+    std::vector<double> sortedPrioritySamples;\n+\n+    int nBestSeenHeight;\n+\n+    // nBlocksAgo is 0 based, i.e. transactions that confirmed in the highest seen block are\n+    // nBlocksAgo == 0, transactions in the block before that are nBlocksAgo == 1 etc.\n+    void seenTxConfirm(double dFeePerKilobyte, double dPriority, int nBlocksAgo)\n+    {\n+        // Last entry records \"everything else\".\n+        int nBlocksTruncated = min(nBlocksAgo, (int) history.size() - 1);\n+        assert(nBlocksTruncated >= 0);\n+\n+        // We need to guess why the transaction was included in a block-- either\n+        // because it is high-priority or because it has sufficient fees.\n+        bool sufficientFee = (dFeePerKilobyte >= (CTransaction::nMinRelayTxFee/1.0e8));\n+        bool sufficientPriority = AllowFree(dPriority);\n+        const char* assignedTo = \"unassigned\";\n+        if (sufficientFee && !sufficientPriority)\n+        {\n+            history[nBlocksTruncated].RecordFee(dFeePerKilobyte);\n+            assignedTo = \"fee\";\n+        }\n+        else if (sufficientPriority && !sufficientFee)\n+        {\n+            history[nBlocksTruncated].RecordPriority(dPriority);\n+            assignedTo = \"priority\";\n+        }\n+        else\n+        {\n+            // Neither or both fee and priority sufficient to get confirmed:\n+            // don't know why they got confirmed.\n+        }\n+        LogPrint(\"estimatefee\", \"Seen TX confirm: %s : %g fee per kilobyte/%g priority, took %d blocks\\n\",\n+                 assignedTo, dFeePerKilobyte, dPriority, nBlocksAgo);\n+    }\n+\n+public:\n+    CMinerPolicyEstimator(int nEntries) : nBestSeenHeight(0)\n+    {\n+        history.resize(nEntries);\n+    }\n+\n+    void seenBlock(const std::vector<CTxMemPoolEntry>& entries, int nBlockHeight)\n+    {\n+        if (nBlockHeight <= nBestSeenHeight)\n+        {\n+            // Ignore side chains and re-orgs; assuming they are random\n+            // they don't affect the estimate.\n+            // And if an attacker can re-org the chain at will, then\n+            // you've got much bigger problems than \"attacker can influence\n+            // transaction fees.\"\n+            return;\n+        }\n+        nBestSeenHeight = nBlockHeight;\n+\n+        // Fill up the history buckets based on how long transactions took\n+        // to confirm.\n+        std::vector<std::vector<const CTxMemPoolEntry*> > entriesByConfirmations;\n+        entriesByConfirmations.resize(history.size());\n+        BOOST_FOREACH(const CTxMemPoolEntry& entry, entries)\n+        {\n+            // How many blocks did it take for miners to include this transaction?\n+            int delta = nBlockHeight - entry.GetHeight();\n+            if (delta <= 0)\n+            {\n+                // Re-org made us lose height, this should only happen if we happen\n+                // to re-org on a difficulty transition point: very rare!\n+                continue;\n+            }\n+            if ((delta-1) >= history.size())\n+                delta = history.size(); // Last bucket is catch-all\n+            entriesByConfirmations[delta-1].push_back(&entry);\n+        }\n+        for (size_t i = 0; i < entriesByConfirmations.size(); i++)\n+        {\n+            std::vector<const CTxMemPoolEntry*> &e = entriesByConfirmations.at(i);\n+            // Insert at most 10 random entries per bucket, otherwise a single block\n+            // can dominate an estimate:\n+            if (e.size() > 10) {\n+                std::random_shuffle(e.begin(), e.end());\n+                e.resize(10);\n+            }\n+            BOOST_FOREACH(const CTxMemPoolEntry* entry, e)\n+            {\n+                // Fees are stored and reported as BTC-per-kb:\n+                double dFee = entry->GetFee() / 1.0e8; // convert satoshis to BTC\n+                double dKb = entry->GetTxSize()/1.0e3; // bytes to kilobytes\n+                double dFeePerKb = dFee/dKb;\n+                double dPriority = entry->GetPriority(entry->GetHeight()); // Want priority when it went IN\n+                seenTxConfirm(dFeePerKb, dPriority, i);\n+            }\n+        }\n+        for (size_t i = 0; i < history.size(); i++) {\n+            if (history[i].FeeSamples() + history[i].PrioritySamples() > 0)\n+// TODO: REMOVE ME\n+                LogPrint(\"estimatefee\", \"estimates: for confirming within %d blocks based on %d/%d samples, fee=%g per kilobyte, prio=%g\\n\", \n+                         i,\n+                         history[i].FeeSamples(), history[i].PrioritySamples(),\n+                         estimateFee(i+1), estimatePriority(i+1));\n+        }\n+        sortedFeeSamples.clear();\n+        sortedPrioritySamples.clear();\n+    }\n+\n+    // Can return -1 if we don't have any data for that many blocks back. nBlocksToConfirm is 1 based.\n+    double estimateFee(int nBlocksToConfirm)\n+    {\n+        nBlocksToConfirm--;\n+\n+        if (nBlocksToConfirm < 0 || nBlocksToConfirm >= (int)history.size())\n+            return -1;\n+\n+        if (sortedFeeSamples.size() == 0)\n+        {\n+            for (size_t i = 0; i < history.size(); i++)\n+                history.at(i).FeeSamples(sortedFeeSamples);\n+            std::sort(sortedFeeSamples.begin(), sortedFeeSamples.end(),\n+                      std::greater<double>());\n+        }\n+        if (sortedFeeSamples.size() == 0)\n+            return -1.0;\n+\n+        int nBucketSize = history.at(nBlocksToConfirm).FeeSamples();\n+\n+        // Estimates should not increase as number of confirmations goes up,\n+        // but the estimates are noisy because confirmations happen discretely\n+        // in blocks. To smooth out the estimates, use all samples in the history\n+        // and use the nth highest where n is (number of samples in previous bucket +\n+        // half the samples in nBlocksToConfirm bucket):\n+        size_t nPrevSize = 0;\n+        for (size_t i = 0; i < nBlocksToConfirm; i++)\n+            nPrevSize += history.at(i).FeeSamples();\n+        size_t index = min(nPrevSize + nBucketSize/2, sortedFeeSamples.size()-1);\n+        return sortedFeeSamples[index];\n+    }\n+    double estimatePriority(int nBlocksToConfirm)\n+    {\n+        nBlocksToConfirm--;\n+\n+        if (nBlocksToConfirm < 0 || nBlocksToConfirm >= (int)history.size())\n+            return -1;\n+\n+        if (sortedPrioritySamples.size() == 0)\n+        {\n+            for (size_t i = 0; i < history.size(); i++)\n+                history.at(i).PrioritySamples(sortedPrioritySamples);\n+            std::sort(sortedPrioritySamples.begin(), sortedPrioritySamples.end(),\n+                      std::greater<double>());\n+        }\n+        if (sortedPrioritySamples.size() == 0)\n+            return -1.0;\n+\n+        int nBucketSize = history.at(nBlocksToConfirm).PrioritySamples();\n+\n+        // Estimates should not increase as number of confirmations needed goes up,\n+        // but the estimates are noisy because confirmations happen discretely\n+        // in blocks. To smooth out the estimates, use all samples in the history\n+        // and use the nth highest where n is (number of samples in previous buckets +\n+        // half the samples in nBlocksToConfirm bucket).\n+        size_t nPrevSize = 0;\n+        for (size_t i = 0; i < nBlocksToConfirm; i++)\n+            nPrevSize += history.at(i).PrioritySamples();\n+        size_t index = min(nPrevSize + nBucketSize/2, sortedFeeSamples.size()-1);\n+        return sortedPrioritySamples[index];\n+    }\n+\n+    void Write(CAutoFile& fileout) const\n+    {\n+        fileout << nBestSeenHeight;\n+        fileout << history.size();\n+        BOOST_FOREACH(const CBlockAverage& entry, history)\n+        {\n+            entry.Write(fileout);\n+        }\n+    }\n+\n+    void Read(CAutoFile& filein)\n+    {\n+        filein >> nBestSeenHeight;\n+        size_t numEntries;\n+        filein >> numEntries;\n+        history.clear();\n+        for (size_t i = 0; i < numEntries; i++)\n+        {\n+            CBlockAverage entry;\n+            entry.Read(filein);\n+            history.push_back(entry);\n+        }\n+    }\n+};\n+\n+\n CTxMemPool::CTxMemPool()\n {\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n     fSanityCheck = false;\n+\n+    minerPolicyEstimator = new CMinerPolicyEstimator(25);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 285,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "// 25 blocks was determined empirically to give the best performance as of March 2014.\n",
      "created_at": "2014-03-27T17:05:36Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11032962",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11032962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11127357",
      "pull_request_review_id": null,
      "id": 11127357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTI3MzU3",
      "diff_hunk": "@@ -906,6 +907,22 @@ bool AppInit2(boost::thread_group& threadGroup)\n         return false;\n     }\n \n+    // It is OK if mempool.Read() fails; starting out with an empty memory pool is not\n+    // a problem, it gets filled quickly.\n+    list<CTxMemPoolEntry> mempoolEntries;\n+    if (mempool.Read(mempoolEntries) && !empty(mempoolEntries))\n+    {\n+        CValidationState valState;\n+        bool fMissingInputs;\n+        BOOST_FOREACH(CTxMemPoolEntry& mempoolEntry, mempoolEntries)\n+        {\n+            AcceptToMemoryPool(mempool, valState, mempoolEntry.GetTx(), false,\n+                               &fMissingInputs, false);\n+        }\n+        LogPrintf(\"Accepted %lu mempool transactions\\n\", mempool.size());\n+    }",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, logging of failures happens in mempool.Read(), no need to log a specific error and then a generic \"read failed\" error.\n",
      "created_at": "2014-03-31T17:46:03Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11127357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11127357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11127668",
      "pull_request_review_id": null,
      "id": 11127668,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTI3NjY4",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def find_output(node, txid, amount):\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    return -1\n+\n+def gather_inputs(from_node, amount_needed):",
      "path": "qa/rpc-tests/smartfees.py",
      "position": null,
      "original_position": 30,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "8a826e675c9c16ba933b1d6d41f10fca1b1fd023",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moving useful functions to util.py, but am going to hold off on moving main; there's another pull request that bundles everything up into a framework...\n",
      "created_at": "2014-03-31T17:52:15Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r11127668",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11127668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12897156",
      "pull_request_review_id": null,
      "id": 12897156,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODk3MTU2",
      "diff_hunk": "@@ -610,19 +595,19 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::minTxFee.GetFee(1000))) + \"<br /><br />\";",
      "path": "src/qt/coincontroldialog.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "eae89281cec5e5d12b0b06654edb7e1105047286",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: There are a lot of getFee(1000)'s. I don't have an objection to them, although on first reading I was confused ('what is this magic 1000 number'). But instead of suggesting defining a constant BYTES_PER_KB :p I think it would be nicer to have a function getFeePerKB() that's simply an inline for getFee(1000).\n",
      "created_at": "2014-05-21T14:02:26Z",
      "updated_at": "2014-06-06T14:45:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r12897156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12897156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13494256",
      "pull_request_review_id": null,
      "id": 13494256,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDk0MjU2",
      "diff_hunk": "@@ -536,26 +536,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             nChange = nAmount - nPayFee - nPayAmount;\n \n-            // if sub-cent change is required, the fee must be raised to at least CTransaction::nMinTxFee",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't we want to keep this block, but do it to prevent dust change rather than subcent change?\n",
      "created_at": "2014-06-06T15:08:12Z",
      "updated_at": "2014-06-06T15:08:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r13494256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13494256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 539,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13495549",
      "pull_request_review_id": null,
      "id": 13495549,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDk1NTQ5",
      "diff_hunk": "@@ -536,26 +536,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             nChange = nAmount - nPayFee - nPayAmount;\n \n-            // if sub-cent change is required, the fee must be raised to at least CTransaction::nMinTxFee",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "original_commit_id": "171ca7745e77c9f78f26556457fe64e5b2004a75",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dust change is handled at line 543.\n",
      "created_at": "2014-06-06T15:34:18Z",
      "updated_at": "2014-06-06T15:34:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3959#discussion_r13495549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13495549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3959"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 539,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}