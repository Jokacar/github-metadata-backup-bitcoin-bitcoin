{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647",
    "id": 461871043,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDYxODcxMDQz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19647",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19647.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19647.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
    "number": 19647,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add thread safety annotations to CTxMemPool methods",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Split out from #19306.\r\n\r\nOnly trivial thread safety annotations and lock assertions added. No new locks. No behavior change.\r\n\r\nThis is a step to make `CTxMemPool::cs` an instance of `Mutex` rather `RecursiveMutex`.",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-08-02T22:42:29Z",
    "updated_at": "2022-02-15T10:48:36Z",
    "closed_at": "2020-09-01T09:50:03Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "c453a26b965cddd768e5d3799c0b5d1e11acfbcb",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:200802-mmx-1",
      "ref": "200802-mmx-1",
      "sha": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 251607,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T18:38:17Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2023-07-25T14:18:54Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "34eb2362581d4d8f0bfd3baa12ba750afaf85c62",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 21,
    "deletions": 18,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 16,
    "comments": 9
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:43:43Z",
      "updated_at": "2020-08-02T22:43:43Z",
      "source": {
        "issue": {
          "id": 640455898,
          "node_id": "MDU6SXNzdWU2NDA0NTU4OTg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/19303",
          "number": 19303,
          "state": "open",
          "state_reason": null,
          "title": "Replace all of the RecursiveMutex instances with the Mutex ones",
          "body": "**UPD 2023-04-18**. See a shortlist [here](https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1513337566).\r\n\r\n---\r\n\r\nThis is a tracking issue for the long-term goal to replace all of the `RecursiveMutex` instances with the `Mutex` ones throughout the code base.\r\n\r\nAnthony Williams (_C++ Concurrency in Action_, 2019, 3.3.3 Recursive locking):\r\n> Most of the time, if you think you want a recursive mutex, you probably need to change your design instead.\r\n\r\nAnthony Towns, https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646956780:\r\n> ... the actual goal is \"make locking logic easier to follow\" rather than \"remove RecurviseMutex\"\r\n\r\nShould be noted, to insure that mutex locking policy has not been changed by accident in non-trivial cases, all of the related code branches must be covered by appropriate lock assertions: `AssertLockHeld()` or `AssertLockNotHeld()`.\r\n\r\nAlso Clang Thread Safety Analysis annotations with [Negative Capabilities](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#negative) are very useful (see #19249) but are not a panacea, of course :)\r\n\r\n---\r\n\r\n- [x] `RecursiveMutex cs_Shutdown` (#19180)\r\n- [x] `RecursiveMutex cs_nTimeOffset` (#19189)\r\n- [x] `RecursiveMutex cs_proxyInfos` (#19190)\r\n- ~`RecursiveMutex csPathCached` (#19213)~\r\n- [x] `RecursiveMutex cs_warnings` (#19220)\r\n- [x] `RecursiveMutex CAddrMan::cs` (#19238)\r\n- [ ] `RecursiveMutex BanMan::m_cs_banned` (#24092, #24097)\r\n- [x] `RecursiveMutex cs_mapLocalHost` (#24099)\r\n- [x] `RecursiveMutex CConnman::cs_totalBytesRecv` (#22829)\r\n- [x] `RecursiveMutex CConnman::cs_totalBytesSent` (#24157)\r\n- [x] `RecursiveMutex CConnman::m_addr_fetches_mutex` (#22829)\r\n- [x] `RecursiveMutex CConnman::cs_vAddedNodes` (#22829)\r\n- [ ] `RecursiveMutex CConnman::m_nodes_mutex`\r\n- [x] `RecursiveMutex CNode::cs_vSend` (#19915)\r\n- [x] `RecursiveMutex CNode::cs_hSocket` (#19915)\r\n- [x] `RecursiveMutex CNode::cs_vRecv` (#19915)\r\n- ~`RecursiveMutex CNode::cs_vProcessMsg` (#24122)~\r\n- ~`RecursiveMutex CNode::cs_sendProcessing` (#25597)~\r\n- [x] `RecursiveMutex CNode::cs_SubVer` (#24079)\r\n- [x] `RecursiveMutex CNode::cs_inventory` (#19347)\r\n- [x] `RecursiveMutex CNode::cs_addrName` (removed in #22782)\r\n- [x] `RecursiveMutex CNode::cs_addrLocal` #24108\r\n- [ ] `RecursiveMutex Peer::TxRelay::m_bloom_filter_mutex`\r\n- [ ] `RecursiveMutex Peer::TxRelay::m_tx_inventory_mutex` (#24125)\r\n- [x] `RecursiveMutex CNode::TxRelay::cs_feeFilter` (#18819)\r\n- ~`RecursiveMutex g_cs_orphans`~\r\n- [x] `RecursiveMutex g_cs_recent_confirmed_transactions` (#19378)\r\n- [x] `RecursiveMutex cs_most_recent_block` (#24062)\r\n- [x] `RecursiveMutex CBlockPolicyEstimator::m_cs_fee_estimator` (#22014)\r\n- [x] `RecursiveMutex cs_rpcWarmup` (#19399)\r\n- [x] `RecursiveMutex SingleThreadedSchedulerClient::m_cs_callbacks_pending` (#24069)\r\n- [ ] `RecursiveMutex BlockManager::cs_LastBlockFile`\r\n- [ ] `RecursiveMutex FillableSigningProvider::cs_KeyStore`\r\n- [ ] `RecursiveMutex ArgsManager::cs_args`\r\n- [x] `RecursiveMutex CChainState::cs_nBlockSequenceId` (#22824)\r\n- [x] `RecursiveMutex CChainState::m_cs_chainstate` (#24103)\r\n- [ ] `RecursiveMutex cs_db`\r\n- [ ] `RecursiveMutex DescriptorScriptPubKeyMan::cs_desc_man`\r\n- [x] `RecursiveMutex cs_wallets` (#19101)\r\n- [ ] `RecursiveMutex CWallet::cs_wallet` (#19773,  #19833)\r\n\r\nand\r\n\r\n- `RecursiveMutex CTxMemPool::cs` (#19306, ~#19647~, #19652, #19854, #19872, #19901, #19909, #19917)\r\n- `RecursiveMutex cs_main`\r\n",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "created_at": "2020-06-17T13:45:18Z",
          "updated_at": "2023-05-17T08:08:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 667734282,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzczNDI4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667734282",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:26Z",
      "updated_at": "2020-08-02T22:45:26Z",
      "author_association": "MEMBER",
      "body": "@ajtowns @jnewbery @vasild @JeremyRubin \r\n\r\nMind reviewing?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667734282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3613735794,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTc5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735794",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:26Z"
    },
    {
      "event": "subscribed",
      "id": 3613735796,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU3OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735796",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735798,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735798",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735799,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU3OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735799",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735800,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735800",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735801,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735801",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735802,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735802",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735804,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU4MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735804",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:47:37Z",
      "updated_at": "2020-08-02T22:47:37Z",
      "source": {
        "issue": {
          "id": 640570342,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1OTU2NDUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19306",
          "number": 19306,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace RecursiveMutex with Mutex in CTxMemPool",
          "body": "This PR replaces `RecursiveMutex CTxMemPool::cs` with `Mutex CTxMemPool:cs`.\r\n\r\nAll of the related code branches are covered by appropriate lock assertions to insure that the mutex locking policy has not been changed by accident\r\n\r\nRelated to #19303.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19306",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19306",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19306.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19306.patch"
          },
          "closed_at": "2021-08-24T15:37:39Z",
          "created_at": "2020-06-17T16:15:04Z",
          "updated_at": "2022-08-24T17:35:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 667735326,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzczNTMyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667735326",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:58:14Z",
      "updated_at": "2020-08-02T22:58:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "this looks correct, concept and like cr ack.\r\n\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667735326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "labeled",
      "id": 3613779969,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MTM3Nzk5Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613779969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T23:45:51Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 667762107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzc2MjEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667762107",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T01:50:18Z",
      "updated_at": "2020-08-31T19:59:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667762107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T02:26:23Z",
      "updated_at": "2020-08-03T02:26:23Z",
      "source": {
        "issue": {
          "id": 654341795,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDg4ODUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19478",
          "number": 19478,
          "state": "closed",
          "state_reason": null,
          "title": "Remove CTxMempool::mapLinks data structure member",
          "body": "Currently we have a peculiar data structure in the mempool called maplinks. Maplinks job is to track the in-pool children and parents of each transaction. This PR can be primarily understood and reviewed as a simple refactoring to remove this extra data structure, although it comes with a nice memory and performance improvement for free.\r\n\r\nMaplinks is particularly peculiar because removing it is not as simple as just moving it's inner structure to the owning CTxMempoolEntry. Because TxLinks (the class storing the setEntries for parents and children) store txiters to each entry in the mempool corresponding to the parent or child, it means that the TxLinks type is \"aware\" of the boost multiindex (mapTx) it's coming from, which is in turn, aware of the entry type stored in mapTx. Thus we used maplinks to store this entry associated data we in an entirely separate data structure just to avoid a circular type reference caused by storing a txiter inside a CTxMempoolEntry.\r\n\r\nIt turns out, we can kill this circular reference by making use of iterator_to multiindex function and std::reference_wrapper. This allows us to get rid of the maplinks data structure and move the ownership of the parents/child sets to the entries themselves.\r\n\r\nThe benefit of this good all around, for any of the reasons given below the change would be acceptable, and it doesn't make the code harder to reason about or worse in any respect (as far as I can tell, there's no tradeoff).\r\n\r\n### Simpler ownership model \r\nNo longer having to consistency check that mapLinks did have records for our CTxMempoolEntry, impossible to have a mapLinks entry outlive or incorrectly die before a CTxMempoolEntry.\r\n\r\n### Memory Usage\r\nWe get rid of a O(Transactions) sized map in the mempool, which is a long lived data structure. \r\n\r\n### Performance\r\nIf you have a CTxMemPoolEntry, you immediately know the address of it's children/parents, rather than having to do a O(log(Transactions)) lookup via maplinks (which we do very often). We do it in *so many* places that a true benchmark has to look at a full running node, but it is easy enough to show an improvement in this case.\r\n\r\nThe ComplexMemPool shows a good coherence check that we see the expected result of it being 12.5% faster / 1.14x faster.\r\n```\r\nBefore:\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 1.40462, 0.277222, 0.285339, 0.279793\r\n\r\nAfter:\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 1.22586, 0.243831, 0.247076, 0.244596\r\n```\r\nThe ComplexMemPool benchmark only checks doing addUnchecked and TrimToSize for 800 transactions. While this bench does a good job of hammering the relevant types of function, it doesn't test everything. \r\n\r\nSubbing in 5000 transactions shows a that the advantage isn't completely wiped out by other asymptotic factors (this isn't the only bottleneck in growing the mempool), but it's only a bit proportionally slower (10.8%, 1.12x), which adds evidence that this will be a good change for performance minded users.\r\n\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 59.1321, 11.5919, 12.235, 11.7068\r\n\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 52.1307, 10.2641, 10.5206, 10.4306\r\n```\r\nI don't think it's possible to come up with an example of where a maplinks based design would have better performance, but it's something for reviewers to consider.\r\n\r\n# Discussion\r\n## Why maplinks in the first place?\r\n\r\nI spoke with the author of mapLinks (sdaftuar) a while back, and my recollection from our conversation was that it was implemented because he did not know how to resolve the circular dependency at the time, and there was no other reason for making it a separate map.\r\n\r\n## Is iterator_to weird?\r\n\r\niterator_to is expressly for this purpose, see https://www.boost.org/doc/libs/1_51_0/libs/multi_index/doc/tutorial/indices.html#iterator_to \r\n\r\n>  iterator_to provides a way to retrieve an iterator to an element from a pointer to the element, thus making iterators and pointers interchangeable for the purposes of element pointing (not so for traversal) in many situations. This notwithstanding, it is not the aim of iterator_to to promote the usage of pointers as substitutes for real iterators: the latter are specifically designed for handling the elements of a container, and not only benefit from the iterator orientation of container interfaces, but are also capable of exposing many more programming bugs than raw pointers, both at compile and run time. iterator_to is thus meant to be used in scenarios where access via iterators is not suitable or desireable:\r\n> \r\n>     - Interoperability with preexisting APIs based on pointers or references.\r\n>     - Publication of pointer-based interfaces (for instance, when designing a C-compatible library).\r\n>     - The exposure of pointers in place of iterators can act as a type erasure barrier effectively decoupling the user of the code from the implementation detail of which particular container is being used. Similar techniques, like the famous Pimpl idiom, are used in large projects to reduce dependencies and build times.\r\n>     - Self-referencing contexts where an element acts upon its owner container and no iterator to itself is available.\r\n\r\nIn other words, iterator_to is the perfect tool for the job by the last reason given. Under the hood it should just be a simple pointer cast and have no major runtime overhead (depending on if the function call is inlined).\r\n\r\nEdit by laanwj: removed at sign from the description",
          "user": {
            "login": "JeremyRubin",
            "id": 886523,
            "node_id": "MDQ6VXNlcjg4NjUyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyRubin",
            "html_url": "https://github.com/JeremyRubin",
            "followers_url": "https://api.github.com/users/JeremyRubin/followers",
            "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
            "repos_url": "https://api.github.com/users/JeremyRubin/repos",
            "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 326918230,
              "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
              "name": "Resource usage",
              "color": "981023",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19478",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19478",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19478.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19478.patch"
          },
          "closed_at": "2020-09-07T10:10:26Z",
          "created_at": "2020-07-09T20:54:36Z",
          "updated_at": "2022-10-08T19:59:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 667948870,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzk0ODg3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667948870",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T10:37:27Z",
      "updated_at": "2020-08-03T10:37:27Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Annotating the existing locking logic is always useful.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667948870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "reviewed",
      "id": 459955680,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTU1Njgw",
      "url": null,
      "actor": null,
      "commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-459955680",
      "submitted_at": "2020-08-03T11:36:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "reviewed",
      "id": 459958949,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTU4OTQ5",
      "url": null,
      "actor": null,
      "commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. Shouldn't this PR also add `GUARDED_BY(cs)` to all the other non-static, non-atomic data members?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-459958949",
      "submitted_at": "2020-08-03T12:42:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "commented",
      "id": 668009614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODAwOTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668009614",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:38Z",
      "updated_at": "2020-08-03T13:01:38Z",
      "author_association": "MEMBER",
      "body": "@ajtowns \r\n> Concept ACK. Shouldn't this PR also add `GUARDED_BY(cs)` to all the other non-static, non-atomic data members?\r\n\r\nThis PR split out from #19306 to make it small and easy to review.\r\nMaking other non-static, non-atomic data members `GUARDED_BY(cs)` is a design-change decision that I'd leave out of this PR scope.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668009614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3615815656,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNTgxNTY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3615815656",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:39Z"
    },
    {
      "event": "subscribed",
      "id": 3615815659,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTU4MTU2NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3615815659",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:39Z"
    },
    {
      "event": "commented",
      "id": 668097334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODA5NzMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668097334",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T15:48:36Z",
      "updated_at": "2020-08-03T15:48:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK: thanks for adding thread-safety annotations!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668097334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGJkNTdmY2E5ZDMyNGRkNDY4ZDBlZTYyNzM5MmJkNzg4NjA2YmQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "tree": {
        "sha": "3cb281c26af6473af8a098baafcb5090f001de31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cb281c26af6473af8a098baafcb5090f001de31"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3cb281c26af6473af8a098baafcb5090f001de31\nparent a78742830aa35bf57bcb0a4730977a1e5a1876bc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405475 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469768 +0300\n\nrefactor: Add more thread safety annotations to CTxMemPool\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMggACgkQQQEIES5+\nqB9TShAAntqtGyaXxyapTe4lVO2347kU+LJjKsKPn3qJ8B1JQpMnTC5LGRfxrNhT\nNoGRdh5Uv8BdMmk+Q9SjXYq1X5x/qUit70Vj2ZcsflxbsMMA6nNeae+uY1SJwESY\nzsyjcZCS6wt0V9WIGpxjJ+uOYj6R5EcFvB+FCZhaSzwq2eTfdj/vrTfX0eDwk/pJ\nPmKHEemtjrsPLnZLB+1pO5ZYqXUUwIfSMZzC01T+gsexU3ksD75DpH+EDXXtfvlE\nwZIFlqoKLKNNQtUvQy14C1jB6sI4I9YEXtFpndPv7Kkq8PPsrnVE9kWf+yElqtM6\nQkGvyA5y8rrxASkOYQ3M1EL+gcEK9g9QcAvx9jf7sN1n8eVGTHQmawM2AsXYMpFB\nR84LkW9IyXiZfBNTiX4+Nrs4mrKLHu5Hv0/3QIcAGDgCBh9JWt/zRjasySMYYZfK\njy/a9zG8bV6DHzLI0ic9T3/0c7GCi5i3XYrs4BoIi964Jgyff9mszA8XvgqvwThS\nLC0GPaxN/AFC918WFaxhh2OlJyToELc57XK8+S4HqNwNcK1Shtt2gTyBdvJ0jtM6\nIkemCmTuPA7ZDBF0heRvTT8y17jKZcUksQBMO0HJkt2igIj7ruCm4XlT4yzilIQt\n0cz8W5mO6dVCHzmXqOLy+X+hQBlsZwRYmShLx3K/36z7h1OP4xg=\n=mcUP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a78742830aa35bf57bcb0a4730977a1e5a1876bc",
          "sha": "a78742830aa35bf57bcb0a4730977a1e5a1876bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a78742830aa35bf57bcb0a4730977a1e5a1876bc"
        }
      ],
      "message": "refactor: Add more thread safety annotations to CTxMemPool",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:49:28Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:57:55Z"
      },
      "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzdkNGNiNTI4NjlkNTk0M2MyZjM2YjNiOGE5MWJiNjAzNDQyNzRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "tree": {
        "sha": "898bfafa3bad90f697556d0ba50d84e3b02ad5b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/898bfafa3bad90f697556d0ba50d84e3b02ad5b2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 898bfafa3bad90f697556d0ba50d84e3b02ad5b2\nparent 6dbd57fca9d324dd468d0ee627392bd788606bd8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405487 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469839 +0300\n\nrefactor: Make CTxMemPool::ClearPrioritisation() private\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMk8ACgkQQQEIES5+\nqB+GIg//c0ChifhyGbYHJY0NqSIgN6oXlNwJhWWi/+JJGOlWVN/ONE94l63J8eqc\nX5vcqyN73WC0xauAtKekWmpcDvkdGvqDDHuBYdMWBN5hyIeQVLt5erE7Udrkqiix\nwVetRe+pv93TARg8wmvFRxamYREJjBUr9SCBpGdr5MvDxaIg7K7Ajbzt8CeuUIc8\n+CUNIJHf3aILTgFD5GP1TheTxs8CtvK5TnW4KsnhmRLdqubD/4mMIJG3jlYR8qE5\nldP34pDHvuRrtGXKf7IXJjDwYMPQXcsz2QlOkI/ARerBXio+21tl5ZWZo0h+wvv6\nw4/9Cr7LNTmiwA7HBbvy1RjOFGMOdzGUQVtDCe4MdInqKpIwC6FIRBPHKO0c1raU\nvAGCk9frS/XQzu9LMua3Y2KxKaHiwLeDwbUG552DjmIqEtKXpnmVnWz9jWfOvzSd\nKM0V0AVrW8Q8kdq8tmSajtrth9fPNTncrAtAw1lAzQ93Rt9bfTCsdSAmDadKT0J3\nq3zXddPPrAehwx46RmK1LsP9cIiuJoypC2oWkerUp1SPEdQGuaAYyTV4UksGyUpj\nfCspP2/n51WkDgeUuJlB1X668nL8scvPd8Br9D2tNw2Oh4THP96cGWU3BVQ0vNAg\nFxb6uZTas8MGLQWfoFS9rEqo59GZjRrTuRBOSEbciCtClkP2YE4=\n=PhgI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
          "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8"
        }
      ],
      "message": "refactor: Make CTxMemPool::ClearPrioritisation() private",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:50:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:58:07Z"
      },
      "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDNiOTNiNDVkNDY4YTRjNzQ3YjBiNWY3ZGQzOTdhYWYzMDA4MWYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "tree": {
        "sha": "3339454ec7b59acbafc86fa33585fbbb20cb9509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3339454ec7b59acbafc86fa33585fbbb20cb9509"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3339454ec7b59acbafc86fa33585fbbb20cb9509\nparent 3c7d4cb52869d5943c2f36b3b8a91bb60344274c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596406661 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596470072 +0300\n\nrefactor: Add negative thread safety annotations to CTxMemPool\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMzgACgkQQQEIES5+\nqB/QhA//ROJ2lqLf4W4Bhs0U7U2lRImT3ET8aSB2Dte0yqsOIZ7BYLglM/r/WILv\nMtPQ4FsMza3okSvPQv1mZoTNyG1nNOtK++GjuTP0enhkKEy4K2ssJKZxQP9AdGlW\ndK3KYDUU0kDvJMMiANTTpa/PgZ/uyPArglJSlmca7XrCSVhWUclNCbtjU6/4Xwja\npmXxXsWWRpVG4fY2yAJ354XtMPiCTkzcwTzfSIDWhQv21Wpvt6oAaPqbbG+UTHtw\nMWOyndHzoAUVNBBoHUeT1y3qrdbHho8IL4AvvO/T6khAvUKcM44lQhvdAMLoFtVr\nvX2Bja6K84sT/8iGIRSCzSz/jv8xvg4NCxXQ7hV/pB8UJ+fVV+VFc3FzljMkaXwK\njK+JPn3f1VGKNuUbt+L2f9BAbWQa60Ed5QD1h87vSZBWx4GjjpyXHMms2FjSXoWG\nBdJqmnzbzjmTjo/ouPpEXaoJgTtT/qhrBnhrkLbOkszQls3yr2U19/MdLcJaeHb0\nO8XYjyMXmPTJS7yk22FE97JQnGrgb9gYBkTKzZpD778SgLYEkFewsVkcOVUJevGQ\n2OUEvIBBOpGBAjClRc1KsgB/WopQ3+J3NQPt/+oW8DvDzBk+RmOjD/2w8RTzsRp2\n2/kGzK0XSvvZ1qXtE2eATD4aMYi0VzQXjl876YK8TPLjcjTnXeM=\n=rN0I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
          "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c"
        }
      ],
      "message": "refactor: Add negative thread safety annotations to CTxMemPool",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:54:32Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T22:17:41Z"
      },
      "sha": "343b93b45d468a4c747b0b5f7dd397aaf30081f0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3616583989,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYxNjU4Mzk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616583989",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:02:12Z"
    },
    {
      "event": "commented",
      "id": 668106705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODEwNjcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668106705",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z",
      "updated_at": "2020-08-03T16:06:38Z",
      "author_association": "MEMBER",
      "body": "Updated f084aacb6eb57f638d6314cf44b267b77e84c4e4  -> 343b93b45d468a4c747b0b5f7dd397aaf30081f0 ([pr19647.01](https://github.com/hebasto/bitcoin/commits/pr19647.01) -> [pr19647.02](https://github.com/hebasto/bitcoin/commits/pr19647.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19647.01..pr19647.02)):\r\n\r\n- addressed @ajtowns' [comment](https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464360474):\r\n> `AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand. Wouldn't it be better just to rely on the compile time checks?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668106705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3616601534,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNjYwMTUzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616601534",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z"
    },
    {
      "event": "subscribed",
      "id": 3616601539,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTY2MDE1Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616601539",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z"
    },
    {
      "event": "reviewed",
      "id": 464892389,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0ODkyMzg5",
      "url": null,
      "actor": null,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks good except the [suggestion below](https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468442853).\r\n\r\nIt was tedious to check the callers of e.g. `ApplyDelta()` and their callers and their callers etc until finding either `LOCK(cs)` or `AssertLockHeld(cs)` to ensure that the mutex is indeed held in all places where `ApplyDelta()` is called.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-464892389",
      "submitted_at": "2020-08-11T09:27:07Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "reviewed",
      "id": 464926376,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTI2Mzc2",
      "url": null,
      "actor": null,
      "commit_id": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 343b93b45d468a4c747b0b5f7dd397aaf30081f0.\r\n\r\n> > `AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n> \r\n> When a thread safety annotation is a part of function member declaration, I found it very convenient having a corresponding `AssertLock{Not}Held()` statement in its definition.\r\n> \r\n> Also this assertion would be really helpful when `CTxMemPool::cs` will actually transit from `RecursiveMutex` to `Mutex`.\r\n\r\nLet's not make a wave of pulls adding negative thread safety annotations everywhere.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-464926376",
      "submitted_at": "2020-08-11T10:18:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "commented",
      "id": 673402636,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzQwMjYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673402636",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T10:39:28Z",
      "updated_at": "2020-08-13T10:39:28Z",
      "author_association": "MEMBER",
      "body": "Fellow reviewers! It seems there is a consensus that adding thread safety annotations would be much safer and more convenient after `AssertLockHeldInternal()` improving. Therefore, begging for #19668 review at first :)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-673402636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T09:49:14Z",
      "updated_at": "2020-09-01T09:49:14Z",
      "source": {
        "issue": {
          "id": 689998303,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2OTYwMzAy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19854",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19854/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19854/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19854/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19854",
          "number": 19854,
          "state": "closed",
          "state_reason": null,
          "title": "Avoid locking CTxMemPool::cs recursively in simple cases",
          "body": "This is another step to transit `CTxMemPool::cs` from `RecursiveMutex` to `Mutex`.\r\n\r\nSplit out from #19306.\r\nOnly trivial thread safety annotations and lock assertions added. No new locks. No behavior change.\r\n\r\nRefactoring `const uint256` to `const uint256&` was [requested](https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468471022) by **promag**.\r\n\r\nPlease note that now, since #19668 has been merged, it is safe to apply `AssertLockHeld()` macros as they do not swallow compile time Thread Safety Analysis warnings.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19854",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19854",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19854.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19854.patch"
          },
          "closed_at": "2020-09-04T11:20:56Z",
          "created_at": "2020-09-01T09:49:14Z",
          "updated_at": "2022-02-15T10:48:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 684687403,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDY4NzQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684687403",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T09:50:03Z",
      "updated_at": "2020-09-01T09:50:03Z",
      "author_association": "MEMBER",
      "body": "Closed in favor of #19854.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-684687403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "closed",
      "id": 3713919015,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzcxMzkxOTAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3713919015",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T09:50:03Z"
    },
    {
      "event": "referenced",
      "id": 3729277403,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MjkyNzc0MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3729277403",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "99a8eb60518050c22bbfc634a1a90cbae29aff03",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99a8eb60518050c22bbfc634a1a90cbae29aff03",
      "created_at": "2020-09-04T11:20:54Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-07T10:28:29Z",
      "updated_at": "2020-09-07T10:28:29Z",
      "source": {
        "issue": {
          "id": 692521585,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5MTEzNjg4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19865",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19865/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19865/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19865/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19865",
          "number": 19865,
          "state": "closed",
          "state_reason": null,
          "title": "scripted-diff: Restore AssertLockHeld after #19668, remove LockAssertion",
          "body": "**This PR is a simple 3-line scripted diff followed by a documentation cleanup.** The scripted diff does three things:\r\n\r\n1. Deletes all existing `AssertLockHeld` calls. Since #19668, `AssertLockHeld` has had an `EXCLUSIVE_LOCKS_REQUIRED` annotation which has guaranteed (though ongoing travis and cirrus CI builds since #19668 was merged) that these `AssertLockHeld` calls are redundant with `EXCLUSIVE_LOCKS_REQUIRED` or `EXCLUSIVE_LOCK_FUNCTION` annotations already present in surrounding code, and specifically that:\r\n\r\n  - There is no way the assert calls can trigger any behavior at runtime.\r\n  - The assert calls provide no new thread safety information to the compiler.\r\n\r\n\r\n2. Reverts `AssertLockHeld` implementation which got changed in #19668 to it's original pre-#19668 state. In #19668, `AssertLockHeld` was changed to have an `EXCLUSIVE_LOCKS_REQUIRED` annotation instead of having an `ASSERT_EXCLUSIVE_LOCK` annotation. As described above, having an `EXCLUSIVE_LOCKS_REQUIRED` annotation on an assert statement is only useful as proof that the assert statement doesn't do anything or convey any new information. By contrast, having an `ASSERT_EXCLUSIVE_LOCK` annotation on an assert statement can be an actually useful way of conveying to the compiler than a specific mutex is locked at a specific place in the code, when the compiler thread safety analysis can't determine that on its own (because of lost type information).\r\n\r\n3. Removes `LockAssertion` class, replacing all current uses with calls to `AssertLockHeld`. Ever since the `LockAssertion` class was first introduced in #14437 (as `LockAnnotation`), it has always been an inferior alternative to `AssertLockHeld` and not had a reason to exist. (#14437 was originally written before #13423 which added ASSERT_EXCLUSIVE_LOCK annotation. It was justified when the code was first written, but no longer necessary by the time it was merged).\r\n\r\n**Motivation for this PR** is to get rid of confusion between different types of lock assertions and only keep one assertion: `AssertLockHeld` which goes back to the implementation it's had since #13423 was merged until #19668 was merged. After this PR, `AssertLockHeld` only needs to be used sparingly to augment compile-time thread safety annotations, which are a superior alternative to runtime checks for guaranteeing thread safety.\r\n\r\nPR is compared with alternatives in https://github.com/bitcoin-core/bitcoin-devwiki/wiki/AssertLockHeld-PRs",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19865",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19865",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19865.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19865.patch"
          },
          "closed_at": "2020-10-25T13:41:38Z",
          "created_at": "2020-09-03T23:49:38Z",
          "updated_at": "2022-02-15T10:48:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3748105677,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3NDgxMDU2Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3748105677",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "45b8840fd375e5489cf75d4cf9e1bf50e465c737",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/45b8840fd375e5489cf75d4cf9e1bf50e465c737",
      "created_at": "2020-09-09T22:40:32Z"
    },
    {
      "event": "locked",
      "id": 6073909174,
      "node_id": "LOE_lADOABII584oCWNvzwAAAAFqCH-2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073909174",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:48:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464357745",
      "pull_request_review_id": 459955680,
      "id": 464357745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1Nzc0NQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Excluding locks in getters makes it impossible to get more than one consistent mempool entry, as the state of the second might change after the first one has been returned.",
      "created_at": "2020-08-03T11:36:19Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464357745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464357745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464360474",
      "pull_request_review_id": 459958949,
      "id": 464360474,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDQ3NA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand. Wouldn't it be better just to rely on the compile time checks? As it stands, `AssertLockHeld` could hide bugs (if `ApplyDelta` lost its annotation, it could then be called from somewhere without the lock held and without raising errors if it called other functions expecting cs to be held, or accessed data structures guarded by cs, this would now only be found if someone ran the code with DEBUG_LOCKORDER enabled).\r\n\r\n(Alternatively could introduce a `RequireLockHeld` in sync.h that does the runtime checks while expecting the compile time checks to already be satisfied; but I'm not sure there's much benefit in that)",
      "created_at": "2020-08-03T11:42:19Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464360474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464360474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464380249",
      "pull_request_review_id": 459958949,
      "id": 464380249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MDI0OQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n\r\nWe've got `infoAll` for a consistent look at all mempool entries (used by DumpMempool), and apparently don't use `info` for consistent views otherwise, so excluding the lock seems okay to me.",
      "created_at": "2020-08-03T12:26:32Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464380249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464380249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464381841",
      "pull_request_review_id": 459985489,
      "id": 464381841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MTg0MQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To get consistent values the external locking of `CTxMemPool::cs` should be used.\r\n\r\nAnyway, this PR does not change locking behavior.",
      "created_at": "2020-08-03T12:29:51Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464381841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464381841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464395858",
      "pull_request_review_id": 460003600,
      "id": 464395858,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NTg1OA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#assert-capability-and-assert-shared-capability:\r\n> These are attributes on a function or method that does a run-time test to see whether the calling thread holds the given capability.\r\n\r\nHow this could disable clang's compile time checks?\r\n\r\n> ... if `ApplyDelta` lost its annotation, it could then be called from somewhere without the lock held and without raising errors if it called other functions expecting cs to be held...\r\n\r\nWhy `ApplyDelta` could lost its annotation?\r\nLocking a recursive mutex in any site where we think it should be locked seems worse than using a non-recursive mutex with annotated functions and data members, no?\r\n\r\n",
      "created_at": "2020-08-03T12:57:49Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464395858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464395858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464400811",
      "pull_request_review_id": 460010079,
      "id": 464400811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwMDgxMQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n\r\nWhen a thread safety annotation is a part of function member declaration, I found it very convenient having a corresponding `AssertLock{Not}Held()` statement in its definition.\r\n\r\nAlso this assertion would be really helpful when `CTxMemPool::cs` will actually transit from `RecursiveMutex` to `Mutex`.",
      "created_at": "2020-08-03T13:07:11Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464400811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464400811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464438092",
      "pull_request_review_id": 460058468,
      "id": 464438092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQzODA5Mg==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> How this could disable clang's compile time checks?\r\n\r\nThey're attributes for a function that does a runtime test and unwinds the stack, ie a function like `f(lock) { if (!lock) throw; }`, at which point it's safe to assume that the lock is held after the function returns, so the compile time checks are no longer necessary, so disabling the compile time checks is the whole point. (That's true for `AssertLockHeldInternal` when `DEBUG_LOCK_ORDER` is defined, but not when it's not defined)\r\n\r\nYou can see this if you change `LOCK(cs)` in `CTxMemPool::isSpent()` to `AssertLockHeld(cs)`. Suddenly dispite the `GUARDED_BY(cs)`, access to `mapNextTx` is allowed at compile time, and you'll only get an error at runtime, and then only if you compile with `DEBUG_LOCK_ORDER`.\r\n\r\nThis feature is needed by net_processing.cpp in `MaybeSetPeerAsAnnouncingHeaderAndIDs` where it passes a lambda to `connman.ForNode` where the lambda needs to know a lock is held to access `lNodesAnnouncingHeaderAndIDs`, but `ForNode` is too general to be able to assure the lambda that the lock is held.\r\n\r\n> Why `ApplyDelta` could lost its annotation?\r\n\r\nSomeone makes a typo; it's not especially likely, but with a `GUARDED_BY` and without `AssertLockHeld` the missing annotation would be caught at compile time.\r\n\r\n> Locking a recursive mutex in any site where we think it should be locked seems worse than using a non-recursive mutex with annotated functions and data members, no?\r\n\r\nNo, no -- your locking changes make sense, just saying that the `AssertLockHeldInternal` annotation isn't helpful here. (There's lots of other places where it's not helpful too)",
      "created_at": "2020-08-03T14:10:06Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464438092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464438092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464511843",
      "pull_request_review_id": 460153499,
      "id": 464511843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTg0Mw==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668106705).",
      "created_at": "2020-08-03T16:07:39Z",
      "updated_at": "2020-08-03T16:07:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464511843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464511843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468442853",
      "pull_request_review_id": 464892389,
      "id": 468442853,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ0Mjg1Mw==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and in `CTxMemPool::ClearPrioritisation()`, `CTxMemPool::GetTotalTxSize()` and `CTxMemPool::IsUnbroadcastTx()` I would strongly advise to add `AssertLockHeld(cs)` where `LOCK(cs)` is removed. And in general in every function that is annotated `EXCLUSIVE_LOCKS_REQUIRED()`. It would serve as documentation to the reader and also ensure that the code does not get executed without holding the mutex.\r\n\r\nThe clang compile time checks are good, but I would say not to be the sole protection - they get silenced in an unexpected way if `EXCLUSIVE_LOCKS_REQUIRED()` and `ASSERT_EXCLUSIVE_LOCK()` are both used, do not work with gcc and produce only compile warnings with clang (could be missed if -Werror is not used). I would say they are an addition, but not replacement of run-time asserts.",
      "created_at": "2020-08-11T09:18:55Z",
      "updated_at": "2020-08-11T09:27:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468442853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468442853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468451198",
      "pull_request_review_id": 464902705,
      "id": 468451198,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MTE5OA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Wouldn't it be better just to rely on the compile time checks?\r\n\r\nI find this scary. Those compile time checks do not look mature enough to me - see how the behavior changes depending on the order of the attributes: https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878. Also, they do not work with gcc and even with clang produce only a compile time warnings which could be missed if -Werror is not used.",
      "created_at": "2020-08-11T09:33:21Z",
      "updated_at": "2020-08-11T09:33:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468451198",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468451198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468469845",
      "pull_request_review_id": 464926376,
      "id": 468469845,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2OTg0NQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6dbd57fca9d324dd468d0ee627392bd788606bd8\r\n\r\n> they get silenced in an unexpected way\r\n\r\n@vasild do you have a code sample?\r\n\r\n> I would say they are an addition\r\n\r\nAgree.",
      "created_at": "2020-08-11T10:06:37Z",
      "updated_at": "2020-08-11T10:18:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468469845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468469845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468471022",
      "pull_request_review_id": 464926376,
      "id": 468471022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MTAyMg==",
      "diff_hunk": "@@ -579,6 +579,8 @@ class CTxMemPool\n      */\n     std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);\n \n+    void ClearPrioritisation(const uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": 15,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c\r\n\r\nnit, could refactor to `const uint256&?`",
      "created_at": "2020-08-11T10:08:54Z",
      "updated_at": "2020-08-11T10:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468471022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468471022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468546095",
      "pull_request_review_id": 465021258,
      "id": 468546095,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0NjA5NQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > they get silenced in an unexpected way\r\n> \r\n> @vasild do you have a code sample?\r\n\r\nYes, see https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878. There are two unexpected things:\r\n\r\n1. The warnings differ depending on the order of the attributes (if more than one is specified):\r\n  ```cpp\r\n  void f() EXCLUSIVE_LOCKS_REQUIRED(cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n  // vs\r\n  void f() ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\n  ```\r\n\r\n2. The presence of `ASSERT_EXCLUSIVE_LOCK()` alters the behavior of `EXCLUSIVE_LOCKS_REQUIRED()`.",
      "created_at": "2020-08-11T12:36:19Z",
      "updated_at": "2020-08-11T12:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468546095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468546095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468592007",
      "pull_request_review_id": 465081206,
      "id": 468592007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5MjAwNw==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Annotating both `ASSERT_EXCLUSIVE_LOCK` and `EXCLUSIVE_LOCKS_REQUIRED` on the same function makes no sense. The only reason to do the `ASSERT_EXCLUSIVE_LOCK` is if you're relying on the test having succeeded for execution to continue as far as later compile-time checks are concerned, but if you've satisfied `EXCLUSIVE_LOCKS_REQUIRED` already, then there's no need to hint the later compile-time checks, they're already satisfied.",
      "created_at": "2020-08-11T13:47:25Z",
      "updated_at": "2020-08-11T13:47:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468592007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468592007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468595989",
      "pull_request_review_id": 465086292,
      "id": 468595989,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5NTk4OQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It was tedious to check the callers of e.g. `ApplyDelta()` and their callers and their callers etc until finding either `LOCK(cs)` or `AssertLockHeld(cs)` to ensure that the mutex is indeed held in all places where `ApplyDelta()` is called.\r\n\r\nThe whole point of the compile time annotations is to have the compiler do the work of checking that the callers have a `LOCK(cs)`. Note that an `AssertLockHeld(cs)` isn't sufficient -- any time that's called without having the lock already held would also be a bug; and until the `ASSERT_EXCLUSIVE_LOCK` annotation is removed from `AssertLockHeld`, `AssertLockHeld` may in fact prevent the compiler from doing adequate checking...\r\n\r\n\r\n",
      "created_at": "2020-08-11T13:52:40Z",
      "updated_at": "2020-08-11T13:52:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468595989",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468595989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480983533",
      "pull_request_review_id": 479538000,
      "id": 480983533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4MzUzMw==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand.\r\n\r\nIt is fixed in #19668.",
      "created_at": "2020-09-01T09:00:52Z",
      "updated_at": "2020-09-01T09:00:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r480983533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480983533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    }
  ]
}